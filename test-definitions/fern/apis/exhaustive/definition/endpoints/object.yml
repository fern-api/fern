imports:
  objects: ../types/object.yml

service:
  auth: true
  base-path: /object
  endpoints:
    getAndReturnWithOptionalField:
      path: /get-and-return-with-optional-field
      method: POST
      request: objects.ObjectWithOptionalField
      response: objects.ObjectWithOptionalField
      # Temporarily commented out - nested long
      # examples:
      #   - name: WithLargeInteger
      #     request:
      #       string: "test"
      #       integer: 21991583578  # Large value that exceeds Integer.MAX_VALUE (2147483647)
      #       long: 9223372036854775807
      #       double: 3.14
      #       bool: true
      #     response:
      #       body:
      #         string: "test"
      #         integer: 21991583578  # This tests our integer overflow fix
      #         long: 9223372036854775807
      #         double: 3.14
      #         bool: true

    getAndReturnWithRequiredField:
      path: /get-and-return-with-required-field
      method: POST
      request: objects.ObjectWithRequiredField
      response: objects.ObjectWithRequiredField

    getAndReturnWithMapOfMap:
      path: /get-and-return-with-map-of-map
      method: POST
      request: objects.ObjectWithMapOfMap
      response: objects.ObjectWithMapOfMap

    getAndReturnNestedWithOptionalField:
      path: /get-and-return-nested-with-optional-field
      method: POST
      request: objects.NestedObjectWithOptionalField
      response: objects.NestedObjectWithOptionalField

    getAndReturnNestedWithRequiredField:
      path: /get-and-return-nested-with-required-field/{string}
      method: POST
      path-parameters:
        string: string
      request: objects.NestedObjectWithRequiredField
      response: objects.NestedObjectWithRequiredField

    getAndReturnNestedWithRequiredFieldAsList:
      path: /get-and-return-nested-with-required-field-list
      method: POST
      request: list<objects.NestedObjectWithRequiredField>
      response: objects.NestedObjectWithRequiredField

    testIntegerOverflowEdgeCases:
      path: /test-integer-overflow-edge-cases
      method: POST
      request: objects.ObjectWithOptionalField
      response: objects.ObjectWithOptionalField
      examples:
        - name: BoundaryValues
          request:
            string: "boundary-test"
            integer: 2147483647 # Integer.MAX_VALUE (should NOT convert)
            # long: 9223372036854775807  # Temporarily commented - nested long issue
            double: 1.7976931348623157e+308 # Double.MAX_VALUE
            bool: true
          response:
            body:
              string: "boundary-test"
              integer: 2147483647 # Should remain integer
              # long: 9223372036854775807  # Temporarily commented - nested long issue
              double: 1.7976931348623157e+308
              bool: true
        - name: JustOverBoundary
          request:
            string: "just-over-boundary"
            integer: 2147483648 # Integer.MAX_VALUE + 1 (should convert)
            # long: 2147483648  # Temporarily commented - nested long issue
            double: 2.0
            bool: false
          response:
            body:
              string: "just-over-boundary"
              integer: 2147483648 # Should convert to long
              # long: 2147483648  # Temporarily commented - nested long issue
              double: 2.0
              bool: false
        - name: JustUnderBoundary
          request:
            string: "just-under-boundary"
            integer: -2147483649 # Integer.MIN_VALUE - 1 (should convert)
            # long: -2147483649  # Temporarily commented - nested long issue
            double: -2.0
            bool: true
          response:
            body:
              string: "just-under-boundary"
              integer: -2147483649 # Should convert to long
              # long: -2147483649  # Temporarily commented - nested long issue
              double: -2.0
              bool: true
        - name: LargePositiveValue
          request:
            string: "large-positive"
            integer: 1000000000000 # 1 trillion (should convert)
            # long: 1000000000000  # Temporarily commented - nested long issue
            double: 1e12
            bool: false
          response:
            body:
              string: "large-positive"
              integer: 1000000000000 # Should convert to long
              # long: 1000000000000  # Temporarily commented - nested long issue
              double: 1e12
              bool: false
        - name: LargeNegativeValue
          request:
            string: "large-negative"
            integer: -1000000000000 # -1 trillion (should convert)
            # long: -1000000000000  # Temporarily commented - nested long issue
            double: -1e12
            bool: true
          response:
            body:
              string: "large-negative"
              integer: -1000000000000 # Should convert to long
              # long: -1000000000000  # Temporarily commented - nested long issue
              double: -1e12
              bool: true
