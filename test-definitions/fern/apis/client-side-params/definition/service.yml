imports:
  root: types.yml

service:
  base-path: ""
  auth: false
  endpoints:
    listResources:
      docs: List resources with pagination
      method: GET
      path: /resources
      request:
        name: ListResourcesRequest
        query-parameters:
          page:
            type: integer
            docs: Zero-indexed page number
          per_page:
            type: integer
            default: 50
            docs: Number of items per page
          sort:
            type: string
            default: "created_at"
            docs: Sort field
          order:
            type: string
            default: "desc"
            docs: Sort order (asc or desc)
          include_totals:
            type: boolean
            default: true
            docs: Whether to include total count
          fields:
            type: optional<string>
            docs: Comma-separated list of fields to include
          search:
            type: optional<string>
            docs: Search query
      response: list<root.Resource>

    getResource:
      docs: Get a single resource
      method: GET
      path: /resources/{resourceId}
      path-parameters:
        resourceId: string
      request:
        name: GetResourceRequest
        query-parameters:
          include_metadata:
            type: boolean
            default: false
            docs: Include metadata in response
          format:
            type: string
            default: "json"
            docs: Response format
      response: root.Resource

    searchResources:
      docs: Search resources with complex parameters
      method: POST
      path: /resources/search
      request:
        name: SearchResourcesRequest
        query-parameters:
          limit:
            type: integer
            default: 100
            docs: Maximum results to return
          offset:
            type: integer
            default: 0
            docs: Offset for pagination
        body:
          properties:
            query: 
              type: optional<string>
              docs: Search query text
            filters: optional<map<string, unknown>>
      response: root.SearchResponse
    
    # User management endpoints (Auth0-like)
    listUsers:
      docs: List or search for users
      method: GET
      path: /users
      request:
        name: ListUsersRequest
        query-parameters:
          page:
            type: optional<integer>
            docs: Page index of the results to return. First page is 0.
          per_page:
            type: optional<integer>
            default: 50
            docs: Number of results per page.
          include_totals:
            type: optional<boolean>
            default: false
            docs: Return results inside an object that contains the total result count (true) or as a direct array of results (false, default).
          sort:
            type: optional<string>
            docs: Field to sort by. Use field:order where order is 1 for ascending and -1 for descending.
          connection:
            type: optional<string>
            docs: Connection filter
          q:
            type: optional<string>
            docs: Query string following Lucene query string syntax
          search_engine:
            type: optional<string>
            docs: Search engine version (v1, v2, or v3)
          fields:
            type: optional<string>
            docs: Comma-separated list of fields to include or exclude
      response: 
        type: root.PaginatedUserResponse
        docs: Returns either PaginatedUserResponse (if include_totals=true) or list<User> (if include_totals=false)
    
    getUserById:
      docs: Get a user by ID
      method: GET
      path: /users/{userId}
      path-parameters:
        userId: string
      request:
        name: GetUserRequest
        query-parameters:
          fields:
            type: optional<string>
            docs: Comma-separated list of fields to include or exclude
          include_fields:
            type: optional<boolean>
            default: true
            docs: true to include the fields specified, false to exclude them
      response: root.User
    
    createUser:
      docs: Create a new user
      method: POST
      path: /users
      request:
        body: root.CreateUserRequest
      response: root.User
    
    updateUser:
      docs: Update a user
      method: PATCH
      path: /users/{userId}
      path-parameters:
        userId: string
      request:
        body: root.UpdateUserRequest
      response: root.User
    
    deleteUser:
      docs: Delete a user
      method: DELETE
      path: /users/{userId}
      path-parameters:
        userId: string
      response:
        docs: No content on successful deletion
    
    # Connection management endpoints (Auth0-style)
    listConnections:
      docs: List all connections
      method: GET
      path: /connections
      request:
        name: ListConnectionsRequest
        query-parameters:
          strategy: 
            type: optional<string>
            docs: Filter by strategy type (e.g., auth0, google-oauth2, samlp)
          name:
            type: optional<string>
            docs: Filter by connection name
          fields:
            type: optional<string>
            docs: Comma-separated list of fields to include
      response: list<root.Connection>
    
    getConnection:
      docs: Get a connection by ID
      method: GET
      path: /connections/{connectionId}
      path-parameters:
        connectionId: string
      request:
        name: GetConnectionRequest
        query-parameters:
          fields:
            type: optional<string>
            docs: Comma-separated list of fields to include
      response: root.Connection
    
    # Client/Application management endpoints
    listClients:
      docs: List all clients/applications
      method: GET
      path: /clients
      request:
        name: ListClientsRequest  
        query-parameters:
          fields:
            type: optional<string>
            docs: Comma-separated list of fields to include
          include_fields:
            type: optional<boolean>
            docs: Whether specified fields are included or excluded
          page:
            type: optional<integer>
            docs: Page number (zero-based)
          per_page:
            type: optional<integer>
            docs: Number of results per page
          include_totals:
            type: optional<boolean>
            docs: Include total count in response
          is_global:
            type: optional<boolean>
            docs: Filter by global clients
          is_first_party:
            type: optional<boolean>
            docs: Filter by first party clients
          app_type:
            type: optional<list<string>>
            docs: Filter by application type (spa, native, regular_web, non_interactive)
      response: root.PaginatedClientResponse
    
    getClient:
      docs: Get a client by ID
      method: GET
      path: /clients/{clientId}
      path-parameters:
        clientId: string
      request:
        name: GetClientRequest
        query-parameters:
          fields:
            type: optional<string>
            docs: Comma-separated list of fields to include
          include_fields:
            type: optional<boolean>
            docs: Whether specified fields are included or excluded
      response: root.Client