/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../../index";

export type ExampleContainer =
    | FernIr.ExampleContainer.List
    | FernIr.ExampleContainer.Set
    | FernIr.ExampleContainer.Optional
    | FernIr.ExampleContainer.Nullable
    | FernIr.ExampleContainer.Map
    | FernIr.ExampleContainer.Literal;

export namespace ExampleContainer {
    export interface List extends FernIr.ExampleListContainer, _Utils {
        type: "list";
    }

    export interface Set extends FernIr.ExampleSetContainer, _Utils {
        type: "set";
    }

    export interface Optional extends FernIr.ExampleOptionalContainer, _Utils {
        type: "optional";
    }

    export interface Nullable extends FernIr.ExampleNullableContainer, _Utils {
        type: "nullable";
    }

    export interface Map extends FernIr.ExampleMapContainer, _Utils {
        type: "map";
    }

    export interface Literal extends FernIr.ExampleLiteralContainer, _Utils {
        type: "literal";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: FernIr.ExampleContainer._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        list: (value: FernIr.ExampleListContainer) => _Result;
        set: (value: FernIr.ExampleSetContainer) => _Result;
        optional: (value: FernIr.ExampleOptionalContainer) => _Result;
        nullable: (value: FernIr.ExampleNullableContainer) => _Result;
        map: (value: FernIr.ExampleMapContainer) => _Result;
        literal: (value: FernIr.ExampleLiteralContainer) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const ExampleContainer = {
    list: (value: FernIr.ExampleListContainer): FernIr.ExampleContainer.List => {
        return {
            ...value,
            type: "list",
            _visit: function <_Result>(
                this: FernIr.ExampleContainer.List,
                visitor: FernIr.ExampleContainer._Visitor<_Result>,
            ) {
                return FernIr.ExampleContainer._visit(this, visitor);
            },
        };
    },

    set: (value: FernIr.ExampleSetContainer): FernIr.ExampleContainer.Set => {
        return {
            ...value,
            type: "set",
            _visit: function <_Result>(
                this: FernIr.ExampleContainer.Set,
                visitor: FernIr.ExampleContainer._Visitor<_Result>,
            ) {
                return FernIr.ExampleContainer._visit(this, visitor);
            },
        };
    },

    optional: (value: FernIr.ExampleOptionalContainer): FernIr.ExampleContainer.Optional => {
        return {
            ...value,
            type: "optional",
            _visit: function <_Result>(
                this: FernIr.ExampleContainer.Optional,
                visitor: FernIr.ExampleContainer._Visitor<_Result>,
            ) {
                return FernIr.ExampleContainer._visit(this, visitor);
            },
        };
    },

    nullable: (value: FernIr.ExampleNullableContainer): FernIr.ExampleContainer.Nullable => {
        return {
            ...value,
            type: "nullable",
            _visit: function <_Result>(
                this: FernIr.ExampleContainer.Nullable,
                visitor: FernIr.ExampleContainer._Visitor<_Result>,
            ) {
                return FernIr.ExampleContainer._visit(this, visitor);
            },
        };
    },

    map: (value: FernIr.ExampleMapContainer): FernIr.ExampleContainer.Map => {
        return {
            ...value,
            type: "map",
            _visit: function <_Result>(
                this: FernIr.ExampleContainer.Map,
                visitor: FernIr.ExampleContainer._Visitor<_Result>,
            ) {
                return FernIr.ExampleContainer._visit(this, visitor);
            },
        };
    },

    literal: (value: FernIr.ExampleLiteralContainer): FernIr.ExampleContainer.Literal => {
        return {
            ...value,
            type: "literal",
            _visit: function <_Result>(
                this: FernIr.ExampleContainer.Literal,
                visitor: FernIr.ExampleContainer._Visitor<_Result>,
            ) {
                return FernIr.ExampleContainer._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernIr.ExampleContainer, visitor: FernIr.ExampleContainer._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "list":
                return visitor.list(value);
            case "set":
                return visitor.set(value);
            case "optional":
                return visitor.optional(value);
            case "nullable":
                return visitor.nullable(value);
            case "map":
                return visitor.map(value);
            case "literal":
                return visitor.literal(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
