/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../../index";

export type SingleUnionTypeProperties =
    | FernIr.SingleUnionTypeProperties.SamePropertiesAsObject
    | FernIr.SingleUnionTypeProperties.SingleProperty
    | FernIr.SingleUnionTypeProperties.NoProperties;

export namespace SingleUnionTypeProperties {
    export interface SamePropertiesAsObject extends FernIr.DeclaredTypeName, _Utils {
        propertiesType: "samePropertiesAsObject";
    }

    export interface SingleProperty extends FernIr.SingleUnionTypeProperty, _Utils {
        propertiesType: "singleProperty";
    }

    export interface NoProperties extends _Utils {
        propertiesType: "noProperties";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: FernIr.SingleUnionTypeProperties._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        samePropertiesAsObject: (value: FernIr.DeclaredTypeName) => _Result;
        singleProperty: (value: FernIr.SingleUnionTypeProperty) => _Result;
        noProperties: () => _Result;
        _other: (value: { propertiesType: string }) => _Result;
    }
}

export const SingleUnionTypeProperties = {
    samePropertiesAsObject: (
        value: FernIr.DeclaredTypeName,
    ): FernIr.SingleUnionTypeProperties.SamePropertiesAsObject => {
        return {
            ...value,
            propertiesType: "samePropertiesAsObject",
            _visit: function <_Result>(
                this: FernIr.SingleUnionTypeProperties.SamePropertiesAsObject,
                visitor: FernIr.SingleUnionTypeProperties._Visitor<_Result>,
            ) {
                return FernIr.SingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    singleProperty: (value: FernIr.SingleUnionTypeProperty): FernIr.SingleUnionTypeProperties.SingleProperty => {
        return {
            ...value,
            propertiesType: "singleProperty",
            _visit: function <_Result>(
                this: FernIr.SingleUnionTypeProperties.SingleProperty,
                visitor: FernIr.SingleUnionTypeProperties._Visitor<_Result>,
            ) {
                return FernIr.SingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    noProperties: (): FernIr.SingleUnionTypeProperties.NoProperties => {
        return {
            propertiesType: "noProperties",
            _visit: function <_Result>(
                this: FernIr.SingleUnionTypeProperties.NoProperties,
                visitor: FernIr.SingleUnionTypeProperties._Visitor<_Result>,
            ) {
                return FernIr.SingleUnionTypeProperties._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernIr.SingleUnionTypeProperties,
        visitor: FernIr.SingleUnionTypeProperties._Visitor<_Result>,
    ): _Result => {
        switch (value.propertiesType) {
            case "samePropertiesAsObject":
                return visitor.samePropertiesAsObject(value);
            case "singleProperty":
                return visitor.singleProperty(value);
            case "noProperties":
                return visitor.noProperties();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
