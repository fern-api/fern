/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * Controls the verbosity of usage examples in README generation
 */
export type ExampleStyle = "minimal" | "comprehensive";
export const ExampleStyle = {
    Minimal: "minimal",
    Comprehensive: "comprehensive",
    _visit: <R>(value: ExampleStyle, visitor: ExampleStyle.Visitor<R>) => {
        switch (value) {
            case ExampleStyle.Minimal:
                return visitor.minimal();
            case ExampleStyle.Comprehensive:
                return visitor.comprehensive();
            default:
                return visitor._other();
        }
    },
} as const;

export namespace ExampleStyle {
    export interface Visitor<R> {
        minimal: () => R;
        comprehensive: () => R;
        _other: () => R;
    }
}
