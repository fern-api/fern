/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../../../../index";

/**
 * The configuration for the output of the generator. This is a simplified version of
 * the generator-exec output.mode configuration.
 */
export type GeneratorOutputConfig =
    | FernIr.dynamic.GeneratorOutputConfig.Publish
    | FernIr.dynamic.GeneratorOutputConfig.Local;

export namespace GeneratorOutputConfig {
    export interface Publish extends _Utils {
        type: "publish";
        value: FernIr.dynamic.PublishInfo;
    }

    export interface Local extends _Utils {
        type: "local";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: FernIr.dynamic.GeneratorOutputConfig._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        publish: (value: FernIr.dynamic.PublishInfo) => _Result;
        local: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const GeneratorOutputConfig = {
    publish: (value: FernIr.dynamic.PublishInfo): FernIr.dynamic.GeneratorOutputConfig.Publish => {
        return {
            value: value,
            type: "publish",
            _visit: function <_Result>(
                this: FernIr.dynamic.GeneratorOutputConfig.Publish,
                visitor: FernIr.dynamic.GeneratorOutputConfig._Visitor<_Result>,
            ) {
                return FernIr.dynamic.GeneratorOutputConfig._visit(this, visitor);
            },
        };
    },

    local: (): FernIr.dynamic.GeneratorOutputConfig.Local => {
        return {
            type: "local",
            _visit: function <_Result>(
                this: FernIr.dynamic.GeneratorOutputConfig.Local,
                visitor: FernIr.dynamic.GeneratorOutputConfig._Visitor<_Result>,
            ) {
                return FernIr.dynamic.GeneratorOutputConfig._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernIr.dynamic.GeneratorOutputConfig,
        visitor: FernIr.dynamic.GeneratorOutputConfig._Visitor<_Result>,
    ): _Result => {
        switch (value.type) {
            case "publish":
                return visitor.publish(value.value);
            case "local":
                return visitor.local();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
