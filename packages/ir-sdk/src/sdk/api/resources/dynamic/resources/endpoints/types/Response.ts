/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../../../../index";

/**
 * Represents the response returned by a specific endpoint.
 *
 * For now, we only support json responses, but this is set up to support a
 * variety of other endpoint response types (e.g. file download, pagination,
 * streaming, etc).
 */
export type Response = FernIr.dynamic.Response.Json;

export namespace Response {
    export interface Json extends _Utils {
        type: "json";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: FernIr.dynamic.Response._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        json: () => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const Response = {
    json: (): FernIr.dynamic.Response.Json => {
        return {
            type: "json",
            _visit: function <_Result>(
                this: FernIr.dynamic.Response.Json,
                visitor: FernIr.dynamic.Response._Visitor<_Result>,
            ) {
                return FernIr.dynamic.Response._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(value: FernIr.dynamic.Response, visitor: FernIr.dynamic.Response._Visitor<_Result>): _Result => {
        switch (value.type) {
            case "json":
                return visitor.json();
            default:
                return visitor._other(value as any);
        }
    },
} as const;
