/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../../../../index";

export type SingleDiscriminatedUnionType =
    | FernIr.dynamic.SingleDiscriminatedUnionType.SamePropertiesAsObject
    | FernIr.dynamic.SingleDiscriminatedUnionType.SingleProperty
    | FernIr.dynamic.SingleDiscriminatedUnionType.NoProperties;

export namespace SingleDiscriminatedUnionType {
    export interface SamePropertiesAsObject extends FernIr.dynamic.SingleDiscriminatedUnionTypeObject, _Utils {
        type: "samePropertiesAsObject";
    }

    export interface SingleProperty extends FernIr.dynamic.SingleDiscriminatedUnionTypeSingleProperty, _Utils {
        type: "singleProperty";
    }

    export interface NoProperties extends FernIr.dynamic.SingleDiscriminatedUnionTypeNoProperties, _Utils {
        type: "noProperties";
    }

    export interface _Utils {
        _visit: <_Result>(visitor: FernIr.dynamic.SingleDiscriminatedUnionType._Visitor<_Result>) => _Result;
    }

    export interface _Visitor<_Result> {
        samePropertiesAsObject: (value: FernIr.dynamic.SingleDiscriminatedUnionTypeObject) => _Result;
        singleProperty: (value: FernIr.dynamic.SingleDiscriminatedUnionTypeSingleProperty) => _Result;
        noProperties: (value: FernIr.dynamic.SingleDiscriminatedUnionTypeNoProperties) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const SingleDiscriminatedUnionType = {
    samePropertiesAsObject: (
        value: FernIr.dynamic.SingleDiscriminatedUnionTypeObject,
    ): FernIr.dynamic.SingleDiscriminatedUnionType.SamePropertiesAsObject => {
        return {
            ...value,
            type: "samePropertiesAsObject",
            _visit: function <_Result>(
                this: FernIr.dynamic.SingleDiscriminatedUnionType.SamePropertiesAsObject,
                visitor: FernIr.dynamic.SingleDiscriminatedUnionType._Visitor<_Result>,
            ) {
                return FernIr.dynamic.SingleDiscriminatedUnionType._visit(this, visitor);
            },
        };
    },

    singleProperty: (
        value: FernIr.dynamic.SingleDiscriminatedUnionTypeSingleProperty,
    ): FernIr.dynamic.SingleDiscriminatedUnionType.SingleProperty => {
        return {
            ...value,
            type: "singleProperty",
            _visit: function <_Result>(
                this: FernIr.dynamic.SingleDiscriminatedUnionType.SingleProperty,
                visitor: FernIr.dynamic.SingleDiscriminatedUnionType._Visitor<_Result>,
            ) {
                return FernIr.dynamic.SingleDiscriminatedUnionType._visit(this, visitor);
            },
        };
    },

    noProperties: (
        value: FernIr.dynamic.SingleDiscriminatedUnionTypeNoProperties,
    ): FernIr.dynamic.SingleDiscriminatedUnionType.NoProperties => {
        return {
            ...value,
            type: "noProperties",
            _visit: function <_Result>(
                this: FernIr.dynamic.SingleDiscriminatedUnionType.NoProperties,
                visitor: FernIr.dynamic.SingleDiscriminatedUnionType._Visitor<_Result>,
            ) {
                return FernIr.dynamic.SingleDiscriminatedUnionType._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernIr.dynamic.SingleDiscriminatedUnionType,
        visitor: FernIr.dynamic.SingleDiscriminatedUnionType._Visitor<_Result>,
    ): _Result => {
        switch (value.type) {
            case "samePropertiesAsObject":
                return visitor.samePropertiesAsObject(value);
            case "singleProperty":
                return visitor.singleProperty(value);
            case "noProperties":
                return visitor.noProperties(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
