/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type AvailabilityStatus = "IN_DEVELOPMENT" | "PRE_RELEASE" | "GENERAL_AVAILABILITY" | "DEPRECATED";
export const AvailabilityStatus = {
    InDevelopment: "IN_DEVELOPMENT",
    PreRelease: "PRE_RELEASE",
    GeneralAvailability: "GENERAL_AVAILABILITY",
    Deprecated: "DEPRECATED",
    _visit: <R>(value: AvailabilityStatus, visitor: AvailabilityStatus.Visitor<R>) => {
        switch (value) {
            case AvailabilityStatus.InDevelopment:
                return visitor.inDevelopment();
            case AvailabilityStatus.PreRelease:
                return visitor.preRelease();
            case AvailabilityStatus.GeneralAvailability:
                return visitor.generalAvailability();
            case AvailabilityStatus.Deprecated:
                return visitor.deprecated();
            default:
                return visitor._other();
        }
    },
} as const;

export namespace AvailabilityStatus {
    export interface Visitor<R> {
        inDevelopment: () => R;
        preRelease: () => R;
        generalAvailability: () => R;
        deprecated: () => R;
        _other: () => R;
    }
}
