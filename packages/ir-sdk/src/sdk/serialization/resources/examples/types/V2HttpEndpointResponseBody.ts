/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";

export const V2HttpEndpointResponseBody: core.serialization.Schema<
    serializers.V2HttpEndpointResponseBody.Raw,
    FernIr.V2HttpEndpointResponseBody
> = core.serialization
    .union("type", {
        error: core.serialization.object({
            value: core.serialization.unknown(),
        }),
        json: core.serialization.object({
            value: core.serialization.unknown(),
        }),
    })
    .transform<FernIr.V2HttpEndpointResponseBody>({
        transform: (value) => {
            switch (value.type) {
                case "error":
                    return FernIr.V2HttpEndpointResponseBody.error(value.value);
                case "json":
                    return FernIr.V2HttpEndpointResponseBody.json(value.value);
                default:
                    return value as FernIr.V2HttpEndpointResponseBody;
            }
        },
        untransform: ({ _visit, ...value }) => value as any,
    });

export declare namespace V2HttpEndpointResponseBody {
    export type Raw = V2HttpEndpointResponseBody.Error | V2HttpEndpointResponseBody.Json;

    export interface Error {
        type: "error";
        value?: unknown;
    }

    export interface Json {
        type: "json";
        value?: unknown;
    }
}
