/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const WebSocketMessage: core.serialization.ObjectSchema<
    serializers.WebSocketMessage.Raw,
    FernIr.WebSocketMessage
> = core.serialization
    .objectWithoutOptionalProperties({
        type: core.serialization.lazy(async () => (await import("../../..")).WebSocketMessageId),
        displayName: core.serialization.string().optional(),
        origin: core.serialization.lazy(async () => (await import("../../..")).WebSocketMessageOrigin),
        body: core.serialization.lazy(async () => (await import("../../..")).WebSocketMessageBody),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).Declaration));

export declare namespace WebSocketMessage {
    interface Raw extends serializers.Declaration.Raw {
        type: serializers.WebSocketMessageId.Raw;
        displayName?: string | null;
        origin: serializers.WebSocketMessageOrigin.Raw;
        body: serializers.WebSocketMessageBody.Raw;
    }
}
