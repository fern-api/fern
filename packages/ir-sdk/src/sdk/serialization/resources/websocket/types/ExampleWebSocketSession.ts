/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const ExampleWebSocketSession: core.serialization.ObjectSchema<
    serializers.ExampleWebSocketSession.Raw,
    FernIr.ExampleWebSocketSession
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.lazyObject(async () => (await import("../../..")).Name).optional(),
        url: core.serialization.string(),
        pathParameters: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).ExamplePathParameter)
        ),
        headers: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).ExampleHeader)
        ),
        queryParameters: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).ExampleQueryParameter)
        ),
        messages: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).ExampleWebSocketMessage)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDocs));

export declare namespace ExampleWebSocketSession {
    interface Raw extends serializers.WithDocs.Raw {
        name?: serializers.Name.Raw | null;
        url: string;
        pathParameters: serializers.ExamplePathParameter.Raw[];
        headers: serializers.ExampleHeader.Raw[];
        queryParameters: serializers.ExampleQueryParameter.Raw[];
        messages: serializers.ExampleWebSocketMessage.Raw[];
    }
}
