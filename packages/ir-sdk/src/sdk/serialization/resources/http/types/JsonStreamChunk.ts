/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { WithDocs } from "../../commons/types/WithDocs";
import { WithV2Examples } from "../../examples/types/WithV2Examples";

export const JsonStreamChunk: core.serialization.ObjectSchema<serializers.JsonStreamChunk.Raw, FernIr.JsonStreamChunk> =
    core.serialization
        .objectWithoutOptionalProperties({
            payload: core.serialization.lazy(() => serializers.TypeReference),
            terminator: core.serialization.string().optional(),
        })
        .extend(WithDocs)
        .extend(WithV2Examples);

export declare namespace JsonStreamChunk {
    export interface Raw extends WithDocs.Raw, WithV2Examples.Raw {
        payload: serializers.TypeReference.Raw;
        terminator?: string | null;
    }
}
