/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { NameAndWireValue } from "../../commons/types/NameAndWireValue";
import { V2SchemaExample } from "../../examples/types/V2SchemaExample";
import { WithDocsAndAvailability } from "../../commons/types/WithDocsAndAvailability";

export const InlinedRequestBodyProperty: core.serialization.ObjectSchema<
    serializers.InlinedRequestBodyProperty.Raw,
    FernIr.InlinedRequestBodyProperty
> = core.serialization
    .objectWithoutOptionalProperties({
        name: NameAndWireValue,
        valueType: core.serialization.lazy(() => serializers.TypeReference),
        example: V2SchemaExample.optional(),
    })
    .extend(WithDocsAndAvailability);

export declare namespace InlinedRequestBodyProperty {
    export interface Raw extends WithDocsAndAvailability.Raw {
        name: NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
        example?: V2SchemaExample.Raw | null;
    }
}
