/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernIr from "../../../../api";
import * as core from "../../../../core";

export const HttpEndpoint: core.serialization.ObjectSchema<serializers.HttpEndpoint.Raw, FernIr.HttpEndpoint> =
    core.serialization
        .objectWithoutOptionalProperties({
            id: core.serialization.lazy(async () => (await import("../../..")).EndpointId),
            name: core.serialization.lazyObject(async () => (await import("../../..")).EndpointName),
            displayName: core.serialization.string().optional(),
            method: core.serialization.lazy(async () => (await import("../../..")).HttpMethod),
            headers: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).HttpHeader)
            ),
            baseUrl: core.serialization.lazy(async () => (await import("../../..")).EnvironmentBaseUrlId).optional(),
            path: core.serialization.lazyObject(async () => (await import("../../..")).HttpPath),
            fullPath: core.serialization.lazyObject(async () => (await import("../../..")).HttpPath),
            pathParameters: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).PathParameter)
            ),
            allPathParameters: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).PathParameter)
            ),
            queryParameters: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).QueryParameter)
            ),
            requestBody: core.serialization.lazy(async () => (await import("../../..")).HttpRequestBody).optional(),
            sdkRequest: core.serialization.lazyObject(async () => (await import("../../..")).SdkRequest).optional(),
            response: core.serialization.lazy(async () => (await import("../../..")).HttpResponse).optional(),
            errors: core.serialization.lazy(async () => (await import("../../..")).ResponseErrors),
            auth: core.serialization.boolean(),
            idempotent: core.serialization.boolean(),
            pagination: core.serialization.lazyObject(async () => (await import("../../..")).Pagination).optional(),
            examples: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).ExampleEndpointCall)
            ),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).Declaration));

export declare namespace HttpEndpoint {
    interface Raw extends serializers.Declaration.Raw {
        id: serializers.EndpointId.Raw;
        name: serializers.EndpointName.Raw;
        displayName?: string | null;
        method: serializers.HttpMethod.Raw;
        headers: serializers.HttpHeader.Raw[];
        baseUrl?: serializers.EnvironmentBaseUrlId.Raw | null;
        path: serializers.HttpPath.Raw;
        fullPath: serializers.HttpPath.Raw;
        pathParameters: serializers.PathParameter.Raw[];
        allPathParameters: serializers.PathParameter.Raw[];
        queryParameters: serializers.QueryParameter.Raw[];
        requestBody?: serializers.HttpRequestBody.Raw | null;
        sdkRequest?: serializers.SdkRequest.Raw | null;
        response?: serializers.HttpResponse.Raw | null;
        errors: serializers.ResponseErrors.Raw;
        auth: boolean;
        idempotent: boolean;
        pagination?: serializers.Pagination.Raw | null;
        examples: serializers.ExampleEndpointCall.Raw[];
    }
}
