/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as FernIr from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { TypeId } from "../../../../commons/types/TypeId";
import { NameAndWireValue } from "../../../../commons/types/NameAndWireValue";
import { NamedParameter } from "./NamedParameter";

export const SingleDiscriminatedUnionTypeObject: core.serialization.ObjectSchema<
    serializers.dynamic.SingleDiscriminatedUnionTypeObject.Raw,
    FernIr.dynamic.SingleDiscriminatedUnionTypeObject
> = core.serialization.objectWithoutOptionalProperties({
    typeId: TypeId,
    discriminantValue: NameAndWireValue,
    properties: core.serialization.list(NamedParameter),
});

export declare namespace SingleDiscriminatedUnionTypeObject {
    export interface Raw {
        typeId: TypeId.Raw;
        discriminantValue: NameAndWireValue.Raw;
        properties: NamedParameter.Raw[];
    }
}
