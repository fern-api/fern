/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as FernIr from "../../../../../../api/index";
import * as core from "../../../../../../core";

export const Response: core.serialization.Schema<serializers.dynamic.Response.Raw, FernIr.dynamic.Response> =
    core.serialization
        .union("type", {
            json: core.serialization.object({}),
        })
        .transform<FernIr.dynamic.Response>({
            transform: (value) => {
                switch (value.type) {
                    case "json":
                        return FernIr.dynamic.Response.json();
                    default:
                        return value as FernIr.dynamic.Response;
                }
            },
            untransform: ({ _visit, ...value }) => value as any,
        });

export declare namespace Response {
    export type Raw = Response.Json;

    export interface Json {
        type: "json";
    }
}
