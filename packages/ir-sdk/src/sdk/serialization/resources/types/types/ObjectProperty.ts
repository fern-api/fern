/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { NameAndWireValue } from "../../commons/types/NameAndWireValue";
import { ObjectPropertyAccess } from "./ObjectPropertyAccess";
import { V2SchemaExample } from "../../examples/types/V2SchemaExample";
import { Declaration } from "../../commons/types/Declaration";

export const ObjectProperty: core.serialization.ObjectSchema<serializers.ObjectProperty.Raw, FernIr.ObjectProperty> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: NameAndWireValue,
            valueType: core.serialization.lazy(() => serializers.TypeReference),
            propertyAccess: ObjectPropertyAccess.optional(),
            example: V2SchemaExample.optional(),
        })
        .extend(Declaration);

export declare namespace ObjectProperty {
    export interface Raw extends Declaration.Raw {
        name: NameAndWireValue.Raw;
        valueType: serializers.TypeReference.Raw;
        propertyAccess?: ObjectPropertyAccess.Raw | null;
        example?: V2SchemaExample.Raw | null;
    }
}
