/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { Name } from "../../commons/types/Name";
import { WithJsonExample } from "../../commons/types/WithJsonExample";
import { WithDocs } from "../../commons/types/WithDocs";

export const ExampleType: core.serialization.ObjectSchema<serializers.ExampleType.Raw, FernIr.ExampleType> =
    core.serialization
        .objectWithoutOptionalProperties({
            name: Name.optional(),
            shape: core.serialization.lazy(() => serializers.ExampleTypeShape),
        })
        .extend(WithJsonExample)
        .extend(WithDocs);

export declare namespace ExampleType {
    export interface Raw extends WithJsonExample.Raw, WithDocs.Raw {
        name?: Name.Raw | null;
        shape: serializers.ExampleTypeShape.Raw;
    }
}
