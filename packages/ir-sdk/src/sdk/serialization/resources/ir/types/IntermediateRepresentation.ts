/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { ApiVersionScheme } from "./ApiVersionScheme";
import { Name } from "../../commons/types/Name";
import { ApiAuth } from "../../auth/types/ApiAuth";
import { HttpHeader } from "../../http/types/HttpHeader";
import { TypeId } from "../../commons/types/TypeId";
import { TypeDeclaration } from "../../types/types/TypeDeclaration";
import { ServiceId } from "../../commons/types/ServiceId";
import { HttpService } from "../../http/types/HttpService";
import { WebhookGroupId } from "../../commons/types/WebhookGroupId";
import { WebhookGroup } from "../../webhooks/types/WebhookGroup";
import { WebSocketChannelId } from "../../commons/types/WebSocketChannelId";
import { WebSocketChannel } from "../../websocket/types/WebSocketChannel";
import { ErrorId } from "../../commons/types/ErrorId";
import { ErrorDeclaration } from "../../errors/types/ErrorDeclaration";
import { SubpackageId } from "../../commons/types/SubpackageId";
import { Subpackage } from "./Subpackage";
import { Package } from "./Package";
import { Constants } from "../../constants/types/Constants";
import { EnvironmentsConfig } from "../../environment/types/EnvironmentsConfig";
import { HttpPath } from "../../http/types/HttpPath";
import { PathParameter } from "../../http/types/PathParameter";
import { ErrorDiscriminationStrategy } from "./ErrorDiscriminationStrategy";
import { SdkConfig } from "./SdkConfig";
import { VariableDeclaration } from "../../variables/types/VariableDeclaration";
import { ServiceTypeReferenceInfo } from "./ServiceTypeReferenceInfo";
import { ReadmeConfig } from "./ReadmeConfig";
import { SourceConfig } from "./SourceConfig";
import { PublishingConfig } from "../../publish/types/PublishingConfig";
import { DynamicIntermediateRepresentation } from "../../dynamic/resources/ir/types/DynamicIntermediateRepresentation";
import { Webhook } from "../../webhooks/types/Webhook";

export const IntermediateRepresentation: core.serialization.ObjectSchema<
    serializers.IntermediateRepresentation.Raw,
    FernIr.IntermediateRepresentation
> = core.serialization.objectWithoutOptionalProperties({
    fdrApiDefinitionId: core.serialization.string().optional(),
    apiVersion: ApiVersionScheme.optional(),
    apiName: Name,
    apiDisplayName: core.serialization.string().optional(),
    apiDocs: core.serialization.string().optional(),
    auth: ApiAuth,
    headers: core.serialization.list(HttpHeader),
    idempotencyHeaders: core.serialization.list(HttpHeader),
    types: core.serialization.record(TypeId, TypeDeclaration),
    services: core.serialization.record(ServiceId, HttpService),
    webhookGroups: core.serialization.record(WebhookGroupId, WebhookGroup),
    websocketChannels: core.serialization.record(WebSocketChannelId, WebSocketChannel).optional(),
    errors: core.serialization.record(ErrorId, ErrorDeclaration),
    subpackages: core.serialization.record(SubpackageId, Subpackage),
    rootPackage: Package,
    constants: Constants,
    environments: EnvironmentsConfig.optional(),
    basePath: HttpPath.optional(),
    pathParameters: core.serialization.list(PathParameter),
    errorDiscriminationStrategy: ErrorDiscriminationStrategy,
    sdkConfig: SdkConfig,
    variables: core.serialization.list(VariableDeclaration),
    serviceTypeReferenceInfo: ServiceTypeReferenceInfo,
    readmeConfig: ReadmeConfig.optional(),
    sourceConfig: SourceConfig.optional(),
    publishConfig: PublishingConfig.optional(),
    dynamic: DynamicIntermediateRepresentation.optional(),
});

export declare namespace IntermediateRepresentation {
    export interface Raw {
        fdrApiDefinitionId?: string | null;
        apiVersion?: ApiVersionScheme.Raw | null;
        apiName: Name.Raw;
        apiDisplayName?: string | null;
        apiDocs?: string | null;
        auth: ApiAuth.Raw;
        headers: HttpHeader.Raw[];
        idempotencyHeaders: HttpHeader.Raw[];
        types: Record<TypeId.Raw, TypeDeclaration.Raw>;
        services: Record<ServiceId.Raw, HttpService.Raw>;
        webhookGroups: Record<WebhookGroupId.Raw, WebhookGroup.Raw>;
        websocketChannels?: Record<WebSocketChannelId.Raw, WebSocketChannel.Raw> | null;
        errors: Record<ErrorId.Raw, ErrorDeclaration.Raw>;
        subpackages: Record<SubpackageId.Raw, Subpackage.Raw>;
        rootPackage: Package.Raw;
        constants: Constants.Raw;
        environments?: EnvironmentsConfig.Raw | null;
        basePath?: HttpPath.Raw | null;
        pathParameters: PathParameter.Raw[];
        errorDiscriminationStrategy: ErrorDiscriminationStrategy.Raw;
        sdkConfig: SdkConfig.Raw;
        variables: VariableDeclaration.Raw[];
        serviceTypeReferenceInfo: ServiceTypeReferenceInfo.Raw;
        readmeConfig?: ReadmeConfig.Raw | null;
        sourceConfig?: SourceConfig.Raw | null;
        publishConfig?: PublishingConfig.Raw | null;
        dynamic?: DynamicIntermediateRepresentation.Raw | null;
    }
}
