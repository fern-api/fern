/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { ServiceId } from "../../commons/types/ServiceId";
import { TypeId } from "../../commons/types/TypeId";

export const ServiceTypeReferenceInfo: core.serialization.ObjectSchema<
    serializers.ServiceTypeReferenceInfo.Raw,
    FernIr.ServiceTypeReferenceInfo
> = core.serialization.objectWithoutOptionalProperties({
    typesReferencedOnlyByService: core.serialization.record(ServiceId, core.serialization.list(TypeId)),
    sharedTypes: core.serialization.list(TypeId),
});

export declare namespace ServiceTypeReferenceInfo {
    export interface Raw {
        typesReferencedOnlyByService: Record<ServiceId.Raw, TypeId.Raw[]>;
        sharedTypes: TypeId.Raw[];
    }
}
