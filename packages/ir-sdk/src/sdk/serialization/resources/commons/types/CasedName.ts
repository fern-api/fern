/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { SafeAndUnsafeString } from "./SafeAndUnsafeString";

export const CasedName: core.serialization.ObjectSchema<serializers.CasedName.Raw, FernIr.CasedName> =
    core.serialization.objectWithoutOptionalProperties({
        originalName: core.serialization.string(),
        camelCase: SafeAndUnsafeString.optional(),
        pascalCase: SafeAndUnsafeString.optional(),
        snakeCase: SafeAndUnsafeString.optional(),
        screamingSnakeCase: SafeAndUnsafeString.optional(),
    });

export declare namespace CasedName {
    export interface Raw {
        originalName: string;
        camelCase?: SafeAndUnsafeString.Raw | null;
        pascalCase?: SafeAndUnsafeString.Raw | null;
        snakeCase?: SafeAndUnsafeString.Raw | null;
        screamingSnakeCase?: SafeAndUnsafeString.Raw | null;
    }
}
