/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as FernIr from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { LicenseConfig } from "./LicenseConfig";
import { GeneratorOutputConfig } from "./GeneratorOutputConfig";
import { GeneratorPublishConfig } from "./GeneratorPublishConfig";
import { GeneratorEnvironment } from "./GeneratorEnvironment";

export const GeneratorConfig: core.serialization.ObjectSchema<
    serializers.generatorExec.GeneratorConfig.Raw,
    FernIr.generatorExec.GeneratorConfig
> = core.serialization.objectWithoutOptionalProperties({
    dryRun: core.serialization.boolean(),
    irFilepath: core.serialization.string(),
    originalReadmeFilepath: core.serialization.string().optional(),
    license: LicenseConfig.optional(),
    output: GeneratorOutputConfig,
    publish: GeneratorPublishConfig.optional(),
    workspaceName: core.serialization.string(),
    organization: core.serialization.string(),
    customConfig: core.serialization.unknown(),
    environment: GeneratorEnvironment,
    whitelabel: core.serialization.boolean(),
    writeUnitTests: core.serialization.boolean(),
    generatePaginatedClients: core.serialization.boolean().optional(),
    generateOauthClients: core.serialization.boolean(),
});

export declare namespace GeneratorConfig {
    export interface Raw {
        dryRun: boolean;
        irFilepath: string;
        originalReadmeFilepath?: string | null;
        license?: LicenseConfig.Raw | null;
        output: GeneratorOutputConfig.Raw;
        publish?: GeneratorPublishConfig.Raw | null;
        workspaceName: string;
        organization: string;
        customConfig?: unknown;
        environment: GeneratorEnvironment.Raw;
        whitelabel: boolean;
        writeUnitTests: boolean;
        generatePaginatedClients?: boolean | null;
        generateOauthClients: boolean;
    }
}
