/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as FernIr from "../../../../api/index";
import * as core from "../../../../core";
import { VariableId } from "./VariableId";
import { Name } from "../../commons/types/Name";
import { WithDocs } from "../../commons/types/WithDocs";

export const VariableDeclaration: core.serialization.ObjectSchema<
    serializers.VariableDeclaration.Raw,
    FernIr.VariableDeclaration
> = core.serialization
    .objectWithoutOptionalProperties({
        id: VariableId,
        name: Name,
        type: core.serialization.lazy(() => serializers.TypeReference),
    })
    .extend(WithDocs);

export declare namespace VariableDeclaration {
    export interface Raw extends WithDocs.Raw {
        id: VariableId.Raw;
        name: Name.Raw;
        type: serializers.TypeReference.Raw;
    }
}
