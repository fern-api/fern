imports:
  commons: ./commons.yml
types:
  EnvironmentId: string
  EnvironmentBaseUrlId: string
  EnvironmentUrl: string
  EnvironmentsConfig:
    properties:
      defaultEnvironment: optional<EnvironmentId>
      environments: Environments
  Environments:
    union:
      singleBaseUrl: SingleBaseUrlEnvironments
      multipleBaseUrls: MultipleBaseUrlsEnvironments
  SingleBaseUrlEnvironments:
    properties:
      environments: list<SingleBaseUrlEnvironment>
  SingleBaseUrlEnvironment:
    extends: commons.WithDocs
    properties:
      id: EnvironmentId
      name: commons.Name
      url: EnvironmentUrl
  MultipleBaseUrlsEnvironments:
    properties:
      baseUrls: list<EnvironmentBaseUrlWithId>
      environments: list<MultipleBaseUrlsEnvironment>
  MultipleBaseUrlsEnvironment:
    extends: commons.WithDocs
    properties:
      id: EnvironmentId
      name: commons.Name
      urls: map<EnvironmentBaseUrlId, EnvironmentUrl>
  EnvironmentBaseUrlWithId:
    properties:
      id: EnvironmentBaseUrlId
      name: commons.Name

  EnvironmentValues:
    docs: |
      Represents the value to use for a specific environment. There are three cases:

      1. When sent as an EnvironmentId string, the generator assumes the value matches the name of the
      environment (e.g. "Staging"), and returns an error otherwise.

      2. If the API supports multiple environment URLs, send a map of URLs, e.g.
        {
          "ec2": "https://staging.ec2.aws.com",
          "s3": "https://staging.s3.aws.com"
        }
    discriminated: false
    union:
      - EnvironmentId
      - MultipleEnvironmentUrlValues

  MultipleEnvironmentUrlValues: map<EnvironmentBaseUrlId, EnvironmentUrl>
