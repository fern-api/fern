# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  WithDocs:
    properties:
      docs: optional<string>
  FernFilepath:
    docs: |
      The literal filepath to this definition within the Fern definition, note that directories within the Fern definition
      denote packages/subpackages which are namespaces, so across subpackages names (for objects, endpoints, etc.) may be 
      shared, however within the file itself (e.g. the service) names cannot be duplicated.
    properties:
      allParts: list<Name>
      packagePath: list<Name>
      file: optional<Name>

  # names

  Name:
    properties:
      originalName: string
      camelCase: SafeAndUnsafeString
      pascalCase: SafeAndUnsafeString
      snakeCase: SafeAndUnsafeString
      screamingSnakeCase: SafeAndUnsafeString
  NameAndWireValue:
    properties:
      wireValue: string
      name: Name
  SafeAndUnsafeString:
    properties:
      unsafeName:
        docs:
          this name might overlap with reserved keywords of the language being
          generated
        type: string
      safeName:
        docs:
          this name will NOT overlap with reserved keywords of the language being
          generated
        type: string
  EscapedString:
    docs: |
      Defines the original string, and its escaped-equivalent (depending on the target programming language).
      This is paricularly relevant to example string literals.

      For example, in Python we escape strings that contain single or double quotes by using triple quotes,
      in Go we use backticks, etc.
    properties:
      original: string

  WithJsonExample:
    properties:
      jsonExample: unknown

  # ids

  SubpackageId: string
  ServiceId: string
  EndpointId: string
  TypeId: string
  ErrorId: string
  WebhookGroupId: string

  # declarations

  Declaration:
    extends: WithDocs
    properties:
      availability: optional<Availability>
  Availability:
    properties:
      status: AvailabilityStatus
      message: optional<string>
  AvailabilityStatus:
    enum:
      - IN_DEVELOPMENT
      - PRE_RELEASE
      - GENERAL_AVAILABILITY
      - DEPRECATED
