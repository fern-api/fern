import { IntermediateRepresentation } from "@fern-api/ir-sdk";

import { generateEndpointExample as generateEndpointV1Example } from "./v1/generateEndpointExample";
import { generateWebSocketExample as generateWebSocketV1Example } from "./v1/generateWebSocketExample";
import { generateEndpointExample as generateEndpointV2Example } from "./v2/generateEndpointExample";

export interface ExampleGenerationArgs {
    disabled: boolean;
    includeOptionalRequestPropertyExamples?: boolean;
    skipAutogenerationIfManualExamplesExist?: boolean;
}

export function injectAutogeneratedExamples({
    ir,
    exampleGeneration
}: {
    ir: Omit<IntermediateRepresentation, "sdkConfig" | "subpackages" | "rootPackage">;
    exampleGeneration: ExampleGenerationArgs;
}): Omit<IntermediateRepresentation, "sdkConfig" | "subpackages" | "rootPackage"> {
    for (const [_, service] of Object.entries(ir.services)) {
        for (const endpoint of service.endpoints) {
            if (
                endpoint.userSpecifiedExamples.length > 0 &&
                exampleGeneration?.skipAutogenerationIfManualExamplesExist === true
            ) {
                continue;
            }
            const generatedExample = generateEndpointV1Example({
                ir,
                service,
                endpoint,
                typeDeclarations: ir.types,
                skipOptionalRequestProperties: exampleGeneration?.includeOptionalRequestPropertyExamples ? false : true,
                generationResponse: { type: "success" }
            });
            if (generatedExample.type === "failure") {
                continue;
            }
            const { example } = generatedExample;
            endpoint.autogeneratedExamples = [{ example }];
        }
    }
    for (const [_, channel] of Object.entries(ir.websocketChannels ?? {})) {
        if (channel.examples.length > 0 && exampleGeneration?.skipAutogenerationIfManualExamplesExist === true) {
            continue;
        }
        const generatedExample = generateWebSocketV1Example({
            ir,
            channel,
            typeDeclarations: ir.types,
            skipOptionalRequestProperties: exampleGeneration?.includeOptionalRequestPropertyExamples ? false : true
        });
        if (generatedExample.type === "failure") {
            continue;
        }
        const { example } = generatedExample;
        channel.examples = [...channel.examples, example];
    }
    return ir;
}

export function injectAutogeneratedV2Examples({
    ir,
    exampleGeneration
}: {
    ir: Omit<IntermediateRepresentation, "sdkConfig" | "subpackages" | "rootPackage">;
    exampleGeneration: ExampleGenerationArgs;
}): Omit<IntermediateRepresentation, "sdkConfig" | "subpackages" | "rootPackage"> {
    for (const [_, service] of Object.entries(ir.services)) {
        for (const endpoint of service.endpoints) {
            if (endpoint.v2Examples == null) {
                endpoint.v2Examples = {
                    userSpecifiedExamples: {},
                    autogeneratedExamples: {}
                };
            }
            const { userFullExamples, autoFullExamples } = generateEndpointV2Example({
                service,
                endpoint,
                typeDeclarations: ir.types,
                skipOptionalRequestProperties: exampleGeneration?.includeOptionalRequestPropertyExamples ? false : true
            });
            if (Object.keys(endpoint.v2Examples.userSpecifiedExamples).length > 0) {
                if (
                    Object.values(endpoint.v2Examples.userSpecifiedExamples).some(
                        (example) => example.request != null || example.response != null
                    )
                ) {
                    continue;
                }
                const firstCodeSamples = Object.values(endpoint.v2Examples.userSpecifiedExamples)[0]?.codeSamples;

                for (const [name, example] of Object.entries(autoFullExamples)) {
                    autoFullExamples[name] = {
                        ...example,
                        codeSamples: firstCodeSamples
                    };
                }

                for (const [name, example] of Object.entries(userFullExamples)) {
                    userFullExamples[name] = {
                        ...example,
                        codeSamples: firstCodeSamples
                    };
                }
            }
            endpoint.v2Examples.autogeneratedExamples = autoFullExamples;
            endpoint.v2Examples.userSpecifiedExamples = userFullExamples;
        }
    }
    // TODO: We want to also autogenerate examples for websocket channels. This will be a separate
    // body of work.
    return ir;
}
