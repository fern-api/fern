/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "diff_analyzer.baml": "// SDK Diff Analyzer\n// Analyzes git diffs of SDK code and produces semantic commit messages and version bumps\n\n// Enum for version bump types following semantic versioning\nenum VersionBump {\n  MAJOR\n  MINOR\n  PATCH\n}\n\n// The result of analyzing an SDK diff\nclass DiffAnalysisResult {\n  // Semantic commit message headline (e.g., \"feat: Add new authentication methods\")\n  headline string @description(\"A concise headline following conventional commits format (type: description)\")\n\n  // Detailed description of the changes\n  description string @description(\"A detailed markdown-formatted description of the changes, explaining what changed and why it matters\")\n\n  // The recommended version bump\n  version_bump VersionBump @description(\"The semantic version bump recommendation: MAJOR for breaking changes, MINOR for new features, PATCH for bug fixes\")\n\n  // List of breaking changes (if any)\n  breaking_changes string[] @description(\"List of breaking changes that would require a MAJOR version bump\")\n}\n\n// Main function that analyzes SDK diffs\nfunction AnalyzeSdkDiff(git_diff: string) -> DiffAnalysisResult {\n  client DefaultClient\n\n  prompt #\"\n    You are an expert software engineer analyzing changes to an SDK (Software Development Kit).\n    Your task is to analyze the git diff provided and produce:\n    1. A semantic commit message with a conventional commits headline\n    2. A detailed description of the changes\n    3. A version bump recommendation (MAJOR, MINOR, or PATCH)\n\n    Guidelines for version bumps:\n    - MAJOR: Breaking changes that affect existing API contracts (removed functions, changed signatures, removed parameters)\n    - MINOR: New features or additions that are backward compatible (new functions, new parameters with defaults)\n    - PATCH: Bug fixes, documentation updates, internal refactoring that doesn't change the public API\n\n    Guidelines for commit message headlines:\n    - Use conventional commits format: <type>: <description>\n    - Types: feat (new feature), fix (bug fix), docs (documentation), refactor (code refactoring), test (tests)\n    - Keep it under 72 characters\n    - Be specific and descriptive\n\n    Guidelines for descriptions:\n    - Use markdown formatting\n    - Explain what changed and why it matters to SDK users\n    - Include migration notes for breaking changes\n    - Highlight new capabilities for features\n\n    Git Diff to Analyze:\n    ---\n    {{ git_diff }}\n    ---\n\n    Analyze this diff and provide your assessment.\n  \"#\n}\n",
  "main.baml": "// BAML client configuration for LLM providers\n// This file configures the LLM clients that will be used for SDK diff analysis\n\n// OpenAI client configuration\nclient<llm> OpenAI {\n  provider openai\n  options {\n    model gpt-4o\n    api_key env.OPENAI_API_KEY\n  }\n}\n\n// Anthropic client configuration\nclient<llm> Anthropic {\n  provider anthropic\n  options {\n    model claude-3-5-sonnet-20241022\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// Fallback client that tries multiple providers\nclient<llm> DefaultClient {\n  provider fallback\n  options {\n    strategy [\n      Anthropic\n      OpenAI\n    ]\n  }\n}\n",
}
export const getBamlFiles = () => {
    return fileMap;
}