// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`validate > petstore 1`] = `
[
  {
    "contents": "types:
  Error:
    properties:
      code: integer
      message: string
    source:
      openapi: openapi/openapi.yml
  Pet:
    properties:
      id: long
      name: string
      tag: optional<string>
    source:
      openapi: openapi/openapi.yml
  Pets: list<Pet>
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "default-environment: Default
display-name: Swagger Petstore
environments:
  Default: http://petstore.swagger.io/v1
error-discrimination:
  strategy: status-code
name: api
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createPets:
      auth: false
      display-name: Create a pet
      examples:
        - {}
      method: POST
      path: /pets
      source:
        openapi: openapi/openapi.yml
    listPets:
      auth: false
      display-name: List all pets
      examples:
        - response:
            body:
              - id: 1000000
                name: name
                tag: tag
      method: GET
      path: /pets
      request:
        name: ListPetsRequest
        query-parameters:
          limit:
            docs: How many items to return at one time (max 100)
            type: optional<integer>
            validation:
              max: 100
      response:
        docs: A paged array of pets
        status-code: 200
        type: root.Pets
      source:
        openapi: openapi/openapi.yml
    showPetById:
      auth: false
      display-name: Info for a specific pet
      examples:
        - path-parameters:
            petId: petId
          response:
            body:
              id: 1000000
              name: name
              tag: tag
      method: GET
      path: /pets/{petId}
      path-parameters:
        petId:
          docs: The id of the pet to retrieve
          type: string
      response:
        docs: Expected response to a valid request
        status-code: 200
        type: root.Pet
      source:
        openapi: openapi/openapi.yml
  source:
    openapi: openapi/openapi.yml
",
    "name": "pets.yml",
    "type": "file",
  },
]
`;

exports[`validate header overrides > header-overrides 1`] = `
[
  {
    "contents": "types:
  Error:
    properties:
      code: integer
      message: string
    source:
      openapi: openapi/openapi.yml
  Pet:
    properties:
      id: long
      name: string
      tag: optional<string>
    source:
      openapi: openapi/openapi.yml
  Pets: list<Pet>
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "default-environment: Default
display-name: Swagger Petstore
environments:
  Default: http://petstore.swagger.io/v1
error-discrimination:
  strategy: status-code
headers:
  X-Dummy-Header: optional<string>
name: api
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createPets:
      auth: false
      display-name: Create a pet
      examples:
        - {}
      method: POST
      path: /pets
      source:
        openapi: openapi/openapi.yml
    listPets:
      auth: false
      display-name: List all pets
      examples:
        - response:
            body:
              - id: 1000000
                name: name
                tag: tag
      method: GET
      path: /pets
      request:
        name: ListPetsRequest
        query-parameters:
          limit:
            docs: How many items to return at one time (max 100)
            type: optional<integer>
            validation:
              max: 100
      response:
        docs: A paged array of pets
        status-code: 200
        type: root.Pets
      source:
        openapi: openapi/openapi.yml
    showPetById:
      auth: false
      display-name: Info for a specific pet
      examples:
        - path-parameters:
            petId: petId
          response:
            body:
              id: 1000000
              name: name
              tag: tag
      method: GET
      path: /pets/{petId}
      path-parameters:
        petId:
          docs: The id of the pet to retrieve
          type: string
      response:
        docs: Expected response to a valid request
        status-code: 200
        type: root.Pet
      source:
        openapi: openapi/openapi.yml
  source:
    openapi: openapi/openapi.yml
",
    "name": "pets.yml",
    "type": "file",
  },
]
`;

exports[`validate namespaced API > namespaced 1`] = `
[
  {
    "contents": "types:
  OauthScope:
    enum:
      - docs: Read access
        value: read
      - docs: Write access
        value: write
    source:
      openapi: openapi/trains/openapi.yml
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "auth: BearerAuthScheme
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
default-environment: Production
display-name: Train Travel API
environments:
  Production: https://api.example.com
error-discrimination:
  strategy: status-code
name: api
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": [
      {
        "contents": "types:
  Error:
    properties:
      code: integer
      message: string
    source:
      openapi: openapi/petstore/openapi.yml
  Pet:
    properties:
      id: long
      messages: optional<V2ChatMessages>
      name: string
      tag: optional<string>
    source:
      openapi: openapi/petstore/openapi.yml
  Pets: list<Pet>
  V2ChatMessages:
    docs: >
      A list of chat messages in chronological order, representing a
      conversation between the user and the model.


      Messages can be from \`User\`, \`Assistant\`, \`Tool\` and \`System\` roles. Learn
      more about messages and roles in [the Chat API
      guide](https://docs.cohere.com/docs/chat-api).
    type: list<unknown>
",
        "name": "__package__.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  neopetsRoot: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createPets:
      auth: false
      display-name: Create a pet
      examples:
        - {}
      method: POST
      path: /pets
      source:
        openapi: openapi/petstore/openapi.yml
    listPets:
      auth: false
      display-name: List all pets
      examples:
        - response:
            body:
              - id: 1000000
                messages:
                  - key: value
                name: name
                tag: tag
      method: GET
      path: /pets
      request:
        name: ListPetsRequest
        query-parameters:
          limit:
            docs: How many items to return at one time (max 100)
            type: optional<integer>
            validation:
              max: 100
      response:
        docs: A paged array of pets
        status-code: 200
        type: neopetsRoot.Pets
      source:
        openapi: openapi/petstore/openapi.yml
    showPetById:
      auth: false
      display-name: Info for a specific pet
      examples:
        - path-parameters:
            petId: petId
          response:
            body:
              id: 1000000
              messages:
                - key: value
              name: name
              tag: tag
      method: GET
      path: /pets/{petId}
      path-parameters:
        petId:
          docs: The id of the pet to retrieve
          type: string
      response:
        docs: Expected response to a valid request
        status-code: 200
        type: neopetsRoot.Pet
      source:
        openapi: openapi/petstore/openapi.yml
  source:
    openapi: openapi/petstore/openapi.yml
",
        "name": "pets.yml",
        "type": "file",
      },
    ],
    "name": "neopets",
    "type": "directory",
  },
  {
    "contents": [
      {
        "contents": "types:
  Default:
    docs: >-
      This object is always part of the payload. In case of type=heartbeat,
      these are the only fields.
    properties:
      socket_sequence:
        docs: >-
          zero-indexed monotonic increasing sequence number attached to each
          message sent - if there is a gap in this sequence, you have missed a
          message. If you choose to enable heartbeats, then heartbeat and update
          messages will share a single increasing sequence. See [Sequence
          Numbers](https://docs.sandbox.gemini.com/websocket-api/#sequence-numbers)
          for more information.
        type: integer
    source:
      openapi: asyncapi/sample.yml
  Events:
    docs: >-
      Either a change to the order book, or the indication that a trade has
      occurred.
    type: list<EventsItem>
  EventsItem:
    properties:
      delta:
        docs: >-
          The quantity changed. May be negative, if an order is filled or
          canceled. For initial messages, delta will equal remaining.
        type: optional<double>
      price:
        docs: The price of this order book entry.
        type: optional<double>
        validation:
          multipleOf: 0.01
      reason:
        docs: >-
          Indicates why the change has occurred. initial is for the initial
          response message, which will show the entire existing state of the
          order book.
        type: optional<EventsItemReason>
      remaining:
        docs: >-
          The quantity remaining at that price level after this change occurred.
          May be zero if all orders at this price level have been filled or
          canceled.
        type: optional<double>
      side: optional<EventsItemSide>
      type: optional<EventsItemType>
    source:
      openapi: asyncapi/sample.yml
  EventsItemReason:
    docs: >-
      Indicates why the change has occurred. initial is for the initial response
      message, which will show the entire existing state of the order book.
    enum:
      - place
      - trade
      - cancel
      - initial
    inline: true
    source:
      openapi: asyncapi/sample.yml
  EventsItemSide:
    enum:
      - bid
      - side
    inline: true
    source:
      openapi: asyncapi/sample.yml
  EventsItemType:
    enum:
      - trade
      - change
      - name: AuctionBlockTrade
        value: auction, block_trade
    inline: true
    source:
      openapi: asyncapi/sample.yml
  Heartbeat:
    extends:
      - Default
    properties:
      type: literal<"heartbeat">
    source:
      openapi: asyncapi/sample.yml
  Market:
    discriminated: false
    source:
      openapi: asyncapi/sample.yml
    union:
      - Heartbeat
      - Update
  Update:
    extends:
      - Default
    properties:
      eventId:
        docs: >-
          A monotonically increasing sequence number indicating when this change
          occurred. These numbers are persistent and consistent between market
          data connections.
        type: integer
      events: Events
      timestamp:
        docs: >-
          The timestamp in seconds for this group of events (included for
          compatibility reasons). We recommend using the timestamps field
          instead.
        type: double
      timestamps:
        docs: The timestamp in milliseconds for this group of events.
        type: double
      type: literal<"update">
    source:
      openapi: asyncapi/sample.yml
channel:
  auth: false
  examples:
    - messages: []
  messages: {}
  path: marketDataV1
  path-parameters:
    symbol:
      docs: >
        Symbols are formatted as CCY1CCY2 where prices are in CCY2 and
        quantities are in CCY1. To read more click
        [here](https://docs.sandbox.gemini.com/websocket-api/#symbols-and-minimums).
      type: string
  query-parameters:
    auctions:
      default: true
      docs: Include auction events
      type: optional<boolean>
    bids:
      default: true
      docs: Include bids in change events
      type: optional<boolean>
    heartbeat:
      default: false
      docs: >-
        Optionally add this parameter and set to true to receive a heartbeat
        every 5 seconds
      type: optional<boolean>
    offers:
      default: true
      docs: Include asks in change events
      type: optional<boolean>
    top_of_book:
      default: false
      docs: >-
        If absent or false, receive full order book depth; if present and true,
        receive top of book only. Only applies to bids and offers.
      type: optional<boolean>
    trades:
      default: true
      docs: Include trade events
      type: optional<boolean>
",
        "name": "__package__.yml",
        "type": "file",
      },
    ],
    "name": "stream",
    "type": "directory",
  },
  {
    "contents": [
      {
        "contents": "types:
  Booking:
    properties:
      has_bicycle:
        docs: Indicates whether the passenger has a bicycle.
        type: optional<boolean>
      has_dog:
        docs: Indicates whether the passenger has a dog.
        type: optional<boolean>
      id:
        docs: Unique identifier for the booking
        type: optional<string>
        validation:
          format: uuid
      passenger_name:
        docs: Name of the passenger
        type: optional<string>
      trip_id:
        docs: Identifier of the booked trip
        type: optional<string>
        validation:
          format: uuid
    source:
      openapi: openapi/trains/openapi.yml
  BookingPayment:
    properties:
      amount:
        docs: >-
          Amount intended to be collected by this payment. A positive decimal
          figure describing the amount to be collected.
        type: optional<double>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
        type: optional<BookingPaymentCurrency>
      id:
        docs: >-
          Unique identifier for the payment. This will be a unique identifier
          for the payment, and is used to reference the payment in other
          objects.
        type: optional<string>
        validation:
          format: uuid
      source:
        docs: >-
          The payment source to take the payment from. This can be a card or a
          bank account. Some of these properties will be hidden on read to
          protect PII leaking.
        type: optional<BookingPaymentSource>
      status:
        docs: The status of the payment, one of \`pending\`, \`succeeded\`, or \`failed\`.
        type: optional<BookingPaymentStatus>
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentCurrency:
    docs: >-
      Three-letter [ISO currency
      code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
    enum:
      - bam
      - bgn
      - chf
      - eur
      - gbp
      - nok
      - sek
      - try
    inline: true
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentSource:
    base-properties: {}
    discriminant: object
    docs: >-
      The payment source to take the payment from. This can be a card or a bank
      account. Some of these properties will be hidden on read to protect PII
      leaking.
    source:
      openapi: openapi/trains/openapi.yml
    union:
      bank_account:
        docs: >-
          A bank account to take payment from. Must be able to make payments in
          the currency specified in the payment.
        type: BookingPaymentSourceBankAccount
      card:
        docs: A card (debit or credit) to take payment from.
        type: Card
  BookingPaymentSourceBankAccount:
    docs: >-
      A bank account to take payment from. Must be able to make payments in the
      currency specified in the payment.
    inline: true
    properties:
      account_type:
        docs: >-
          The type of entity that holds the account. This can be either
          \`individual\` or \`company\`.
        type: BookingPaymentSourceBankAccountAccountType
      bank_name:
        docs: The name of the bank associated with the routing number.
        type: string
      country:
        docs: Two-letter country code (ISO 3166-1 alpha-2).
        type: string
      name: string
      number:
        docs: >-
          The account number for the bank account, in string form. Must be a
          current account.
        type: string
      sort_code:
        docs: >-
          The sort code for the bank account, in string form. Must be a
          six-digit number.
        type: optional<string>
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentSourceBankAccountAccountType:
    docs: >-
      The type of entity that holds the account. This can be either \`individual\`
      or \`company\`.
    enum:
      - individual
      - company
    inline: true
    source:
      openapi: openapi/trains/openapi.yml
  BookingPaymentStatus:
    docs: The status of the payment, one of \`pending\`, \`succeeded\`, or \`failed\`.
    enum:
      - pending
      - succeeded
      - failed
    inline: true
    source:
      openapi: openapi/trains/openapi.yml
  Card:
    docs: A card (debit or credit) to take payment from.
    inline: true
    properties:
      address_city:
        type: optional<string>
      address_country: string
      address_line1:
        type: optional<string>
      address_line2:
        type: optional<string>
      address_post_code:
        type: optional<string>
      cvc:
        docs: >-
          Card security code, 3 or 4 digits usually found on the back of the
          card.
        type: integer
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: long
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: long
      name:
        docs: Cardholder's full name as it appears on the card.
        type: string
      number:
        docs: >-
          The card number, as a string without any separators. On read all but
          the last four digits will be masked for security.
        type: string
    source:
      openapi: openapi/trains/openapi.yml
  LinksBooking:
    properties:
      booking:
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: openapi/trains/openapi.yml
  LinksPagination:
    properties:
      next:
        type: optional<string>
        validation:
          format: uri
      prev:
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: openapi/trains/openapi.yml
  LinksSelf:
    properties:
      self:
        type: optional<string>
        validation:
          format: uri
    source:
      openapi: openapi/trains/openapi.yml
  Pet:
    properties:
      id: long
      name: string
    source:
      openapi: openapi/trains/openapi.yml
  Problem:
    properties:
      detail:
        docs: >-
          A human-readable explanation specific to this occurrence of the
          problem
        type: optional<string>
      instance:
        docs: A URI reference that identifies the specific occurrence of the problem
        type: optional<string>
      status:
        docs: The HTTP status code
        type: optional<integer>
      title:
        docs: A short, human-readable summary of the problem type
        type: optional<string>
      type:
        docs: A URI reference that identifies the problem type
        type: optional<string>
    source:
      openapi: openapi/trains/openapi.yml
  Station:
    properties:
      address:
        docs: The address of the station.
        type: string
      country_code:
        docs: The country code of the station.
        type: string
      id:
        docs: Unique identifier for the station.
        type: string
        validation:
          format: uuid
      messages: optional<V2ChatMessages>
      name:
        docs: The name of the station
        type: string
      pet: optional<Pet>
      timezone:
        docs: >-
          The timezone of the station in the [IANA Time Zone Database
          format](https://www.iana.org/time-zones).
        type: optional<string>
    source:
      openapi: openapi/trains/openapi.yml
  Trip:
    properties:
      arrival_time:
        docs: The date and time when the trip arrives
        type: optional<datetime>
      bicycles_allowed:
        docs: Indicates whether bicycles are allowed on the trip
        type: optional<boolean>
      departure_time:
        docs: The date and time when the trip departs
        type: optional<datetime>
      destination:
        docs: The destination station of the trip
        type: optional<string>
      dogs_allowed:
        docs: Indicates whether dogs are allowed on the trip
        type: optional<boolean>
      id:
        docs: Unique identifier for the trip
        type: optional<string>
        validation:
          format: uuid
      operator:
        docs: The name of the operator of the trip
        type: optional<string>
      origin:
        docs: The starting station of the trip
        type: optional<string>
      price:
        docs: The cost of the trip
        type: optional<double>
    source:
      openapi: openapi/trains/openapi.yml
  V2ChatMessages:
    docs: >
      A list of chat messages in chronological order, representing a
      conversation between the user and the model.


      Messages can be from \`User\`, \`Assistant\`, \`Tool\` and \`System\` roles. Learn
      more about messages and roles in [the Chat API
      guide](https://docs.cohere.com/docs/chat-api).
    type: list<unknown>
  WrapperCollection:
    docs: >-
      This is a generic request/response wrapper which contains both data and
      links which serve as hypermedia controls (HATEOAS).
    properties:
      data:
        docs: The wrapper for a collection is an array of objects.
        type: optional<list<map<string, unknown>>>
      links:
        docs: A set of hypermedia links which serve as controls for the client.
        type: optional<map<string, unknown>>
    source:
      openapi: openapi/trains/openapi.yml
errors:
  BadRequestError:
    docs: Bad Request
    examples:
      - value:
          detail: The request is invalid or missing required parameters.
          status: 400
          title: Bad Request
          type: https://example.com/errors/bad-request
    status-code: 400
    type: Problem
  ConflictError:
    docs: Conflict
    examples:
      - value:
          detail: There is a conflict with an existing resource.
          status: 409
          title: Conflict
          type: https://example.com/errors/conflict
    status-code: 409
    type: Problem
  ForbiddenError:
    docs: Forbidden
    examples:
      - value:
          detail: Access is forbidden with the provided credentials.
          status: 403
          title: Forbidden
          type: https://example.com/errors/forbidden
    status-code: 403
    type: Problem
  InternalServerError:
    docs: Internal Server Error
    examples:
      - value:
          detail: An unexpected error occurred.
          status: 500
          title: Internal Server Error
          type: https://example.com/errors/internal-server-error
    status-code: 500
    type: Problem
  NotFoundError:
    docs: Not Found
    examples:
      - value:
          detail: The requested resource was not found.
          status: 404
          title: Not Found
          type: https://example.com/errors/not-found
    status-code: 404
    type: Problem
  TooManyRequestsError:
    docs: Too Many Requests
    examples:
      - value:
          detail: You have exceeded the rate limit.
          status: 429
          title: Too Many Requests
          type: https://example.com/errors/too-many-requests
    status-code: 429
    type: Problem
  UnauthorizedError:
    docs: Unauthorized
    examples:
      - value:
          detail: You do not have the necessary permissions.
          status: 401
          title: Unauthorized
          type: https://example.com/errors/unauthorized
    status-code: 401
    type: Problem
",
        "name": "__package__.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  CreateBookingResponse:
    extends:
      - trainsRoot.Booking
    properties:
      links: optional<trainsRoot.LinksSelf>
    source:
      openapi: openapi/trains/openapi.yml
  GetBookingResponse:
    extends:
      - trainsRoot.Booking
    properties:
      links: optional<trainsRoot.LinksSelf>
    source:
      openapi: openapi/trains/openapi.yml
  GetBookingsResponse:
    properties:
      data: optional<list<trainsRoot.Booking>>
      links: optional<GetBookingsResponseLinks>
    source:
      openapi: openapi/trains/openapi.yml
  GetBookingsResponseLinks:
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    inline: true
    properties: {}
    source:
      openapi: openapi/trains/openapi.yml
docs: |
  Create and manage bookings for train trips, including passenger details
  and optional extras.
service:
  auth: false
  base-path: ''
  display-name: Bookings
  endpoints:
    create-booking:
      auth: true
      display-name: Create a booking
      docs: >-
        A booking is a temporary hold on a trip. It is not confirmed until the
        payment is processed.
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.NotFoundError
        - trainsRoot.ConflictError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - request: {}
          response:
            body:
              has_bicycle: true
              has_dog: true
              id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
              links:
                self: >-
                  https://api.example.com/bookings/efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
              passenger_name: John Doe
              trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
      method: POST
      path: /bookings
      request:
        body: trainsRoot.Booking
        content-type: application/json
      response:
        docs: Booking successful
        status-code: 201
        type: CreateBookingResponse
      source:
        openapi: openapi/trains/openapi.yml
    delete-booking:
      auth: true
      display-name: Delete a booking
      docs: Deletes a booking, cancelling the hold on the trip.
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.NotFoundError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
      method: DELETE
      path: /bookings/{bookingId}
      path-parameters:
        bookingId:
          docs: The ID of the booking to retrieve.
          type: string
      source:
        openapi: openapi/trains/openapi.yml
    get-booking:
      auth: true
      display-name: Get a booking
      docs: Returns the details of a specific booking.
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.NotFoundError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          response:
            body:
              has_bicycle: true
              has_dog: true
              id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
              links:
                self: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
              passenger_name: John Doe
              trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
      method: GET
      path: /bookings/{bookingId}
      path-parameters:
        bookingId:
          docs: The ID of the booking to retrieve.
          type: string
      response:
        docs: The booking details
        status-code: 200
        type: GetBookingResponse
      source:
        openapi: openapi/trains/openapi.yml
    get-bookings:
      auth: true
      display-name: List existing bookings
      docs: Returns a list of all trip bookings by the authenticated user.
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - response:
            body:
              data:
                - has_bicycle: true
                  has_dog: true
                  id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  passenger_name: John Doe
                  trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                - has_bicycle: false
                  has_dog: false
                  id: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  passenger_name: Jane Smith
                  trip_id: b2e783e1-c824-4d63-b37a-d8d698862f1d
              links:
                next: https://api.example.com/bookings?page=2
                prev: prev
                self: https://api.example.com/bookings
      method: GET
      path: /bookings
      response:
        docs: A list of bookings
        status-code: 200
        type: GetBookingsResponse
      source:
        openapi: openapi/trains/openapi.yml
  source:
    openapi: openapi/trains/openapi.yml
",
        "name": "bookings.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  CreateBookingPaymentResponse:
    extends:
      - trainsRoot.BookingPayment
    properties:
      links: optional<trainsRoot.LinksBooking>
    source:
      openapi: openapi/trains/openapi.yml
docs: |
  Pay for bookings using a card or bank account, and view payment
  status and history.

  > warn
  > Bookings usually expire within 1 hour so you'll need to make your payment
  > before the expiry date 
service:
  auth: false
  base-path: ''
  display-name: Payments
  endpoints:
    create-booking-payment:
      auth: true
      display-name: Pay for a Booking
      docs: >-
        A payment is an attempt to pay for the booking, which will confirm the
        booking for the user and enable them to get their tickets.
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - name: Card Payment
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              address_city: London
              address_country: gb
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_post_code: N12 9XX
              cvc: 123
              exp_month: 12
              exp_year: 2025
              name: J. Doe
              number: '4242424242424242'
              object: card
          response:
            body:
              amount: 49.99
              currency: gbp
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
              source:
                address_city: source
                address_country: gb
                address_line1: source
                address_line2: source
                address_post_code: N12 9XX
                cvc: 123
                exp_month: 12
                exp_year: 2025
                name: J. Doe
                number: '************4242'
                object: card
              status: succeeded
        - name: Bank Account Payment
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 100.5
            currency: gbp
            source:
              account_type: individual
              bank_name: Starling Bank
              country: gb
              name: J. Doe
              number: '00012345'
              object: bank_account
              sort_code: '000123'
          response:
            body:
              amount: 49.99
              currency: gbp
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
              source:
                address_city: source
                address_country: gb
                address_line1: source
                address_line2: source
                address_post_code: N12 9XX
                cvc: 123
                exp_month: 12
                exp_year: 2025
                name: J. Doe
                number: '************4242'
                object: card
              status: succeeded
        - name: Card Payment 2
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              address_city: London
              address_country: gb
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_post_code: N12 9XX
              cvc: 123
              exp_month: 12
              exp_year: 2025
              name: J. Doe
              number: '4242424242424242'
              object: card
          response:
            body:
              amount: 49.99
              currency: gbp
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb/payment
              source:
                address_city: source
                address_country: gb
                address_line1: source
                address_line2: source
                address_post_code: N12 9XX
                cvc: 123
                exp_month: 12
                exp_year: 2025
                name: J. Doe
                number: '************4242'
                object: card
              status: succeeded
        - name: Bank Account Payment 2
          path-parameters:
            bookingId: 1725ff48-ab45-4bb5-9d02-88745177dedb
          request:
            amount: 49.99
            currency: gbp
            source:
              address_city: London
              address_country: gb
              address_line1: 123 Fake Street
              address_line2: 4th Floor
              address_post_code: N12 9XX
              cvc: 123
              exp_month: 12
              exp_year: 2025
              name: J. Doe
              number: '4242424242424242'
              object: card
          response:
            body:
              amount: 100.5
              currency: gbp
              id: 2e3b4f5a-6b7c-8d9e-0f1a-2b3c4d5e6f7a
              links:
                booking: >-
                  https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
              source:
                account_type: individual
                bank_name: Starling Bank
                country: gb
                name: J. Doe
                number: '*********2345'
                object: bank_account
                sort_code: '000123'
              status: succeeded
      method: POST
      path: /bookings/{bookingId}/payment
      path-parameters:
        bookingId:
          docs: The ID of the booking to pay for.
          type: string
      request:
        body: trainsRoot.BookingPayment
        content-type: application/json
      response:
        docs: Payment successful
        status-code: 200
        type: CreateBookingPaymentResponse
      source:
        openapi: openapi/trains/openapi.yml
  source:
    openapi: openapi/trains/openapi.yml
",
        "name": "payments.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  GetStationsResponse:
    properties:
      data: optional<list<trainsRoot.Station>>
      links: optional<GetStationsResponseLinks>
    source:
      openapi: openapi/trains/openapi.yml
  GetStationsResponseLinks:
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    inline: true
    properties: {}
    source:
      openapi: openapi/trains/openapi.yml
docs: |
  Find and filter train stations across Europe, including their location
  and local timezone.
service:
  auth: false
  base-path: ''
  display-name: Stations
  endpoints:
    get-stations:
      auth: true
      display-name: Get a list of train stations
      docs: Returns a list of all train stations in the system.
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - response:
            body:
              data:
                - address: Invalidenstraße 10557 Berlin, Germany
                  country_code: DE
                  id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  name: Berlin Hauptbahnhof
                  pet:
                    id: 1000000
                    name: name
                  timezone: Europe/Berlin
                - address: 18 Rue de Dunkerque 75010 Paris, France
                  country_code: FR
                  id: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  name: Paris Gare du Nord
                  pet:
                    id: 1000000
                    name: name
                  timezone: Europe/Paris
              links:
                next: https://api.example.com/stations?page=3
                prev: https://api.example.com/stations?page=1
                self: https://api.example.com/stations&page=2
      method: GET
      path: /stations
      response:
        docs: A list of train stations
        status-code: 200
        type: GetStationsResponse
      source:
        openapi: openapi/trains/openapi.yml
  source:
    openapi: openapi/trains/openapi.yml
",
        "name": "stations.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  NewBookingPayload:
    extends:
      - trainsRoot.Booking
    properties:
      links: optional<NewBookingPayloadLinks>
    source:
      openapi: openapi/trains/openapi.yml
  NewBookingPayloadLinks:
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    inline: true
    properties: {}
    source:
      openapi: openapi/trains/openapi.yml
webhooks:
  new-booking:
    display-name: New Booking
    docs: >
      Subscribe to new bookings being created, to update integrations for your
      users.  Related data is available via the links provided in the request.
    examples:
      - payload:
          has_bicycle: true
          has_dog: true
          id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
          links:
            self: >-
              https://api.example.com/bookings/1725ff48-ab45-4bb5-9d02-88745177dedb
          passenger_name: John Doe
          trip_id: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
    headers: {}
    method: POST
    payload: NewBookingPayload
",
        "name": "trains.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  trainsRoot: __package__.yml
types:
  GetTripsResponse:
    properties:
      data: optional<list<trainsRoot.Trip>>
      links: optional<GetTripsResponseLinks>
    source:
      openapi: openapi/trains/openapi.yml
  GetTripsResponseLinks:
    extends:
      - trainsRoot.LinksSelf
      - trainsRoot.LinksPagination
    inline: true
    properties: {}
    source:
      openapi: openapi/trains/openapi.yml
docs: |
  Timetables and routes for train trips between stations, including pricing
  and availability.
service:
  auth: false
  base-path: ''
  display-name: Trips
  endpoints:
    get-trips:
      auth: true
      display-name: Get available train trips
      docs: >-
        Returns a list of available train trips between the specified origin and
        destination stations on the given date, and allows for filtering by
        bicycle and dog allowances.
      errors:
        - trainsRoot.BadRequestError
        - trainsRoot.UnauthorizedError
        - trainsRoot.ForbiddenError
        - trainsRoot.TooManyRequestsError
        - trainsRoot.InternalServerError
      examples:
        - query-parameters:
            date: '2024-02-01T09:00:00Z'
            destination: b2e783e1-c824-4d63-b37a-d8d698862f1d
            origin: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
          response:
            body:
              data:
                - arrival_time: '2024-02-01T16:00:00Z'
                  bicycles_allowed: true
                  departure_time: '2024-02-01T10:00:00Z'
                  destination: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  dogs_allowed: true
                  id: ea399ba1-6d95-433f-92d1-83f67b775594
                  operator: Deutsche Bahn
                  origin: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  price: 50
                - arrival_time: '2024-02-01T18:00:00Z'
                  bicycles_allowed: true
                  departure_time: '2024-02-01T12:00:00Z'
                  destination: efdbb9d1-02c2-4bc3-afb7-6788d8782b1e
                  dogs_allowed: true
                  id: 4d67459c-af07-40bb-bb12-178dbb88e09f
                  operator: SNCF
                  origin: b2e783e1-c824-4d63-b37a-d8d698862f1d
                  price: 50
              links:
                next: >-
                  https://api.example.com/trips?origin=efdbb9d1-02c2-4bc3-afb7-6788d8782b1e&destination=b2e783e1-c824-4d63-b37a-d8d698862f1d&date=2024-02-01&page=2
                prev: prev
                self: >-
                  https://api.example.com/trips?origin=efdbb9d1-02c2-4bc3-afb7-6788d8782b1e&destination=b2e783e1-c824-4d63-b37a-d8d698862f1d&date=2024-02-01
      method: GET
      path: /trips
      request:
        name: GetTripsRequest
        query-parameters:
          bicycles:
            default: false
            docs: Only return trips where bicycles are known to be allowed
            type: optional<boolean>
          date:
            docs: >-
              The date and time of the trip in ISO 8601 format in origin
              station's timezone.
            type: datetime
          destination:
            docs: The ID of the destination station
            type: string
            validation:
              format: uuid
          dogs:
            default: false
            docs: Only return trips where dogs are known to be allowed
            type: optional<boolean>
          origin:
            docs: The ID of the origin station
            type: string
            validation:
              format: uuid
      response:
        docs: A list of available train trips
        status-code: 200
        type: GetTripsResponse
      source:
        openapi: openapi/trains/openapi.yml
  source:
    openapi: openapi/trains/openapi.yml
",
        "name": "trips.yml",
        "type": "file",
      },
    ],
    "name": "trains",
    "type": "directory",
  },
]
`;

exports[`validate namespaced API from Cohere > namespaced-fleshedout 1`] = `
[
  {
    "contents": "{}
",
    "name": "__package__.yml",
    "type": "file",
  },
  {
    "contents": "auth: BearerAuthScheme
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
    token:
      env: CO_API_KEY
default-environment: Production
display-name: API Reference
environments:
  Production: https://api.cohere.com
error-discrimination:
  strategy: status-code
name: api
",
    "name": "api.yml",
    "type": "file",
  },
  {
    "contents": [
      {
        "contents": "types:
  BadRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  ChatRequestPromptTruncation:
    docs: >
      Defaults to \`AUTO\` when \`connectors\` are specified and \`OFF\` in all other
      cases.


      Dictates how the prompt will be constructed.


      With \`prompt_truncation\` set to "AUTO", some elements from \`chat_history\`
      and \`documents\` will be dropped in an attempt to construct a prompt that
      fits within the model's context length limit. During this process the
      order of the documents and chat history will be changed and ranked by
      relevance.


      With \`prompt_truncation\` set to "AUTO_PRESERVE_ORDER", some elements from
      \`chat_history\` and \`documents\` will be dropped in an attempt to construct
      a prompt that fits within the model's context length limit. During this
      process the order of the documents and chat history will be preserved as
      they are inputted into the API.


      With \`prompt_truncation\` set to "OFF", no elements will be dropped. If the
      sum of the inputs exceeds the model's context length limit, a
      \`TooManyTokens\` error will be returned.


      Compatible Deployments: 
       - AUTO: Cohere Platform Only
       - AUTO_PRESERVE_ORDER: Azure, AWS Sagemaker/Bedrock, Private Deployments
    enum:
      - 'OFF'
      - AUTO
      - AUTO_PRESERVE_ORDER
    inline: true
    source:
      openapi: openapi/cohere.yaml
  ChatRequestSafetyMode:
    docs: >
      Used to select the [safety instruction](/docs/safety-modes) inserted into
      the prompt. Defaults to \`CONTEXTUAL\`.

      When \`NONE\` is specified, the safety instruction will be omitted.


      Safety modes are not yet configurable in combination with \`tools\`,
      \`tool_results\` and \`documents\` parameters.


      **Note**: This parameter is only compatible with models [Command R
      08-2024](/docs/command-r#august-2024-release), [Command R+
      08-2024](/docs/command-r-plus#august-2024-release) and newer.


      Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock,
      Private Deployments
    enum:
      - CONTEXTUAL
      - STRICT
      - NONE
    inline: true
    source:
      openapi: openapi/cohere.yaml
  ClientClosedRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  ForbiddenErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  GatewayTimeoutErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  InternalServerErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  InvalidTokenErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  NotFoundErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  NotImplementedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  ServiceUnavailableErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  TooManyRequestsErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  UnauthorizedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
  UnprocessableEntityErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere.yaml
errors:
  BadRequestError:
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
    examples:
      - value: {}
    status-code: 400
    type: unknown
  ClientClosedRequestError:
    docs: |
      This error is returned when a request is cancelled by the user.
    examples:
      - value: {}
    status-code: 499
    type: unknown
  ForbiddenError:
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
    examples:
      - value: {}
    status-code: 403
    type: unknown
  GatewayTimeoutError:
    docs: >
      This error is returned when a request to the server times out. This could
      be due to:
        - An internal services taking too long to respond
    examples:
      - value: {}
    status-code: 504
    type: unknown
  InternalServerError:
    docs: |
      This error is returned when an uncategorized internal server error occurs.
    examples:
      - value: {}
    status-code: 500
    type: unknown
  InvalidTokenError:
    docs: >
      This error is returned when a request or response contains a deny-listed
      token.
    examples:
      - value: {}
    status-code: 498
    type: unknown
  NotFoundError:
    docs: >
      This error is returned when a resource is not found. This could be
      because:
        - The endpoint does not exist
        - The resource does not exist eg model id, dataset id
    examples:
      - value: {}
    status-code: 404
    type: unknown
  NotImplementedError:
    docs: |
      This error is returned when the requested feature is not implemented.
    examples:
      - value: {}
    status-code: 501
    type: unknown
  ServiceUnavailableError:
    docs: >
      This error is returned when the service is unavailable. This could be due
      to:
        - Too many users trying to access the service at the same time
    examples:
      - value: {}
    status-code: 503
    type: unknown
  TooManyRequestsError:
    docs: Too many requests
    examples:
      - value: {}
    status-code: 429
    type: unknown
  UnauthorizedError:
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
    examples:
      - value: {}
    status-code: 401
    type: unknown
  UnprocessableEntityError:
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
    examples:
      - value: {}
    status-code: 422
    type: unknown
service:
  auth: false
  base-path: ''
  endpoints:
    chat:
      audiences:
        - public
      auth: true
      display-name: Chat
      docs: >
        Generates a text response to a user message.

        To learn how to use the Chat API and RAG follow our [Text Generation
        guides](https://docs.cohere.com/docs/chat-api).
      errors:
        - BadRequestError
        - UnauthorizedError
        - ForbiddenError
        - NotFoundError
        - UnprocessableEntityError
        - TooManyRequestsError
        - InvalidTokenError
        - ClientClosedRequestError
        - InternalServerError
        - NotImplementedError
        - ServiceUnavailableError
        - GatewayTimeoutError
      examples:
        - request:
            message: message
          response:
            body:
              - string
      method: POST
      path: /v1/chat
      request:
        body:
          properties:
            chat_history:
              audiences:
                - public
              docs: >
                A list of previous messages between the user and the model,
                giving the model conversational context for responding to the
                user's \`message\`.


                Each item represents a single message in the chat history,
                excluding the current user turn. It has two properties: \`role\`
                and \`message\`. The \`role\` identifies the sender (\`CHATBOT\`,
                \`SYSTEM\`, or \`USER\`), while the \`message\` contains the text
                content.


                The chat_history parameter should not be used for \`SYSTEM\`
                messages in most cases. Instead, to add a \`SYSTEM\` role message
                at the beginning of a conversation, the \`preamble\` parameter
                should be used.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              type: optional<list<unknown>>
            conversation_id:
              audiences:
                - public
              docs: >
                An alternative to \`chat_history\`.


                Providing a \`conversation_id\` creates or resumes a persisted
                conversation with the specified ID. The ID can be any non empty
                string.


                Compatible Deployments: Cohere Platform
              type: optional<string>
            force_single_step:
              audiences:
                - public
              docs: Forces the chat to be single step. Defaults to \`false\`.
              type: optional<boolean>
            message:
              audiences:
                - public
              docs: >
                Text input for the model to respond to.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              type: string
            model:
              audiences:
                - public
              docs: >
                Defaults to \`command-r-plus-08-2024\`.


                The name of a compatible [Cohere
                model](https://docs.cohere.com/docs/models) or the ID of a
                [fine-tuned](https://docs.cohere.com/docs/chat-fine-tuning)
                model.


                Compatible Deployments: Cohere Platform, Private Deployments
              type: optional<string>
            preamble:
              audiences:
                - public
              docs: >
                When specified, the default Cohere preamble will be replaced
                with the provided one. Preambles are a part of the prompt used
                to adjust the model's overall behavior and conversation style,
                and use the \`SYSTEM\` role.


                The \`SYSTEM\` role is also used for the contents of the optional
                \`chat_history=\` parameter. When used with the \`chat_history=\`
                parameter it adds content throughout a conversation. Conversely,
                when used with the \`preamble=\` parameter it adds content at the
                start of the conversation only.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              type: optional<string>
            prompt_truncation:
              audiences:
                - public
              docs: >
                Defaults to \`AUTO\` when \`connectors\` are specified and \`OFF\` in
                all other cases.


                Dictates how the prompt will be constructed.


                With \`prompt_truncation\` set to "AUTO", some elements from
                \`chat_history\` and \`documents\` will be dropped in an attempt to
                construct a prompt that fits within the model's context length
                limit. During this process the order of the documents and chat
                history will be changed and ranked by relevance.


                With \`prompt_truncation\` set to "AUTO_PRESERVE_ORDER", some
                elements from \`chat_history\` and \`documents\` will be dropped in
                an attempt to construct a prompt that fits within the model's
                context length limit. During this process the order of the
                documents and chat history will be preserved as they are
                inputted into the API.


                With \`prompt_truncation\` set to "OFF", no elements will be
                dropped. If the sum of the inputs exceeds the model's context
                length limit, a \`TooManyTokens\` error will be returned.


                Compatible Deployments: 
                 - AUTO: Cohere Platform Only
                 - AUTO_PRESERVE_ORDER: Azure, AWS Sagemaker/Bedrock, Private Deployments
              type: optional<ChatRequestPromptTruncation>
            safety_mode:
              audiences:
                - public
              availability: pre-release
              docs: >
                Used to select the [safety instruction](/docs/safety-modes)
                inserted into the prompt. Defaults to \`CONTEXTUAL\`.

                When \`NONE\` is specified, the safety instruction will be
                omitted.


                Safety modes are not yet configurable in combination with
                \`tools\`, \`tool_results\` and \`documents\` parameters.


                **Note**: This parameter is only compatible with models [Command
                R 08-2024](/docs/command-r#august-2024-release), [Command R+
                08-2024](/docs/command-r-plus#august-2024-release) and newer.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              type: optional<ChatRequestSafetyMode>
            stream:
              audiences:
                - public
              docs: >
                Defaults to \`false\`.


                When \`true\`, the response will be a JSON stream of events. The
                final event will contain the complete response, and will have an
                \`event_type\` of \`"stream-end"\`.


                Streaming is beneficial for user interfaces that render the
                contents of the response piece by piece, as it gets generated.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              type: optional<boolean>
        content-type: application/json
        headers:
          Accepts:
            docs: >
              Pass text/event-stream to receive the streamed response as
              server-sent events. The default is \`\\n\` delimited events.
            name: accepts
            type: optional<literal<"text/event-stream">>
        name: ChatRequest
      response:
        docs: OK
        status-code: 200
        type: list<string>
      source:
        openapi: openapi/cohere.yaml
  source:
    openapi: openapi/cohere.yaml
",
        "name": "__package__.yml",
        "type": "file",
      },
    ],
    "name": "v1",
    "type": "directory",
  },
  {
    "contents": [
      {
        "contents": "types:
  BadRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  ClientClosedRequestErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  ForbiddenErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  GatewayTimeoutErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  InternalServerErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  InvalidTokenErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  NotFoundErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  NotImplementedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  ServiceUnavailableErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  TooManyRequestsErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  UnauthorizedErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
  UnprocessableEntityErrorBody:
    properties:
      data: optional<string>
    source:
      openapi: openapi/cohere-v2.yaml
errors:
  BadRequestError:
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
    examples:
      - value: {}
    status-code: 400
    type: unknown
  ClientClosedRequestError:
    docs: |
      This error is returned when a request is cancelled by the user.
    examples:
      - value: {}
    status-code: 499
    type: unknown
  ForbiddenError:
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
    examples:
      - value: {}
    status-code: 403
    type: unknown
  GatewayTimeoutError:
    docs: >
      This error is returned when a request to the server times out. This could
      be due to:
        - An internal services taking too long to respond
    examples:
      - value: {}
    status-code: 504
    type: unknown
  InternalServerError:
    docs: |
      This error is returned when an uncategorized internal server error occurs.
    examples:
      - value: {}
    status-code: 500
    type: unknown
  InvalidTokenError:
    docs: >
      This error is returned when a request or response contains a deny-listed
      token.
    examples:
      - value: {}
    status-code: 498
    type: unknown
  NotFoundError:
    docs: >
      This error is returned when a resource is not found. This could be
      because:
        - The endpoint does not exist
        - The resource does not exist eg model id, dataset id
    examples:
      - value: {}
    status-code: 404
    type: unknown
  NotImplementedError:
    docs: |
      This error is returned when the requested feature is not implemented.
    examples:
      - value: {}
    status-code: 501
    type: unknown
  ServiceUnavailableError:
    docs: >
      This error is returned when the service is unavailable. This could be due
      to:
        - Too many users trying to access the service at the same time
    examples:
      - value: {}
    status-code: 503
    type: unknown
  TooManyRequestsError:
    docs: Too many requests
    examples:
      - value: {}
    status-code: 429
    type: unknown
  UnauthorizedError:
    docs: >
      This error indicates that the operation attempted to be performed is not
      allowed. This could be because:
        - The api token is invalid
        - The user does not have the necessary permissions
    examples:
      - value: {}
    status-code: 401
    type: unknown
  UnprocessableEntityError:
    docs: >
      This error is returned when the request is not well formed. This could be
      because:
        - JSON is invalid
        - The request is missing required fields
        - The request contains an invalid combination of fields
    examples:
      - value: {}
    status-code: 422
    type: unknown
",
        "name": "__package__.yml",
        "type": "file",
      },
      {
        "contents": "imports:
  v2Root: __package__.yml
types:
  V2ChatRequestSafetyMode:
    docs: >
      Used to select the [safety instruction](/docs/safety-modes) inserted into
      the prompt. Defaults to \`CONTEXTUAL\`.

      When \`NONE\` is specified, the safety instruction will be omitted.


      Safety modes are not yet configurable in combination with \`tools\`,
      \`tool_results\` and \`documents\` parameters.


      **Note**: This parameter is only compatible with models [Command R
      08-2024](/docs/command-r#august-2024-release), [Command R+
      08-2024](/docs/command-r-plus#august-2024-release) and newer.


      Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock,
      Private Deployments
    enum:
      - CONTEXTUAL
      - STRICT
      - NONE
    inline: true
    source:
      openapi: openapi/cohere-v2.yaml
service:
  auth: false
  base-path: ''
  endpoints:
    chat:
      audiences:
        - v2-beta
      auth: true
      display-name: Chat with the model
      docs: >
        Generates a message from the model in response to a provided
        conversation. To learn how to use the Chat API with Streaming and RAG
        follow our Text Generation guides.
      errors:
        - v2Root.BadRequestError
        - v2Root.UnauthorizedError
        - v2Root.ForbiddenError
        - v2Root.NotFoundError
        - v2Root.UnprocessableEntityError
        - v2Root.TooManyRequestsError
        - v2Root.InvalidTokenError
        - v2Root.ClientClosedRequestError
        - v2Root.InternalServerError
        - v2Root.NotImplementedError
        - v2Root.ServiceUnavailableError
        - v2Root.GatewayTimeoutError
      examples:
        - request:
            model: model
          response:
            body:
              - string
      method: POST
      path: /v2/chat
      request:
        body:
          properties:
            documents:
              docs: >
                A list of relevant documents that the model can cite to generate
                a more accurate reply. Each document is either a string or
                document object with content and metadata.
              type: optional<list<string>>
            max_tokens:
              docs: >
                The maximum number of tokens the model will generate as part of
                the response. Note: Setting a low value may result in incomplete
                generations.
              type: optional<integer>
            model:
              docs: >-
                The name of a compatible [Cohere
                model](https://docs.cohere.com/docs/models) (such as command-r
                or command-r-plus) or the ID of a
                [fine-tuned](https://docs.cohere.com/docs/chat-fine-tuning)
                model.
              type: string
            return_prompt:
              docs: Whether to return the prompt in the response.
              type: optional<boolean>
            safety_mode:
              docs: >
                Used to select the [safety instruction](/docs/safety-modes)
                inserted into the prompt. Defaults to \`CONTEXTUAL\`.

                When \`NONE\` is specified, the safety instruction will be
                omitted.


                Safety modes are not yet configurable in combination with
                \`tools\`, \`tool_results\` and \`documents\` parameters.


                **Note**: This parameter is only compatible with models [Command
                R 08-2024](/docs/command-r#august-2024-release), [Command R+
                08-2024](/docs/command-r-plus#august-2024-release) and newer.


                Compatible Deployments: Cohere Platform, Azure, AWS
                Sagemaker/Bedrock, Private Deployments
              type: optional<V2ChatRequestSafetyMode>
            stop_sequences:
              docs: >
                A list of up to 5 strings that the model will use to stop
                generation. If the model generates a string that matches any of
                the strings in the list, it will stop generating tokens and
                return the generated text up to that point not including the
                stop sequence.
              type: optional<list<string>>
            temperature:
              docs: >
                Defaults to \`0.3\`.


                A non-negative float that tunes the degree of randomness in
                generation. Lower temperatures mean less random generations, and
                higher temperatures mean more random generations.


                Randomness can be further maximized by increasing the  value of
                the \`p\` parameter.
              type: optional<float>
        content-type: application/json
        name: V2ChatRequest
      response:
        docs: OK
        status-code: 200
        type: list<string>
      source:
        openapi: openapi/cohere-v2.yaml
  source:
    openapi: openapi/cohere-v2.yaml
",
        "name": "v2.yml",
        "type": "file",
      },
    ],
    "name": "v2",
    "type": "directory",
  },
]
`;
