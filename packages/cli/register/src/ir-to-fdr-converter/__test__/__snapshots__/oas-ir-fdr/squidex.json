{
  "types": {
    "ErrorDto": {
      "name": "ErrorDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error message.",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The error code.",
            "key": "errorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The optional trace id.",
            "key": "traceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Link to the error details.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Detailed error messages.",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Status code of the http response.",
            "key": "statusCode",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "UserProperty": {
      "name": "UserProperty",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "UISettingsDto": {
      "name": "UISettingsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "True when the user can create apps.",
            "key": "canCreateApps",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "True when the user can create teams.",
            "key": "canCreateTeams",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "UpdateSettingDto": {
      "name": "UpdateSettingDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ContentsDto": {
      "name": "ContentsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The total number of content items.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The content items.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ContentDto"
              }
            }
          },
          {
            "description": "The possible statuses.",
            "key": "statuses",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "StatusInfoDto"
              }
            }
          }
        ]
      }
    },
    "ContentDto": {
      "name": "ContentDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The if of the content item.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user that has created the content item.",
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user that has updated the content item.",
            "key": "lastModifiedBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The reference data for the frontend UI.",
            "key": "referenceData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContentData"
                }
              }
            }
          },
          {
            "description": "The date and time when the content item has been created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The date and time when the content item has been modified last.",
            "key": "lastModified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The status of the content.",
            "key": "status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The new status of the content.",
            "key": "newStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The color of the status.",
            "key": "statusColor",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The color of the new status.",
            "key": "newStatusColor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The UI token.",
            "key": "editToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The scheduled status.",
            "key": "scheduleJob",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ScheduleJobDto"
                }
              }
            }
          },
          {
            "description": "The ID of the schema.",
            "key": "schemaId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the schema.",
            "key": "schemaName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The display name of the schema.",
            "key": "schemaDisplayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The reference fields.",
            "key": "referenceFields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "FieldDto"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether the content is deleted.",
            "key": "isDeleted",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The version of the content.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "ContentData": {
      "name": "ContentData",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "id",
            "value": "ContentFieldData"
          }
        }
      }
    },
    "ContentFieldData": {
      "name": "ContentFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ScheduleJobDto": {
      "name": "ScheduleJobDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the schedule job.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The new status.",
            "key": "status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The target date and time when the content should be scheduled.",
            "key": "dueTime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The color of the scheduled status.",
            "key": "color",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user who schedule the content.",
            "key": "scheduledBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "FieldDto": {
      "name": "FieldDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the field.",
            "key": "fieldId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The name of the field. Must be unique within the schema.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "Defines if the field is hidden.",
            "key": "isHidden",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is locked.",
            "key": "isLocked",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is disabled.",
            "key": "isDisabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines the partitioning of the field.",
            "key": "partitioning",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The field properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "FieldPropertiesDto"
            }
          },
          {
            "description": "The nested fields.",
            "key": "nested",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "NestedFieldDto"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "FieldPropertiesDto": {
      "name": "FieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Optional label for the editor.",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                  }
                }
              }
            }
          },
          {
            "description": "Hints to describe the field.",
            "key": "hints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1000
                  }
                }
              }
            }
          },
          {
            "description": "Placeholder to show when no value has been entered.",
            "key": "placeholder",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the field is required.",
            "key": "isRequired",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates if the field is required when publishing.",
            "key": "isRequiredOnPublish",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates if the field should be rendered with half width only.",
            "key": "isHalfWidth",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Optional url to the editor.",
            "key": "editorUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Tags for automation processes.",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "fieldType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ArrayFieldPropertiesDto": {
      "name": "ArrayFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The minimum allowed items for the field value.",
            "key": "minItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed items for the field value.",
            "key": "maxItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The fields that must be unique.",
            "key": "uniqueFields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "AssetsFieldPropertiesDto": {
      "name": "AssetsFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The preview mode for the asset.",
            "key": "previewMode",
            "valueType": {
              "type": "id",
              "value": "AssetPreviewMode"
            }
          },
          {
            "description": "The language specific default value as a list of asset ids.",
            "key": "defaultValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocalizedValueOfReadonlyListOfString"
                }
              }
            }
          },
          {
            "description": "The default value as a list of asset ids.",
            "key": "defaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The initial id to the folder.",
            "key": "folderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The preview format.",
            "key": "previewFormat",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed items for the field value.",
            "key": "minItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed items for the field value.",
            "key": "maxItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum file size in bytes.",
            "key": "minSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum file size in bytes.",
            "key": "maxSize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum image width in pixels.",
            "key": "minWidth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum image width in pixels.",
            "key": "maxWidth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum image height in pixels.",
            "key": "minHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum image height in pixels.",
            "key": "maxHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The image aspect width in pixels.",
            "key": "aspectWidth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The image aspect height in pixels.",
            "key": "aspectHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The expected type.",
            "key": "expectedType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AssetType"
                }
              }
            }
          },
          {
            "description": "True to resolve first asset in the content list.",
            "key": "resolveFirst",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "True to resolve first image in the content list.",
            "key": "mustBeImage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "True to resolve first image in the content list.",
            "key": "resolveImage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "The allowed file extensions.",
            "key": "allowedExtensions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "True, if duplicate values are allowed.",
            "key": "allowDuplicates",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "AssetPreviewMode": {
      "description": "",
      "name": "AssetPreviewMode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ImageAndFileName"
          },
          {
            "value": "Image"
          },
          {
            "value": "FileName"
          }
        ]
      }
    },
    "LocalizedValueOfReadonlyListOfString": {
      "name": "LocalizedValueOfReadonlyListOfString",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "list",
            "itemType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "AssetType": {
      "description": "",
      "name": "AssetType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Unknown"
          },
          {
            "value": "Image"
          },
          {
            "value": "Audio"
          },
          {
            "value": "Video"
          }
        ]
      }
    },
    "BooleanFieldPropertiesDto": {
      "name": "BooleanFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The language specific default value for the field value.",
            "key": "defaultValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocalizedValueOfNullableBoolean"
                }
              }
            }
          },
          {
            "description": "The default value for the field value.",
            "key": "defaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates that the inline editor is enabled for this field.",
            "key": "inlineEditable",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "BooleanFieldEditor"
            }
          }
        ]
      }
    },
    "LocalizedValueOfNullableBoolean": {
      "name": "LocalizedValueOfNullableBoolean",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "primitive",
            "value": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "BooleanFieldEditor": {
      "description": "",
      "name": "BooleanFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Checkbox"
          },
          {
            "value": "Toggle"
          }
        ]
      }
    },
    "ComponentFieldPropertiesDto": {
      "name": "ComponentFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The ID of the embedded schemas.",
            "key": "schemaIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ComponentsFieldPropertiesDto": {
      "name": "ComponentsFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The minimum allowed items for the field value.",
            "key": "minItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed items for the field value.",
            "key": "maxItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The ID of the embedded schemas.",
            "key": "schemaIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The fields that must be unique.",
            "key": "uniqueFields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "DateTimeFieldPropertiesDto": {
      "name": "DateTimeFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The language specific default value for the field value.",
            "key": "defaultValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocalizedValueOfNullableInstant"
                }
              }
            }
          },
          {
            "description": "The default value for the field value.",
            "key": "defaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed value for the field value.",
            "key": "maxValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed value for the field value.",
            "key": "minValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The format pattern when displayed in the UI.",
            "key": "format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "DateTimeFieldEditor"
            }
          },
          {
            "description": "The calculated default value for the field value.",
            "key": "calculatedDefaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateTimeCalculatedDefaultValue"
                }
              }
            }
          }
        ]
      }
    },
    "LocalizedValueOfNullableInstant": {
      "name": "LocalizedValueOfNullableInstant",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "primitive",
            "value": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      }
    },
    "DateTimeFieldEditor": {
      "description": "",
      "name": "DateTimeFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Date"
          },
          {
            "value": "DateTime"
          }
        ]
      }
    },
    "DateTimeCalculatedDefaultValue": {
      "description": "",
      "name": "DateTimeCalculatedDefaultValue",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Now"
          },
          {
            "value": "Today"
          }
        ]
      }
    },
    "GeolocationFieldPropertiesDto": {
      "name": "GeolocationFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "GeolocationFieldEditor"
            }
          }
        ]
      }
    },
    "GeolocationFieldEditor": {
      "description": "",
      "name": "GeolocationFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Map"
          }
        ]
      }
    },
    "JsonFieldPropertiesDto": {
      "name": "JsonFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The GraphQL schema.",
            "key": "graphQLSchema",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "NumberFieldPropertiesDto": {
      "name": "NumberFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The language specific default value for the field value.",
            "key": "defaultValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocalizedValueOfNullableDouble"
                }
              }
            }
          },
          {
            "description": "The default value for the field value.",
            "key": "defaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed value for the field value.",
            "key": "maxValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed value for the field value.",
            "key": "minValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The allowed values for the field value.",
            "key": "allowedValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "double"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
            "key": "isUnique",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates that the inline editor is enabled for this field.",
            "key": "inlineEditable",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "NumberFieldEditor"
            }
          }
        ]
      }
    },
    "LocalizedValueOfNullableDouble": {
      "name": "LocalizedValueOfNullableDouble",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "primitive",
            "value": {
              "type": "double"
            }
          }
        }
      }
    },
    "NumberFieldEditor": {
      "description": "",
      "name": "NumberFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Input"
          },
          {
            "value": "Radio"
          },
          {
            "value": "Dropdown"
          },
          {
            "value": "Stars"
          }
        ]
      }
    },
    "ReferencesFieldPropertiesDto": {
      "name": "ReferencesFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The language specific default value as a list of content ids.",
            "key": "defaultValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocalizedValueOfReadonlyListOfString"
                }
              }
            }
          },
          {
            "description": "The default value as a list of content ids.",
            "key": "defaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed items for the field value.",
            "key": "minItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed items for the field value.",
            "key": "maxItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "True, if duplicate values are allowed.",
            "key": "allowDuplicates",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "True to resolve references in the content list.",
            "key": "resolveReference",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "True when all references must be published.",
            "key": "mustBePublished",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "ReferencesFieldEditor"
            }
          },
          {
            "description": "The ID of the referenced schemas.",
            "key": "schemaIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ReferencesFieldEditor": {
      "description": "",
      "name": "ReferencesFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "List"
          },
          {
            "value": "Dropdown"
          },
          {
            "value": "Tags"
          },
          {
            "value": "Checkboxes"
          },
          {
            "value": "Input"
          }
        ]
      }
    },
    "StringFieldPropertiesDto": {
      "name": "StringFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The language specific default value for the field value.",
            "key": "defaultValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocalizedValueOfString"
                }
              }
            }
          },
          {
            "description": "The default value for the field value.",
            "key": "defaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The pattern to enforce a specific format for the field value.",
            "key": "pattern",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The validation message for the pattern.",
            "key": "patternMessage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The initial id to the folder when the control supports file uploads.",
            "key": "folderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed length for the field value.",
            "key": "minLength",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed length for the field value.",
            "key": "maxLength",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed of normal characters for the field value.",
            "key": "minCharacters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed of normal characters for the field value.",
            "key": "maxCharacters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed number of words for the field value.",
            "key": "minWords",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed number of words for the field value.",
            "key": "maxWords",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The allowed values for the field value.",
            "key": "allowedValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The allowed schema ids that can be embedded.",
            "key": "schemaIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the field value must be unique. Ignored for nested fields and localized fields.",
            "key": "isUnique",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates that other content items or references are embedded.",
            "key": "isEmbeddable",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates that the inline editor is enabled for this field.",
            "key": "inlineEditable",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates whether GraphQL Enum should be created.",
            "key": "createEnum",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "How the string content should be interpreted.",
            "key": "contentType",
            "valueType": {
              "type": "id",
              "value": "StringContentType"
            }
          },
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "StringFieldEditor"
            }
          }
        ]
      }
    },
    "LocalizedValueOfString": {
      "name": "LocalizedValueOfString",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "StringContentType": {
      "description": "",
      "name": "StringContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Unspecified"
          },
          {
            "value": "Html"
          },
          {
            "value": "Markdown"
          }
        ]
      }
    },
    "StringFieldEditor": {
      "description": "",
      "name": "StringFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Input"
          },
          {
            "value": "Color"
          },
          {
            "value": "Markdown"
          },
          {
            "value": "Dropdown"
          },
          {
            "value": "Html"
          },
          {
            "value": "Radio"
          },
          {
            "value": "RichText"
          },
          {
            "value": "Slug"
          },
          {
            "value": "StockPhoto"
          },
          {
            "value": "TextArea"
          }
        ]
      }
    },
    "TagsFieldPropertiesDto": {
      "name": "TagsFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The language specific default value for the field value.",
            "key": "defaultValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocalizedValueOfReadonlyListOfString"
                }
              }
            }
          },
          {
            "description": "The default value.",
            "key": "defaultValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The minimum allowed items for the field value.",
            "key": "minItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum allowed items for the field value.",
            "key": "maxItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The allowed values for the field value.",
            "key": "allowedValues",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether GraphQL Enum should be created.",
            "key": "createEnum",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "TagsFieldEditor"
            }
          }
        ]
      }
    },
    "TagsFieldEditor": {
      "description": "",
      "name": "TagsFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Tags"
          },
          {
            "value": "Checkboxes"
          },
          {
            "value": "Dropdown"
          }
        ]
      }
    },
    "UIFieldPropertiesDto": {
      "name": "UIFieldPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [
          "FieldPropertiesDto"
        ],
        "properties": [
          {
            "description": "The editor that is used to manage this field.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "UIFieldEditor"
            }
          }
        ]
      }
    },
    "UIFieldEditor": {
      "description": "",
      "name": "UIFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Separator"
          }
        ]
      }
    },
    "NestedFieldDto": {
      "name": "NestedFieldDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the field.",
            "key": "fieldId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The name of the field. Must be unique within the schema.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "Defines if the field is hidden.",
            "key": "isHidden",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is locked.",
            "key": "isLocked",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is disabled.",
            "key": "isDisabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The field properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "FieldPropertiesDto"
            }
          }
        ]
      }
    },
    "Resource": {
      "name": "Resource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The links.",
            "key": "_links",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "ResourceLink"
              }
            }
          }
        ]
      }
    },
    "ResourceLink": {
      "name": "ResourceLink",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The link url.",
            "key": "href",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The link method.",
            "key": "method",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "Additional data about the link.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "StatusInfoDto": {
      "name": "StatusInfoDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the status.",
            "key": "status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The color of the status.",
            "key": "color",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "AllContentsByPostDto": {
      "name": "AllContentsByPostDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The list of ids to query.",
            "key": "ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The start of the schedule.",
            "key": "scheduledFrom",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The end of the schedule.",
            "key": "scheduledTo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The ID of the referencing content item.",
            "key": "referencing",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The ID of the reference content item.",
            "key": "references",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The optional odata query.",
            "key": "oData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "BulkResultDto": {
      "name": "BulkResultDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The error when the bulk job failed.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ErrorDto"
                }
              }
            }
          },
          {
            "description": "The index of the bulk job where the result belongs to. The order can change.",
            "key": "jobIndex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The ID of the entity that has been handled successfully or not.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The ID of the entity that has been handled successfully or not.",
            "key": "contentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            "availability": "Deprecated"
          }
        ]
      }
    },
    "BulkUpdateContentsDto": {
      "name": "BulkUpdateContentsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The contents to update or insert.",
            "key": "jobs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "BulkUpdateContentsJobDto"
              }
            }
          },
          {
            "description": "True to automatically publish the content.",
            "key": "publish",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "True to turn off scripting for faster inserts. Default: true.",
            "key": "doNotScript",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to turn off validation for faster inserts. Default: false.",
            "key": "doNotValidate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to turn off validation of workflow rules. Default: false.",
            "key": "doNotValidateWorkflow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to check referrers of deleted contents.",
            "key": "checkReferrers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
            "key": "optimizeValidation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "BulkUpdateContentsJobDto": {
      "name": "BulkUpdateContentsJobDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An optional query to identify the content to update.",
            "key": "query",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "QueryJsonDto"
                }
              }
            }
          },
          {
            "description": "An optional ID of the content to update.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The data of the content when type is set to 'Upsert', 'Create', 'Update' or 'Patch.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContentData"
                }
              }
            }
          },
          {
            "description": "The new status when the type is set to 'ChangeStatus' or 'Upsert'.",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The due time.",
            "key": "dueTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The update type.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BulkUpdateContentType"
              }
            }
          },
          {
            "description": "The optional schema id or name.",
            "key": "schema",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Makes the update as patch.",
            "key": "patch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to delete the content permanently.",
            "key": "permanent",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The number of expected items. Set it to a higher number to update multiple items when a query is defined.",
            "key": "expectedCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "description": "The expected version.",
            "key": "expectedVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          }
        ]
      }
    },
    "QueryJsonDto": {
      "name": "QueryJsonDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fullText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "skip",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "key": "take",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "key": "random",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "key": "top",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "key": "sort",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "SortNode"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SortNode": {
      "name": "SortNode",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "path",
            "valueType": {
              "type": "id",
              "value": "PropertyPath"
            }
          },
          {
            "key": "order",
            "valueType": {
              "type": "id",
              "value": "SortOrder"
            }
          }
        ]
      }
    },
    "PropertyPath": {
      "name": "PropertyPath",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "SortOrder": {
      "description": "",
      "name": "SortOrder",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Ascending"
          },
          {
            "value": "Descending"
          }
        ]
      }
    },
    "BulkUpdateContentType": {
      "description": "",
      "name": "BulkUpdateContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Upsert"
          },
          {
            "value": "ChangeStatus"
          },
          {
            "value": "Create"
          },
          {
            "value": "Delete"
          },
          {
            "value": "Patch"
          },
          {
            "value": "Update"
          },
          {
            "value": "Validate"
          }
        ]
      }
    },
    "UsersDto": {
      "name": "UsersDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The total number of users.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The users.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "UserDto"
              }
            }
          }
        ]
      }
    },
    "UserDto": {
      "name": "UserDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the user.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The email of the user. Unique value.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The display name (usually first name and last name) of the user.",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Determines if the user is locked.",
            "key": "isLocked",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Additional permissions for the user.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "CreateUserDto": {
      "name": "CreateUserDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The email of the user. Unique value.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The display name (usually first name and last name) of the user.",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The password of the user.",
            "key": "password",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "Additional permissions for the user.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "UpdateUserDto": {
      "name": "UpdateUserDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The email of the user. Unique value.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The display name (usually first name and last name) of the user.",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The password of the user.",
            "key": "password",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Additional permissions for the user.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ResourcesDto": {
      "name": "ResourcesDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": []
      }
    },
    "TranslationDto": {
      "name": "TranslationDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The result of the translation.",
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "TranslationResultCode"
            }
          },
          {
            "description": "The translated text.",
            "key": "text",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TranslationResultCode": {
      "description": "",
      "name": "TranslationResultCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Translated"
          },
          {
            "value": "LanguageNotSupported"
          },
          {
            "value": "NotTranslated"
          },
          {
            "value": "NotConfigured"
          },
          {
            "value": "Unauthorized"
          },
          {
            "value": "Failed"
          }
        ]
      }
    },
    "TranslateDto": {
      "name": "TranslateDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The text to translate.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The target language.",
            "key": "targetLanguage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The optional source language.",
            "key": "sourceLanguage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "TemplatesDto": {
      "name": "TemplatesDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The event consumers.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "TemplateDto"
              }
            }
          }
        ]
      }
    },
    "TemplateDto": {
      "name": "TemplateDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The name of the template.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The title of the template.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The description of the template.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "True, if the template is a starter.",
            "key": "isStarter",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "TemplateDetailsDto": {
      "name": "TemplateDetailsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The details of the template.",
            "key": "details",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ContributorsDto": {
      "name": "ContributorsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The contributors.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ContributorDto"
              }
            }
          },
          {
            "description": "The maximum number of allowed contributors.",
            "key": "maxContributors",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The metadata to provide information about this request.",
            "key": "_meta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContributorsMetadata"
                }
              }
            }
          }
        ]
      }
    },
    "ContributorDto": {
      "name": "ContributorDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the user that contributes to the app.",
            "key": "contributorId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The display name.",
            "key": "contributorName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The email address.",
            "key": "contributorEmail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The role of the contributor.",
            "key": "role",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContributorsMetadata": {
      "name": "ContributorsMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Indicates whether the user has been invited.",
            "key": "isInvited",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "AssignContributorDto": {
      "name": "AssignContributorDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The id or email of the user to add to the app.",
            "key": "contributorId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The role of the contributor.",
            "key": "role",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Set to true to invite the user if he does not exist.",
            "key": "invite",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "TeamDto": {
      "name": "TeamDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the team.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the team.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The version of the team.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The timestamp when the team has been created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The timestamp when the team has been modified last.",
            "key": "lastModified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The role name of the user.",
            "key": "roleName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CreateTeamDto": {
      "name": "CreateTeamDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the team.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "UpdateTeamDto": {
      "name": "UpdateTeamDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the team.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "LogDownloadDto": {
      "name": "LogDownloadDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The url to download the log.",
            "key": "downloadUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CallsUsageDtoDto": {
      "name": "CallsUsageDtoDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The total number of API calls.",
            "key": "totalCalls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The total number of bytes transferred.",
            "key": "totalBytes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The total number of API calls this month.",
            "key": "monthCalls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The total number of bytes transferred this month.",
            "key": "monthBytes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The amount of calls that will block the app.",
            "key": "blockingApiCalls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The included API traffic.",
            "key": "allowedBytes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The included API calls.",
            "key": "allowedCalls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The average duration in milliseconds.",
            "key": "averageElapsedMs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "description": "The statistics by date and group.",
            "key": "details",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CallsUsagePerDateDto"
                }
              }
            }
          }
        ]
      }
    },
    "CallsUsagePerDateDto": {
      "name": "CallsUsagePerDateDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The date when the usage was tracked.",
            "key": "date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "description": "The total number of API calls.",
            "key": "totalCalls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The total number of bytes transferred.",
            "key": "totalBytes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The average duration in milliseconds.",
            "key": "averageElapsedMs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          }
        ]
      }
    },
    "CurrentStorageDto": {
      "name": "CurrentStorageDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The size in bytes.",
            "key": "size",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The maximum allowed asset size.",
            "key": "maxAllowed",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "StorageUsagePerDateDto": {
      "name": "StorageUsagePerDateDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The date when the usage was tracked.",
            "key": "date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "description": "The number of assets.",
            "key": "totalCount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The size in bytes.",
            "key": "totalSize",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "SearchResultDto": {
      "name": "SearchResultDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The name of the search result.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The type of the search result.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "SearchResultType"
            }
          },
          {
            "description": "An optional label.",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SearchResultType": {
      "description": "",
      "name": "SearchResultType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Asset"
          },
          {
            "value": "Content"
          },
          {
            "value": "Dashboard"
          },
          {
            "value": "Setting"
          },
          {
            "value": "Rule"
          },
          {
            "value": "Schema"
          }
        ]
      }
    },
    "SchemaDto": {
      "name": "SchemaDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the schema.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user that has created the schema.",
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The user that has updated the schema.",
            "key": "lastModifiedBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the schema. Unique within the app.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "The type of the schema.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "SchemaType"
            }
          },
          {
            "description": "The name of the category.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The schema properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "SchemaPropertiesDto"
            }
          },
          {
            "description": "Indicates if the schema is a singleton.",
            "key": "isSingleton",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "Indicates if the schema is published.",
            "key": "isPublished",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The date and time when the schema has been created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The date and time when the schema has been modified last.",
            "key": "lastModified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The version of the schema.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The scripts.",
            "key": "scripts",
            "valueType": {
              "type": "id",
              "value": "SchemaScriptsDto"
            }
          },
          {
            "description": "The preview Urls.",
            "key": "previewUrls",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of fields that are used in content lists.",
            "key": "fieldsInLists",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of fields that are used in content references.",
            "key": "fieldsInReferences",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The field rules.",
            "key": "fieldRules",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "FieldRuleDto"
              }
            }
          },
          {
            "description": "The list of fields.",
            "key": "fields",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "FieldDto"
              }
            }
          }
        ]
      }
    },
    "SchemaType": {
      "description": "",
      "name": "SchemaType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Default"
          },
          {
            "value": "Singleton"
          },
          {
            "value": "Component"
          }
        ]
      }
    },
    "SchemaPropertiesDto": {
      "name": "SchemaPropertiesDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Optional label for the editor.",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                  }
                }
              }
            }
          },
          {
            "description": "Hints to describe the schema.",
            "key": "hints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1000
                  }
                }
              }
            }
          },
          {
            "description": "The url to a the sidebar plugin for content lists.",
            "key": "contentsSidebarUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The url to a the sidebar plugin for content items.",
            "key": "contentSidebarUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The url to the editor plugin.",
            "key": "contentEditorUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "True to validate the content items on publish.",
            "key": "validateOnPublish",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Tags for automation processes.",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SchemaScriptsDto": {
      "name": "SchemaScriptsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The script that is executed for each content when querying contents.",
            "key": "query",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed for all contents when querying contents.",
            "key": "queryPre",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when creating a content.",
            "key": "create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when updating a content.",
            "key": "update",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when deleting a content.",
            "key": "delete",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when change a content status.",
            "key": "change",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "FieldRuleDto": {
      "name": "FieldRuleDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The action to perform when the condition is met.",
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "FieldRuleAction"
            }
          },
          {
            "description": "The field to update.",
            "key": "field",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The condition.",
            "key": "condition",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "FieldRuleAction": {
      "description": "",
      "name": "FieldRuleAction",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Disable"
          },
          {
            "value": "Hide"
          },
          {
            "value": "Require"
          }
        ]
      }
    },
    "AddFieldDto": {
      "name": "AddFieldDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the field. Must be unique within the schema.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "Determines the optional partitioning of the field.",
            "key": "partitioning",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The field properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "FieldPropertiesDto"
            }
          }
        ]
      }
    },
    "ConfigureUIFieldsDto": {
      "name": "ConfigureUIFieldsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of fields that are used in content lists.",
            "key": "fieldsInLists",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The name of fields that are used in content references.",
            "key": "fieldsInReferences",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ReorderFieldsDto": {
      "name": "ReorderFieldsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The field ids in the target order.",
            "key": "fieldIds",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          }
        ]
      }
    },
    "UpdateFieldDto": {
      "name": "UpdateFieldDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The field properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "FieldPropertiesDto"
            }
          }
        ]
      }
    },
    "SchemasDto": {
      "name": "SchemasDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The schemas.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SchemaDto"
              }
            }
          }
        ]
      }
    },
    "CreateSchemaDto": {
      "name": "CreateSchemaDto",
      "shape": {
        "type": "object",
        "extends": [
          "UpsertSchemaDto"
        ],
        "properties": [
          {
            "description": "The name of the schema.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "The type of the schema.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "SchemaType"
            }
          },
          {
            "description": "Set to true to allow a single content item only.",
            "key": "isSingleton",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            },
            "availability": "Deprecated"
          }
        ]
      }
    },
    "UpsertSchemaDto": {
      "name": "UpsertSchemaDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The optional properties.",
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SchemaPropertiesDto"
                }
              }
            }
          },
          {
            "description": "The optional scripts.",
            "key": "scripts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SchemaScriptsDto"
                }
              }
            }
          },
          {
            "description": "The names of the fields that should be used in references.",
            "key": "fieldsInReferences",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The names of the fields that should be shown in lists, including meta fields.",
            "key": "fieldsInLists",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Optional fields.",
            "key": "fields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "UpsertSchemaFieldDto"
                  }
                }
              }
            }
          },
          {
            "description": "The optional preview urls.",
            "key": "previewUrls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "map",
                  "keyType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The optional field Rules.",
            "key": "fieldRules",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "FieldRuleDto"
                  }
                }
              }
            }
          },
          {
            "description": "The category.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Set it to true to autopublish the schema.",
            "key": "isPublished",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "UpsertSchemaFieldDto": {
      "name": "UpsertSchemaFieldDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the field. Must be unique within the schema.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "Defines if the field is hidden.",
            "key": "isHidden",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is locked.",
            "key": "isLocked",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is disabled.",
            "key": "isDisabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Determines the optional partitioning of the field.",
            "key": "partitioning",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The field properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "FieldPropertiesDto"
            }
          },
          {
            "description": "The nested fields.",
            "key": "nested",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "UpsertSchemaNestedFieldDto"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "UpsertSchemaNestedFieldDto": {
      "name": "UpsertSchemaNestedFieldDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the field. Must be unique within the schema.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-zA-Z0-9]+(\\-[a-zA-Z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "Defines if the field is hidden.",
            "key": "isHidden",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is locked.",
            "key": "isLocked",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Defines if the field is disabled.",
            "key": "isDisabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The field properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "FieldPropertiesDto"
            }
          }
        ]
      }
    },
    "UpdateSchemaDto": {
      "name": "UpdateSchemaDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Optional label for the editor.",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                  }
                }
              }
            }
          },
          {
            "description": "Hints to describe the schema.",
            "key": "hints",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1000
                  }
                }
              }
            }
          },
          {
            "description": "The url to a the sidebar plugin for content lists.",
            "key": "contentsSidebarUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The url to a the sidebar plugin for content items.",
            "key": "contentSidebarUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The url to the editor plugin.",
            "key": "contentEditorUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "True to validate the content items on publish.",
            "key": "validateOnPublish",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Tags for automation processes.",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SynchronizeSchemaDto": {
      "name": "SynchronizeSchemaDto",
      "shape": {
        "type": "object",
        "extends": [
          "UpsertSchemaDto"
        ],
        "properties": [
          {
            "description": "True, when fields should not be deleted.",
            "key": "noFieldDeletion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "True, when fields with different types should not be recreated.",
            "key": "noFieldRecreation",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "ChangeCategoryDto": {
      "name": "ChangeCategoryDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the category.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ConfigurePreviewUrlsDto": {
      "name": "ConfigurePreviewUrlsDto",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "ConfigureFieldRulesDto": {
      "name": "ConfigureFieldRulesDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The field rules to configure.",
            "key": "fieldRules",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "FieldRuleDto"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "RuleElementDto": {
      "name": "RuleElementDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Describes the action or trigger type.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The label for the action or trigger type.",
            "key": "display",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Optional title.",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The color for the icon.",
            "key": "iconColor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The image for the icon.",
            "key": "iconImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The optional link to the product that is integrated.",
            "key": "readMore",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The properties.",
            "key": "properties",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "RuleElementPropertyDto"
              }
            }
          }
        ]
      }
    },
    "RuleElementPropertyDto": {
      "name": "RuleElementPropertyDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The html editor.",
            "key": "editor",
            "valueType": {
              "type": "id",
              "value": "RuleFieldEditor"
            }
          },
          {
            "description": "The name of the editor.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The label to use.",
            "key": "display",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The options, if the editor is a dropdown.",
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The optional description.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the property is formattable.",
            "key": "isFormattable",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates if the property is required.",
            "key": "isRequired",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "RuleFieldEditor": {
      "description": "",
      "name": "RuleFieldEditor",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Checkbox"
          },
          {
            "value": "Dropdown"
          },
          {
            "value": "Email"
          },
          {
            "value": "Javascript"
          },
          {
            "value": "Number"
          },
          {
            "value": "Password"
          },
          {
            "value": "Text"
          },
          {
            "value": "TextArea"
          },
          {
            "value": "Url"
          }
        ]
      }
    },
    "RulesDto": {
      "name": "RulesDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The rules.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "RuleDto"
              }
            }
          },
          {
            "description": "The ID of the rule that is currently rerunning.",
            "key": "runningRuleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "RuleDto": {
      "name": "RuleDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the rule.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user that has created the rule.",
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user that has updated the rule.",
            "key": "lastModifiedBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The date and time when the rule has been created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The date and time when the rule has been modified last.",
            "key": "lastModified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The version of the rule.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "Determines if the rule is enabled.",
            "key": "isEnabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Optional rule name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The trigger properties.",
            "key": "trigger",
            "valueType": {
              "type": "id",
              "value": "RuleTriggerDto"
            }
          },
          {
            "description": "The action properties.",
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "RuleActionDto"
            }
          },
          {
            "description": "The number of completed executions.",
            "key": "numSucceeded",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The number of failed executions.",
            "key": "numFailed",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The date and time when the rule was executed the last time.",
            "key": "lastExecuted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "availability": "Deprecated"
          }
        ]
      }
    },
    "RuleTriggerDto": {
      "name": "RuleTriggerDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "triggerType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "AssetChangedRuleTriggerDto": {
      "name": "AssetChangedRuleTriggerDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleTriggerDto"
        ],
        "properties": [
          {
            "description": "Javascript condition when to trigger.",
            "key": "condition",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CommentRuleTriggerDto": {
      "name": "CommentRuleTriggerDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleTriggerDto"
        ],
        "properties": [
          {
            "description": "Javascript condition when to trigger.",
            "key": "condition",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContentChangedRuleTriggerDto": {
      "name": "ContentChangedRuleTriggerDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleTriggerDto"
        ],
        "properties": [
          {
            "description": "The schema settings.",
            "key": "schemas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "SchemaCondition"
                  }
                }
              }
            }
          },
          {
            "description": "The schema references.",
            "key": "referencedSchemas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "SchemaCondition"
                  }
                }
              }
            }
          },
          {
            "description": "Determines whether the trigger should handle all content changes events.",
            "key": "handleAll",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "SchemaCondition": {
      "name": "SchemaCondition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "schemaId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "condition",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ManualRuleTriggerDto": {
      "name": "ManualRuleTriggerDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleTriggerDto"
        ],
        "properties": []
      }
    },
    "SchemaChangedRuleTriggerDto": {
      "name": "SchemaChangedRuleTriggerDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleTriggerDto"
        ],
        "properties": [
          {
            "description": "Javascript condition when to trigger.",
            "key": "condition",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "UsageRuleTriggerDto": {
      "name": "UsageRuleTriggerDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleTriggerDto"
        ],
        "properties": [
          {
            "description": "The number of monthly api calls.",
            "key": "limit",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The number of days to check or null for the current month.",
            "key": "numDays",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 30
                  }
                }
              }
            }
          }
        ]
      }
    },
    "RuleActionDto": {
      "name": "RuleActionDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "actionType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "AlgoliaRuleActionDto": {
      "name": "AlgoliaRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The application ID.",
            "key": "appId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The API key to grant access to Squidex.",
            "key": "apiKey",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the index.",
            "key": "indexName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The optional custom document.",
            "key": "document",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The condition when to delete the entry.",
            "key": "delete",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "AzureQueueRuleActionDto": {
      "name": "AzureQueueRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The connection string to the storage account.",
            "key": "connectionString",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the queue.",
            "key": "queue",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "Leave it empty to use the full event as body.",
            "key": "payload",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CommentRuleActionDto": {
      "name": "CommentRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The comment text.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "An optional client name.",
            "key": "client",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CreateContentRuleActionDto": {
      "name": "CreateContentRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The content data.",
            "key": "data",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the schema.",
            "key": "schema",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "An optional client name.",
            "key": "client",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Publish the content.",
            "key": "publish",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "DiscourseRuleActionDto": {
      "name": "DiscourseRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The url to the discourse server.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri",
                "minLength": 1
              }
            }
          },
          {
            "description": "The api key to authenticate to your discourse server.",
            "key": "apiKey",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The api username to authenticate to your discourse server.",
            "key": "apiUsername",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The text as markdown.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The optional title when creating new topics.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The optional topic id.",
            "key": "topic",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The optional category id.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ElasticSearchRuleActionDto": {
      "name": "ElasticSearchRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The url to the instance or cluster.",
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the index.",
            "key": "indexName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The optional username.",
            "key": "username",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The optional password.",
            "key": "password",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The optional custom document.",
            "key": "document",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The condition when to delete the document.",
            "key": "delete",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "EmailRuleActionDto": {
      "name": "EmailRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The IP address or host to the SMTP server.",
            "key": "serverHost",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The port to the SMTP server.",
            "key": "serverPort",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The username for the SMTP server.",
            "key": "serverUsername",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The password for the SMTP server.",
            "key": "serverPassword",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The email sending address.",
            "key": "messageFrom",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The email message will be sent to.",
            "key": "messageTo",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The subject line for this email message.",
            "key": "messageSubject",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The message body.",
            "key": "messageBody",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "FastlyRuleActionDto": {
      "name": "FastlyRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The API key to grant access to Squidex.",
            "key": "apiKey",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The ID of the fastly service.",
            "key": "serviceId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "MediumRuleActionDto": {
      "name": "MediumRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The self issued access token.",
            "key": "accessToken",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The title, used for the url.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The content, either html or markdown.",
            "key": "content",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The original home of this content, if it was originally published elsewhere.",
            "key": "canonicalUrl",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The optional comma separated list of tags.",
            "key": "tags",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Optional publication id.",
            "key": "publicationId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Indicates whether the content is markdown or html.",
            "key": "isHtml",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "NotificationRuleActionDto": {
      "name": "NotificationRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The user id or email.",
            "key": "user",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The text to send.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The optional url to attach to the notification.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "An optional client name.",
            "key": "client",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OpenSearchRuleActionDto": {
      "name": "OpenSearchRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The url to the instance or cluster.",
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the index.",
            "key": "indexName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The optional username.",
            "key": "username",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The optional password.",
            "key": "password",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The optional custom document.",
            "key": "document",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The condition when to delete the document.",
            "key": "delete",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "PrerenderRuleActionDto": {
      "name": "PrerenderRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The prerender token from your account.",
            "key": "token",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The url to recache.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "ScriptRuleActionDto": {
      "name": "ScriptRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The script to render.",
            "key": "script",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "SignalRRuleActionDto": {
      "name": "SignalRRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The connection string to the Azure SignalR.",
            "key": "connectionString",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the hub.",
            "key": "hubName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "* Broadcast = send to all users.\n * User = send to all target users(s).\n * Group = send to all target group(s).",
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "ActionTypeEnum"
            }
          },
          {
            "description": "Set the Name of the hub method received by the customer.",
            "key": "methodName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Define target users or groups by id or name. One item per line. Not needed for Broadcast action.",
            "key": "target",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Leave it empty to use the full event as body.",
            "key": "payload",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ActionTypeEnum": {
      "description": "",
      "name": "ActionTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Broadcast"
          },
          {
            "value": "User"
          },
          {
            "value": "Group"
          }
        ]
      }
    },
    "SlackRuleActionDto": {
      "name": "SlackRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The slack webhook url.",
            "key": "webhookUrl",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri",
                "minLength": 1
              }
            }
          },
          {
            "description": "The text that is sent as message to slack.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "TweetRuleActionDto": {
      "name": "TweetRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": " The generated access token.",
            "key": "accessToken",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": " The generated access secret.",
            "key": "accessSecret",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The text that is sent as tweet to twitter.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "TypesenseRuleActionDto": {
      "name": "TypesenseRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The url to the instance or cluster.",
            "key": "host",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the index.",
            "key": "indexName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The api key.",
            "key": "apiKey",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The optional custom document.",
            "key": "document",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The condition when to delete the document.",
            "key": "delete",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "WebhookRuleActionDto": {
      "name": "WebhookRuleActionDto",
      "shape": {
        "type": "object",
        "extends": [
          "RuleActionDto"
        ],
        "properties": [
          {
            "description": "The url to the webhook.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri",
                "minLength": 1
              }
            }
          },
          {
            "description": "The type of the request.",
            "key": "method",
            "valueType": {
              "type": "id",
              "value": "WebhookMethod"
            }
          },
          {
            "description": "Leave it empty to use the full event as body.",
            "key": "payload",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The mime type of the payload.",
            "key": "payloadType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The message headers in the format '[Key]=[Value]', one entry per line.",
            "key": "headers",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The shared secret that is used to calculate the payload signature.",
            "key": "sharedSecret",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "WebhookMethod": {
      "description": "",
      "name": "WebhookMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "POST"
          },
          {
            "value": "PUT"
          },
          {
            "value": "GET"
          },
          {
            "value": "DELETE"
          },
          {
            "value": "PATCH"
          }
        ]
      }
    },
    "CreateRuleDto": {
      "name": "CreateRuleDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The trigger properties.",
            "key": "trigger",
            "valueType": {
              "type": "id",
              "value": "RuleTriggerDto"
            }
          },
          {
            "description": "The action properties.",
            "key": "action",
            "valueType": {
              "type": "id",
              "value": "RuleActionDto"
            }
          }
        ]
      }
    },
    "UpdateRuleDto": {
      "name": "UpdateRuleDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Optional rule name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The trigger properties.",
            "key": "trigger",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "RuleTriggerDto"
                }
              }
            }
          },
          {
            "description": "The action properties.",
            "key": "action",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "RuleActionDto"
                }
              }
            }
          },
          {
            "description": "Enable or disable the rule.",
            "key": "isEnabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SimulatedRuleEventsDto": {
      "name": "SimulatedRuleEventsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The total number of simulated rule events.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The simulated rule events.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SimulatedRuleEventDto"
              }
            }
          }
        ]
      }
    },
    "SimulatedRuleEventDto": {
      "name": "SimulatedRuleEventDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique event id.",
            "key": "eventId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "guid",
                "minLength": 1
              }
            }
          },
          {
            "description": "The the unique id of the simulated event.",
            "key": "uniqueId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The name of the event.",
            "key": "eventName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The data for the action.",
            "key": "actionName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the action.",
            "key": "actionData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the event.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The reason why the event has been skipped.",
            "key": "skipReasons",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SkipReason"
              }
            }
          }
        ]
      }
    },
    "SkipReason": {
      "description": "",
      "name": "SkipReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "None"
          },
          {
            "value": "ConditionDoesNotMatch"
          },
          {
            "value": "ConditionPrecheckDoesNotMatch"
          },
          {
            "value": "Disabled"
          },
          {
            "value": "Failed"
          },
          {
            "value": "FromRule"
          },
          {
            "value": "NoAction"
          },
          {
            "value": "NoTrigger"
          },
          {
            "value": "TooOld"
          },
          {
            "value": "WrongEvent"
          },
          {
            "value": "WrongEventForTrigger"
          }
        ]
      }
    },
    "RuleEventsDto": {
      "name": "RuleEventsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The total number of rule events.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The rule events.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "RuleEventDto"
              }
            }
          }
        ]
      }
    },
    "RuleEventDto": {
      "name": "RuleEventDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the event.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time when the event has been created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The description.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the event.",
            "key": "eventName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The last dump.",
            "key": "lastDump",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The number of calls.",
            "key": "numCalls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The next attempt.",
            "key": "nextAttempt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The result of the event.",
            "key": "result",
            "valueType": {
              "type": "id",
              "value": "RuleResult"
            }
          },
          {
            "description": "The result of the job.",
            "key": "jobResult",
            "valueType": {
              "type": "id",
              "value": "RuleJobResult"
            }
          }
        ]
      }
    },
    "RuleResult": {
      "description": "",
      "name": "RuleResult",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Pending"
          },
          {
            "value": "Success"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Timeout"
          }
        ]
      }
    },
    "RuleJobResult": {
      "description": "",
      "name": "RuleJobResult",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Pending"
          },
          {
            "value": "Success"
          },
          {
            "value": "Retry"
          },
          {
            "value": "Failed"
          },
          {
            "value": "Cancelled"
          }
        ]
      }
    },
    "PlansDto": {
      "name": "PlansDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The available plans.",
            "key": "plans",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "PlanDto"
              }
            }
          },
          {
            "description": "The current plan id.",
            "key": "currentPlanId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The plan owner.",
            "key": "planOwner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The link to the management portal.",
            "key": "portalLink",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "The referral management.",
            "key": "referral",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ReferralInfo"
                }
              }
            }
          },
          {
            "description": "The reason why the plan cannot be changed.",
            "key": "locked",
            "valueType": {
              "type": "id",
              "value": "PlansLockedReason"
            }
          }
        ]
      }
    },
    "PlanDto": {
      "name": "PlanDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the plan.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the plan.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The monthly costs of the plan.",
            "key": "costs",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "An optional confirm text for the monthly subscription.",
            "key": "confirmText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "An optional confirm text for the yearly subscription.",
            "key": "yearlyConfirmText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The yearly costs of the plan.",
            "key": "yearlyCosts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The yearly ID of the plan.",
            "key": "yearlyId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The maximum number of API traffic.",
            "key": "maxApiBytes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The maximum number of API calls.",
            "key": "maxApiCalls",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The maximum allowed asset size.",
            "key": "maxAssetSize",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The maximum number of contributors.",
            "key": "maxContributors",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "ReferralInfo": {
      "name": "ReferralInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "earned",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "condition",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "PlansLockedReason": {
      "description": "",
      "name": "PlansLockedReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "None"
          },
          {
            "value": "NotOwner"
          },
          {
            "value": "NoPermission"
          },
          {
            "value": "ManagedByTeam"
          }
        ]
      }
    },
    "PlanChangedDto": {
      "name": "PlanChangedDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Optional redirect uri.",
            "key": "redirectUri",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ChangePlanDto": {
      "name": "ChangePlanDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The new plan id.",
            "key": "planId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "ExposedValues": {
      "name": "ExposedValues",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "FeaturesDto": {
      "name": "FeaturesDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The latest features.",
            "key": "features",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "FeatureDto"
              }
            }
          },
          {
            "description": "The recent version.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "FeatureDto": {
      "name": "FeatureDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the feature.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The description text.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "LanguageDto": {
      "name": "LanguageDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The iso code of the language.",
            "key": "iso2Code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The english name of the language.",
            "key": "englishName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The native name of the language.",
            "key": "nativeName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "HistoryEventDto": {
      "name": "HistoryEventDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The message for the event.",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The type of the original event.",
            "key": "eventType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user who called the action.",
            "key": "actor",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Gets a unique id for the event.",
            "key": "eventId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time when the event happened.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The version identifier.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "EventConsumersDto": {
      "name": "EventConsumersDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The event consumers.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EventConsumerDto"
              }
            }
          }
        ]
      }
    },
    "EventConsumerDto": {
      "name": "EventConsumerDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "Indicates if the event consumer has been started.",
            "key": "isStopped",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates if the event consumer is resetting at the moment.",
            "key": "isResetting",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The number of handled events.",
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The name of the event consumer.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The error details if the event consumer has been stopped after a failure.",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The position within the vent stream.",
            "key": "position",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "QueryDto": {
      "name": "QueryDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The optional list of ids to query.",
            "key": "ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The optional odata query.",
            "key": "oData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The parent id (for assets).",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ImportContentsDto": {
      "name": "ImportContentsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The data to import.",
            "key": "datas",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ContentData"
              }
            }
          },
          {
            "description": "True to automatically publish the content.",
            "key": "publish",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "True to turn off scripting for faster inserts. Default: true.",
            "key": "doNotScript",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to turn off costly validation: Unique checks, asset checks and reference checks. Default: true.",
            "key": "optimizeValidation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "ChangeStatusDto": {
      "name": "ChangeStatusDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The new status.",
            "key": "status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The due time.",
            "key": "dueTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "True to check referrers of this content.",
            "key": "checkReferrers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "CommentsDto": {
      "name": "CommentsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The created comments including the updates.",
            "key": "createdComments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "CommentDto"
                  }
                }
              }
            }
          },
          {
            "description": "The updates comments since the last version.",
            "key": "updatedComments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "CommentDto"
                  }
                }
              }
            }
          },
          {
            "description": "The deleted comments since the last version.",
            "key": "deletedComments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The current version.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "CommentDto": {
      "name": "CommentDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the comment.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time when the comment was created or updated last.",
            "key": "time",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The user who created or updated the comment.",
            "key": "user",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The text of the comment.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The url where the comment is created.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "UpsertCommentDto": {
      "name": "UpsertCommentDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The comment text.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The url where the comment is created.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "BackupJobsDto": {
      "name": "BackupJobsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The backups.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "BackupJobDto"
              }
            }
          }
        ]
      }
    },
    "BackupJobDto": {
      "name": "BackupJobDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the backup job.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time when the job has been started.",
            "key": "started",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The time when the job has been stopped.",
            "key": "stopped",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The number of handled events.",
            "key": "handledEvents",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The number of handled assets.",
            "key": "handledAssets",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The status of the operation.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "JobStatus"
            }
          }
        ]
      }
    },
    "JobStatus": {
      "description": "",
      "name": "JobStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Created"
          },
          {
            "value": "Started"
          },
          {
            "value": "Completed"
          },
          {
            "value": "Failed"
          }
        ]
      }
    },
    "RestoreJobDto": {
      "name": "RestoreJobDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The uri to load from.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri"
              }
            }
          },
          {
            "description": "The status log.",
            "key": "log",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time when the job has been started.",
            "key": "started",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The time when the job has been stopped.",
            "key": "stopped",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The status of the operation.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "JobStatus"
            }
          }
        ]
      }
    },
    "RestoreRequestDto": {
      "name": "RestoreRequestDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the app.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$"
                  }
                }
              }
            }
          },
          {
            "description": "The url to the restore file.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uri",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "ResizeMode": {
      "description": "",
      "name": "ResizeMode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Crop"
          },
          {
            "value": "CropUpsize"
          },
          {
            "value": "Pad"
          },
          {
            "value": "BoxPad"
          },
          {
            "value": "Max"
          },
          {
            "value": "Min"
          },
          {
            "value": "Stretch"
          }
        ]
      }
    },
    "ImageFormat": {
      "description": "",
      "name": "ImageFormat",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "AVIF"
          },
          {
            "value": "BMP"
          },
          {
            "value": "GIF"
          },
          {
            "value": "JPEG"
          },
          {
            "value": "PNG"
          },
          {
            "value": "TGA"
          },
          {
            "value": "TIFF"
          },
          {
            "value": "WEBP"
          }
        ]
      }
    },
    "AssetFoldersDto": {
      "name": "AssetFoldersDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The total number of assets.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The assets folders.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "AssetFolderDto"
              }
            }
          },
          {
            "description": "The path to the current folder.",
            "key": "path",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "AssetFolderDto"
              }
            }
          }
        ]
      }
    },
    "AssetFolderDto": {
      "name": "AssetFolderDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the asset.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The ID of the parent folder. Empty for files without parent.",
            "key": "parentId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The folder name.",
            "key": "folderName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The version of the asset folder.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "AssetFolderScope": {
      "description": "",
      "name": "AssetFolderScope",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PathAndItems"
          },
          {
            "value": "Path"
          },
          {
            "value": "Items"
          }
        ]
      }
    },
    "CreateAssetFolderDto": {
      "name": "CreateAssetFolderDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the folder.",
            "key": "folderName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The ID of the parent folder.",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "RenameAssetFolderDto": {
      "name": "RenameAssetFolderDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the folder.",
            "key": "folderName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "MoveAssetFolderDto": {
      "name": "MoveAssetFolderDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The parent folder id.",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "RenameTagDto": {
      "name": "RenameTagDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The new name for the tag.",
            "key": "tagName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "AssetsDto": {
      "name": "AssetsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The total number of assets.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The assets.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "AssetDto"
              }
            }
          }
        ]
      }
    },
    "AssetDtoMetadata": {
      "description": "The asset metadata.",
      "name": "AssetDtoMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "AssetDto": {
      "name": "AssetDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the asset.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The ID of the parent folder. Empty for files without parent.",
            "key": "parentId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The file name.",
            "key": "fileName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The file hash.",
            "key": "fileHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "True, when the asset is not public.",
            "key": "isProtected",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The slug.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The mime type.",
            "key": "mimeType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The file type.",
            "key": "fileType",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The formatted text representation of the metadata.",
            "key": "metadataText",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The UI token.",
            "key": "editToken",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The asset metadata.",
            "key": "metadata",
            "valueType": {
              "type": "id",
              "value": "AssetDtoMetadata"
            }
          },
          {
            "description": "The asset tags.",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The size of the file in bytes.",
            "key": "fileSize",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The version of the file.",
            "key": "fileVersion",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The type of the asset.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "AssetType"
            }
          },
          {
            "description": "The user that has created the schema.",
            "key": "createdBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The user that has updated the asset.",
            "key": "lastModifiedBy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The date and time when the asset has been created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The date and time when the asset has been modified last.",
            "key": "lastModified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The version of the asset.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The metadata.",
            "key": "_meta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AssetMeta"
                }
              }
            }
          },
          {
            "description": "Determines of the created file is an image.",
            "key": "isImage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "The width of the image in pixels if the asset is an image.",
            "key": "pixelWidth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "The height of the image in pixels if the asset is an image.",
            "key": "pixelHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            "availability": "Deprecated"
          }
        ]
      }
    },
    "AssetMeta": {
      "name": "AssetMeta",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Indicates whether the asset is a duplicate.",
            "key": "isDuplicate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "BulkUpdateAssetsDto": {
      "name": "BulkUpdateAssetsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The contents to update or insert.",
            "key": "jobs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "BulkUpdateAssetsJobDto"
                  }
                }
              }
            }
          },
          {
            "description": "True to check referrers of deleted assets.",
            "key": "checkReferrers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to turn off costly validation: Folder checks. Default: true.",
            "key": "optimizeValidation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "True to turn off scripting for faster inserts. Default: true.",
            "key": "doNotScript",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "BulkUpdateAssetsJobDtoMetadata": {
      "description": "The asset metadata.",
      "name": "BulkUpdateAssetsJobDtoMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "BulkUpdateAssetsJobDto": {
      "name": "BulkUpdateAssetsJobDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An optional ID of the asset to update.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The update type.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BulkUpdateAssetType"
              }
            }
          },
          {
            "description": "The parent folder id.",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The new name of the asset.",
            "key": "fileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The new slug of the asset.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "True, when the asset is not public.",
            "key": "isProtected",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "The new asset tags.",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The asset metadata.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BulkUpdateAssetsJobDtoMetadata"
                }
              }
            }
          },
          {
            "description": "True to delete the asset permanently.",
            "key": "permanent",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The expected version.",
            "key": "expectedVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          }
        ]
      }
    },
    "BulkUpdateAssetType": {
      "description": "",
      "name": "BulkUpdateAssetType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Annotate"
          },
          {
            "value": "Move"
          },
          {
            "value": "Delete"
          }
        ]
      }
    },
    "AnnotateAssetDtoMetadata": {
      "description": "The asset metadata.",
      "name": "AnnotateAssetDtoMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "AnnotateAssetDto": {
      "name": "AnnotateAssetDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The new name of the asset.",
            "key": "fileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The new slug of the asset.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "True, when the asset is not public.",
            "key": "isProtected",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "The new asset tags.",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The asset metadata.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AnnotateAssetDtoMetadata"
                }
              }
            }
          }
        ]
      }
    },
    "MoveAssetDto": {
      "name": "MoveAssetDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The parent folder id.",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "AssetScriptsDto": {
      "name": "AssetScriptsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The script that is executed for each asset when querying assets.",
            "key": "query",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed for all assets when querying assets.",
            "key": "queryPre",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when creating an asset.",
            "key": "create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when updating a content.",
            "key": "update",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when annotating a content.",
            "key": "annotate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when moving a content.",
            "key": "move",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when deleting a content.",
            "key": "delete",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the app.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "UpdateAssetScriptsDto": {
      "name": "UpdateAssetScriptsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The script that is executed for each asset when querying assets.",
            "key": "query",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed for all assets when querying assets.",
            "key": "queryPre",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when creating an asset.",
            "key": "create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when updating a content.",
            "key": "update",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when annotating a content.",
            "key": "annotate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when moving a content.",
            "key": "move",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The script that is executed when deleting a content.",
            "key": "delete",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ClientsDto": {
      "name": "ClientsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The clients.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ClientDto"
              }
            }
          }
        ]
      }
    },
    "ClientDto": {
      "name": "ClientDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The client id.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The client secret.",
            "key": "secret",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The client name.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The role of the client.",
            "key": "role",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The number of allowed api calls per month for this client.",
            "key": "apiCallsLimit",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The number of allowed api traffic bytes per month for this client.",
            "key": "apiTrafficLimit",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "True to allow anonymous access without an access token for this client.",
            "key": "allowAnonymous",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "CreateClientDto": {
      "name": "CreateClientDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the client.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "UpdateClientDto": {
      "name": "UpdateClientDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The new display name of the client.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 20
                  }
                }
              }
            }
          },
          {
            "description": "The role of the client.",
            "key": "role",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "True to allow anonymous access without an access token for this client.",
            "key": "allowAnonymous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "The number of allowed api calls per month for this client.",
            "key": "apiCallsLimit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          },
          {
            "description": "The number of allowed api traffic bytes per month for this client.",
            "key": "apiTrafficLimit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "AppLanguagesDto": {
      "name": "AppLanguagesDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The languages.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "AppLanguageDto"
              }
            }
          }
        ]
      }
    },
    "AppLanguageDto": {
      "name": "AppLanguageDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The iso code of the language.",
            "key": "iso2Code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The english name of the language.",
            "key": "englishName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The fallback languages.",
            "key": "fallback",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates if the language is the master language.",
            "key": "isMaster",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Indicates if the language is optional.",
            "key": "isOptional",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "AddLanguageDto": {
      "name": "AddLanguageDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The language to add.",
            "key": "language",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "UpdateLanguageDto": {
      "name": "UpdateLanguageDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Set the value to true to make the language the master.",
            "key": "isMaster",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "Set the value to true to make the language optional.",
            "key": "isOptional",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Optional fallback languages.",
            "key": "fallback",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "RolesDto": {
      "name": "RolesDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The roles.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "RoleDto"
              }
            }
          }
        ]
      }
    },
    "RoleDto": {
      "name": "RoleDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The role name.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of clients with this role.",
            "key": "numClients",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The number of contributors with this role.",
            "key": "numContributors",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Indicates if the role is an builtin default role.",
            "key": "isDefaultRole",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Associated list of permissions.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Associated list of UI properties.",
            "key": "properties",
            "valueType": {
              "type": "id",
              "value": "RoleDto"
            }
          }
        ]
      }
    },
    "AddRoleDto": {
      "name": "AddRoleDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The role name.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "UpdateRoleDto": {
      "name": "UpdateRoleDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Associated list of permissions.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Associated list of UI properties.",
            "key": "properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "UpdateRoleDto"
              }
            }
          }
        ]
      }
    },
    "AppDtoRoleProperties": {
      "description": "The properties from the role.",
      "name": "AppDtoRoleProperties",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "AppDto": {
      "name": "AppDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The ID of the app.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the app.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$"
              }
            }
          },
          {
            "description": "The optional label of the app.",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The optional description of the app.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the app.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "description": "The timestamp when the app has been created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The timestamp when the app has been modified last.",
            "key": "lastModified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "The ID of the team.",
            "key": "teamId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The permission level of the user.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates if the user can access the api.",
            "key": "canAccessApi",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "Indicates if the user can access at least one content.",
            "key": "canAccessContent",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The role name of the user.",
            "key": "roleName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The properties from the role.",
            "key": "roleProperties",
            "valueType": {
              "type": "id",
              "value": "AppDtoRoleProperties"
            }
          }
        ]
      }
    },
    "CreateAppDto": {
      "name": "CreateAppDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the app.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[a-z0-9]+(\\-[a-z0-9]+)*$",
                "minLength": 1
              }
            }
          },
          {
            "description": "Initialize the app with the inbuilt template.",
            "key": "template",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "UpdateAppDto": {
      "name": "UpdateAppDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The optional label of your app.",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The optional description of your app.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TransferToTeamDto": {
      "name": "TransferToTeamDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the team.",
            "key": "teamId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "AppSettingsDto": {
      "name": "AppSettingsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The configured app patterns.",
            "key": "patterns",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "PatternDto"
              }
            }
          },
          {
            "description": "The configured UI editors.",
            "key": "editors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EditorDto"
              }
            }
          },
          {
            "description": "Hide the scheduler for content items.",
            "key": "hideScheduler",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Hide the datetime mode button.",
            "key": "hideDateTimeModeButton",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The version of the app.",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          }
        ]
      }
    },
    "PatternDto": {
      "name": "PatternDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the suggestion.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The regex pattern.",
            "key": "regex",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The regex message.",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EditorDto": {
      "name": "EditorDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the editor.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The url to the editor.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "UpdateAppSettingsDto": {
      "name": "UpdateAppSettingsDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The configured app patterns.",
            "key": "patterns",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "PatternDto"
              }
            }
          },
          {
            "description": "The configured UI editors.",
            "key": "editors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EditorDto"
              }
            }
          },
          {
            "description": "Hide the scheduler for content items.",
            "key": "hideScheduler",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Hide the datetime mode button.",
            "key": "hideDateTimeModeButton",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "WorkflowsDto": {
      "name": "WorkflowsDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The workflow.",
            "key": "items",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "WorkflowDto"
              }
            }
          },
          {
            "description": "The errros that should be fixed.",
            "key": "errors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WorkflowDto": {
      "name": "WorkflowDto",
      "shape": {
        "type": "object",
        "extends": [
          "Resource"
        ],
        "properties": [
          {
            "description": "The workflow id.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the workflow.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The workflow steps.",
            "key": "steps",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "WorkflowStepDto"
                }
              }
            }
          },
          {
            "description": "The schema ids.",
            "key": "schemaIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The initial step.",
            "key": "initial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WorkflowStepDto": {
      "name": "WorkflowStepDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The transitions.",
            "key": "transitions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "WorkflowTransitionDto"
                }
              }
            }
          },
          {
            "description": "The optional color.",
            "key": "color",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "True if the content should be validated when moving to this step.",
            "key": "validate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Indicates if updates should not be allowed.",
            "key": "noUpdate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Optional expression that must evaluate to true when you want to prevent updates.",
            "key": "noUpdateExpression",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Optional list of roles to restrict the updates for users with these roles.",
            "key": "noUpdateRoles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WorkflowTransitionDto": {
      "name": "WorkflowTransitionDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The optional expression.",
            "key": "expression",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The optional restricted role.",
            "key": "roles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "AddWorkflowDto": {
      "name": "AddWorkflowDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the workflow.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "UpdateWorkflowDto": {
      "name": "UpdateWorkflowDto",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the workflow.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The workflow steps.",
            "key": "steps",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "WorkflowStepDto"
              }
            }
          },
          {
            "description": "The schema ids.",
            "key": "schemaIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The initial step.",
            "key": "initial",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    }
  },
  "subpackages": {
    "userManagement": {
      "subpackageId": "userManagement",
      "name": "userManagement",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUsers",
          "originalEndpointId": "userManagement.getUsers",
          "name": "Get users by query.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/user-management"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Optional query to search by email address or username.",
              "key": "query",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The number of users to skip.",
              "key": "skip",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 0
                  }
                }
              }
            },
            {
              "description": "The number of users to return.",
              "key": "take",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 10
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "UsersDto"
              }
            },
            "statusCode": 200,
            "description": "Users returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/user-management",
              "pathParameters": {},
              "queryParameters": {
                "query": "foo",
                "skip": 0,
                "take": 10
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "email": "foo",
                      "displayName": "foo",
                      "isLocked": true,
                      "permissions": [
                        "foo"
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "email": "foo",
                      "displayName": "foo",
                      "isLocked": true,
                      "permissions": [
                        "foo"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postUser",
          "originalEndpointId": "userManagement.postUser",
          "name": "Create a new user.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/user-management"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateUserDto"
                }
              },
              "description": "The user object that needs to be added."
            },
            "description": "The user object that needs to be added."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "UserDto"
              }
            },
            "statusCode": 201,
            "description": "User created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/user-management",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "email": "foo",
                "displayName": "foo",
                "password": "foo",
                "permissions": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "displayName": "foo",
                  "password": "foo",
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUser",
          "originalEndpointId": "userManagement.getUser",
          "name": "Get a user by ID.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the user.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/user-management/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "UserDto"
              }
            },
            "statusCode": 200,
            "description": "User returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/user-management/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putUser",
          "originalEndpointId": "userManagement.putUser",
          "name": "Update a user.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the user.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/user-management/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateUserDto"
                }
              },
              "description": "The user object that needs to be updated."
            },
            "description": "The user object that needs to be updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "UserDto"
              }
            },
            "statusCode": 200,
            "description": "User created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/user-management/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "email": "foo",
                "displayName": "foo",
                "permissions": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "displayName": "foo",
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteUser",
          "originalEndpointId": "userManagement.deleteUser",
          "name": "Delete a User.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the user to delete.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/user-management/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/user-management/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "lockUser",
          "originalEndpointId": "userManagement.lockUser",
          "name": "Lock a user.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the user to lock.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/user-management/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/lock"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "UserDto"
              }
            },
            "statusCode": 200,
            "description": "User locked."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/user-management/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "unlockUser",
          "originalEndpointId": "userManagement.unlockUser",
          "name": "Unlock a user.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the user to unlock.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/user-management/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/unlock"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "UserDto"
              }
            },
            "statusCode": 200,
            "description": "User unlocked."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/user-management/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "users": {
      "subpackageId": "users",
      "name": "users",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUserResources",
          "originalEndpointId": "users.getUserResources",
          "name": "Get the user resources.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ResourcesDto"
              }
            },
            "statusCode": 200,
            "description": "User resources returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Search the user by query that contains the email address or the part of the email address.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUsers",
          "originalEndpointId": "users.getUsers",
          "name": "Get users by query.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/users"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The query to search the user by email address. Case invariant.",
              "key": "query",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "UserDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Users returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/users",
              "pathParameters": {},
              "queryParameters": {
                "query": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "email": "foo",
                    "displayName": "foo",
                    "isLocked": true,
                    "permissions": [
                      "foo"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "email": "foo",
                    "displayName": "foo",
                    "isLocked": true,
                    "permissions": [
                      "foo"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUser",
          "originalEndpointId": "users.getUser",
          "name": "Get user by id.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the user (GUID).",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/users/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "UserDto"
              }
            },
            "statusCode": 200,
            "description": "User found."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/users/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "email": "foo",
                  "displayName": "foo",
                  "isLocked": true,
                  "permissions": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUserPicture",
          "originalEndpointId": "users.getUserPicture",
          "name": "Get user picture by id.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the user (GUID).",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/users/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/picture"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            },
            "statusCode": 200,
            "description": "User found and image or fallback returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/users/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "translations": {
      "subpackageId": "translations",
      "name": "translations",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postTranslation",
          "originalEndpointId": "translations.postTranslation",
          "name": "Translate a text.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/translations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TranslateDto"
                }
              },
              "description": "The translation request."
            },
            "description": "The translation request."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TranslationDto"
              }
            },
            "statusCode": 200,
            "description": "Text translated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "text": "foo",
                "targetLanguage": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "text": "foo",
                  "targetLanguage": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "result": "Translated",
                  "text": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "result": "Translated",
                  "text": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "templates": {
      "subpackageId": "templates",
      "name": "templates",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTemplates",
          "originalEndpointId": "templates.getTemplates",
          "name": "Get all templates.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/templates"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TemplatesDto"
              }
            },
            "statusCode": 200,
            "description": "Templates returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/templates",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "title": "foo",
                      "description": "foo",
                      "isStarter": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "title": "foo",
                      "description": "foo",
                      "isStarter": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTemplate",
          "originalEndpointId": "templates.getTemplate",
          "name": "Get template details.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the template.",
                "key": "name",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/templates/"
              },
              {
                "type": "pathParameter",
                "value": "name"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TemplateDetailsDto"
              }
            },
            "statusCode": 200,
            "description": "Template returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/templates/",
              "pathParameters": {
                "name": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "details": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "details": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "teams": {
      "subpackageId": "teams",
      "name": "teams",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getContributors",
          "originalEndpointId": "teams.getContributors",
          "name": "Get team contributors.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/contributors"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 200,
            "description": "Contributors returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postContributor",
          "originalEndpointId": "teams.postContributor",
          "name": "Assign contributor to team.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/contributors"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AssignContributorDto"
                }
              },
              "description": "Contributor object that needs to be added to the team."
            },
            "description": "Contributor object that needs to be added to the team."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 201,
            "description": "Contributor assigned to team."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "contributorId": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "contributorId": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteMyself",
          "originalEndpointId": "teams.deleteMyself",
          "name": "Remove yourself.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/contributors/me"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 200,
            "description": "Contributor removed."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteContributor",
          "originalEndpointId": "teams.deleteContributor",
          "name": "Remove contributor.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the contributor.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/contributors/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 200,
            "description": "Contributor removed."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can only retrieve the list of teams when you are authenticated as a user (OpenID implicit flow).\nYou will retrieve all teams, where you are assigned as a contributor.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTeams",
          "originalEndpointId": "teams.getTeams",
          "name": "Get your teams.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "TeamDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Teams returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "name": "foo",
                    "version": 42,
                    "created": "foo",
                    "lastModified": "foo",
                    "roleName": "foo"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "name": "foo",
                    "version": 42,
                    "created": "foo",
                    "lastModified": "foo",
                    "roleName": "foo"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can only create an team when you are authenticated as a user (OpenID implicit flow).\nYou will be assigned as owner of the new team automatically.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postTeam",
          "originalEndpointId": "teams.postTeam",
          "name": "Create a new team.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateTeamDto"
                }
              },
              "description": "The team object that needs to be added to Squidex."
            },
            "description": "The team object that needs to be added to Squidex."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TeamDto"
              }
            },
            "statusCode": 201,
            "description": "Team created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "roleName": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "roleName": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTeam",
          "originalEndpointId": "teams.getTeam",
          "name": "Get an team by name.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TeamDto"
              }
            },
            "statusCode": 200,
            "description": "Teams returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "roleName": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "roleName": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putTeam",
          "originalEndpointId": "teams.putTeam",
          "name": "Update the team.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the team to update.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateTeamDto"
                }
              },
              "description": "The values to update."
            },
            "description": "The values to update."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TeamDto"
              }
            },
            "statusCode": 200,
            "description": "Team updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "roleName": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "roleName": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "statistics": {
      "subpackageId": "statistics",
      "name": "statistics",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getLog",
          "originalEndpointId": "statistics.getLog",
          "name": "Get api calls as log file.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/usages/log"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "LogDownloadDto"
              }
            },
            "statusCode": 200,
            "description": "Usage tracking results returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "downloadUrl": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "downloadUrl": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUsages",
          "originalEndpointId": "statistics.getUsages",
          "name": "Get api calls in date range.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The from date.",
                "key": "fromDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              {
                "description": "The to date.",
                "key": "toDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/usages/calls/"
              },
              {
                "type": "pathParameter",
                "value": "fromDate"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "toDate"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CallsUsageDtoDto"
              }
            },
            "statusCode": 200,
            "description": "API call returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "fromDate": "foo",
                "toDate": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "totalCalls": 42,
                  "totalBytes": 42,
                  "monthCalls": 42,
                  "monthBytes": 42,
                  "blockingApiCalls": 42,
                  "allowedBytes": 42,
                  "allowedCalls": 42,
                  "averageElapsedMs": 42,
                  "details": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "totalCalls": 42,
                  "totalBytes": 42,
                  "monthCalls": 42,
                  "monthBytes": 42,
                  "blockingApiCalls": 42,
                  "allowedBytes": 42,
                  "allowedCalls": 42,
                  "averageElapsedMs": 42,
                  "details": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getUsagesForTeam",
          "originalEndpointId": "statistics.getUsagesForTeam",
          "name": "Get api calls in date range for team.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The from date.",
                "key": "fromDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              {
                "description": "The to date.",
                "key": "toDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/usages/calls/"
              },
              {
                "type": "pathParameter",
                "value": "fromDate"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "toDate"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CallsUsageDtoDto"
              }
            },
            "statusCode": 200,
            "description": "API call returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo",
                "fromDate": "foo",
                "toDate": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "totalCalls": 42,
                  "totalBytes": 42,
                  "monthCalls": 42,
                  "monthBytes": 42,
                  "blockingApiCalls": 42,
                  "allowedBytes": 42,
                  "allowedCalls": 42,
                  "averageElapsedMs": 42,
                  "details": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "totalCalls": 42,
                  "totalBytes": 42,
                  "monthCalls": 42,
                  "monthBytes": 42,
                  "blockingApiCalls": 42,
                  "allowedBytes": 42,
                  "allowedCalls": 42,
                  "averageElapsedMs": 42,
                  "details": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getCurrentStorageSize",
          "originalEndpointId": "statistics.getCurrentStorageSize",
          "name": "Get total asset size.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/usages/storage/today"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CurrentStorageDto"
              }
            },
            "statusCode": 200,
            "description": "Storage usage returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "size": 42,
                  "maxAllowed": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "size": 42,
                  "maxAllowed": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTeamCurrentStorageSizeForTeam",
          "originalEndpointId": "statistics.getTeamCurrentStorageSizeForTeam",
          "name": "Get total asset size by team.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/usages/storage/today"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CurrentStorageDto"
              }
            },
            "statusCode": 200,
            "description": "Storage usage returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "size": 42,
                  "maxAllowed": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "size": 42,
                  "maxAllowed": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getStorageSizes",
          "originalEndpointId": "statistics.getStorageSizes",
          "name": "Get asset usage by date.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The from date.",
                "key": "fromDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              {
                "description": "The to date.",
                "key": "toDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/usages/storage/"
              },
              {
                "type": "pathParameter",
                "value": "fromDate"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "toDate"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "StorageUsagePerDateDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Storage usage returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "fromDate": "foo",
                "toDate": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "date": "foo",
                    "totalCount": 42,
                    "totalSize": 42
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "date": "foo",
                    "totalCount": 42,
                    "totalSize": 42
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getStorageSizesForTeam",
          "originalEndpointId": "statistics.getStorageSizesForTeam",
          "name": "Get asset usage by date for team.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The from date.",
                "key": "fromDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              {
                "description": "The to date.",
                "key": "toDate",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/usages/storage/"
              },
              {
                "type": "pathParameter",
                "value": "fromDate"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "toDate"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "StorageUsagePerDateDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Storage usage returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo",
                "fromDate": "foo",
                "toDate": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "date": "foo",
                    "totalCount": 42,
                    "totalSize": 42
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "date": "foo",
                    "totalCount": 42,
                    "totalSize": 42
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "search": {
      "subpackageId": "search",
      "name": "search",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getSearchResults",
          "originalEndpointId": "search.getSearchResults",
          "name": "Get search results.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/search"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The search query.",
              "key": "query",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SearchResultDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Search results returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {
                "query": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "name": "foo",
                    "type": "Asset",
                    "label": "foo"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "name": "foo",
                    "type": "Asset",
                    "label": "foo"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "schemas": {
      "subpackageId": "schemas",
      "name": "schemas",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postField",
          "originalEndpointId": "schemas.postField",
          "name": "Add a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AddFieldDto"
                }
              },
              "description": "The field object that needs to be added to the schema."
            },
            "description": "The field object that needs to be added to the schema."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 201,
            "description": "Schema field created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "properties": {
                  "isRequired": true,
                  "isRequiredOnPublish": true,
                  "isHalfWidth": true,
                  "fieldType": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "properties": {
                    "isRequired": true,
                    "isRequiredOnPublish": true,
                    "isHalfWidth": true,
                    "fieldType": "foo"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postNestedField",
          "originalEndpointId": "schemas.postNestedField",
          "name": "Add a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AddFieldDto"
                }
              },
              "description": "The field object that needs to be added to the schema."
            },
            "description": "The field object that needs to be added to the schema."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 201,
            "description": "Schema field created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "properties": {
                  "isRequired": true,
                  "isRequiredOnPublish": true,
                  "isHalfWidth": true,
                  "fieldType": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "properties": {
                    "isRequired": true,
                    "isRequiredOnPublish": true,
                    "isHalfWidth": true,
                    "fieldType": "foo"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putSchemaUIFields",
          "originalEndpointId": "schemas.putSchemaUIFields",
          "name": "Configure UI fields.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/ui"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ConfigureUIFieldsDto"
                }
              },
              "description": "The request that contains the field names."
            },
            "description": "The request that contains the field names."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema UI fields defined."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putSchemaFieldOrdering",
          "originalEndpointId": "schemas.putSchemaFieldOrdering",
          "name": "Reorder all fields.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/ordering"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ReorderFieldsDto"
                }
              },
              "description": "The request that contains the field ids."
            },
            "description": "The request that contains the field ids."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema fields reordered."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "fieldIds": [
                  42
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "fieldIds": [
                    42
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putNestedFieldOrdering",
          "originalEndpointId": "schemas.putNestedFieldOrdering",
          "name": "Reorder all nested fields.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/ordering"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ReorderFieldsDto"
                }
              },
              "description": "The request that contains the field ids."
            },
            "description": "The request that contains the field ids."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema fields reordered."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "fieldIds": [
                  42
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "fieldIds": [
                    42
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putField",
          "originalEndpointId": "schemas.putField",
          "name": "Update a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the field to update.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateFieldDto"
                }
              },
              "description": "The field object that needs to be added to the schema."
            },
            "description": "The field object that needs to be added to the schema."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "properties": {
                  "isRequired": true,
                  "isRequiredOnPublish": true,
                  "isHalfWidth": true,
                  "fieldType": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "isRequired": true,
                    "isRequiredOnPublish": true,
                    "isHalfWidth": true,
                    "fieldType": "foo"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteField",
          "originalEndpointId": "schemas.deleteField",
          "name": "Delete a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the field to disable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field deleted."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putNestedField",
          "originalEndpointId": "schemas.putNestedField",
          "name": "Update a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              {
                "description": "The ID of the field to update.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateFieldDto"
                }
              },
              "description": "The field object that needs to be added to the schema."
            },
            "description": "The field object that needs to be added to the schema."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42,
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "properties": {
                  "isRequired": true,
                  "isRequiredOnPublish": true,
                  "isHalfWidth": true,
                  "fieldType": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "properties": {
                    "isRequired": true,
                    "isRequiredOnPublish": true,
                    "isHalfWidth": true,
                    "fieldType": "foo"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteNestedField",
          "originalEndpointId": "schemas.deleteNestedField",
          "name": "Delete a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              {
                "description": "The ID of the field to disable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field deleted."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42,
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A locked field cannot be updated or deleted.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "lockField",
          "originalEndpointId": "schemas.lockField",
          "name": "Lock a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the field to lock.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/lock"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field shown."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A locked field cannot be edited or deleted.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "lockNestedField",
          "originalEndpointId": "schemas.lockNestedField",
          "name": "Lock a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              {
                "description": "The ID of the field to lock.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/lock"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field hidden."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42,
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "hideField",
          "originalEndpointId": "schemas.hideField",
          "name": "Hide a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the field to hide.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/hide"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field hidden."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "hideNestedField",
          "originalEndpointId": "schemas.hideNestedField",
          "name": "Hide a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              {
                "description": "The ID of the field to hide.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/hide"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field hidden."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42,
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "showField",
          "originalEndpointId": "schemas.showField",
          "name": "Show a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the field to show.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/show"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field shown."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A hidden field is not part of the API response, but can still be edited in the portal.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "showNestedField",
          "originalEndpointId": "schemas.showNestedField",
          "name": "Show a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              {
                "description": "The ID of the field to show.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/show"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field shown."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42,
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "enableField",
          "originalEndpointId": "schemas.enableField",
          "name": "Enable a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the field to enable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/enable"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field enabled."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "enableNestedField",
          "originalEndpointId": "schemas.enableNestedField",
          "name": "Enable a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              {
                "description": "The ID of the field to enable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/enable"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field enabled."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42,
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "disableField",
          "originalEndpointId": "schemas.disableField",
          "name": "Disable a schema field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the field to disable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/disable"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field disabled."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A disabled field cannot not be edited in the squidex portal anymore, but will be part of the API response.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "disableNestedField",
          "originalEndpointId": "schemas.disableNestedField",
          "name": "Disable a nested field.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The parent field id.",
                "key": "parentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              },
              {
                "description": "The ID of the field to disable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "parentId"
              },
              {
                "type": "literal",
                "value": "/nested/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/disable"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema field disabled."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "parentId": 42,
                "id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getSchemas",
          "originalEndpointId": "schemas.getSchemas",
          "name": "Get schemas.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemasDto"
              }
            },
            "statusCode": 200,
            "description": "Schemas returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "name": "foo",
                      "type": "Default",
                      "category": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "contentsSidebarUrl": "foo",
                        "contentSidebarUrl": "foo",
                        "contentEditorUrl": "foo",
                        "validateOnPublish": true,
                        "tags": [
                          "foo"
                        ]
                      },
                      "isSingleton": true,
                      "isPublished": true,
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "scripts": {
                        "query": "foo",
                        "queryPre": "foo",
                        "create": "foo",
                        "update": "foo",
                        "delete": "foo",
                        "change": "foo"
                      },
                      "previewUrls": {},
                      "fieldsInLists": [
                        "foo"
                      ],
                      "fieldsInReferences": [
                        "foo"
                      ],
                      "fieldRules": [
                        {
                          "action": "Disable",
                          "field": "foo",
                          "condition": "foo"
                        }
                      ],
                      "fields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "name": "foo",
                      "type": "Default",
                      "category": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "contentsSidebarUrl": "foo",
                        "contentSidebarUrl": "foo",
                        "contentEditorUrl": "foo",
                        "validateOnPublish": true,
                        "tags": [
                          "foo"
                        ]
                      },
                      "isSingleton": true,
                      "isPublished": true,
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "scripts": {
                        "query": "foo",
                        "queryPre": "foo",
                        "create": "foo",
                        "update": "foo",
                        "delete": "foo",
                        "change": "foo"
                      },
                      "previewUrls": {},
                      "fieldsInLists": [
                        "foo"
                      ],
                      "fieldsInReferences": [
                        "foo"
                      ],
                      "fieldRules": [
                        {
                          "action": "Disable",
                          "field": "foo",
                          "condition": "foo"
                        }
                      ],
                      "fields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postSchema",
          "originalEndpointId": "schemas.postSchema",
          "name": "Create a new schema.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateSchemaDto"
                }
              },
              "description": "The schema object that needs to be added to the app."
            },
            "description": "The schema object that needs to be added to the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 201,
            "description": "Schema created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "isPublished": true,
                "name": "foo",
                "type": "Default",
                "isSingleton": true
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "isPublished": true,
                  "name": "foo",
                  "type": "Default",
                  "isSingleton": true
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getSchema",
          "originalEndpointId": "schemas.getSchema",
          "name": "Get a schema by name.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema to retrieve.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema found."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putSchema",
          "originalEndpointId": "schemas.putSchema",
          "name": "Update a schema.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateSchemaDto"
                }
              },
              "description": "The schema object that needs to updated."
            },
            "description": "The schema object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "validateOnPublish": true
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "validateOnPublish": true
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteSchema",
          "originalEndpointId": "schemas.deleteSchema",
          "name": "Delete a schema.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema to delete.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putSchemaSync",
          "originalEndpointId": "schemas.putSchemaSync",
          "name": "Synchronize a schema.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/sync"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "SynchronizeSchemaDto"
                }
              },
              "description": "The schema object that needs to updated."
            },
            "description": "The schema object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "isPublished": true,
                "noFieldDeletion": true,
                "noFieldRecreation": true
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "isPublished": true,
                  "noFieldDeletion": true,
                  "noFieldRecreation": true
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putCategory",
          "originalEndpointId": "schemas.putCategory",
          "name": "Update a schema category.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/category"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChangeCategoryDto"
                }
              },
              "description": "The schema object that needs to updated."
            },
            "description": "The schema object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putPreviewUrls",
          "originalEndpointId": "schemas.putPreviewUrls",
          "name": "Update the preview urls.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/preview-urls"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ConfigurePreviewUrlsDto"
                }
              },
              "description": "The preview urls for the schema."
            },
            "description": "The preview urls for the schema."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putScripts",
          "originalEndpointId": "schemas.putScripts",
          "name": "Update the scripts.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/scripts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "SchemaScriptsDto"
                }
              },
              "description": "The schema scripts object that needs to updated."
            },
            "description": "The schema scripts object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putRules",
          "originalEndpointId": "schemas.putRules",
          "name": "Update the rules.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/rules"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ConfigureFieldRulesDto"
                }
              },
              "description": "The schema rules object that needs to updated."
            },
            "description": "The schema rules object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "publishSchema",
          "originalEndpointId": "schemas.publishSchema",
          "name": "Publish a schema.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema to publish.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/publish"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema published."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "unpublishSchema",
          "originalEndpointId": "schemas.unpublishSchema",
          "name": "Unpublish a schema.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema to unpublish.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/schemas/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/unpublish"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SchemaDto"
              }
            },
            "statusCode": 200,
            "description": "Schema unpublished."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "name": "foo",
                  "type": "Default",
                  "category": "foo",
                  "properties": {
                    "label": "foo",
                    "hints": "foo",
                    "contentsSidebarUrl": "foo",
                    "contentSidebarUrl": "foo",
                    "contentEditorUrl": "foo",
                    "validateOnPublish": true,
                    "tags": [
                      "foo"
                    ]
                  },
                  "isSingleton": true,
                  "isPublished": true,
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "scripts": {
                    "query": "foo",
                    "queryPre": "foo",
                    "create": "foo",
                    "update": "foo",
                    "delete": "foo",
                    "change": "foo"
                  },
                  "previewUrls": {},
                  "fieldsInLists": [
                    "foo"
                  ],
                  "fieldsInReferences": [
                    "foo"
                  ],
                  "fieldRules": [
                    {
                      "action": "Disable",
                      "field": "foo",
                      "condition": "foo"
                    }
                  ],
                  "fields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "rules": {
      "subpackageId": "rules",
      "name": "rules",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getActions",
          "originalEndpointId": "rules.getActions",
          "name": "Get supported rule actions.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/rules/actions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "RuleElementDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Rule actions returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/rules/actions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getRules",
          "originalEndpointId": "rules.getRules",
          "name": "Get rules.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RulesDto"
              }
            },
            "statusCode": 200,
            "description": "Rules returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "isEnabled": true,
                      "name": "foo",
                      "trigger": {
                        "triggerType": "foo"
                      },
                      "action": {
                        "actionType": "foo"
                      },
                      "numSucceeded": 42,
                      "numFailed": 42,
                      "lastExecuted": "foo"
                    }
                  ],
                  "runningRuleId": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "isEnabled": true,
                      "name": "foo",
                      "trigger": {
                        "triggerType": "foo"
                      },
                      "action": {
                        "actionType": "foo"
                      },
                      "numSucceeded": 42,
                      "numFailed": 42,
                      "lastExecuted": "foo"
                    }
                  ],
                  "runningRuleId": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postRule",
          "originalEndpointId": "rules.postRule",
          "name": "Create a new rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateRuleDto"
                }
              },
              "description": "The rule object that needs to be added to the app."
            },
            "description": "The rule object that needs to be added to the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RuleDto"
              }
            },
            "statusCode": 201,
            "description": "Rule created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "trigger": {
                  "triggerType": "foo"
                },
                "action": {
                  "actionType": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteRuleRun",
          "originalEndpointId": "rules.deleteRuleRun",
          "name": "Cancel the current run.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/run"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putRule",
          "originalEndpointId": "rules.putRule",
          "name": "Update a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to update.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateRuleDto"
                }
              },
              "description": "The rule object that needs to be added to the app."
            },
            "description": "The rule object that needs to be added to the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RuleDto"
              }
            },
            "statusCode": 200,
            "description": "Rule updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteRule",
          "originalEndpointId": "rules.deleteRule",
          "name": "Delete a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to delete.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "enableRule",
          "originalEndpointId": "rules.enableRule",
          "name": "Enable a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to enable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/enable"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RuleDto"
              }
            },
            "statusCode": 200,
            "description": "Rule enabled."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "disableRule",
          "originalEndpointId": "rules.disableRule",
          "name": "Disable a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to disable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/disable"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RuleDto"
              }
            },
            "statusCode": 200,
            "description": "Rule disabled."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "isEnabled": true,
                  "name": "foo",
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  },
                  "numSucceeded": 42,
                  "numFailed": 42,
                  "lastExecuted": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "triggerRule",
          "originalEndpointId": "rules.triggerRule",
          "name": "Trigger a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to disable.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/trigger"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putRuleRun",
          "originalEndpointId": "rules.putRuleRun",
          "name": "Run a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to run.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Runs the rule from snapeshots if possible.",
              "key": "fromSnapshots",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "fromSnapshots": false
              },
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteRuleEvents",
          "originalEndpointId": "rules.deleteRuleEvents",
          "name": "Cancels all rule events.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to cancel.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/events"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "simulatePOST",
          "originalEndpointId": "rules.simulatePOST",
          "name": "Simulate a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/simulate"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateRuleDto"
                }
              },
              "description": "The rule to simulate."
            },
            "description": "The rule to simulate."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SimulatedRuleEventsDto"
              }
            },
            "statusCode": 200,
            "description": "Rule simulated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "trigger": {
                  "triggerType": "foo"
                },
                "action": {
                  "actionType": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "trigger": {
                    "triggerType": "foo"
                  },
                  "action": {
                    "actionType": "foo"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "eventId": "foo",
                      "uniqueId": "foo",
                      "eventName": "foo",
                      "event": null,
                      "enrichedEvent": null,
                      "actionName": "foo",
                      "actionData": "foo",
                      "error": "foo",
                      "skipReasons": [
                        "None"
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "eventId": "foo",
                      "uniqueId": "foo",
                      "eventName": "foo",
                      "event": null,
                      "enrichedEvent": null,
                      "actionName": "foo",
                      "actionData": "foo",
                      "error": "foo",
                      "skipReasons": [
                        "None"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "simulateGET",
          "originalEndpointId": "rules.simulateGET",
          "name": "Simulate a rule.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the rule to simulate.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/simulate"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SimulatedRuleEventsDto"
              }
            },
            "statusCode": 200,
            "description": "Rule simulated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "eventId": "foo",
                      "uniqueId": "foo",
                      "eventName": "foo",
                      "event": null,
                      "enrichedEvent": null,
                      "actionName": "foo",
                      "actionData": "foo",
                      "error": "foo",
                      "skipReasons": [
                        "None"
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "eventId": "foo",
                      "uniqueId": "foo",
                      "eventName": "foo",
                      "event": null,
                      "enrichedEvent": null,
                      "actionName": "foo",
                      "actionData": "foo",
                      "error": "foo",
                      "skipReasons": [
                        "None"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getEvents",
          "originalEndpointId": "rules.getEvents",
          "name": "Get rule events.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/events"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional rule id to filter to events.",
              "key": "ruleId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The number of events to skip.",
              "key": "skip",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 0
                  }
                }
              }
            },
            {
              "description": "The number of events to take.",
              "key": "take",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 20
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RuleEventsDto"
              }
            },
            "statusCode": 200,
            "description": "Rule events returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {
                "ruleId": "foo",
                "skip": 0,
                "take": 20
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "created": "foo",
                      "description": "foo",
                      "eventName": "foo",
                      "lastDump": "foo",
                      "numCalls": 42,
                      "nextAttempt": "foo",
                      "result": "Pending",
                      "jobResult": "Pending"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "created": "foo",
                      "description": "foo",
                      "eventName": "foo",
                      "lastDump": "foo",
                      "numCalls": 42,
                      "nextAttempt": "foo",
                      "result": "Pending",
                      "jobResult": "Pending"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteEvents",
          "originalEndpointId": "rules.deleteEvents",
          "name": "Cancels all events.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/events"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putEvent",
          "originalEndpointId": "rules.putEvent",
          "name": "Retry the event immediately.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The event to enqueue.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/events/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteEvent",
          "originalEndpointId": "rules.deleteEvent",
          "name": "Cancels an event.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The event to enqueue.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/rules/events/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getEventTypes",
          "originalEndpointId": "rules.getEventTypes",
          "name": "Provide a list of all event types that are used in rules.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/rules/eventtypes"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            "statusCode": 200,
            "description": "Rule events returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/rules/eventtypes",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  "foo"
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  "foo"
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getEventSchema",
          "originalEndpointId": "rules.getEventSchema",
          "name": "Provide the json schema for the event with the specified name.",
          "path": {
            "pathParameters": [
              {
                "description": "The type name of the event.",
                "key": "type",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/rules/eventtypes/"
              },
              {
                "type": "pathParameter",
                "value": "type"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/rules/eventtypes/",
              "pathParameters": {
                "type": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "plans": {
      "subpackageId": "plans",
      "name": "plans",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getPlans",
          "originalEndpointId": "plans.getPlans",
          "name": "Get app plan information.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/plans"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PlansDto"
              }
            },
            "statusCode": 200,
            "description": "App plan information returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "plans": [
                    {
                      "id": "foo",
                      "name": "foo",
                      "costs": "foo",
                      "confirmText": "foo",
                      "yearlyConfirmText": "foo",
                      "yearlyCosts": "foo",
                      "yearlyId": "foo",
                      "maxApiBytes": 42,
                      "maxApiCalls": 42,
                      "maxAssetSize": 42,
                      "maxContributors": 42
                    }
                  ],
                  "currentPlanId": "foo",
                  "planOwner": "foo",
                  "portalLink": "foo",
                  "referral": {
                    "code": "foo",
                    "earned": "foo",
                    "condition": "foo"
                  },
                  "locked": "None"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "plans": [
                    {
                      "id": "foo",
                      "name": "foo",
                      "costs": "foo",
                      "confirmText": "foo",
                      "yearlyConfirmText": "foo",
                      "yearlyCosts": "foo",
                      "yearlyId": "foo",
                      "maxApiBytes": 42,
                      "maxApiCalls": 42,
                      "maxAssetSize": 42,
                      "maxContributors": 42
                    }
                  ],
                  "currentPlanId": "foo",
                  "planOwner": "foo",
                  "portalLink": "foo",
                  "referral": {
                    "code": "foo",
                    "earned": "foo",
                    "condition": "foo"
                  },
                  "locked": "None"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putPlan",
          "originalEndpointId": "plans.putPlan",
          "name": "Change the app plan.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/plan"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChangePlanDto"
                }
              },
              "description": "Plan object that needs to be changed."
            },
            "description": "Plan object that needs to be changed."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PlanChangedDto"
              }
            },
            "statusCode": 200,
            "description": "Plan changed or redirect url returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "planId": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "planId": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "redirectUri": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "redirectUri": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTeamPlans",
          "originalEndpointId": "plans.getTeamPlans",
          "name": "Get team plan information.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/plans"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PlansDto"
              }
            },
            "statusCode": 200,
            "description": "Team plan information returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "plans": [
                    {
                      "id": "foo",
                      "name": "foo",
                      "costs": "foo",
                      "confirmText": "foo",
                      "yearlyConfirmText": "foo",
                      "yearlyCosts": "foo",
                      "yearlyId": "foo",
                      "maxApiBytes": 42,
                      "maxApiCalls": 42,
                      "maxAssetSize": 42,
                      "maxContributors": 42
                    }
                  ],
                  "currentPlanId": "foo",
                  "planOwner": "foo",
                  "portalLink": "foo",
                  "referral": {
                    "code": "foo",
                    "earned": "foo",
                    "condition": "foo"
                  },
                  "locked": "None"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "plans": [
                    {
                      "id": "foo",
                      "name": "foo",
                      "costs": "foo",
                      "confirmText": "foo",
                      "yearlyConfirmText": "foo",
                      "yearlyCosts": "foo",
                      "yearlyId": "foo",
                      "maxApiBytes": 42,
                      "maxApiCalls": 42,
                      "maxAssetSize": 42,
                      "maxContributors": 42
                    }
                  ],
                  "currentPlanId": "foo",
                  "planOwner": "foo",
                  "portalLink": "foo",
                  "referral": {
                    "code": "foo",
                    "earned": "foo",
                    "condition": "foo"
                  },
                  "locked": "None"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putTeamPlan",
          "originalEndpointId": "plans.putTeamPlan",
          "name": "Change the team plan.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/plan"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChangePlanDto"
                }
              },
              "description": "Plan object that needs to be changed."
            },
            "description": "Plan object that needs to be changed."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PlanChangedDto"
              }
            },
            "statusCode": 200,
            "description": "Plan changed or redirect url returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "planId": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "planId": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "redirectUri": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "redirectUri": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "ping": {
      "subpackageId": "ping",
      "name": "ping",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getInfo",
          "originalEndpointId": "ping.getInfo",
          "name": "Get API information.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/info"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ExposedValues"
              }
            },
            "statusCode": 200,
            "description": "Infos returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/info",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Can be used to test, if the Squidex API is alive and responding.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getPing",
          "originalEndpointId": "ping.getPing",
          "name": "Get ping status of the API.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/ping"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/ping",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Can be used to test, if the Squidex API is alive and responding.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAppPing",
          "originalEndpointId": "ping.getAppPing",
          "name": "Get ping status.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/ping/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/ping/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "news": {
      "subpackageId": "news",
      "name": "news",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getNews",
          "originalEndpointId": "news.getNews",
          "name": "Get features since version.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/news/features"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The latest received version.",
              "key": "version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 0
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "FeaturesDto"
              }
            },
            "statusCode": 200,
            "description": "Latest features returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/news/features",
              "pathParameters": {},
              "queryParameters": {
                "version": 0
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "features": [
                    {
                      "name": "foo",
                      "text": "foo"
                    }
                  ],
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "features": [
                    {
                      "name": "foo",
                      "text": "foo"
                    }
                  ],
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "languages": {
      "subpackageId": "languages",
      "name": "languages",
      "endpoints": [
        {
          "auth": true,
          "description": "Provide a list of supported language codes, following the ISO2Code standard.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getLanguages",
          "originalEndpointId": "languages.getLanguages",
          "name": "Get supported languages.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/languages"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "LanguageDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Supported language codes returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/languages",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "iso2Code": "foo",
                    "englishName": "foo",
                    "nativeName": "foo"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "iso2Code": "foo",
                    "englishName": "foo",
                    "nativeName": "foo"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "history": {
      "subpackageId": "history",
      "name": "history",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAppHistory",
          "originalEndpointId": "history.getAppHistory",
          "name": "Get historical events.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/history"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The name of the channel.",
              "key": "channel",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "HistoryEventDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Events returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {
                "channel": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "message": "foo",
                    "eventType": "foo",
                    "actor": "foo",
                    "eventId": "foo",
                    "created": "foo",
                    "version": 42
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "message": "foo",
                    "eventType": "foo",
                    "actor": "foo",
                    "eventId": "foo",
                    "created": "foo",
                    "version": 42
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTeamHistory",
          "originalEndpointId": "history.getTeamHistory",
          "name": "Get historical events for a team.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/history"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The name of the channel.",
              "key": "channel",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "HistoryEventDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Events returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {
                "channel": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "message": "foo",
                    "eventType": "foo",
                    "actor": "foo",
                    "eventId": "foo",
                    "created": "foo",
                    "version": 42
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "message": "foo",
                    "eventType": "foo",
                    "actor": "foo",
                    "eventId": "foo",
                    "created": "foo",
                    "version": 42
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "eventConsumers": {
      "subpackageId": "eventConsumers",
      "name": "eventConsumers",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getEventConsumers",
          "originalEndpointId": "eventConsumers.getEventConsumers",
          "name": "Get event consumers.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/event-consumers"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EventConsumersDto"
              }
            },
            "statusCode": 200,
            "description": "Event consumers returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/event-consumers",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "isStopped": true,
                      "isResetting": true,
                      "count": 42,
                      "name": "foo",
                      "error": "foo",
                      "position": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "isStopped": true,
                      "isResetting": true,
                      "count": 42,
                      "name": "foo",
                      "error": "foo",
                      "position": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "startEventConsumer",
          "originalEndpointId": "eventConsumers.startEventConsumer",
          "name": "Start an event consumer.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the event consumer.",
                "key": "consumerName",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/event-consumers/"
              },
              {
                "type": "pathParameter",
                "value": "consumerName"
              },
              {
                "type": "literal",
                "value": "/start"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EventConsumerDto"
              }
            },
            "statusCode": 200,
            "description": "Event consumer started asynchronously."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/event-consumers/",
              "pathParameters": {
                "consumerName": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "isStopped": true,
                  "isResetting": true,
                  "count": 42,
                  "name": "foo",
                  "error": "foo",
                  "position": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "isStopped": true,
                  "isResetting": true,
                  "count": 42,
                  "name": "foo",
                  "error": "foo",
                  "position": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "stopEventConsumer",
          "originalEndpointId": "eventConsumers.stopEventConsumer",
          "name": "Stop an event consumer.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the event consumer.",
                "key": "consumerName",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/event-consumers/"
              },
              {
                "type": "pathParameter",
                "value": "consumerName"
              },
              {
                "type": "literal",
                "value": "/stop"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EventConsumerDto"
              }
            },
            "statusCode": 200,
            "description": "Event consumer stopped asynchronously."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/event-consumers/",
              "pathParameters": {
                "consumerName": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "isStopped": true,
                  "isResetting": true,
                  "count": 42,
                  "name": "foo",
                  "error": "foo",
                  "position": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "isStopped": true,
                  "isResetting": true,
                  "count": 42,
                  "name": "foo",
                  "error": "foo",
                  "position": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "resetEventConsumer",
          "originalEndpointId": "eventConsumers.resetEventConsumer",
          "name": "Reset an event consumer.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the event consumer.",
                "key": "consumerName",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/event-consumers/"
              },
              {
                "type": "pathParameter",
                "value": "consumerName"
              },
              {
                "type": "literal",
                "value": "/reset"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EventConsumerDto"
              }
            },
            "statusCode": 200,
            "description": "Event consumer resetted asynchronously."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/event-consumers/",
              "pathParameters": {
                "consumerName": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "isStopped": true,
                  "isResetting": true,
                  "count": 42,
                  "name": "foo",
                  "error": "foo",
                  "position": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "isStopped": true,
                  "isResetting": true,
                  "count": 42,
                  "name": "foo",
                  "error": "foo",
                  "position": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "diagnostics": {
      "subpackageId": "diagnostics",
      "name": "diagnostics",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getDump",
          "originalEndpointId": "diagnostics.getDump",
          "name": "Creates a dump and writes it into storage..",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/diagnostics/dump"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/diagnostics/dump",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getGCDump",
          "originalEndpointId": "diagnostics.getGCDump",
          "name": "Creates a gc dump and writes it into storage.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/diagnostics/gcdump"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/diagnostics/gcdump",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "contents": {
      "subpackageId": "contents",
      "name": "contents",
      "endpoints": [
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getContents",
          "originalEndpointId": "contents.getContents",
          "name": "Queries contents.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional ids of the content to fetch.",
              "key": "ids",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The optional json query.",
              "key": "q",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Contents returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {
                "ids": "foo",
                "q": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postContent",
          "originalEndpointId": "contents.postContent",
          "name": "Create a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The initial status.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The optional custom content id.",
              "key": "id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "True to automatically publish the content.",
              "key": "publish",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContentData"
                }
              },
              "description": "The full data for the content item."
            },
            "description": "The full data for the content item."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 201,
            "description": "Content created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {
                "status": "foo",
                "id": "foo",
                "publish": true
              },
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getContentsPost",
          "originalEndpointId": "contents.getContentsPost",
          "name": "Queries contents.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/query"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "QueryDto"
                }
              },
              "description": "The required query object."
            },
            "description": "The required query object."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Contents returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getContent",
          "originalEndpointId": "contents.getContent",
          "name": "Get a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content to fetch.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional version.",
              "key": "version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": -2
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentDto"
              }
            },
            "statusCode": 200,
            "description": "Content returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "version": -2
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "data": null,
                  "referenceData": {},
                  "created": "foo",
                  "lastModified": "foo",
                  "status": "foo",
                  "newStatus": "foo",
                  "statusColor": "foo",
                  "newStatusColor": "foo",
                  "editToken": "foo",
                  "scheduleJob": {
                    "id": "foo",
                    "status": "foo",
                    "dueTime": "foo",
                    "color": "foo",
                    "scheduledBy": "foo"
                  },
                  "schemaId": "foo",
                  "schemaName": "foo",
                  "schemaDisplayName": "foo",
                  "referenceFields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ],
                  "isDeleted": true,
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "data": null,
                  "referenceData": {},
                  "created": "foo",
                  "lastModified": "foo",
                  "status": "foo",
                  "newStatus": "foo",
                  "statusColor": "foo",
                  "newStatusColor": "foo",
                  "editToken": "foo",
                  "scheduleJob": {
                    "id": "foo",
                    "status": "foo",
                    "dueTime": "foo",
                    "color": "foo",
                    "scheduledBy": "foo"
                  },
                  "schemaId": "foo",
                  "schemaName": "foo",
                  "schemaDisplayName": "foo",
                  "referenceFields": [
                    {
                      "_links": {},
                      "fieldId": 42,
                      "name": "foo",
                      "isHidden": true,
                      "isLocked": true,
                      "isDisabled": true,
                      "partitioning": "foo",
                      "properties": {
                        "label": "foo",
                        "hints": "foo",
                        "placeholder": "foo",
                        "isRequired": true,
                        "isRequiredOnPublish": true,
                        "isHalfWidth": true,
                        "editorUrl": "foo",
                        "tags": [
                          "foo"
                        ],
                        "fieldType": "foo"
                      },
                      "nested": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          }
                        }
                      ]
                    }
                  ],
                  "isDeleted": true,
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postUpsertContent",
          "originalEndpointId": "contents.postUpsertContent",
          "name": "Upsert a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to update.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The initial status.",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Makes the update as patch.",
              "key": "patch",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to automatically publish the content.",
              "key": "publish",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContentData"
                }
              },
              "description": "The full data for the content item."
            },
            "description": "The full data for the content item."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content created or updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "status": "foo",
                "patch": true,
                "publish": true
              },
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putContent",
          "originalEndpointId": "contents.putContent",
          "name": "Update a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to update.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContentData"
                }
              },
              "description": "The full data for the content item."
            },
            "description": "The full data for the content item."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create an generated documentation for your app at /api/content/{appName}/docs.",
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteContent",
          "originalEndpointId": "contents.deleteContent",
          "name": "Delete a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to delete.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "True to check referrers of this content.",
              "key": "checkReferrers",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to delete the content permanently.",
              "key": "permanent",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "checkReferrers": true,
                "permanent": true
              },
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "PATCH",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "patchContent",
          "originalEndpointId": "contents.patchContent",
          "name": "Patchs a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to patch.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContentData"
                }
              },
              "description": "The patch for the content item."
            },
            "description": "The patch for the content item."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content patched."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getContentValidity",
          "originalEndpointId": "contents.getContentValidity",
          "name": "Get a content item validity.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content to fetch.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/validity"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getReferences",
          "originalEndpointId": "contents.getReferences",
          "name": "Get all references of a content.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content to fetch.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/references"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional json query.",
              "key": "q",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Contents returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "q": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getReferencing",
          "originalEndpointId": "contents.getReferencing",
          "name": "Get a referencing contents of a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content to fetch.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/referencing"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional json query.",
              "key": "q",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "q": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "availability": "Deprecated",
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getContentVersion",
          "originalEndpointId": "contents.getContentVersion",
          "name": "Get a content by version.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content to fetch.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The version fo the content to fetch.",
                "key": "version",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "version"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            },
            "statusCode": 200,
            "description": "Content version returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo",
                "version": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "availability": "Deprecated",
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postContents",
          "originalEndpointId": "contents.postContents",
          "name": "Import content items.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/import"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ImportContentsDto"
                }
              },
              "description": "The import request."
            },
            "description": "The import request."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "BulkResultDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Contents created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "datas": [
                  {}
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "datas": [
                    {}
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "error": {
                      "message": "foo",
                      "errorCode": "foo",
                      "traceId": "foo",
                      "type": "foo",
                      "details": [
                        "foo"
                      ],
                      "statusCode": 42
                    },
                    "jobIndex": 42,
                    "id": "foo",
                    "contentId": "foo"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "error": {
                      "message": "foo",
                      "errorCode": "foo",
                      "traceId": "foo",
                      "type": "foo",
                      "details": [
                        "foo"
                      ],
                      "statusCode": 42
                    },
                    "jobIndex": 42,
                    "id": "foo",
                    "contentId": "foo"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "bulkUpdateContents",
          "originalEndpointId": "contents.bulkUpdateContents",
          "name": "Bulk update content items.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/bulk"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "BulkUpdateContentsDto"
                }
              },
              "description": "The bulk update request."
            },
            "description": "The bulk update request."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "BulkResultDto"
                }
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "jobs": [
                  {}
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "jobs": [
                    {}
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "error": {
                      "message": "foo",
                      "errorCode": "foo",
                      "traceId": "foo",
                      "type": "foo",
                      "details": [
                        "foo"
                      ],
                      "statusCode": 42
                    },
                    "jobIndex": 42,
                    "id": "foo",
                    "contentId": "foo"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "error": {
                      "message": "foo",
                      "errorCode": "foo",
                      "traceId": "foo",
                      "type": "foo",
                      "details": [
                        "foo"
                      ],
                      "statusCode": 42
                    },
                    "jobIndex": 42,
                    "id": "foo",
                    "contentId": "foo"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putContentStatus",
          "originalEndpointId": "contents.putContentStatus",
          "name": "Change status of a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to change.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChangeStatusDto"
                }
              },
              "description": "The status request."
            },
            "description": "The status request."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content status changed."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "status": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "status": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteContentStatus",
          "originalEndpointId": "contents.deleteContentStatus",
          "name": "Cancel status change of a content item.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to cancel.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/status"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content status change cancelled."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "createDraft",
          "originalEndpointId": "contents.createDraft",
          "name": "Create a new draft version.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to create the draft for.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/draft"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content draft created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can read the generated documentation for your app at /api/content/{appName}/docs.",
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteVersion",
          "originalEndpointId": "contents.deleteVersion",
          "name": "Delete the draft version.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the schema.",
                "key": "schema",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the content item to delete the draft from.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/content/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "schema"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/draft"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContentsDto"
              }
            },
            "statusCode": 200,
            "description": "Content draft deleted."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/content/",
              "pathParameters": {
                "app": "foo",
                "schema": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "data": null,
                      "referenceData": {},
                      "created": "foo",
                      "lastModified": "foo",
                      "status": "foo",
                      "newStatus": "foo",
                      "statusColor": "foo",
                      "newStatusColor": "foo",
                      "editToken": "foo",
                      "scheduleJob": {
                        "id": "foo",
                        "status": "foo",
                        "dueTime": "foo",
                        "color": "foo",
                        "scheduledBy": "foo"
                      },
                      "schemaId": "foo",
                      "schemaName": "foo",
                      "schemaDisplayName": "foo",
                      "referenceFields": [
                        {
                          "_links": {},
                          "fieldId": 42,
                          "name": "foo",
                          "isHidden": true,
                          "isLocked": true,
                          "isDisabled": true,
                          "partitioning": "foo",
                          "properties": {
                            "label": "foo",
                            "hints": "foo",
                            "placeholder": "foo",
                            "isRequired": true,
                            "isRequiredOnPublish": true,
                            "isHalfWidth": true,
                            "editorUrl": "foo",
                            "tags": [
                              "foo"
                            ],
                            "fieldType": "foo"
                          },
                          "nested": [
                            {
                              "_links": {},
                              "fieldId": 42,
                              "name": "foo",
                              "isHidden": true,
                              "isLocked": true,
                              "isDisabled": true,
                              "properties": {
                                "label": "foo",
                                "hints": "foo",
                                "placeholder": "foo",
                                "isRequired": true,
                                "isRequiredOnPublish": true,
                                "isHalfWidth": true,
                                "editorUrl": "foo",
                                "tags": [
                                  null
                                ],
                                "fieldType": "foo"
                              }
                            }
                          ]
                        }
                      ],
                      "isDeleted": true,
                      "version": 42
                    }
                  ],
                  "statuses": [
                    {
                      "status": "foo",
                      "color": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "comments": {
      "subpackageId": "comments",
      "name": "comments",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getWatchingUsers",
          "originalEndpointId": "comments.getWatchingUsers",
          "name": "Get all watching users..",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The path to the resource.",
                "key": "resource",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/watching/"
              },
              {
                "type": "pathParameter",
                "value": "resource"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            "statusCode": 200,
            "description": "Watching users returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "resource": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  "foo"
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  "foo"
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "When passing in a version you can retrieve all updates since then.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getComments",
          "originalEndpointId": "comments.getComments",
          "name": "Get all comments.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the comments.",
                "key": "commentsId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentsId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The current version.",
              "key": "version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": -2
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CommentsDto"
              }
            },
            "statusCode": 200,
            "description": "Comments returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "commentsId": "foo"
              },
              "queryParameters": {
                "version": -2
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "createdComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "updatedComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "deletedComments": [
                    "foo"
                  ],
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "createdComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "updatedComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "deletedComments": [
                    "foo"
                  ],
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postComment",
          "originalEndpointId": "comments.postComment",
          "name": "Create a new comment.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the comments.",
                "key": "commentsId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentsId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpsertCommentDto"
                }
              },
              "description": "The comment object that needs to created."
            },
            "description": "The comment object that needs to created."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CommentDto"
              }
            },
            "statusCode": 201,
            "description": "Comment created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "commentsId": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "text": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "text": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "foo",
                  "time": "foo",
                  "user": "foo",
                  "text": "foo",
                  "url": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "foo",
                  "time": "foo",
                  "user": "foo",
                  "text": "foo",
                  "url": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putComment",
          "originalEndpointId": "comments.putComment",
          "name": "Update a comment.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the comments.",
                "key": "commentsId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the comment.",
                "key": "commentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentsId"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "commentId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpsertCommentDto"
                }
              },
              "description": "The comment object that needs to updated."
            },
            "description": "The comment object that needs to updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "commentsId": "foo",
                "commentId": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "text": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "text": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteComment",
          "originalEndpointId": "comments.deleteComment",
          "name": "Delete a comment.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the comments.",
                "key": "commentsId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the comment.",
                "key": "commentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/comments/"
              },
              {
                "type": "pathParameter",
                "value": "commentsId"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "commentId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "commentsId": "foo",
                "commentId": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "notifications": {
      "subpackageId": "notifications",
      "name": "notifications",
      "endpoints": [
        {
          "auth": true,
          "description": "When passing in a version you can retrieve all updates since then.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getNotifications",
          "originalEndpointId": "notifications.getNotifications",
          "name": "Get all notifications.",
          "path": {
            "pathParameters": [
              {
                "description": "The user id.",
                "key": "userId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/users/"
              },
              {
                "type": "pathParameter",
                "value": "userId"
              },
              {
                "type": "literal",
                "value": "/notifications"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The current version.",
              "key": "version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": -2
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CommentsDto"
              }
            },
            "statusCode": 200,
            "description": "All comments returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/users/",
              "pathParameters": {
                "userId": "foo"
              },
              "queryParameters": {
                "version": -2
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "createdComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "updatedComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "deletedComments": [
                    "foo"
                  ],
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "createdComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "updatedComments": [
                    {
                      "id": "foo",
                      "time": "foo",
                      "user": "foo",
                      "text": "foo",
                      "url": "foo"
                    }
                  ],
                  "deletedComments": [
                    "foo"
                  ],
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteComment",
          "originalEndpointId": "notifications.deleteComment",
          "name": "Delete a notification.",
          "path": {
            "pathParameters": [
              {
                "description": "The user id.",
                "key": "userId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the comment.",
                "key": "commentId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/users/"
              },
              {
                "type": "pathParameter",
                "value": "userId"
              },
              {
                "type": "literal",
                "value": "/notifications/"
              },
              {
                "type": "pathParameter",
                "value": "commentId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/users/",
              "pathParameters": {
                "userId": "foo",
                "commentId": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "backups": {
      "subpackageId": "backups",
      "name": "backups",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getBackupContent",
          "originalEndpointId": "backups.getBackupContent",
          "name": "Get the backup content.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the backup.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/backups/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            },
            "statusCode": 200,
            "description": "Backup found and content returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteBackup",
          "originalEndpointId": "backups.deleteBackup",
          "name": "Delete a backup.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the backup to delete.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/backups/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getBackupContentV2",
          "originalEndpointId": "backups.getBackupContentV2",
          "name": "Get the backup content.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the backup.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/backups/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The ID of the app.",
              "key": "appId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The name of the app.",
              "key": "app",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            },
            "statusCode": 200,
            "description": "Backup found and content returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/backups/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "appId": "foo",
                "app": ""
              },
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getBackups",
          "originalEndpointId": "backups.getBackups",
          "name": "Get all backup jobs.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/backups"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "BackupJobsDto"
              }
            },
            "statusCode": 200,
            "description": "Backups returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "started": "foo",
                      "stopped": "foo",
                      "handledEvents": 42,
                      "handledAssets": 42,
                      "status": "Created"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "started": "foo",
                      "stopped": "foo",
                      "handledEvents": 42,
                      "handledAssets": 42,
                      "status": "Created"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postBackup",
          "originalEndpointId": "backups.postBackup",
          "name": "Start a new backup.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/backups"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getRestoreJob",
          "originalEndpointId": "backups.getRestoreJob",
          "name": "Get current restore status.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/restore"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RestoreJobDto"
              }
            },
            "statusCode": 200,
            "description": "Status returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/restore",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "url": "foo",
                  "log": [
                    "foo"
                  ],
                  "started": "foo",
                  "stopped": "foo",
                  "status": "Created"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "url": "foo",
                  "log": [
                    "foo"
                  ],
                  "started": "foo",
                  "stopped": "foo",
                  "status": "Created"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postRestoreJob",
          "originalEndpointId": "backups.postRestoreJob",
          "name": "Restore a backup.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/restore"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "RestoreRequestDto"
                }
              },
              "description": "The backup to restore."
            },
            "description": "The backup to restore."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/restore",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "url": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "url": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "assets": {
      "subpackageId": "assets",
      "name": "assets",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAssetContentBySlug",
          "originalEndpointId": "assets.getAssetContentBySlug",
          "name": "Get the asset content.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The id or slug of the asset.",
                "key": "idOrSlug",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Optional suffix that can be used to seo-optimize the link to the image Has not effect.",
                "key": "more",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/assets/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "idOrSlug"
              },
              {
                "type": "literal",
                "value": "/"
              },
              {
                "type": "pathParameter",
                "value": "more"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional version of the asset.",
              "key": "version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "description": "The cache duration in seconds.",
              "key": "cache",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "description": "Set it to 0 to prevent download.",
              "key": "download",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The target width of the asset, if it is an image.",
              "key": "width",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The target height of the asset, if it is an image.",
              "key": "height",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Optional image quality, it is is an jpeg image.",
              "key": "quality",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The resize mode when the width and height is defined.",
              "key": "mode",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ResizeMode"
                }
              }
            },
            {
              "description": "Optional background color.",
              "key": "bg",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Override the y focus point.",
              "key": "focusX",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Override the x focus point.",
              "key": "focusY",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "True to ignore the asset focus point if any.",
              "key": "nofocus",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to use auto format.",
              "key": "auto",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "key": "force",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "key": "format",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ImageFormat"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            },
            "statusCode": 200,
            "description": "Asset found and content or (resized) image returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/assets/",
              "pathParameters": {
                "app": "foo",
                "idOrSlug": "foo",
                "more": "foo"
              },
              "queryParameters": {
                "version": 42,
                "cache": 42,
                "download": 42,
                "width": 42,
                "height": 42,
                "quality": 42,
                "mode": "Crop",
                "bg": "foo",
                "focusX": 42,
                "focusY": 42,
                "nofocus": true,
                "auto": true,
                "force": true,
                "format": "AVIF"
              },
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "availability": "Deprecated",
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAssetContent",
          "originalEndpointId": "assets.getAssetContent",
          "name": "Get the asset content.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the asset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/assets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional version of the asset.",
              "key": "version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "description": "The cache duration in seconds.",
              "key": "cache",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "description": "Set it to 0 to prevent download.",
              "key": "download",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The target width of the asset, if it is an image.",
              "key": "width",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The target height of the asset, if it is an image.",
              "key": "height",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Optional image quality, it is is an jpeg image.",
              "key": "quality",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The resize mode when the width and height is defined.",
              "key": "mode",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ResizeMode"
                }
              }
            },
            {
              "description": "Optional background color.",
              "key": "bg",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Override the y focus point.",
              "key": "focusX",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Override the x focus point.",
              "key": "focusY",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "True to ignore the asset focus point if any.",
              "key": "nofocus",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to use auto format.",
              "key": "auto",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "key": "force",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to force a new resize even if it already stored.",
              "key": "format",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ImageFormat"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            },
            "statusCode": 200,
            "description": "Asset found and content or (resized) image returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/assets/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "version": 42,
                "cache": 42,
                "download": 42,
                "width": 42,
                "height": 42,
                "quality": 42,
                "mode": "Crop",
                "bg": "foo",
                "focusX": 42,
                "focusY": 42,
                "nofocus": true,
                "auto": true,
                "force": true,
                "format": "AVIF"
              },
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get all asset folders for the app.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAssetFolders",
          "originalEndpointId": "assets.getAssetFolders",
          "name": "Get asset folders.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/folders"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "key": "parentId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The scope of the query.",
              "key": "scope",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AssetFolderScope"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetFoldersDto"
              }
            },
            "statusCode": 200,
            "description": "Asset folders returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {
                "parentId": "foo",
                "scope": "PathAndItems"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "folderName": "foo",
                      "version": 42
                    }
                  ],
                  "path": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "folderName": "foo",
                      "version": 42
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "folderName": "foo",
                      "version": 42
                    }
                  ],
                  "path": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "folderName": "foo",
                      "version": 42
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postAssetFolder",
          "originalEndpointId": "assets.postAssetFolder",
          "name": "Create an asset folder.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/folders"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateAssetFolderDto"
                }
              },
              "description": "The asset folder object that needs to be added to the App."
            },
            "description": "The asset folder object that needs to be added to the App."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetFolderDto"
              }
            },
            "statusCode": 201,
            "description": "Asset folder created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "folderName": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "folderName": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "folderName": "foo",
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "folderName": "foo",
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putAssetFolder",
          "originalEndpointId": "assets.putAssetFolder",
          "name": "Update an asset folder.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset folder.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/folders/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "RenameAssetFolderDto"
                }
              },
              "description": "The asset folder object that needs to updated."
            },
            "description": "The asset folder object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetFolderDto"
              }
            },
            "statusCode": 200,
            "description": "Asset folder updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "folderName": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "folderName": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "folderName": "foo",
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "folderName": "foo",
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteAssetFolder",
          "originalEndpointId": "assets.deleteAssetFolder",
          "name": "Delete an asset folder.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset folder to delete.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/folders/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putAssetFolderParent",
          "originalEndpointId": "assets.putAssetFolderParent",
          "name": "Move an asset folder.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset folder.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/folders/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/parent"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "MoveAssetFolderDto"
                }
              },
              "description": "The asset folder object that needs to updated."
            },
            "description": "The asset folder object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetFolderDto"
              }
            },
            "statusCode": 200,
            "description": "Asset folder moved."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "folderName": "foo",
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "folderName": "foo",
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get all tags for assets.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTags",
          "originalEndpointId": "assets.getTags",
          "name": "Get assets tags.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            "statusCode": 200,
            "description": "Assets tags returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putTag",
          "originalEndpointId": "assets.putTag",
          "name": "Rename an asset tag.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The tag to return.",
                "key": "name",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/tags/"
              },
              {
                "type": "pathParameter",
                "value": "name"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "RenameTagDto"
                }
              },
              "description": "The required request object."
            },
            "description": "The required request object."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            "statusCode": 200,
            "description": "Asset tag renamed and new tags returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "name": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "tagName": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "tagName": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get all assets for the app.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAssets",
          "originalEndpointId": "assets.getAssets",
          "name": "Get assets.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "key": "parentId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The optional asset ids.",
              "key": "ids",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The optional json query.",
              "key": "q",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Optional number of items to take.",
              "key": "$top",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Optional number of items to skip.",
              "key": "$skip",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Optional OData order definition.",
              "key": "$orderby",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Optional OData filter.",
              "key": "$filter",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetsDto"
              }
            },
            "statusCode": 200,
            "description": "Assets returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {
                "parentId": "foo",
                "ids": "foo",
                "q": "foo",
                "$top": 42,
                "$skip": 42,
                "$orderby": "foo",
                "$filter": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "fileName": "foo",
                      "fileHash": "foo",
                      "isProtected": true,
                      "slug": "foo",
                      "mimeType": "foo",
                      "fileType": "foo",
                      "metadataText": "foo",
                      "editToken": "foo",
                      "metadata": {},
                      "tags": [
                        "foo"
                      ],
                      "fileSize": 42,
                      "fileVersion": 42,
                      "type": "Unknown",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "_meta": {
                        "isDuplicate": "foo"
                      },
                      "isImage": true,
                      "pixelWidth": 42,
                      "pixelHeight": 42
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "fileName": "foo",
                      "fileHash": "foo",
                      "isProtected": true,
                      "slug": "foo",
                      "mimeType": "foo",
                      "fileType": "foo",
                      "metadataText": "foo",
                      "editToken": "foo",
                      "metadata": {},
                      "tags": [
                        "foo"
                      ],
                      "fileSize": 42,
                      "fileVersion": 42,
                      "type": "Unknown",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "_meta": {
                        "isDuplicate": "foo"
                      },
                      "isImage": true,
                      "pixelWidth": 42,
                      "pixelHeight": 42
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postAsset",
          "originalEndpointId": "assets.postAsset",
          "name": "Upload a new asset.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "key": "parentId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The optional custom asset id.",
              "key": "id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "True to duplicate the asset, event if the file has been uploaded.",
              "key": "duplicate",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "type": {
              "type": "fileUpload",
              "value": {
                "name": "assets_postAsset_Request",
                "properties": [
                  {
                    "type": "file",
                    "value": {
                      "type": "file",
                      "key": "file",
                      "isOptional": true,
                      "contentType": "multipart/form-data"
                    }
                  }
                ]
              },
              "contentType": "multipart/form-data"
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetDto"
              }
            },
            "statusCode": 201,
            "description": "Asset created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {
                "parentId": "foo",
                "id": "foo",
                "duplicate": true
              },
              "headers": {},
              "requestBodyV3": {
                "type": "form",
                "value": {}
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get all assets for the app.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAssetsPost",
          "originalEndpointId": "assets.getAssetsPost",
          "name": "Get assets.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/query"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "QueryDto"
                }
              },
              "description": "The required query object."
            },
            "description": "The required query object."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetsDto"
              }
            },
            "statusCode": 200,
            "description": "Assets returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "fileName": "foo",
                      "fileHash": "foo",
                      "isProtected": true,
                      "slug": "foo",
                      "mimeType": "foo",
                      "fileType": "foo",
                      "metadataText": "foo",
                      "editToken": "foo",
                      "metadata": {},
                      "tags": [
                        "foo"
                      ],
                      "fileSize": 42,
                      "fileVersion": 42,
                      "type": "Unknown",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "_meta": {
                        "isDuplicate": "foo"
                      },
                      "isImage": true,
                      "pixelWidth": 42,
                      "pixelHeight": 42
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "total": 42,
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "parentId": "foo",
                      "fileName": "foo",
                      "fileHash": "foo",
                      "isProtected": true,
                      "slug": "foo",
                      "mimeType": "foo",
                      "fileType": "foo",
                      "metadataText": "foo",
                      "editToken": "foo",
                      "metadata": {},
                      "tags": [
                        "foo"
                      ],
                      "fileSize": 42,
                      "fileVersion": 42,
                      "type": "Unknown",
                      "createdBy": "foo",
                      "lastModifiedBy": "foo",
                      "created": "foo",
                      "lastModified": "foo",
                      "version": 42,
                      "_meta": {
                        "isDuplicate": "foo"
                      },
                      "isImage": true,
                      "pixelWidth": 42,
                      "pixelHeight": 42
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAsset",
          "originalEndpointId": "assets.getAsset",
          "name": "Get an asset by id.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset to retrieve.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetDto"
              }
            },
            "statusCode": 200,
            "description": "Asset found."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can only upload one file at a time. The mime type of the file is not calculated by Squidex and is required correctly.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postUpsertAsset",
          "originalEndpointId": "assets.postUpsertAsset",
          "name": "Upsert an asset.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The optional custom asset id.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The optional parent folder id.",
              "key": "parentId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "True to duplicate the asset, event if the file has been uploaded.",
              "key": "duplicate",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "type": {
              "type": "fileUpload",
              "value": {
                "name": "assets_postUpsertAsset_Request",
                "properties": [
                  {
                    "type": "file",
                    "value": {
                      "type": "file",
                      "key": "file",
                      "isOptional": true,
                      "contentType": "multipart/form-data"
                    }
                  }
                ]
              },
              "contentType": "multipart/form-data"
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetDto"
              }
            },
            "statusCode": 200,
            "description": "Asset created or updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "parentId": "foo",
                "duplicate": true
              },
              "headers": {},
              "requestBodyV3": {
                "type": "form",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putAsset",
          "originalEndpointId": "assets.putAsset",
          "name": "Update an asset.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AnnotateAssetDto"
                }
              },
              "description": "The asset object that needs to updated."
            },
            "description": "The asset object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetDto"
              }
            },
            "statusCode": 200,
            "description": "Asset updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteAsset",
          "originalEndpointId": "assets.deleteAsset",
          "name": "Delete an asset.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset to delete.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "True to check referrers of this asset.",
              "key": "checkReferrers",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "True to delete the asset permanently.",
              "key": "permanent",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {
                "checkReferrers": true,
                "permanent": true
              },
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "bulkUpdateAssets",
          "originalEndpointId": "assets.bulkUpdateAssets",
          "name": "Bulk update assets.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/bulk"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "BulkUpdateAssetsDto"
                }
              },
              "description": "The bulk update request."
            },
            "description": "The bulk update request."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "BulkResultDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Assets created, update or delete."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "error": {
                      "message": "foo",
                      "errorCode": "foo",
                      "traceId": "foo",
                      "type": "foo",
                      "details": [
                        "foo"
                      ],
                      "statusCode": 42
                    },
                    "jobIndex": 42,
                    "id": "foo",
                    "contentId": "foo"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "error": {
                      "message": "foo",
                      "errorCode": "foo",
                      "traceId": "foo",
                      "type": "foo",
                      "details": [
                        "foo"
                      ],
                      "statusCode": 42
                    },
                    "jobIndex": 42,
                    "id": "foo",
                    "contentId": "foo"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Use multipart request to upload an asset.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putAssetContent",
          "originalEndpointId": "assets.putAssetContent",
          "name": "Replace asset content.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/content"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "fileUpload",
              "value": {
                "name": "assets_putAssetContent_Request",
                "properties": [
                  {
                    "type": "file",
                    "value": {
                      "type": "file",
                      "key": "file",
                      "isOptional": true,
                      "contentType": "multipart/form-data"
                    }
                  }
                ]
              },
              "contentType": "multipart/form-data"
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetDto"
              }
            },
            "statusCode": 200,
            "description": "Asset updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBodyV3": {
                "type": "form",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putAssetParent",
          "originalEndpointId": "assets.putAssetParent",
          "name": "Moves the asset.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the asset.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/parent"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "MoveAssetDto"
                }
              },
              "description": "The asset object that needs to updated."
            },
            "description": "The asset object that needs to updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetDto"
              }
            },
            "statusCode": 200,
            "description": "Asset moved."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "parentId": "foo",
                  "fileName": "foo",
                  "fileHash": "foo",
                  "isProtected": true,
                  "slug": "foo",
                  "mimeType": "foo",
                  "fileType": "foo",
                  "metadataText": "foo",
                  "editToken": "foo",
                  "metadata": {},
                  "tags": [
                    "foo"
                  ],
                  "fileSize": 42,
                  "fileVersion": 42,
                  "type": "Unknown",
                  "createdBy": "foo",
                  "lastModifiedBy": "foo",
                  "created": "foo",
                  "lastModified": "foo",
                  "version": 42,
                  "_meta": {
                    "isDuplicate": "foo"
                  },
                  "isImage": true,
                  "pixelWidth": 42,
                  "pixelHeight": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "apps": {
      "subpackageId": "apps",
      "name": "apps",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getAssetScripts",
          "originalEndpointId": "apps.getAssetScripts",
          "name": "Get the app asset scripts.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to get the asset scripts for.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/scripts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetScriptsDto"
              }
            },
            "statusCode": 200,
            "description": "Asset scripts returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "query": "foo",
                  "queryPre": "foo",
                  "create": "foo",
                  "update": "foo",
                  "annotate": "foo",
                  "move": "foo",
                  "delete": "foo",
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "query": "foo",
                  "queryPre": "foo",
                  "create": "foo",
                  "update": "foo",
                  "annotate": "foo",
                  "move": "foo",
                  "delete": "foo",
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putAssetScripts",
          "originalEndpointId": "apps.putAssetScripts",
          "name": "Update the app asset scripts.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to update.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/assets/scripts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateAssetScriptsDto"
                }
              },
              "description": "The values to update."
            },
            "description": "The values to update."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AssetScriptsDto"
              }
            },
            "statusCode": 200,
            "description": "Asset scripts updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "query": "foo",
                  "queryPre": "foo",
                  "create": "foo",
                  "update": "foo",
                  "annotate": "foo",
                  "move": "foo",
                  "delete": "foo",
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "query": "foo",
                  "queryPre": "foo",
                  "create": "foo",
                  "update": "foo",
                  "annotate": "foo",
                  "move": "foo",
                  "delete": "foo",
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Gets all configured clients for the app with the specified name.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getClients",
          "originalEndpointId": "apps.getClients",
          "name": "Get app clients.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/clients"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ClientsDto"
              }
            },
            "statusCode": 200,
            "description": "Clients returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a new client for the app with the specified name.\nThe client secret is auto generated on the server and returned. The client does not expire, the access token is valid for 30 days.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postClient",
          "originalEndpointId": "apps.postClient",
          "name": "Create a new app client.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/clients"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateClientDto"
                }
              },
              "description": "Client object that needs to be added to the app."
            },
            "description": "Client object that needs to be added to the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ClientsDto"
              }
            },
            "statusCode": 201,
            "description": "Client created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Only the display name can be changed, create a new client if necessary.",
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putClient",
          "originalEndpointId": "apps.putClient",
          "name": "Updates an app client.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the client that must be updated.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/clients/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateClientDto"
                }
              },
              "description": "Client object that needs to be updated."
            },
            "description": "Client object that needs to be updated."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ClientsDto"
              }
            },
            "statusCode": 200,
            "description": "Client updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "The application that uses this client credentials cannot access the API after it has been revoked.",
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteClient",
          "originalEndpointId": "apps.deleteClient",
          "name": "Revoke an app client.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the client that must be deleted.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/clients/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ClientsDto"
              }
            },
            "statusCode": 200,
            "description": "Client deleted."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "secret": "foo",
                      "name": "foo",
                      "role": "foo",
                      "apiCallsLimit": 42,
                      "apiTrafficLimit": 42,
                      "allowAnonymous": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getContributors",
          "originalEndpointId": "apps.getContributors",
          "name": "Get app contributors.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/contributors"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 200,
            "description": "Contributors returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postContributor",
          "originalEndpointId": "apps.postContributor",
          "name": "Assign contributor to app.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/contributors"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AssignContributorDto"
                }
              },
              "description": "Contributor object that needs to be added to the app."
            },
            "description": "Contributor object that needs to be added to the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 201,
            "description": "Contributor assigned to app."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "contributorId": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "contributorId": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteMyself",
          "originalEndpointId": "apps.deleteMyself",
          "name": "Remove yourself.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/contributors/me"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 200,
            "description": "Contributor removed."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteContributor",
          "originalEndpointId": "apps.deleteContributor",
          "name": "Remove contributor.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the contributor.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/contributors/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContributorsDto"
              }
            },
            "statusCode": 200,
            "description": "Contributor removed."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "contributorId": "foo",
                      "contributorName": "foo",
                      "contributorEmail": "foo",
                      "role": "foo"
                    }
                  ],
                  "maxContributors": 42,
                  "_meta": {
                    "isInvited": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getImage",
          "originalEndpointId": "apps.getImage",
          "name": "Get the app image.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/image"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "fileDownload"
            },
            "statusCode": 200,
            "description": "App image found and content or (resized) image returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "uploadImage",
          "originalEndpointId": "apps.uploadImage",
          "name": "Upload the app image.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to update.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/image"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "fileUpload",
              "value": {
                "name": "apps_uploadImage_Request",
                "properties": [
                  {
                    "type": "file",
                    "value": {
                      "type": "file",
                      "key": "file",
                      "isOptional": true,
                      "contentType": "multipart/form-data"
                    }
                  }
                ]
              },
              "contentType": "multipart/form-data"
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppDto"
              }
            },
            "statusCode": 200,
            "description": "App image uploaded."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBodyV3": {
                "type": "form",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteImage",
          "originalEndpointId": "apps.deleteImage",
          "name": "Remove the app image.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to update.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/image"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppDto"
              }
            },
            "statusCode": 200,
            "description": "App image removed."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getLanguages",
          "originalEndpointId": "apps.getLanguages",
          "name": "Get app languages.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/languages"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppLanguagesDto"
              }
            },
            "statusCode": 200,
            "description": "Languages returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postLanguage",
          "originalEndpointId": "apps.postLanguage",
          "name": "Attaches an app language.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/languages"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AddLanguageDto"
                }
              },
              "description": "The language to add to the app."
            },
            "description": "The language to add to the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppLanguagesDto"
              }
            },
            "statusCode": 201,
            "description": "Language created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "language": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "language": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putLanguage",
          "originalEndpointId": "apps.putLanguage",
          "name": "Updates an app language.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The language to update.",
                "key": "language",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/languages/"
              },
              {
                "type": "pathParameter",
                "value": "language"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateLanguageDto"
                }
              },
              "description": "The language object."
            },
            "description": "The language object."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppLanguagesDto"
              }
            },
            "statusCode": 200,
            "description": "Language updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "language": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteLanguage",
          "originalEndpointId": "apps.deleteLanguage",
          "name": "Deletes an app language.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The language to delete from the app.",
                "key": "language",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/languages/"
              },
              {
                "type": "pathParameter",
                "value": "language"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppLanguagesDto"
              }
            },
            "statusCode": 200,
            "description": "Language deleted."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "language": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "iso2Code": "foo",
                      "englishName": "foo",
                      "fallback": [
                        "foo"
                      ],
                      "isMaster": true,
                      "isOptional": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getRoles",
          "originalEndpointId": "apps.getRoles",
          "name": "Get app roles.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/roles"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RolesDto"
              }
            },
            "statusCode": 200,
            "description": "Roles returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postRole",
          "originalEndpointId": "apps.postRole",
          "name": "Add role to app.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/roles"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AddRoleDto"
                }
              },
              "description": "Role object that needs to be added to the app."
            },
            "description": "Role object that needs to be added to the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RolesDto"
              }
            },
            "statusCode": 201,
            "description": "Role created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getPermissions",
          "originalEndpointId": "apps.getPermissions",
          "name": "Get app permissions.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/roles/permissions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            "statusCode": 200,
            "description": "App permissions returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  "foo"
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  "foo"
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putRole",
          "originalEndpointId": "apps.putRole",
          "name": "Update an app role.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the role to be updated.",
                "key": "roleName",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/roles/"
              },
              {
                "type": "pathParameter",
                "value": "roleName"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateRoleDto"
                }
              },
              "description": "Role to be updated for the app."
            },
            "description": "Role to be updated for the app."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RolesDto"
              }
            },
            "statusCode": 200,
            "description": "Role updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "roleName": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "permissions": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteRole",
          "originalEndpointId": "apps.deleteRole",
          "name": "Remove role from app.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The name of the role.",
                "key": "roleName",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/roles/"
              },
              {
                "type": "pathParameter",
                "value": "roleName"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RolesDto"
              }
            },
            "statusCode": 200,
            "description": "Role deleted."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "roleName": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "name": "foo",
                      "numClients": 42,
                      "numContributors": 42,
                      "isDefaultRole": true,
                      "permissions": [
                        "foo"
                      ],
                      "properties": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).\nYou will retrieve all apps, where you are assigned as a contributor.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getApps",
          "originalEndpointId": "apps.getApps",
          "name": "Get your apps.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "AppDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Apps returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "name": "foo",
                    "label": "foo",
                    "description": "foo",
                    "version": 42,
                    "created": "foo",
                    "lastModified": "foo",
                    "teamId": "foo",
                    "permissions": [
                      "foo"
                    ],
                    "canAccessApi": true,
                    "canAccessContent": true,
                    "roleName": "foo",
                    "roleProperties": {}
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "name": "foo",
                    "label": "foo",
                    "description": "foo",
                    "version": 42,
                    "created": "foo",
                    "lastModified": "foo",
                    "teamId": "foo",
                    "permissions": [
                      "foo"
                    ],
                    "canAccessApi": true,
                    "canAccessContent": true,
                    "roleName": "foo",
                    "roleProperties": {}
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can only create an app when you are authenticated as a user (OpenID implicit flow).\nYou will be assigned as owner of the new app automatically.",
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postApp",
          "originalEndpointId": "apps.postApp",
          "name": "Create a new app.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateAppDto"
                }
              },
              "description": "The app object that needs to be added to Squidex."
            },
            "description": "The app object that needs to be added to Squidex."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppDto"
              }
            },
            "statusCode": 201,
            "description": "App created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can only retrieve the list of apps when you are authenticated as a user (OpenID implicit flow).\nYou will retrieve all apps, where you are assigned as a contributor.",
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getTeamApps",
          "originalEndpointId": "apps.getTeamApps",
          "name": "Get team apps.",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the team.",
                "key": "team",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/teams/"
              },
              {
                "type": "pathParameter",
                "value": "team"
              },
              {
                "type": "literal",
                "value": "/apps"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "AppDto"
                }
              }
            },
            "statusCode": 200,
            "description": "Apps returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/teams/",
              "pathParameters": {
                "team": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "name": "foo",
                    "label": "foo",
                    "description": "foo",
                    "version": 42,
                    "created": "foo",
                    "lastModified": "foo",
                    "teamId": "foo",
                    "permissions": [
                      "foo"
                    ],
                    "canAccessApi": true,
                    "canAccessContent": true,
                    "roleName": "foo",
                    "roleProperties": {}
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "_links": {},
                    "id": "foo",
                    "name": "foo",
                    "label": "foo",
                    "description": "foo",
                    "version": 42,
                    "created": "foo",
                    "lastModified": "foo",
                    "teamId": "foo",
                    "permissions": [
                      "foo"
                    ],
                    "canAccessApi": true,
                    "canAccessContent": true,
                    "roleName": "foo",
                    "roleProperties": {}
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getApp",
          "originalEndpointId": "apps.getApp",
          "name": "Get an app by name.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppDto"
              }
            },
            "statusCode": 200,
            "description": "Apps returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putApp",
          "originalEndpointId": "apps.putApp",
          "name": "Update the app.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to update.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateAppDto"
                }
              },
              "description": "The values to update."
            },
            "description": "The values to update."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppDto"
              }
            },
            "statusCode": 200,
            "description": "App updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteApp",
          "originalEndpointId": "apps.deleteApp",
          "name": "Delete the app.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to delete.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putAppTeam",
          "originalEndpointId": "apps.putAppTeam",
          "name": "Transfer the app.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to update.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/team"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TransferToTeamDto"
                }
              },
              "description": "The team information."
            },
            "description": "The team information."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppDto"
              }
            },
            "statusCode": 200,
            "description": "App transferred."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "id": "foo",
                  "name": "foo",
                  "label": "foo",
                  "description": "foo",
                  "version": 42,
                  "created": "foo",
                  "lastModified": "foo",
                  "teamId": "foo",
                  "permissions": [
                    "foo"
                  ],
                  "canAccessApi": true,
                  "canAccessContent": true,
                  "roleName": "foo",
                  "roleProperties": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getSettings",
          "originalEndpointId": "apps.getSettings",
          "name": "Get the app settings.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to get the settings for.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/settings"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppSettingsDto"
              }
            },
            "statusCode": 200,
            "description": "App settings returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "patterns": [
                    {
                      "name": "foo",
                      "regex": "foo",
                      "message": "foo"
                    }
                  ],
                  "editors": [
                    {
                      "name": "foo",
                      "url": "foo"
                    }
                  ],
                  "hideScheduler": true,
                  "hideDateTimeModeButton": true,
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "patterns": [
                    {
                      "name": "foo",
                      "regex": "foo",
                      "message": "foo"
                    }
                  ],
                  "editors": [
                    {
                      "name": "foo",
                      "url": "foo"
                    }
                  ],
                  "hideScheduler": true,
                  "hideDateTimeModeButton": true,
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putSettings",
          "originalEndpointId": "apps.putSettings",
          "name": "Update the app settings.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app to update.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/settings"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateAppSettingsDto"
                }
              },
              "description": "The values to update."
            },
            "description": "The values to update."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AppSettingsDto"
              }
            },
            "statusCode": 200,
            "description": "App updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "patterns": [
                  {
                    "name": "foo",
                    "regex": "foo"
                  }
                ],
                "editors": [
                  {
                    "name": "foo",
                    "url": "foo"
                  }
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "patterns": [
                    {
                      "name": "foo",
                      "regex": "foo"
                    }
                  ],
                  "editors": [
                    {
                      "name": "foo",
                      "url": "foo"
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "patterns": [
                    {
                      "name": "foo",
                      "regex": "foo",
                      "message": "foo"
                    }
                  ],
                  "editors": [
                    {
                      "name": "foo",
                      "url": "foo"
                    }
                  ],
                  "hideScheduler": true,
                  "hideDateTimeModeButton": true,
                  "version": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "patterns": [
                    {
                      "name": "foo",
                      "regex": "foo",
                      "message": "foo"
                    }
                  ],
                  "editors": [
                    {
                      "name": "foo",
                      "url": "foo"
                    }
                  ],
                  "hideScheduler": true,
                  "hideDateTimeModeButton": true,
                  "version": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "getWorkflows",
          "originalEndpointId": "apps.getWorkflows",
          "name": "Get app workflow.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/workflows"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WorkflowsDto"
              }
            },
            "statusCode": 200,
            "description": "Workflows returned."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "postWorkflow",
          "originalEndpointId": "apps.postWorkflow",
          "name": "Create a workflow.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/workflows"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "AddWorkflowDto"
                }
              },
              "description": "The new workflow."
            },
            "description": "The new workflow."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WorkflowsDto"
              }
            },
            "statusCode": 200,
            "description": "Workflow created."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "putWorkflow",
          "originalEndpointId": "apps.putWorkflow",
          "name": "Update a workflow.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the workflow to update.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/workflows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UpdateWorkflowDto"
                }
              },
              "description": "The new workflow."
            },
            "description": "The new workflow."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WorkflowsDto"
              }
            },
            "statusCode": 200,
            "description": "Workflow updated."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "steps": {},
                "initial": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "steps": {},
                  "initial": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "defaultEnvironment": "https://localhost:5001",
          "environments": [
            {
              "id": "https://localhost:5001",
              "baseUrl": "https://localhost:5001"
            }
          ],
          "id": "deleteWorkflow",
          "originalEndpointId": "apps.deleteWorkflow",
          "name": "Delete a workflow.",
          "path": {
            "pathParameters": [
              {
                "description": "The name of the app.",
                "key": "app",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The ID of the workflow to update.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/api/apps/"
              },
              {
                "type": "pathParameter",
                "value": "app"
              },
              {
                "type": "literal",
                "value": "/workflows/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WorkflowsDto"
              }
            },
            "statusCode": 200,
            "description": "Workflow deleted."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/api/apps/",
              "pathParameters": {
                "app": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "_links": {},
                  "items": [
                    {
                      "_links": {},
                      "id": "foo",
                      "name": "foo",
                      "steps": {},
                      "schemaIds": [
                        "foo"
                      ],
                      "initial": "foo"
                    }
                  ],
                  "errors": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "websockets": [],
    "types": [
      "ErrorDto",
      "UserProperty",
      "UISettingsDto",
      "UpdateSettingDto",
      "ContentsDto",
      "ContentDto",
      "ContentData",
      "ContentFieldData",
      "ScheduleJobDto",
      "FieldDto",
      "FieldPropertiesDto",
      "ArrayFieldPropertiesDto",
      "AssetsFieldPropertiesDto",
      "AssetPreviewMode",
      "LocalizedValueOfReadonlyListOfString",
      "AssetType",
      "BooleanFieldPropertiesDto",
      "LocalizedValueOfNullableBoolean",
      "BooleanFieldEditor",
      "ComponentFieldPropertiesDto",
      "ComponentsFieldPropertiesDto",
      "DateTimeFieldPropertiesDto",
      "LocalizedValueOfNullableInstant",
      "DateTimeFieldEditor",
      "DateTimeCalculatedDefaultValue",
      "GeolocationFieldPropertiesDto",
      "GeolocationFieldEditor",
      "JsonFieldPropertiesDto",
      "NumberFieldPropertiesDto",
      "LocalizedValueOfNullableDouble",
      "NumberFieldEditor",
      "ReferencesFieldPropertiesDto",
      "ReferencesFieldEditor",
      "StringFieldPropertiesDto",
      "LocalizedValueOfString",
      "StringContentType",
      "StringFieldEditor",
      "TagsFieldPropertiesDto",
      "TagsFieldEditor",
      "UIFieldPropertiesDto",
      "UIFieldEditor",
      "NestedFieldDto",
      "Resource",
      "ResourceLink",
      "StatusInfoDto",
      "AllContentsByPostDto",
      "BulkResultDto",
      "BulkUpdateContentsDto",
      "BulkUpdateContentsJobDto",
      "QueryJsonDto",
      "SortNode",
      "PropertyPath",
      "SortOrder",
      "BulkUpdateContentType",
      "UsersDto",
      "UserDto",
      "CreateUserDto",
      "UpdateUserDto",
      "ResourcesDto",
      "TranslationDto",
      "TranslationResultCode",
      "TranslateDto",
      "TemplatesDto",
      "TemplateDto",
      "TemplateDetailsDto",
      "ContributorsDto",
      "ContributorDto",
      "ContributorsMetadata",
      "AssignContributorDto",
      "TeamDto",
      "CreateTeamDto",
      "UpdateTeamDto",
      "LogDownloadDto",
      "CallsUsageDtoDto",
      "CallsUsagePerDateDto",
      "CurrentStorageDto",
      "StorageUsagePerDateDto",
      "SearchResultDto",
      "SearchResultType",
      "SchemaDto",
      "SchemaType",
      "SchemaPropertiesDto",
      "SchemaScriptsDto",
      "FieldRuleDto",
      "FieldRuleAction",
      "AddFieldDto",
      "ConfigureUIFieldsDto",
      "ReorderFieldsDto",
      "UpdateFieldDto",
      "SchemasDto",
      "CreateSchemaDto",
      "UpsertSchemaDto",
      "UpsertSchemaFieldDto",
      "UpsertSchemaNestedFieldDto",
      "UpdateSchemaDto",
      "SynchronizeSchemaDto",
      "ChangeCategoryDto",
      "ConfigurePreviewUrlsDto",
      "ConfigureFieldRulesDto",
      "RuleElementDto",
      "RuleElementPropertyDto",
      "RuleFieldEditor",
      "RulesDto",
      "RuleDto",
      "RuleTriggerDto",
      "AssetChangedRuleTriggerDto",
      "CommentRuleTriggerDto",
      "ContentChangedRuleTriggerDto",
      "SchemaCondition",
      "ManualRuleTriggerDto",
      "SchemaChangedRuleTriggerDto",
      "UsageRuleTriggerDto",
      "RuleActionDto",
      "AlgoliaRuleActionDto",
      "AzureQueueRuleActionDto",
      "CommentRuleActionDto",
      "CreateContentRuleActionDto",
      "DiscourseRuleActionDto",
      "ElasticSearchRuleActionDto",
      "EmailRuleActionDto",
      "FastlyRuleActionDto",
      "MediumRuleActionDto",
      "NotificationRuleActionDto",
      "OpenSearchRuleActionDto",
      "PrerenderRuleActionDto",
      "ScriptRuleActionDto",
      "SignalRRuleActionDto",
      "ActionTypeEnum",
      "SlackRuleActionDto",
      "TweetRuleActionDto",
      "TypesenseRuleActionDto",
      "WebhookRuleActionDto",
      "WebhookMethod",
      "CreateRuleDto",
      "UpdateRuleDto",
      "SimulatedRuleEventsDto",
      "SimulatedRuleEventDto",
      "SkipReason",
      "RuleEventsDto",
      "RuleEventDto",
      "RuleResult",
      "RuleJobResult",
      "PlansDto",
      "PlanDto",
      "ReferralInfo",
      "PlansLockedReason",
      "PlanChangedDto",
      "ChangePlanDto",
      "ExposedValues",
      "FeaturesDto",
      "FeatureDto",
      "LanguageDto",
      "HistoryEventDto",
      "EventConsumersDto",
      "EventConsumerDto",
      "QueryDto",
      "ImportContentsDto",
      "ChangeStatusDto",
      "CommentsDto",
      "CommentDto",
      "UpsertCommentDto",
      "BackupJobsDto",
      "BackupJobDto",
      "JobStatus",
      "RestoreJobDto",
      "RestoreRequestDto",
      "ResizeMode",
      "ImageFormat",
      "AssetFoldersDto",
      "AssetFolderDto",
      "AssetFolderScope",
      "CreateAssetFolderDto",
      "RenameAssetFolderDto",
      "MoveAssetFolderDto",
      "RenameTagDto",
      "AssetsDto",
      "AssetDto",
      "AssetMeta",
      "BulkUpdateAssetsDto",
      "BulkUpdateAssetsJobDto",
      "BulkUpdateAssetType",
      "AnnotateAssetDto",
      "MoveAssetDto",
      "AssetScriptsDto",
      "UpdateAssetScriptsDto",
      "ClientsDto",
      "ClientDto",
      "CreateClientDto",
      "UpdateClientDto",
      "AppLanguagesDto",
      "AppLanguageDto",
      "AddLanguageDto",
      "UpdateLanguageDto",
      "RolesDto",
      "RoleDto",
      "AddRoleDto",
      "UpdateRoleDto",
      "AppDto",
      "CreateAppDto",
      "UpdateAppDto",
      "TransferToTeamDto",
      "AppSettingsDto",
      "PatternDto",
      "EditorDto",
      "UpdateAppSettingsDto",
      "WorkflowsDto",
      "WorkflowDto",
      "WorkflowStepDto",
      "WorkflowTransitionDto",
      "AddWorkflowDto",
      "UpdateWorkflowDto"
    ],
    "subpackages": [
      "userManagement",
      "users",
      "translations",
      "templates",
      "teams",
      "statistics",
      "search",
      "schemas",
      "rules",
      "plans",
      "ping",
      "news",
      "languages",
      "history",
      "eventConsumers",
      "diagnostics",
      "contents",
      "comments",
      "notifications",
      "backups",
      "assets",
      "apps"
    ]
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}