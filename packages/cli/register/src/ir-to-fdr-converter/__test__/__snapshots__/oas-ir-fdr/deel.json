{
  "types": {
    "PaymentStatementInitiatedWebhook": {
      "name": "PaymentStatementInitiatedWebhook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "billing_invoices",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "invoices",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "AlternateEmailList": {
      "description": "List of alternate email addresses.",
      "name": "AlternateEmailList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "AlternateEmailItem"
          }
        }
      }
    },
    "AlternateEmailItem": {
      "name": "AlternateEmailItem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "email",
            "valueType": {
              "type": "id",
              "value": "EmailType"
            }
          },
          {
            "key": "isVerified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "ApiErrorContainer": {
      "name": "ApiErrorContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "request",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ApiErrorRequest"
              }
            }
          },
          {
            "key": "errors",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ApiError"
                }
              }
            }
          }
        ]
      }
    },
    "ApiErrorRequest": {
      "name": "ApiErrorRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The HTTP method of the failed request",
            "key": "method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The relative URL of the failed request",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status code of the response",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The request ID of the failed request",
            "key": "api_req_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A link to the official documentation for the requested endpoint resource",
            "key": "docs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The source handler which produced the returned error",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The code of the source handler which produced the returned error",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "ApiError": {
      "name": "ApiError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A description of the returned error",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The JSON path where input validation failed",
            "key": "path",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ContractSearchForm": {
      "description": "Search form should include parameters varied based on usage of cursor for pagination. NOTE: that all query parameters are based on strings",
      "name": "ContractSearchForm",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ContractSearchFormWithCursor",
            "type": {
              "type": "id",
              "value": "ContractSearchFormWithCursor"
            }
          },
          {
            "typeName": "ContractSearchFormWithoutCursor",
            "type": {
              "type": "id",
              "value": "ContractSearchFormWithoutCursor"
            }
          }
        ]
      }
    },
    "ContractSearchFormWithCursor": {
      "description": "This is a model to make it easier to understand and restrict search parameters",
      "name": "ContractSearchFormWithCursor",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Return next page of results after given cursor.",
            "key": "after_cursor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Return a page of results with given number of records.",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d{1,2}$",
                  "default": "10"
                }
              }
            }
          }
        ]
      }
    },
    "ContractSearchFormWithoutCursorTypes": {
      "name": "ContractSearchFormWithoutCursorTypes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ContractTypeEnum",
            "type": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          },
          {
            "typeName": "ContractTypeEnumList",
            "type": {
              "type": "id",
              "value": "ContractTypeEnumList"
            }
          }
        ]
      }
    },
    "ContractSearchFormWithoutCursorStatuses": {
      "name": "ContractSearchFormWithoutCursorStatuses",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ContractStatusEnumList",
            "type": {
              "type": "id",
              "value": "ContractStatusEnumList"
            }
          },
          {
            "typeName": "ContractStatusEnum",
            "type": {
              "type": "id",
              "value": "ContractStatusEnum"
            }
          }
        ]
      }
    },
    "ContractSearchFormWithoutCursorCountries": {
      "name": "ContractSearchFormWithoutCursorCountries",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "CountryCodeList",
            "type": {
              "type": "id",
              "value": "CountryCodeList"
            }
          },
          {
            "typeName": "CountryCode",
            "type": {
              "type": "id",
              "value": "CountryCode"
            }
          }
        ]
      }
    },
    "ContractSearchFormWithoutCursorCurrencies": {
      "name": "ContractSearchFormWithoutCursorCurrencies",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "CurrencyCodeList",
            "type": {
              "type": "id",
              "value": "CurrencyCodeList"
            }
          },
          {
            "typeName": "CurrencyCodeRequired",
            "type": {
              "type": "id",
              "value": "CurrencyCodeRequired"
            }
          }
        ]
      }
    },
    "ContractSearchFormWithoutCursor": {
      "description": "This is a model to make it easier to understand and restrict search parameters",
      "name": "ContractSearchFormWithoutCursor",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Return a page of results with given number of records.",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d{1,2}$",
                  "default": "10"
                }
              }
            }
          },
          {
            "key": "order_direction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SortDirEnum"
              }
            }
          },
          {
            "key": "types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractSearchFormWithoutCursorTypes"
              }
            }
          },
          {
            "key": "statuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractSearchFormWithoutCursorStatuses"
              }
            }
          },
          {
            "description": "Filter contracts for given team ID; NOTE: technically ALL query parameters are strings or array of strings",
            "key": "team_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d{1,9}$"
                }
              }
            }
          },
          {
            "description": "Filter contracts for given external ID",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "maxLength": 255
                }
              }
            }
          },
          {
            "key": "countries",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractSearchFormWithoutCursorCountries"
              }
            }
          },
          {
            "key": "currencies",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractSearchFormWithoutCursorCurrencies"
              }
            }
          },
          {
            "description": "Include a contract if by name or contractor name contains given search term.",
            "key": "search",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "sort_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractsSortByEnum"
              }
            }
          }
        ]
      }
    },
    "ContractListContainer": {
      "name": "ContractListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractList"
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "id",
              "value": "PageInfo"
            }
          }
        ]
      }
    },
    "ContractList": {
      "name": "ContractList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "BasicContract"
          }
        }
      }
    },
    "BasicContract": {
      "name": "BasicContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "ContractStatusEnum"
            }
          },
          {
            "key": "client",
            "valueType": {
              "type": "id",
              "value": "ClientOfBasicContract"
            }
          },
          {
            "key": "worker",
            "valueType": {
              "type": "id",
              "value": "WorkerOfBasicContract"
            }
          },
          {
            "key": "invitations",
            "valueType": {
              "type": "id",
              "value": "InvitationsOfBasicContract"
            }
          },
          {
            "key": "signatures",
            "valueType": {
              "type": "id",
              "value": "SignaturesOfBasicContract"
            }
          },
          {
            "key": "is_shielded",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "is_archived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "key": "termination_date",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "key": "notice_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NoticePeriod"
              }
            }
          },
          {
            "key": "who_reports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractWhoReportsEnum"
              }
            }
          },
          {
            "description": "A unique identifier for the object provided by an external system.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContractContainer": {
      "name": "ContractContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "Contract"
            }
          }
        ]
      }
    },
    "ContractContainer_pay_as_you_go_time_based": {
      "name": "ContractContainer_pay_as_you_go_time_based",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "Contract"
            }
          }
        ]
      }
    },
    "ContractContainer_payg_tasks": {
      "name": "ContractContainer_payg_tasks",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "Contract"
            }
          }
        ]
      }
    },
    "ContractContainer_payg_milestones": {
      "name": "ContractContainer_payg_milestones",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "Contract"
            }
          }
        ]
      }
    },
    "ContractContainer_ongoing_time_based": {
      "name": "ContractContainer_ongoing_time_based",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "Contract"
            }
          }
        ]
      }
    },
    "ResponseEstimateFirstPaymentContainer": {
      "name": "ResponseEstimateFirstPaymentContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ResponseEstimateFirstPayment"
            }
          }
        ]
      }
    },
    "ResponseEstimateFirstPayment": {
      "name": "ResponseEstimateFirstPayment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "pro_rata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ProRata"
              }
            }
          },
          {
            "key": "first_payment_dates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "FirstPaymentDate"
                }
              }
            }
          }
        ]
      }
    },
    "Contract": {
      "name": "Contract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "ContractStatusEnum"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "key": "job_title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "seniority",
            "valueType": {
              "type": "id",
              "value": "Seniority"
            }
          },
          {
            "key": "who_reports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractWhoReportsEnum"
              }
            }
          },
          {
            "key": "scope_of_work",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "key": "termination_date",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "key": "special_clause",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "is_archived",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "client",
            "valueType": {
              "type": "id",
              "value": "ClientOfContract"
            }
          },
          {
            "key": "worker",
            "valueType": {
              "type": "id",
              "value": "WorkerOfContract"
            }
          },
          {
            "key": "invitations",
            "valueType": {
              "type": "id",
              "value": "InvitationsOfBasicContract"
            }
          },
          {
            "key": "signatures",
            "valueType": {
              "type": "id",
              "value": "SignaturesOfContract"
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "id",
              "value": "CompensationDetailsOfContract"
            }
          },
          {
            "key": "employment_details",
            "valueType": {
              "type": "id",
              "value": "EmploymentDetailsOfContract"
            }
          },
          {
            "key": "notice_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NoticePeriod"
              }
            }
          },
          {
            "key": "custom_fields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ContractCustomField"
                }
              }
            }
          },
          {
            "description": "A unique identifier for the object provided by an external system.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ClientOfBasicContract": {
      "name": "ClientOfBasicContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TeamOfBasicContract"
              }
            }
          }
        ]
      }
    },
    "ClientOfContract": {
      "name": "ClientOfContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "id",
              "value": "EmailType"
            }
          },
          {
            "key": "team",
            "valueType": {
              "type": "id",
              "value": "TeamOfContract"
            }
          },
          {
            "key": "legal_entity",
            "valueType": {
              "type": "id",
              "value": "ClientLegalEntity"
            }
          }
        ]
      }
    },
    "ClientLegalEntity": {
      "name": "ClientLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "id",
              "value": "EmailType"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "LegalEntityType"
            }
          },
          {
            "key": "subtype",
            "valueType": {
              "type": "id",
              "value": "LegalEntitySubType"
            }
          },
          {
            "key": "registration_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "vat_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "DateStringDefaultNow": {
      "description": "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31. Defaults to current date",
      "name": "DateStringDefaultNow",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "date",
            "regex": "^\\d{4}-\\d{2}-\\d{2}$"
          }
        }
      }
    },
    "DateStringRequired": {
      "description": "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.",
      "name": "DateStringRequired",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "date",
            "regex": "^\\d{4}-\\d{2}-\\d{2}$"
          }
        }
      }
    },
    "DateString": {
      "description": "Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.",
      "name": "DateString",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "date",
            "regex": "^\\d{4}-\\d{2}-\\d{2}$"
          }
        }
      }
    },
    "DateTimeStringRequired": {
      "description": "Long date-time format following ISO-8601",
      "name": "DateTimeStringRequired",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "DateTimeString": {
      "description": "Long date-time format following ISO-8601",
      "name": "DateTimeString",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "WorkerOfBasicContract": {
      "name": "WorkerOfBasicContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "long"
              }
            }
          },
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "id",
              "value": "EmailType"
            }
          },
          {
            "key": "alternate_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AlternateEmailList"
              }
            }
          },
          {
            "key": "image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "UrlType"
              }
            }
          }
        ]
      }
    },
    "WorkerOfContract": {
      "name": "WorkerOfContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "description": "Worker's full name.",
            "key": "full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EmailType"
              }
            }
          },
          {
            "key": "alternate_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AlternateEmailList"
              }
            }
          },
          {
            "description": "Worker's nationality.",
            "key": "nationality",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "url"
                }
              }
            }
          },
          {
            "key": "legal_entity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkerLegalEntity"
              }
            }
          },
          {
            "key": "date_of_birth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeString"
              }
            }
          },
          {
            "key": "expected_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkerEmailType"
              }
            }
          },
          {
            "description": "Worker's first name",
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          },
          {
            "description": "Worker's last name",
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WorkerLegalEntity": {
      "name": "WorkerLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "LegalEntityType"
            }
          },
          {
            "key": "personal_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "registration_number",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "TeamOfBasicContract": {
      "name": "TeamOfBasicContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique reference of a team",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Name of a team",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "TeamOfContract": {
      "name": "TeamOfContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique reference of a team",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Name of a team",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "InvitationsOfBasicContract": {
      "name": "InvitationsOfBasicContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "client_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EmailType"
              }
            }
          },
          {
            "key": "worker_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EmailType"
              }
            }
          }
        ]
      }
    },
    "SignaturesOfBasicContract": {
      "name": "SignaturesOfBasicContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "client_signed_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "description": "Worker's signature.",
            "key": "worker_signature",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "worker_signed_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          }
        ]
      }
    },
    "SignaturesOfContract": {
      "name": "SignaturesOfContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "normally name of client is used as signature",
            "key": "client_signature",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "client_signed_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "description": "Signatures of client representative.",
            "key": "worker_signature",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "worker_signed_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "key": "signed_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          }
        ]
      }
    },
    "CompensationDetailsOfContract": {
      "name": "CompensationDetailsOfContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "currency_code",
            "valueType": {
              "type": "id",
              "value": "CurrencyCodeRequired"
            }
          },
          {
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "frequency",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "first_payment",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "first_payment_date",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "key": "gross_annual_salary",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "gross_signing_bonus",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "gross_variable_bonus",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "EmploymentDetailsOfContract": {
      "name": "EmploymentDetailsOfContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "days_per_week",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "hours_per_day",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "probation_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "paid_vacation_days",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CountryCode"
              }
            }
          },
          {
            "description": "State code.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContractToAmendDetailsContainer": {
      "name": "ContractToAmendDetailsContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractDetailsToAmend"
            }
          }
        ]
      }
    },
    "ContractDetailsToAmend": {
      "description": "You can specify any combination of data points that need changing.",
      "name": "ContractDetailsToAmend",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 1
                }
              }
            }
          },
          {
            "key": "currency_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CurrencyCodeRequired"
              }
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkStatementScaleEnum"
              }
            }
          },
          {
            "key": "effective_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateStringRequired"
              }
            }
          },
          {
            "key": "first_payment_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateStringRequired"
              }
            }
          },
          {
            "key": "first_payment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkStatementCycleScaleEnum"
              }
            }
          },
          {
            "key": "cycle_end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 31
                }
              }
            }
          },
          {
            "key": "cycle_end_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkStatementCycleEndTypeEnum"
              }
            }
          },
          {
            "key": "payment_due_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkStatementPaymentDueTypeEnum"
              }
            }
          },
          {
            "key": "payment_due_days",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 90
                }
              }
            }
          },
          {
            "description": "If the payment due is on a weekend, pay on Friday.",
            "key": "pay_before_weekends",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "You can enter new job title.",
            "key": "job_title_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "If you want to use a predefined job title, please use a job title ID",
            "key": "job_title_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "You can use a predefined seniority level ID.",
            "key": "seniority_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Text to describe any special clause in contract.",
            "key": "special_clause",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Text to describe the scope of work of the contract.",
            "key": "scope_of_work",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ContractToCreateContainer": {
      "name": "ContractToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractToCreate"
            }
          }
        ]
      }
    },
    "ContractToCreate": {
      "name": "ContractToCreate",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ContractToCreate_pay_as_you_go_time_based",
            "type": {
              "type": "id",
              "value": "ContractToCreate_pay_as_you_go_time_based"
            }
          },
          {
            "typeName": "ContractToCreate_payg_tasks",
            "type": {
              "type": "id",
              "value": "ContractToCreate_payg_tasks"
            }
          },
          {
            "typeName": "ContractToCreate_payg_milestones",
            "type": {
              "type": "id",
              "value": "ContractToCreate_payg_milestones"
            }
          },
          {
            "typeName": "ContractToCreate_ongoing_time_based",
            "type": {
              "type": "id",
              "value": "ContractToCreate_ongoing_time_based"
            }
          }
        ]
      }
    },
    "ContractToCreateContainer_pay_as_you_go_time_based": {
      "name": "ContractToCreateContainer_pay_as_you_go_time_based",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractToCreate_pay_as_you_go_time_based"
            }
          }
        ]
      }
    },
    "ContractToCreateContainer_payg_tasks": {
      "name": "ContractToCreateContainer_payg_tasks",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractToCreate_payg_tasks"
            }
          }
        ]
      }
    },
    "ContractToCreateContainer_payg_milestones": {
      "name": "ContractToCreateContainer_payg_milestones",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractToCreate_payg_milestones"
            }
          }
        ]
      }
    },
    "ContractToCreateContainer_ongoing_time_based": {
      "name": "ContractToCreateContainer_ongoing_time_based",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractToCreate_ongoing_time_based"
            }
          }
        ]
      }
    },
    "ContractToCreatePayAsYouGoTimeBasedType": {
      "name": "ContractToCreatePayAsYouGoTimeBasedType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pay_as_you_go_time_based"
          }
        ]
      }
    },
    "ContractToCreatePayAsYouGoTimeBasedCompensationDetails": {
      "name": "ContractToCreatePayAsYouGoTimeBasedCompensationDetails",
      "shape": {
        "type": "object",
        "extends": [
          "CompensationDetailsOfContractToCreate_Shared",
          "CompensationDetailsOfContractToCreate_pay_as_you_go_time_based"
        ],
        "properties": []
      }
    },
    "ContractToCreate_pay_as_you_go_time_based": {
      "name": "ContractToCreate_pay_as_you_go_time_based",
      "shape": {
        "type": "object",
        "extends": [
          "ContractToCreate_Shared"
        ],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractToCreatePayAsYouGoTimeBasedType"
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "id",
              "value": "ContractToCreatePayAsYouGoTimeBasedCompensationDetails"
            }
          }
        ]
      }
    },
    "ContractToCreatePaygTasksType": {
      "name": "ContractToCreatePaygTasksType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "payg_tasks"
          }
        ]
      }
    },
    "ContractToCreate_payg_tasks": {
      "name": "ContractToCreate_payg_tasks",
      "shape": {
        "type": "object",
        "extends": [
          "ContractToCreate_Shared"
        ],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractToCreatePaygTasksType"
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "id",
              "value": "CompensationDetailsOfContractToCreate_Shared"
            }
          }
        ]
      }
    },
    "ContractToCreatePaygMilestonesType": {
      "name": "ContractToCreatePaygMilestonesType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "payg_milestones"
          }
        ]
      }
    },
    "ContractToCreate_payg_milestones": {
      "name": "ContractToCreate_payg_milestones",
      "shape": {
        "type": "object",
        "extends": [
          "ContractToCreate_Shared"
        ],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractToCreatePaygMilestonesType"
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "id",
              "value": "CompensationDetailsOfContractToCreate_Shared"
            }
          }
        ]
      }
    },
    "ContractToCreateOngoingTimeBasedType": {
      "name": "ContractToCreateOngoingTimeBasedType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ongoing_time_based"
          }
        ]
      }
    },
    "ContractToCreateOngoingTimeBasedCompensationDetails": {
      "name": "ContractToCreateOngoingTimeBasedCompensationDetails",
      "shape": {
        "type": "object",
        "extends": [
          "CompensationDetailsOfContractToCreate_Shared",
          "CompensationDetailsOfContractToCreate_ongoing_time_based"
        ],
        "properties": []
      }
    },
    "ContractToCreate_ongoing_time_based": {
      "name": "ContractToCreate_ongoing_time_based",
      "shape": {
        "type": "object",
        "extends": [
          "ContractToCreate_Shared"
        ],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractToCreateOngoingTimeBasedType"
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "id",
              "value": "ContractToCreateOngoingTimeBasedCompensationDetails"
            }
          }
        ]
      }
    },
    "ContractToCreateSharedClientLegalEntity": {
      "description": "Choose the Deel legal entity for this contract. Use legal entity endpoint to retrieve a list of legal entities in your organization.",
      "name": "ContractToCreateSharedClientLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "ContractToCreateSharedClientTeam": {
      "description": "Choose the Deel team for this contract. Use teams endpoint to retrieve a list of teams in your organization.",
      "name": "ContractToCreateSharedClientTeam",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "ContractToCreateSharedClient": {
      "name": "ContractToCreateSharedClient",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Choose the Deel legal entity for this contract. Use legal entity endpoint to retrieve a list of legal entities in your organization.",
            "key": "legal_entity",
            "valueType": {
              "type": "id",
              "value": "ContractToCreateSharedClientLegalEntity"
            }
          },
          {
            "description": "Choose the Deel team for this contract. Use teams endpoint to retrieve a list of teams in your organization.",
            "key": "team",
            "valueType": {
              "type": "id",
              "value": "ContractToCreateSharedClientTeam"
            }
          }
        ]
      }
    },
    "ContractToCreateSharedJobTitle": {
      "description": "Worker's job title. You can enter a custom job title or use a pre-defiled job title using the Id retrieved in job-titles endpoint.",
      "name": "ContractToCreateSharedJobTitle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Id of an predefined job title.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Job title. Please leave it blank when entering an Id.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContractToCreateSharedSeniority": {
      "description": "Job seniority level. Please use the seniority levels endpoint to retrieve the list of seniority levels.",
      "name": "ContractToCreateSharedSeniority",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContractToCreateSharedWorker": {
      "description": "Worker properties",
      "name": "ContractToCreateSharedWorker",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "expected_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkerEmailType"
              }
            }
          },
          {
            "description": "Worker's first name",
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          },
          {
            "description": "Worker's last name",
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContractToCreate_Shared": {
      "description": "Details of contract to create",
      "name": "ContractToCreate_Shared",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title of the contract.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "country_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CountryCode"
              }
            }
          },
          {
            "description": "The state or province code. Use country lookup endpoint to retrieve state codes.",
            "key": "state_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Describe the work to be performed.",
            "key": "scope_of_work",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Enter any special clause you may have.",
            "key": "special_clause",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateStringRequired"
              }
            }
          },
          {
            "key": "termination_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "key": "client",
            "valueType": {
              "type": "id",
              "value": "ContractToCreateSharedClient"
            }
          },
          {
            "description": "Worker's job title. You can enter a custom job title or use a pre-defiled job title using the Id retrieved in job-titles endpoint.",
            "key": "job_title",
            "valueType": {
              "type": "id",
              "value": "ContractToCreateSharedJobTitle"
            }
          },
          {
            "description": "Job seniority level. Please use the seniority levels endpoint to retrieve the list of seniority levels.",
            "key": "seniority",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractToCreateSharedSeniority"
                }
              }
            }
          },
          {
            "key": "notice_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NoticePeriod"
              }
            }
          },
          {
            "key": "who_reports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractWhoReportsEnum"
              }
            }
          },
          {
            "key": "meta",
            "valueType": {
              "type": "id",
              "value": "MetaDataOfContractToCreate"
            }
          },
          {
            "description": "External Id.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Worker properties",
            "key": "worker",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractToCreateSharedWorker"
                }
              }
            }
          }
        ]
      }
    },
    "MetaDataOfContractToCreate": {
      "description": "Additional custom info about a contract",
      "name": "MetaDataOfContractToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Require the contractor to upload necessary compliance documents as per their country’s labor laws.",
            "key": "documents_required",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "is_main_income",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "CompensationDetailsOfContractToCreate_pay_as_you_go_time_based": {
      "name": "CompensationDetailsOfContractToCreate_pay_as_you_go_time_based",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "id",
              "value": "WorkStatementScaleEnum"
            }
          }
        ]
      }
    },
    "CompensationDetailsOfContractToCreate_ongoing_time_based": {
      "name": "CompensationDetailsOfContractToCreate_ongoing_time_based",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "id",
              "value": "WorkStatementScaleEnum"
            }
          }
        ]
      }
    },
    "CompensationDetailsOfContractToCreate_Shared": {
      "name": "CompensationDetailsOfContractToCreate_Shared",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Amount to be paid. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "currency_code",
            "valueType": {
              "type": "id",
              "value": "CurrencyCodeRequired"
            }
          },
          {
            "key": "frequency",
            "valueType": {
              "type": "id",
              "value": "WorkStatementCycleScaleEnum"
            }
          },
          {
            "description": "Date invoice cycle ends.",
            "key": "cycle_end",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
              }
            }
          },
          {
            "key": "cycle_end_type",
            "valueType": {
              "type": "id",
              "value": "WorkStatementCycleEndTypeEnum"
            }
          },
          {
            "key": "payment_due_type",
            "valueType": {
              "type": "id",
              "value": "WorkStatementPaymentDueTypeEnum"
            }
          },
          {
            "key": "payment_due_days",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0,
                "maximum": 90
              }
            }
          },
          {
            "description": "If the payment due is on a weekend, pay on Friday.",
            "key": "pay_before_weekends",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "first_payment_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "description": "First payment amount.",
            "key": "first_payment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "default": 0
                }
              }
            }
          },
          {
            "key": "notice_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NoticePeriod"
              }
            }
          }
        ]
      }
    },
    "ContractSignatureToCreateContainer": {
      "name": "ContractSignatureToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractSignatureToCreate"
            }
          }
        ]
      }
    },
    "ContractSignatureToCreate": {
      "name": "ContractSignatureToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Signature of client.",
            "key": "client_signature",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 2
              }
            }
          },
          {
            "description": "Please use null to use default Deel contract template; otherwise you can use the template you created and customized. If template ID is not in payload, template stays unchanged.",
            "key": "contract_template_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContractInvitationToCreateContainer": {
      "name": "ContractInvitationToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractInvitationToCreate"
            }
          }
        ]
      }
    },
    "ContractInvitationToCreate": {
      "name": "ContractInvitationToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "email",
            "valueType": {
              "type": "id",
              "value": "EmailTypeRequired"
            }
          },
          {
            "description": "Message for the worker.",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "WorkStatementScaleEnumOptional": {
      "description": "Defines the scale at which the amount is paid. For example, enter 'hourly' to define the amount per hour. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
      "name": "WorkStatementScaleEnumOptional",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "hourly"
          },
          {
            "value": "daily"
          },
          {
            "value": "weekly"
          },
          {
            "value": "monthly"
          },
          {
            "value": "biweekly"
          },
          {
            "value": "semimonthly"
          },
          {
            "value": "custom"
          }
        ]
      }
    },
    "WorkStatementScaleEnum": {
      "description": "Defines the scale at which the amount is paid. For example, enter 'hourly' to define the amount per hour. This field can be excluded when creating a Pay-as-you-go task-based or Milestone contracts.",
      "name": "WorkStatementScaleEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "hourly"
          },
          {
            "value": "daily"
          },
          {
            "value": "weekly"
          },
          {
            "value": "monthly"
          },
          {
            "value": "biweekly"
          },
          {
            "value": "semimonthly"
          },
          {
            "value": "custom"
          }
        ]
      }
    },
    "WorkStatementCycleScaleEnum": {
      "description": "Scale of the invoice cycle.",
      "name": "WorkStatementCycleScaleEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "weekly"
          },
          {
            "value": "monthly"
          },
          {
            "value": "biweekly"
          },
          {
            "value": "semimonthly"
          },
          {
            "value": "calendar-month"
          }
        ]
      }
    },
    "WorkStatementCycleEndTypeEnum": {
      "description": "Cycle end can be weekly 1-7 (Monday = 1) or monthly 1-31.",
      "name": "WorkStatementCycleEndTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "DAY_OF_WEEK"
          },
          {
            "value": "DAY_OF_LAST_WEEK"
          },
          {
            "value": "DAY_OF_MONTH"
          }
        ]
      }
    },
    "WeekDaysEnum": {
      "description": "Days of the week.",
      "name": "WeekDaysEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Sunday"
          },
          {
            "value": "Monday"
          },
          {
            "value": "Tuesday"
          },
          {
            "value": "Wednesday"
          },
          {
            "value": "Thursday"
          },
          {
            "value": "Friday"
          },
          {
            "value": "Saturday"
          }
        ]
      }
    },
    "WorkStatementPaymentDueTypeEnum": {
      "description": "Type of payment due. If the payment is due on the last day of month, enter 'WITHIN_MONTH'.",
      "name": "WorkStatementPaymentDueTypeEnum",
      "shape": {
        "type": "enum",
        "default": "REGULAR",
        "values": [
          {
            "value": "REGULAR"
          },
          {
            "value": "WITHIN_MONTH"
          }
        ]
      }
    },
    "LegalEntityListContainer": {
      "name": "LegalEntityListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "LegalEntityList"
              }
            }
          }
        ]
      }
    },
    "LegalEntityList": {
      "name": "LegalEntityList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "BasicLegalEntity"
          }
        }
      }
    },
    "BasicLegalEntity": {
      "name": "BasicLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "entity_type",
            "valueType": {
              "type": "id",
              "value": "LegalEntityType"
            }
          },
          {
            "key": "entity_subtype",
            "valueType": {
              "type": "id",
              "value": "LegalEntitySubType"
            }
          }
        ]
      }
    },
    "OrganizationListContainer": {
      "name": "OrganizationListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "OrganizationList"
            }
          }
        ]
      }
    },
    "OrganizationList": {
      "name": "OrganizationList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "BasicOrganization"
          }
        }
      }
    },
    "BasicOrganization": {
      "name": "BasicOrganization",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "TeamListContainer": {
      "name": "TeamListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TeamList"
            }
          }
        ]
      }
    },
    "TeamList": {
      "name": "TeamList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "BasicTeam"
          }
        }
      }
    },
    "BasicTeam": {
      "name": "BasicTeam",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "TimesheetListContainer": {
      "name": "TimesheetListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TimesheetList"
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "id",
              "value": "PageInfoWithoutCursor"
            }
          }
        ]
      }
    },
    "TimesheetList": {
      "name": "TimesheetList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "BasicTimesheet"
          }
        }
      }
    },
    "BasicTimesheetWorksheet": {
      "name": "BasicTimesheetWorksheet",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "weeks",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "key": "days",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "key": "hours",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "key": "minutes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        ]
      }
    },
    "BasicTimesheetReviewedBy": {
      "name": "BasicTimesheetReviewedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "reviewed_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "remarks",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "BasicTimesheetContract": {
      "name": "BasicTimesheetContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          }
        ]
      }
    },
    "BasicTimesheetPaymentCycle": {
      "name": "BasicTimesheetPaymentCycle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeString"
              }
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeString"
              }
            }
          }
        ]
      }
    },
    "BasicTimesheetReportedBy": {
      "name": "BasicTimesheetReportedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "BasicTimesheet": {
      "name": "BasicTimesheet",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "UniqueObjectIdentifier"
            }
          },
          {
            "key": "public_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PublicId"
              }
            }
          },
          {
            "description": "Deprecated - it is always \"work\"",
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "TimesheetStatusEnum"
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateTimeStringRequired"
            }
          },
          {
            "key": "currency_code",
            "valueType": {
              "type": "id",
              "value": "CurrencyCodeRequired"
            }
          },
          {
            "description": "is equal to quantity times rate of active work statement + bonus in this record",
            "key": "total_amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "custom_scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "attachment",
            "valueType": {
              "type": "id",
              "value": "FileAttachmentInfo"
            }
          },
          {
            "key": "worksheet",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BasicTimesheetWorksheet"
              }
            }
          },
          {
            "key": "reviewed_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BasicTimesheetReviewedBy"
              }
            }
          },
          {
            "key": "contract",
            "valueType": {
              "type": "id",
              "value": "BasicTimesheetContract"
            }
          },
          {
            "key": "payment_cycle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BasicTimesheetPaymentCycle"
              }
            }
          },
          {
            "key": "reported_by",
            "valueType": {
              "type": "id",
              "value": "BasicTimesheetReportedBy"
            }
          }
        ]
      }
    },
    "TimesheetContainer": {
      "name": "TimesheetContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "Timesheet"
            }
          }
        ]
      }
    },
    "Timesheet": {
      "name": "Timesheet",
      "shape": {
        "type": "object",
        "extends": [
          "BasicTimesheet",
          "TimesheetApproversContainer"
        ],
        "properties": []
      }
    },
    "TimesheetApproversContainer": {
      "name": "TimesheetApproversContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "approvers",
            "valueType": {
              "type": "id",
              "value": "TimesheetApproverList"
            }
          }
        ]
      }
    },
    "TimesheetApproverList": {
      "name": "TimesheetApproverList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "TimesheetApprover"
          }
        }
      }
    },
    "TimesheetApprover": {
      "name": "TimesheetApprover",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "approved",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "TimesheetToCreateContainer": {
      "name": "TimesheetToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TimesheetToCreate"
            }
          }
        ]
      }
    },
    "TimesheetToCreateContainerWithFile": {
      "name": "TimesheetToCreateContainerWithFile",
      "shape": {
        "type": "object",
        "extends": [
          "TimesheetToCreateWithFile"
        ],
        "properties": []
      }
    },
    "TimesheetSharedProperties": {
      "description": "Details of timesheet to create; a client, contractor or EOR may create a timesheet",
      "name": "TimesheetSharedProperties",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Id of a Deel contract.",
            "key": "contract_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "default": ""
              }
            }
          },
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateStringRequired"
            }
          },
          {
            "description": "this is based on the scale of work statement of contract agreed e.g. 2 weeks",
            "key": "quantity",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "TimesheetToCreate": {
      "name": "TimesheetToCreate",
      "shape": {
        "type": "object",
        "extends": [
          "TimesheetSharedProperties"
        ],
        "properties": []
      }
    },
    "TimesheetToCreateWithFile": {
      "name": "TimesheetToCreateWithFile",
      "shape": {
        "type": "object",
        "extends": [
          "TimesheetSharedProperties",
          "FileObject"
        ],
        "properties": []
      }
    },
    "TimesheetToUpdateContainer": {
      "name": "TimesheetToUpdateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TimesheetToUpdate"
            }
          }
        ]
      }
    },
    "TimesheetToUpdate": {
      "description": "Details of timesheet to create; a client, contractor or EOR may update a timesheet",
      "name": "TimesheetToUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "quantity",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "TimesheetReviewsToCreateContainer": {
      "name": "TimesheetReviewsToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TimesheetReviewsToCreate"
            }
          }
        ]
      }
    },
    "RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer": {
      "name": "RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "PgoTaskReviewsByIdToCreate"
            }
          }
        ]
      }
    },
    "RequestBodyToCreatePgoTaskReviewsReviewsContainer": {
      "name": "RequestBodyToCreatePgoTaskReviewsReviewsContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "PgoTaskReviewsToCreate"
            }
          }
        ]
      }
    },
    "TimesheetReviewsToCreateStatus": {
      "name": "TimesheetReviewsToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "TimesheetReviewsToCreate": {
      "name": "TimesheetReviewsToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "TimesheetReviewsToCreateStatus"
            }
          },
          {
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "ids",
            "valueType": {
              "type": "id",
              "value": "TimesheetIdItems"
            }
          }
        ]
      }
    },
    "GenericReportReviewCreatedContainer": {
      "name": "GenericReportReviewCreatedContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "GenericReportReviewCreatedList"
            }
          }
        ]
      }
    },
    "GenericReportReviewCreatedList": {
      "name": "GenericReportReviewCreatedList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GenericReportReviewCreated"
          }
        }
      }
    },
    "GenericReportReviewCreated": {
      "name": "GenericReportReviewCreated",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentStatusEnum"
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "UniqueObjectIdentifier"
            }
          },
          {
            "key": "public_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PublicId"
              }
            }
          }
        ]
      }
    },
    "PgoTaskReviewsByIdToCreateStatus": {
      "description": "Review status.",
      "name": "PgoTaskReviewsByIdToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "PgoTaskReviewsByIdToCreate": {
      "name": "PgoTaskReviewsByIdToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Review status.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "PgoTaskReviewsByIdToCreateStatus"
            }
          },
          {
            "description": "Review comments.",
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "PgoTaskReviewsToCreateStatus": {
      "description": "Review status.",
      "name": "PgoTaskReviewsToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "PgoTaskReviewsToCreate": {
      "name": "PgoTaskReviewsToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Review status.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "PgoTaskReviewsToCreateStatus"
            }
          },
          {
            "description": "Additional comments with the reivew.",
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "ids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "TimesheetReviewToCreateContainer": {
      "name": "TimesheetReviewToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TimesheetReviewToCreate"
            }
          }
        ]
      }
    },
    "TimesheetReviewToCreateStatus": {
      "name": "TimesheetReviewToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "TimesheetReviewToCreate": {
      "name": "TimesheetReviewToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "TimesheetReviewToCreateStatus"
            }
          },
          {
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TimesheetSearchContainerContractTypes": {
      "name": "TimesheetSearchContainerContractTypes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ContractTypeEnumList",
            "type": {
              "type": "id",
              "value": "ContractTypeEnumList"
            }
          },
          {
            "typeName": "ContractTypeEnum",
            "type": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          }
        ]
      }
    },
    "TimesheetSearchContainerTypes": {
      "name": "TimesheetSearchContainerTypes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "TimesheetTypeEnumList",
            "type": {
              "type": "id",
              "value": "TimesheetTypeEnumList"
            }
          },
          {
            "typeName": "TimesheetTypeEnum",
            "type": {
              "type": "id",
              "value": "TimesheetTypeEnum"
            }
          }
        ]
      }
    },
    "TimesheetSearchContainerStatuses": {
      "name": "TimesheetSearchContainerStatuses",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "TimesheetStatusEnumList",
            "type": {
              "type": "id",
              "value": "TimesheetStatusEnumList"
            }
          },
          {
            "typeName": "TimesheetStatusEnum",
            "type": {
              "type": "id",
              "value": "TimesheetStatusEnum"
            }
          }
        ]
      }
    },
    "TimesheetSearchContainer": {
      "description": "This is a model to make it easier to understand and restrict search parameters",
      "name": "TimesheetSearchContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Return a page of results with given number of records.",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d{1,2}$",
                  "maxLength": 2,
                  "default": "10"
                }
              }
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d{1,2}$",
                  "maxLength": 2,
                  "default": "10"
                }
              }
            }
          },
          {
            "key": "order_direction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SortDirEnum"
              }
            }
          },
          {
            "key": "contract_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "invoice_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d+$",
                  "maxLength": 10
                }
              }
            }
          },
          {
            "key": "reporter_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d+$",
                  "maxLength": 10
                }
              }
            }
          },
          {
            "key": "contract_types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TimesheetSearchContainerContractTypes"
              }
            }
          },
          {
            "key": "types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TimesheetSearchContainerTypes"
              }
            }
          },
          {
            "key": "statuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TimesheetSearchContainerStatuses"
              }
            }
          },
          {
            "key": "date_from",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "key": "date_to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          }
        ]
      }
    },
    "TimesheetAccountingRefsItemsMappingCategory": {
      "name": "TimesheetAccountingRefsItemsMappingCategory",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "TimesheetAccountingRefsItems": {
      "name": "TimesheetAccountingRefsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "integration",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "mapping_category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TimesheetAccountingRefsItemsMappingCategory"
              }
            }
          }
        ]
      }
    },
    "TimesheetAccountingRefs": {
      "name": "TimesheetAccountingRefs",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "TimesheetAccountingRefsItems"
          }
        }
      }
    },
    "InvoiceAdjustmentSearchContainerContractTypes": {
      "name": "InvoiceAdjustmentSearchContainerContractTypes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ContractTypeEnumList",
            "type": {
              "type": "id",
              "value": "ContractTypeEnumList"
            }
          },
          {
            "typeName": "ContractTypeEnum",
            "type": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentSearchContainerTypes": {
      "name": "InvoiceAdjustmentSearchContainerTypes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvoiceAdjustmentTypeEnumList",
            "type": {
              "type": "id",
              "value": "InvoiceAdjustmentTypeEnumList"
            }
          },
          {
            "typeName": "InvoiceAdjustmentTypeEnum",
            "type": {
              "type": "id",
              "value": "InvoiceAdjustmentTypeEnum"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentSearchContainerStatuses": {
      "name": "InvoiceAdjustmentSearchContainerStatuses",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvoiceAdjustmentStatusEnumList",
            "type": {
              "type": "id",
              "value": "InvoiceAdjustmentStatusEnumList"
            }
          },
          {
            "typeName": "InvoiceAdjustmentStatusEnum",
            "type": {
              "type": "id",
              "value": "InvoiceAdjustmentStatusEnum"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentSearchContainer": {
      "description": "This is a model to make it easier to understand and restrict search parameters",
      "name": "InvoiceAdjustmentSearchContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Return a page of results with given number of records.",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d{1,2}$",
                  "maxLength": 2,
                  "default": "10"
                }
              }
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d{1,2}$",
                  "maxLength": 2,
                  "default": "10"
                }
              }
            }
          },
          {
            "key": "order_direction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SortDirEnum"
              }
            }
          },
          {
            "key": "contract_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "invoice_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d+$",
                  "maxLength": 10
                }
              }
            }
          },
          {
            "key": "reporter_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^\\d+$",
                  "maxLength": 10
                }
              }
            }
          },
          {
            "key": "contract_types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "InvoiceAdjustmentSearchContainerContractTypes"
              }
            }
          },
          {
            "key": "types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "InvoiceAdjustmentSearchContainerTypes"
              }
            }
          },
          {
            "key": "statuses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "InvoiceAdjustmentSearchContainerStatuses"
              }
            }
          },
          {
            "key": "date_from",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "key": "date_to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentListContainer": {
      "name": "InvoiceAdjustmentListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentList"
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "id",
              "value": "PageInfoWithoutCursorNew"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentList": {
      "name": "InvoiceAdjustmentList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "BasicInvoiceAdjustment"
          }
        }
      }
    },
    "BasicInvoiceAdjustmentWorksheet": {
      "name": "BasicInvoiceAdjustmentWorksheet",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "weeks",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "key": "days",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "key": "hours",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "key": "minutes",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        ]
      }
    },
    "BasicInvoiceAdjustmentReviewedBy": {
      "name": "BasicInvoiceAdjustmentReviewedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "reviewed_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "remarks",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "BasicInvoiceAdjustmentContract": {
      "name": "BasicInvoiceAdjustmentContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          }
        ]
      }
    },
    "BasicInvoiceAdjustmentPaymentCycle": {
      "name": "BasicInvoiceAdjustmentPaymentCycle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "start_date",
            "valueType": {
              "type": "id",
              "value": "DateTimeStringRequired"
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "type": "id",
              "value": "DateTimeStringRequired"
            }
          }
        ]
      }
    },
    "BasicInvoiceAdjustmentReportedBy": {
      "name": "BasicInvoiceAdjustmentReportedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "BasicInvoiceAdjustment": {
      "name": "BasicInvoiceAdjustment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "UniqueObjectIdentifier"
            }
          },
          {
            "key": "public_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PublicId"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentTypeEnum"
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentStatusEnum"
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateTimeStringRequired"
            }
          },
          {
            "key": "currency_code",
            "valueType": {
              "type": "id",
              "value": "CurrencyCodeRequired"
            }
          },
          {
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "total_amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeStringRequired"
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "custom_scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "attachment",
            "valueType": {
              "type": "id",
              "value": "FileAttachmentInfo"
            }
          },
          {
            "key": "worksheet",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BasicInvoiceAdjustmentWorksheet"
              }
            }
          },
          {
            "key": "reviewed_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BasicInvoiceAdjustmentReviewedBy"
              }
            }
          },
          {
            "key": "contract",
            "valueType": {
              "type": "id",
              "value": "BasicInvoiceAdjustmentContract"
            }
          },
          {
            "key": "payment_cycle",
            "valueType": {
              "type": "id",
              "value": "BasicInvoiceAdjustmentPaymentCycle"
            }
          },
          {
            "key": "reported_by",
            "valueType": {
              "type": "id",
              "value": "BasicInvoiceAdjustmentReportedBy"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentContainer": {
      "name": "InvoiceAdjustmentContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustment"
            }
          }
        ]
      }
    },
    "InvoiceAdjustment": {
      "name": "InvoiceAdjustment",
      "shape": {
        "type": "object",
        "extends": [
          "BasicInvoiceAdjustment",
          "InvoiceAdjustmentApproversContainer"
        ],
        "properties": []
      }
    },
    "InvoiceAdjustmentApproversContainer": {
      "name": "InvoiceAdjustmentApproversContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "approvers",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentApproverList"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentApproverList": {
      "name": "InvoiceAdjustmentApproverList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "InvoiceAdjustmentApprover"
          }
        }
      }
    },
    "InvoiceAdjustmentApprover": {
      "name": "InvoiceAdjustmentApprover",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "approved",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentToCreateContainer": {
      "name": "InvoiceAdjustmentToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentToCreate"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentToCreateWithFile": {
      "name": "InvoiceAdjustmentToCreateWithFile",
      "shape": {
        "type": "object",
        "extends": [
          "InvoiceAdjustmentToCreate",
          "FileObject"
        ],
        "properties": []
      }
    },
    "InvoiceAdjustmentToCreate": {
      "description": "Details of invoice adjustment to create.",
      "name": "InvoiceAdjustmentToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Id of a Deel contract.",
            "key": "contract_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateStringRequired"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentTypeToCreateEnum"
            }
          },
          {
            "description": "Amount to be paid. Must be a positive number.",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "description": "Description of the adjustment.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "ID of an existing active payment cycle - required if type is \"vat\"",
            "key": "paymentCycleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentCreatedContainer": {
      "name": "InvoiceAdjustmentCreatedContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentCreated"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentCreated": {
      "description": "Details of invoice adjustment created.",
      "name": "InvoiceAdjustmentCreated",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "UniqueObjectIdentifier"
                }
              }
            }
          },
          {
            "key": "public_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PublicId"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "InvoiceAdjustmentStatusEnum"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeStringRequired"
              }
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentToUpdateContainer": {
      "name": "InvoiceAdjustmentToUpdateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentToUpdate"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentToUpdate": {
      "description": "Details of invoice adjustment to update.",
      "name": "InvoiceAdjustmentToUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentReviewsToCreateContainer": {
      "name": "InvoiceAdjustmentReviewsToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentReviewsToCreate"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentReviewsToCreateStatus": {
      "name": "InvoiceAdjustmentReviewsToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "InvoiceAdjustmentReviewsToCreate": {
      "name": "InvoiceAdjustmentReviewsToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentReviewsToCreateStatus"
            }
          },
          {
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "ids",
            "valueType": {
              "type": "id",
              "value": "TimesheetIdItems"
            }
          }
        ]
      }
    },
    "TimesheetIdItemsItemsOneOfZero": {
      "name": "TimesheetIdItemsItemsOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "TimesheetIdItemsItemsOneOfOne": {
      "name": "TimesheetIdItemsItemsOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "TimesheetIdItemsItems": {
      "description": "ID of an existing timesheet record",
      "name": "TimesheetIdItemsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "TimesheetIdItemsItemsOneOfZero",
            "type": {
              "type": "id",
              "value": "TimesheetIdItemsItemsOneOfZero"
            }
          },
          {
            "typeName": "TimesheetIdItemsItemsOneOfOne",
            "type": {
              "type": "id",
              "value": "TimesheetIdItemsItemsOneOfOne"
            }
          }
        ]
      }
    },
    "TimesheetIdItems": {
      "name": "TimesheetIdItems",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "TimesheetIdItemsItems"
          }
        }
      }
    },
    "InvoiceAdjustmentReviewToCreateContainer": {
      "name": "InvoiceAdjustmentReviewToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentReviewToCreate"
            }
          }
        ]
      }
    },
    "InvoiceAdjustmentReviewToCreateStatus": {
      "name": "InvoiceAdjustmentReviewToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "InvoiceAdjustmentReviewToCreate": {
      "name": "InvoiceAdjustmentReviewToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentReviewToCreateStatus"
            }
          },
          {
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GenericResultCreatedData": {
      "name": "GenericResultCreatedData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "GenericResultCreated": {
      "name": "GenericResultCreated",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "GenericResultCreatedData"
            }
          }
        ]
      }
    },
    "ContractExternalIdPatchedContainer": {
      "name": "ContractExternalIdPatchedContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractExternalIdToPatch"
            }
          }
        ]
      }
    },
    "GenericResultUpdatedData": {
      "name": "GenericResultUpdatedData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "updated",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "GenericResultUpdated": {
      "name": "GenericResultUpdated",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "GenericResultUpdatedData"
            }
          }
        ]
      }
    },
    "GenericResultDeletedData": {
      "name": "GenericResultDeletedData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Confirms the deletion.",
            "key": "deleted",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "GenericResultDeleted": {
      "name": "GenericResultDeleted",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "GenericResultDeletedData"
            }
          }
        ]
      }
    },
    "ContractTypeEnumList": {
      "description": "List of contract types",
      "name": "ContractTypeEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "ContractTypeEnum"
          }
        }
      }
    },
    "ContractTypeEnum": {
      "description": "Type of a contract",
      "name": "ContractTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ongoing_time_based"
          },
          {
            "value": "milestones"
          },
          {
            "value": "time_based"
          },
          {
            "value": "pay_as_you_go_time_based"
          },
          {
            "value": "commission"
          },
          {
            "value": "payg_milestones"
          },
          {
            "value": "payg_tasks"
          },
          {
            "value": "eor"
          },
          {
            "value": "unknown"
          },
          {
            "value": "employee"
          },
          {
            "value": "global_payroll"
          },
          {
            "value": "shield_msa"
          },
          {
            "value": "hris_direct_employee"
          }
        ]
      }
    },
    "ContractTypeEnumToCreate": {
      "description": "Type of a contract",
      "name": "ContractTypeEnumToCreate",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pay_as_you_go_time_based"
          },
          {
            "value": "payg_tasks"
          },
          {
            "value": "payg_milestones"
          }
        ]
      }
    },
    "ContractStatusEnumList": {
      "description": "List of contract statuses",
      "name": "ContractStatusEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "ContractStatusEnum"
          }
        }
      }
    },
    "ContractStatusEnum": {
      "description": "Status of a contract in Deel workflow",
      "name": "ContractStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "new"
          },
          {
            "value": "under_review"
          },
          {
            "value": "waiting_for_employee_contract"
          },
          {
            "value": "waiting_for_client_sign"
          },
          {
            "value": "processing_payment"
          },
          {
            "value": "waiting_for_contractor_sign"
          },
          {
            "value": "waiting_for_eor_sign"
          },
          {
            "value": "waiting_for_employee_sign"
          },
          {
            "value": "awaiting_deposit_payment"
          },
          {
            "value": "in_progress"
          },
          {
            "value": "completed"
          },
          {
            "value": "cancelled"
          },
          {
            "value": "user_cancelled"
          },
          {
            "value": "rejected"
          },
          {
            "value": "waiting_for_client_payment"
          }
        ]
      }
    },
    "ContractWhoReportsEnum": {
      "description": "Flag to indicate who is supposed to provide regular reports",
      "name": "ContractWhoReportsEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "both"
          },
          {
            "value": "client"
          },
          {
            "value": "contractor"
          }
        ]
      }
    },
    "ContractFirstSignEnum": {
      "description": "Flag to indicate who is supposed to sign a contract",
      "name": "ContractFirstSignEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "client"
          },
          {
            "value": "contractor"
          }
        ]
      }
    },
    "ContractsSortByEnum": {
      "name": "ContractsSortByEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contract_title"
          },
          {
            "value": "client_name"
          },
          {
            "value": "worker_name"
          },
          {
            "value": "total"
          },
          {
            "value": "status"
          }
        ]
      }
    },
    "ProfileTypeEnum": {
      "name": "ProfileTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "client"
          },
          {
            "value": "contractor"
          },
          {
            "value": "icp"
          },
          {
            "value": "direct_employee"
          },
          {
            "value": "hris_direct_employee"
          },
          {
            "value": "service_account"
          }
        ]
      }
    },
    "CountryListContainer": {
      "name": "CountryListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "CountryList"
            }
          }
        ]
      }
    },
    "CountryList": {
      "name": "CountryList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Country"
          }
        }
      }
    },
    "Country": {
      "name": "Country",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "code",
            "valueType": {
              "type": "id",
              "value": "CountryCode"
            }
          },
          {
            "description": "Country name.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "Identifies if Deel provides visa support for employees being hired in this country.",
            "key": "visa_support",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Identifies if Deel support EoR in this country.",
            "key": "eor_support",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Identifies the type of sub-territory within a country where local laws may apply. Some countries may have states, provinces, prefectures or regions.",
            "key": "state_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "states",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "StateOfCountry"
              }
            }
          }
        ]
      }
    },
    "StateOfCountry": {
      "description": "It may be called states, provinces, prefectures or regions, or none at all",
      "name": "StateOfCountry",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Territory code.",
            "key": "code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "Territory name.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "CurrencyListContainer": {
      "name": "CurrencyListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "CurrencyList"
            }
          }
        ]
      }
    },
    "CurrencyList": {
      "name": "CurrencyList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Currency"
          }
        }
      }
    },
    "Currency": {
      "name": "Currency",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "code",
            "valueType": {
              "type": "id",
              "value": "CurrencyCodeRequired"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "PaymentMethodEnumList": {
      "description": "filter invoices by payment method",
      "name": "PaymentMethodEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "PaymentMethodEnum"
          }
        }
      }
    },
    "PaymentMethodEnum": {
      "description": "All the supported payment types",
      "name": "PaymentMethodEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe_bacs_debit"
          },
          {
            "value": "pay_pal"
          },
          {
            "value": "stripe_card"
          },
          {
            "value": "bt_card"
          },
          {
            "value": "stripe_ach"
          },
          {
            "value": "coinbase"
          },
          {
            "value": "go_cardless"
          },
          {
            "value": "brex"
          },
          {
            "value": "stripe_sepa_debit"
          },
          {
            "value": "transferwise"
          },
          {
            "value": "go_cardless_becs"
          },
          {
            "value": "bank_transfer"
          },
          {
            "value": "mercury_wire"
          },
          {
            "value": "bt_pay_pal"
          }
        ]
      }
    },
    "PaymentStatusEnumList": {
      "name": "PaymentStatusEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "PaymentStatusEnum"
          }
        }
      }
    },
    "PaymentStatusEnum": {
      "description": "status of payment",
      "name": "PaymentStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "paid"
          },
          {
            "value": "processing"
          }
        ]
      }
    },
    "InvoiceStatusEnumList": {
      "description": "filter invoices by current status, show a invoice if its status is in this list",
      "name": "InvoiceStatusEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "InvoiceStatusEnum"
          }
        }
      }
    },
    "InvoiceStatusEnum": {
      "description": "Current status of the invoice.",
      "name": "InvoiceStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "paid"
          },
          {
            "value": "processing"
          },
          {
            "value": "canceled"
          },
          {
            "value": "skipped"
          },
          {
            "value": "failed"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "InvoiceTypeEnum": {
      "description": "invoice's type",
      "name": "InvoiceTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PAYMENT"
          },
          {
            "value": "EOR_DEPOSIT"
          },
          {
            "value": "EOR_FIRST_PAYMENT"
          },
          {
            "value": "EOR_TERMINATION_OFFCYCLE"
          },
          {
            "value": "SIGNING_BONUS"
          },
          {
            "value": "REFUND_STATEMENT"
          },
          {
            "value": "EOR_TAX_RULING"
          },
          {
            "value": "GP_DEPOSIT_STATEMENT"
          },
          {
            "value": "GP_FUNDING_STATEMENT"
          },
          {
            "value": "GLOBAL_PAYROLL_FEES"
          },
          {
            "value": "SHIELD_DEPOSIT"
          },
          {
            "value": "EOR_MANAGEMENT_FEE"
          }
        ]
      }
    },
    "CountryCodeList": {
      "name": "CountryCodeList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "CountryCode"
          }
        }
      }
    },
    "CountryCode": {
      "description": "Country code. [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) country code.",
      "name": "CountryCode",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^[A-Z]{2}$",
            "minLength": 2,
            "maxLength": 2
          }
        }
      }
    },
    "CountryCodeNulleable": {
      "description": "Country code. [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) country code.",
      "name": "CountryCodeNulleable",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^[A-Z]{2}$",
            "minLength": 2,
            "maxLength": 2
          }
        }
      }
    },
    "CurrencyCodeList": {
      "name": "CurrencyCodeList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "CurrencyCodeRequired"
          }
        }
      }
    },
    "CurrencyCodeRequired": {
      "name": "CurrencyCodeRequired",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^[A-Z]{3}$",
            "minLength": 3,
            "maxLength": 3
          }
        }
      }
    },
    "CurrencyCode": {
      "description": "Currency code.",
      "name": "CurrencyCode",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^[A-Z]{3}$",
            "minLength": 3,
            "maxLength": 3
          }
        }
      }
    },
    "LegalEntityArray": {
      "name": "LegalEntityArray",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "LegalEntityType"
          }
        }
      }
    },
    "LegalEntityType": {
      "name": "LegalEntityType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "individual"
          },
          {
            "value": "company"
          }
        ]
      }
    },
    "LegalEntitySubType": {
      "name": "LegalEntitySubType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "JobTitleListContainerPage": {
      "name": "JobTitleListContainerPage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Use for pagination to get next set of records after the given cursor.",
            "key": "cursor",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "JobTitleListContainer": {
      "name": "JobTitleListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "JobTitleList"
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "id",
              "value": "JobTitleListContainerPage"
            }
          }
        ]
      }
    },
    "JobTitleList": {
      "name": "JobTitleList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "JobTitle"
          }
        }
      }
    },
    "JobTitle": {
      "name": "JobTitle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the job title in Deel platform.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Job title.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "SeniorityListContainer": {
      "name": "SeniorityListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "SeniorityList"
            }
          }
        ]
      }
    },
    "SeniorityList": {
      "name": "SeniorityList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "SeniorityRequired"
          }
        }
      }
    },
    "SeniorityRequired": {
      "description": "Seniority describes level of expertise at a job e.g. junior",
      "name": "SeniorityRequired",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for seniority record.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Name of seniority level e.g. Mid (Individual Contributor Level 2)",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "Level of seniority level e.g. 2",
            "key": "level",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "Seniority": {
      "description": "Seniority describes level of expertise at a job e.g. junior",
      "name": "Seniority",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for seniority record",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Name of seniority level e.g. Mid (Individual Contributor Level 2)",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "Level of seniority level e.g. 2",
            "key": "level",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TimesheetTypeEnumList": {
      "name": "TimesheetTypeEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "TimesheetTypeEnum"
          }
        }
      }
    },
    "TimesheetTypeEnum": {
      "description": "Type for timesheet",
      "name": "TimesheetTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "work"
          }
        ]
      }
    },
    "OffCyclePaymentTypeEnum": {
      "description": "Type for Off-cycle payments",
      "name": "OffCyclePaymentTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "offcycle"
          }
        ]
      }
    },
    "TimesheetStatusEnumList": {
      "name": "TimesheetStatusEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "TimesheetStatusEnum"
          }
        }
      }
    },
    "TimesheetStatusEnum": {
      "description": "Status of this entry.",
      "name": "TimesheetStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          },
          {
            "value": "not_payable"
          },
          {
            "value": "paid"
          },
          {
            "value": "pending"
          },
          {
            "value": "processing"
          }
        ]
      }
    },
    "InvoiceAdjustmentTypeEnumList": {
      "name": "InvoiceAdjustmentTypeEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "InvoiceAdjustmentTypeEnum"
          }
        }
      }
    },
    "InvoiceAdjustmentTypeEnum": {
      "description": "Type of invoice adjustment.",
      "name": "InvoiceAdjustmentTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "accrued_holiday"
          },
          {
            "value": "additional_fee"
          },
          {
            "value": "allowance"
          },
          {
            "value": "bonus"
          },
          {
            "value": "commission"
          },
          {
            "value": "deduction"
          },
          {
            "value": "deposit"
          },
          {
            "value": "deposit_refund"
          },
          {
            "value": "employer_cost"
          },
          {
            "value": "expense"
          },
          {
            "value": "health_allowance"
          },
          {
            "value": "health_benefit"
          },
          {
            "value": "health_insurance_fee"
          },
          {
            "value": "legal_fee"
          },
          {
            "value": "management_fee"
          },
          {
            "value": "milestone"
          },
          {
            "value": "offcycle"
          },
          {
            "value": "other"
          },
          {
            "value": "overtime"
          },
          {
            "value": "pension"
          },
          {
            "value": "pro_rata"
          },
          {
            "value": "setup_fee"
          },
          {
            "value": "severance"
          },
          {
            "value": "shield_service"
          },
          {
            "value": "signing_bonus"
          },
          {
            "value": "signing_bonus_employer_cost"
          },
          {
            "value": "refund"
          },
          {
            "value": "task"
          },
          {
            "value": "time_off"
          },
          {
            "value": "vat"
          },
          {
            "value": "withholding_tax"
          },
          {
            "value": "work"
          }
        ]
      }
    },
    "InvoiceAdjustmentTypeToCreateEnum": {
      "description": "Type of invoice adjustment.",
      "name": "InvoiceAdjustmentTypeToCreateEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "bonus"
          },
          {
            "value": "commission"
          },
          {
            "value": "deduction"
          },
          {
            "value": "expense"
          },
          {
            "value": "other"
          },
          {
            "value": "overtime"
          },
          {
            "value": "time_off"
          },
          {
            "value": "vat"
          }
        ]
      }
    },
    "InvoiceAdjustmentStatusEnumList": {
      "name": "InvoiceAdjustmentStatusEnumList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "InvoiceAdjustmentStatusEnum"
          }
        }
      }
    },
    "InvoiceAdjustmentStatusEnum": {
      "description": "status of invoice adjustment",
      "name": "InvoiceAdjustmentStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          },
          {
            "value": "not_payable"
          },
          {
            "value": "paid"
          },
          {
            "value": "pending"
          },
          {
            "value": "processing"
          }
        ]
      }
    },
    "SortDirEnum": {
      "name": "SortDirEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "asc"
          },
          {
            "value": "desc"
          }
        ]
      }
    },
    "EmailTypeRequired": {
      "description": "Worker's email address.",
      "name": "EmailTypeRequired",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "email",
            "minLength": 5
          }
        }
      }
    },
    "WorkerEmailType": {
      "description": "Worker's email address.",
      "name": "WorkerEmailType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "email",
            "minLength": 5
          }
        }
      }
    },
    "EmailType": {
      "description": "User's email address.",
      "name": "EmailType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "email",
            "minLength": 5
          }
        }
      }
    },
    "UrlTypeRequired": {
      "name": "UrlTypeRequired",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "uri",
            "minLength": 5
          }
        }
      }
    },
    "UrlType": {
      "name": "UrlType",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "format": "uri",
            "minLength": 5
          }
        }
      }
    },
    "PageInfo": {
      "name": "PageInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "cursor",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "total_rows",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "PageInfoWithoutCursor": {
      "name": "PageInfoWithoutCursor",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "total_rows",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "PageInfoWithoutCursorNew": {
      "name": "PageInfoWithoutCursorNew",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "total_rows",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "items_per_page",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 1,
                "maximum": 99
              }
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0,
                "maximum": 999999999
              }
            }
          }
        ]
      }
    },
    "MilestoneContainer": {
      "name": "MilestoneContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "Milestone"
            }
          }
        ]
      }
    },
    "MilestoneToCreateContainer": {
      "name": "MilestoneToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "MilestoneToCreate"
            }
          }
        ]
      }
    },
    "MilestoneToCreateFormWithFile": {
      "name": "MilestoneToCreateFormWithFile",
      "shape": {
        "type": "object",
        "extends": [
          "MilestoneProperties",
          "FileObject"
        ],
        "properties": []
      }
    },
    "MilestoneToCreate": {
      "name": "MilestoneToCreate",
      "shape": {
        "type": "object",
        "extends": [
          "MilestoneProperties"
        ],
        "properties": []
      }
    },
    "MilestoneProperties": {
      "name": "MilestoneProperties",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Amount to be paid for the milestone.",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Title of milestone.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Description of milestone.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "MilestoneListContainer": {
      "name": "MilestoneListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "MilestoneList"
            }
          }
        ]
      }
    },
    "MilestoneList": {
      "name": "MilestoneList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Milestone"
          }
        }
      }
    },
    "MilestoneReviewedBy": {
      "description": "Reviewer's information.",
      "name": "MilestoneReviewedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Reviewer's unique Deel id.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Reviewer's full name.",
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "MilestoneReportedBy": {
      "description": "Milestone creator.",
      "name": "MilestoneReportedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Reporter's unique Deel id.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Reporter's full name.",
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "Milestone": {
      "name": "Milestone",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the milestone.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Amount to be paid for the milestone.",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Indicates if the contractor has requested the approval for the milestone.",
            "key": "approval_requested",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Reviewer's information.",
            "key": "reviewed_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MilestoneReviewedBy"
              }
            }
          },
          {
            "description": "Milestone creator.",
            "key": "reported_by",
            "valueType": {
              "type": "id",
              "value": "MilestoneReportedBy"
            }
          },
          {
            "description": "Title of milestone.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Description of milestone.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Current status of milestone.",
            "key": "status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          }
        ]
      }
    },
    "MilestoneReviewsToCreateContainer": {
      "name": "MilestoneReviewsToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "MilestoneReviewsToCreate"
            }
          }
        ]
      }
    },
    "MilestoneReviewsToCreateStatus": {
      "name": "MilestoneReviewsToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "MilestoneReviewsToCreate": {
      "name": "MilestoneReviewsToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "MilestoneReviewsToCreateStatus"
            }
          },
          {
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "ids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "MilestoneReviewToCreateContainer": {
      "name": "MilestoneReviewToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "MilestoneReviewToCreate"
            }
          }
        ]
      }
    },
    "MilestoneReviewToCreateStatus": {
      "name": "MilestoneReviewToCreateStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "approved"
          },
          {
            "value": "declined"
          }
        ]
      }
    },
    "MilestoneReviewToCreate": {
      "name": "MilestoneReviewToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "MilestoneReviewToCreateStatus"
            }
          },
          {
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "OffCyclePaymentContainer": {
      "name": "OffCyclePaymentContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "OffCyclePayment"
            }
          }
        ]
      }
    },
    "OffCyclePaymentToCreateContainer": {
      "name": "OffCyclePaymentToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "OffCyclePaymentToCreate"
            }
          }
        ]
      }
    },
    "EstimateFirstPaymentContainer": {
      "name": "EstimateFirstPaymentContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EstimateFirstPayment"
            }
          }
        ]
      }
    },
    "OffCyclePaymentToCreate": {
      "description": "Details of invoice adjustment to create.",
      "name": "OffCyclePaymentToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateStringRequired"
            }
          },
          {
            "description": "Amount to be paid. Must be a positive number.",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 0
              }
            }
          },
          {
            "description": "Description of off-cycle payment.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EstimateFirstPaymentCompensationDetailsCalculationType": {
      "description": "Either works days or calendar days",
      "name": "EstimateFirstPaymentCompensationDetailsCalculationType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CUSTOM_AMOUNT"
          },
          {
            "value": "WORK_DAYS"
          },
          {
            "value": "CALENDAR_DAYS"
          },
          {
            "value": "FULL_AMOUNT"
          }
        ]
      }
    },
    "EstimateFirstPaymentCompensationDetails": {
      "name": "EstimateFirstPaymentCompensationDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Amount to be paid. Must be a positive number.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "key": "currency_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CurrencyCodeRequired"
              }
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkStatementCycleScaleEnum"
              }
            }
          },
          {
            "description": "Date invoice cycle ends.",
            "key": "cycle_end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 31
                }
              }
            }
          },
          {
            "key": "cycle_end_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkStatementCycleEndTypeEnum"
              }
            }
          },
          {
            "key": "payment_due_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WorkStatementPaymentDueTypeEnum"
              }
            }
          },
          {
            "key": "payment_due_days",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 90
                }
              }
            }
          },
          {
            "description": "Either works days or calendar days",
            "key": "calculation_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EstimateFirstPaymentCompensationDetailsCalculationType"
              }
            }
          },
          {
            "key": "work_week_start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WeekDaysEnum"
              }
            }
          },
          {
            "key": "work_week_end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WeekDaysEnum"
              }
            }
          }
        ]
      }
    },
    "EstimateFirstPayment": {
      "description": "Details of pro rata payment to create.",
      "name": "EstimateFirstPayment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContractTypeEnum"
            }
          },
          {
            "key": "country_code",
            "valueType": {
              "type": "id",
              "value": "CountryCode"
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "id",
              "value": "DateStringRequired"
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "id",
              "value": "EstimateFirstPaymentCompensationDetails"
            }
          }
        ]
      }
    },
    "ProRataCalculationType": {
      "description": "Either works days or calendar days",
      "name": "ProRataCalculationType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CUSTOM_AMOUNT"
          },
          {
            "value": "WORK_DAYS"
          },
          {
            "value": "CALENDAR_DAYS"
          },
          {
            "value": "FULL_AMOUNT"
          }
        ]
      }
    },
    "ProRata": {
      "description": "Details of the pro rata for the first payment",
      "name": "ProRata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Either works days or calendar days",
            "key": "calculation_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ProRataCalculationType"
              }
            }
          },
          {
            "description": "Rate to be paid.",
            "key": "rate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "description": "Daily rate to be paid.",
            "key": "daily_rate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "description": "Total to be paid.",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "description": "Total days to be work.",
            "key": "cycle_work_days",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          {
            "key": "work_week_start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WeekDaysEnum"
              }
            }
          },
          {
            "key": "work_week_end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WeekDaysEnum"
              }
            }
          },
          {
            "key": "cycle_start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateStringRequired"
              }
            }
          },
          {
            "key": "cycle_end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateStringRequired"
              }
            }
          }
        ]
      }
    },
    "FirstPaymentDate": {
      "description": "First payment date",
      "name": "FirstPaymentDate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "due",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateStringRequired"
              }
            }
          }
        ]
      }
    },
    "OffCyclePaymentListContainer": {
      "name": "OffCyclePaymentListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "OffCyclePaymentList"
            }
          }
        ]
      }
    },
    "OffCyclePaymentList": {
      "name": "OffCyclePaymentList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "OffCyclePayment"
          }
        }
      }
    },
    "OffCyclePaymentReviewedBy": {
      "name": "OffCyclePaymentReviewedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Profile if of the reviewer.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Full name of the reviewer.",
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Date of review.",
            "key": "reviewed_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Remarks made during review process.",
            "key": "remarks",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OffCyclePaymentReportedBy": {
      "name": "OffCyclePaymentReportedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Profile id of the creator.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Full name of the creator.",
            "key": "full_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OffCyclePayment": {
      "name": "OffCyclePayment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "UniqueObjectIdentifier"
            }
          },
          {
            "key": "public_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PublicId"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "InvoiceAdjustmentStatusEnum"
            }
          },
          {
            "description": "Description of the off-cycle payment entry.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateTimeStringRequired"
            }
          },
          {
            "key": "currency_code",
            "valueType": {
              "type": "id",
              "value": "CurrencyCodeRequired"
            }
          },
          {
            "description": "Amount of off-cycle payment.",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeStringRequired"
            }
          },
          {
            "key": "reviewed_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "OffCyclePaymentReviewedBy"
              }
            }
          },
          {
            "key": "reported_by",
            "valueType": {
              "type": "id",
              "value": "OffCyclePaymentReportedBy"
            }
          }
        ]
      }
    },
    "FileAttachmentInfo": {
      "description": "This object is used for linking file attachments to your records.",
      "name": "FileAttachmentInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Original filename you used to upload using attachments end-point.",
            "key": "filename",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "You can call attachments end-point, get key and URL to upload your file.",
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "FileObject": {
      "description": "This is the file you will upload in a multi-part form.",
      "name": "FileObject",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Upload the file you want to attach to this entry.",
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        ]
      }
    },
    "FileRefTypeEnum": {
      "description": "type of files allowed when uploading attachments",
      "name": "FileRefTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "application/pdf"
          },
          {
            "value": "text/csv"
          },
          {
            "value": "text/plain"
          },
          {
            "value": "image/jpeg"
          },
          {
            "value": "image/png"
          }
        ]
      }
    },
    "InputToCreateFileRefData": {
      "name": "InputToCreateFileRefData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "content_type",
            "valueType": {
              "type": "id",
              "value": "FileRefTypeEnum"
            }
          }
        ]
      }
    },
    "InputToCreateFileRef": {
      "name": "InputToCreateFileRef",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InputToCreateFileRefData"
            }
          }
        ]
      }
    },
    "OutputToCreateFileRef": {
      "name": "OutputToCreateFileRef",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OutputToCreateFileRefContainer": {
      "name": "OutputToCreateFileRefContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "OutputToCreateFileRef"
            }
          }
        ]
      }
    },
    "InputToPatchContractExternalId": {
      "name": "InputToPatchContractExternalId",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractExternalIdToPatch"
            }
          }
        ]
      }
    },
    "InputToCreatePgoTask": {
      "name": "InputToCreatePgoTask",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "PgoTaskToCreate"
            }
          }
        ]
      }
    },
    "InputToDeletePgoTask": {
      "name": "InputToDeletePgoTask",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "PgoTaskToDelete"
            }
          }
        ]
      }
    },
    "ContractExternalIdToPatch": {
      "name": "ContractExternalIdToPatch",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A unique identifier for the object provided by an external system.",
            "key": "external_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "PgoTaskToCreate": {
      "name": "PgoTaskToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Fixed rate for this task.",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateStringRequired"
            }
          },
          {
            "description": "Task description.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "attachment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FileAttachmentInfo"
              }
            }
          }
        ]
      }
    },
    "PgoTask": {
      "name": "PgoTask",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier of the task.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Fixed rate for this task.",
            "key": "amount",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "date_submitted",
            "valueType": {
              "type": "id",
              "value": "DateStringRequired"
            }
          },
          {
            "description": "Task description.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "TimesheetStatusEnum"
            }
          },
          {
            "key": "attachment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FileAttachmentInfo"
              }
            }
          }
        ]
      }
    },
    "PgoTaskToDelete": {
      "name": "PgoTaskToDelete",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Description of exclusion.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Request to delete recurring report.",
            "key": "delete_recurring_report",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TaskListContainer": {
      "name": "TaskListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TaskList"
            }
          }
        ]
      }
    },
    "TaskList": {
      "name": "TaskList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "PgoTask"
          }
        }
      }
    },
    "AgreementsSearchForm": {
      "description": "Convenient model to encapsulate query parameters to get a list of agreements.",
      "name": "AgreementsSearchForm",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "contract_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AgreementsParamLimit"
              }
            }
          },
          {
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AgreementsParamOffset"
              }
            }
          }
        ]
      }
    },
    "AgreementsParamLimit": {
      "description": "Maximum number of records to return. This is supposed to be an integer but query parameters are string. Maximum is 50.",
      "name": "AgreementsParamLimit",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "default": "50"
          }
        }
      }
    },
    "AgreementsParamOffset": {
      "description": "Offset/index of record for the next page of records to return. This is supposed to be an integer but query parameters are string.",
      "name": "AgreementsParamOffset",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "default": "0"
          }
        }
      }
    },
    "AgreementListContainer": {
      "name": "AgreementListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "AgreementList"
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PageInfoWithoutCursor"
              }
            }
          }
        ]
      }
    },
    "AgreementList": {
      "name": "AgreementList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Agreement"
          }
        }
      }
    },
    "AgreementMsa": {
      "name": "AgreementMsa",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "AgreementClientLegalEntity": {
      "name": "AgreementClientLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "AgreementProviderLegalEntity": {
      "name": "AgreementProviderLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "Agreement": {
      "name": "Agreement",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "agreement_title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "agreement_type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "msa",
            "valueType": {
              "type": "id",
              "value": "AgreementMsa"
            }
          },
          {
            "key": "client_legal_entity",
            "valueType": {
              "type": "id",
              "value": "AgreementClientLegalEntity"
            }
          },
          {
            "key": "provider_legal_entity",
            "valueType": {
              "type": "id",
              "value": "AgreementProviderLegalEntity"
            }
          }
        ]
      }
    },
    "InputToShieldContractData": {
      "name": "InputToShieldContractData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "MSA contract id (agreement).",
            "key": "agreement_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "InputToShieldContract": {
      "name": "InputToShieldContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InputToShieldContractData"
            }
          }
        ]
      }
    },
    "PremiumToAddContainer": {
      "name": "PremiumToAddContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "PremiumToAdd"
            }
          }
        ]
      }
    },
    "PremiumToAdd": {
      "name": "PremiumToAdd",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Is the Contractor Agreement selected on the Deel Platform perfectly reflecting your organizations relation and actual working practices with the contractor?",
            "key": "agreement_reflects_relation",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Workers doing certain jobs may be considered to be employees by law, even if they would otherwise be considered independent contractors under common law. Is the work of this worker characterized as: Apprentice, Trainee, Labourer, Driver, Medical worker, Legal worker, Construction worker or someone working in the fields of Finance/Investment?",
            "key": "contractor_characteristics",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "PremiumResultAddedContainer": {
      "name": "PremiumResultAddedContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "PremiumResultAdded"
            }
          }
        ]
      }
    },
    "EorEntitlementsContainer": {
      "name": "EorEntitlementsContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EorEntitlements"
            }
          }
        ]
      }
    },
    "EorTimeoffsContainer": {
      "name": "EorTimeoffsContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EorTimeoffs"
            }
          }
        ]
      }
    },
    "EorTimeoffsItemContainer": {
      "name": "EorTimeoffsItemContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EorTimeoffsItem"
            }
          }
        ]
      }
    },
    "EorClientTimeoffsContainer": {
      "name": "EorClientTimeoffsContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EorClientTimeoffs"
            }
          }
        ]
      }
    },
    "FinalPaymentCalculatedContainer": {
      "name": "FinalPaymentCalculatedContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "FinalPaymentCalculated"
            }
          }
        ]
      }
    },
    "FinalPaymentCalculatedLastCycle": {
      "description": "The last payment cycle.",
      "name": "FinalPaymentCalculatedLastCycle",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeStringRequired"
              }
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeStringRequired"
              }
            }
          },
          {
            "key": "completion_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeStringRequired"
              }
            }
          }
        ]
      }
    },
    "FinalPaymentCalculatedCalculationType": {
      "description": "Either works days or calendar days",
      "name": "FinalPaymentCalculatedCalculationType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CUSTOM_AMOUNT"
          },
          {
            "value": "WORK_DAYS"
          },
          {
            "value": "CALENDAR_DAYS"
          },
          {
            "value": "FULL_AMOUNT"
          }
        ]
      }
    },
    "FinalPaymentCalculated": {
      "name": "FinalPaymentCalculated",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The daily rate paid.",
            "key": "daily_rate",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Total amount to pay.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Dais remaining to end the contract.",
            "key": "remaining_days",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The last payment cycle.",
            "key": "last_cycle",
            "valueType": {
              "type": "id",
              "value": "FinalPaymentCalculatedLastCycle"
            }
          },
          {
            "description": "Either works days or calendar days",
            "key": "calculation_type",
            "valueType": {
              "type": "id",
              "value": "FinalPaymentCalculatedCalculationType"
            }
          },
          {
            "description": "The day the work week starts, 0 to 6",
            "key": "workweek_start",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "default": 1
              }
            }
          },
          {
            "description": "The day the work week starts, 0 to 6",
            "key": "workweek_end",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "default": 5
              }
            }
          }
        ]
      }
    },
    "PremiumResultAddedMisclassificationGuarantee": {
      "name": "PremiumResultAddedMisclassificationGuarantee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Legal costs.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Cover your legal defense costs.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PremiumResultAddedPenalties": {
      "name": "PremiumResultAddedPenalties",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Penalties.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Get indemnity against tax authority penalties, liabilities and fines.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PremiumResultAddedThirdPartyLiabilities": {
      "name": "PremiumResultAddedThirdPartyLiabilities",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Third-party liabilities.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Get indemnity against third parties up to $10k depending on the court's decision.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PremiumResultAdded": {
      "name": "PremiumResultAdded",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Deel Premium plan id.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Cost for Deel Premium.",
            "key": "calculated_premium",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "misclassification_guarantee",
            "valueType": {
              "type": "id",
              "value": "PremiumResultAddedMisclassificationGuarantee"
            }
          },
          {
            "key": "penalties",
            "valueType": {
              "type": "id",
              "value": "PremiumResultAddedPenalties"
            }
          },
          {
            "key": "third_party_liabilities",
            "valueType": {
              "type": "id",
              "value": "PremiumResultAddedThirdPartyLiabilities"
            }
          }
        ]
      }
    },
    "EorEntitlements": {
      "description": "Time-off Entitlements for EOR contracts.",
      "name": "EorEntitlements",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of entitlements.",
            "key": "entitlements",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EorEntitlementListItem"
              }
            }
          }
        ]
      }
    },
    "EorEntitlementListItemRolloverType": {
      "name": "EorEntitlementListItemRolloverType",
      "shape": {
        "type": "object",
        "extends": [
          "EorHolidaysRolloverType"
        ],
        "properties": []
      }
    },
    "EorEntitlementListItem": {
      "description": "Entitlement Item for a given year.",
      "name": "EorEntitlementListItem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Minimum vacation allowed.",
            "key": "vacation_allowed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Maximum sick leave allowed.",
            "key": "sick_leave_allowed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Vacation days requested by the employee.",
            "key": "vacation_requested",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Vacation days approved.",
            "key": "vacation_approved",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Vacation days used by the employee.",
            "key": "vacation_used",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Total number of vacation days requested, approved and used.",
            "key": "vacation_total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Sick days requested by the employee.",
            "key": "sick_leave_requested",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Sick days approved.",
            "key": "sick_leave_approved",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Sick days used by the employee.",
            "key": "sick_leave_used",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Total number of sick days requested, approved and used.",
            "key": "sick_leave_total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Other type of time off requested by the employee.",
            "key": "other_leave_requested",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Other type of time off days approved.",
            "key": "other_leave_approved",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Other type of time off days used by the employee.",
            "key": "other_leave_used",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Total number of other type of time off days requested, approved and used.",
            "key": "other_leave_total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "rollover_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorEntitlementListItemRolloverType"
              }
            }
          },
          {
            "key": "max_rollover_yearly",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          }
        ]
      }
    },
    "EorHolidaysRolloverType": {
      "name": "EorHolidaysRolloverType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "EXPIRATION"
          },
          {
            "value": "PAY_OUT"
          },
          {
            "value": "UNLIMITED_ROLLOVER"
          },
          {
            "value": "LIMITED_ROLLOVER"
          },
          {
            "value": "UNSET"
          }
        ]
      }
    },
    "ContractToTerminateContainer": {
      "name": "ContractToTerminateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractToTerminate"
            }
          }
        ]
      }
    },
    "ContractToTerminate": {
      "name": "ContractToTerminate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "completion_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "key": "terminate_now",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A message for the termination",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ContractTerminationResultContainer": {
      "name": "ContractTerminationResultContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "ContractTerminationResult"
            }
          }
        ]
      }
    },
    "ContractTerminationResultCompletionDate": {
      "description": "Date the contract is marked for completion",
      "name": "ContractTerminationResultCompletionDate",
      "shape": {
        "type": "object",
        "extends": [
          "DateString"
        ],
        "properties": []
      }
    },
    "ContractTerminationResult": {
      "name": "ContractTerminationResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Deel Contract ID.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date the contract is marked for completion",
            "key": "completion_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractTerminationResultCompletionDate"
              }
            }
          }
        ]
      }
    },
    "ContractTemplateListContainer": {
      "name": "ContractTemplateListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractTemplateList"
              }
            }
          }
        ]
      }
    },
    "ContractTemplateList": {
      "name": "ContractTemplateList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "ContractTemplateSummary"
          }
        }
      }
    },
    "ContractTemplateSummary": {
      "name": "ContractTemplateSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier of a contract template",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Title of a contract template",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "NoticePeriod": {
      "description": "Days before to notice the termination of contract for eather party.",
      "name": "NoticePeriod",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          }
        }
      }
    },
    "ContractCustomField": {
      "description": "Customized attributes on contracts (Employee ID, Project code, etc).",
      "name": "ContractCustomField",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Custom field property name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Custom field property value.",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsContainer": {
      "name": "EorCountryValidationsContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EorCountryValidations"
            }
          }
        ]
      }
    },
    "EorContractToCreateContainer": {
      "name": "EorContractToCreateContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EorContractToCreate"
            }
          }
        ]
      }
    },
    "EorContractCreatedContainer": {
      "name": "EorContractCreatedContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "EorContractCreated"
            }
          }
        ]
      }
    },
    "EorContractToCreateEmployeeAddress": {
      "name": "EorContractToCreateEmployeeAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Street and number.",
            "key": "street",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "City name.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "State code.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Zip code.",
            "key": "zip",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CountryCode"
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateEmployee": {
      "name": "EorContractToCreateEmployee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Employee's first name.",
            "key": "first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Employee's last name.",
            "key": "last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Employee's email address.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Employee's nationality.",
            "key": "nationality",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorContractToCreateEmployeeAddress"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateEmploymentType": {
      "description": "Is it a full-time contract or a part-time contract?",
      "name": "EorContractToCreateEmploymentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Full-time"
          },
          {
            "value": "Part-time"
          }
        ]
      }
    },
    "EorContractToCreateEmploymentTimeOffType": {
      "description": "If you want to use standard number of holidays for this employee, choose \"STANDARD\". If you want to enter a specific number of holidays, choose \"SPECIFIC\" and enter the number of days in the holidays field.",
      "name": "EorContractToCreateEmploymentTimeOffType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "STANDARD"
          },
          {
            "value": "SPECIFIC"
          }
        ]
      }
    },
    "EorContractToCreateEmployment": {
      "name": "EorContractToCreateEmployment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CountryCode"
              }
            }
          },
          {
            "description": "State code of the state/province where the this person will be employed.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Is it a full-time contract or a part-time contract?",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractToCreateEmploymentType"
              }
            }
          },
          {
            "description": "Do you require Deel to apply for work visa for this person?",
            "key": "work_visa_required",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "description": "Number of probation days.",
            "key": "probation_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Scope of work description.",
            "key": "scope_of_work",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "If you want to use standard number of holidays for this employee, choose \"STANDARD\". If you want to enter a specific number of holidays, choose \"SPECIFIC\" and enter the number of days in the holidays field.",
            "key": "time_off_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractToCreateEmploymentTimeOffType"
              }
            }
          },
          {
            "description": "Enter the number of holidays. Leave this field blank if you are chooseing \"STANDARD\" time_off_type.",
            "key": "holidays",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateSeniority": {
      "name": "EorContractToCreateSeniority",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Enter the Id retrieved from the seniority lookup endpoint. Enter 34 for \"Not Applicable\".",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateClientLegalEntity": {
      "name": "EorContractToCreateClientLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Enter the Id of legal entity under which you want to hire this person. Use /legal-entities endpoint to retrieve a list of legal entities in your organization.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateClientTeam": {
      "name": "EorContractToCreateClientTeam",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Enter the Id of team this person will be hired in. Use /teams endpoint to retrieve a list of teams in your organization.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateClient": {
      "name": "EorContractToCreateClient",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "legal_entity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractToCreateClientLegalEntity"
              }
            }
          },
          {
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractToCreateClientTeam"
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateCompensationDetailsVariableCompensationType": {
      "description": "Should be set only if variable_compensation is set. It can be PERCENTAGE or FIXED.",
      "name": "EorContractToCreateCompensationDetailsVariableCompensationType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PERCENTAGE"
          },
          {
            "value": "FIXED"
          }
        ]
      }
    },
    "EorContractToCreateCompensationDetails": {
      "name": "EorContractToCreateCompensationDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Employee's gross annual salary.",
            "key": "salary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Salary currency.",
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Varable compensation. For example, if the person will earn 5% of the gross annual salary as the variable compensation, enter 5.",
            "key": "variable_compensation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Should be set only if variable_compensation is set. It can be PERCENTAGE or FIXED.",
            "key": "variable_compensation_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorContractToCreateCompensationDetailsVariableCompensationType"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractToCreateQuoteAdditionalFieldsWorkerType": {
      "description": "Type of worker.",
      "name": "EorContractToCreateQuoteAdditionalFieldsWorkerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Skilled"
          },
          {
            "value": "Unskilled"
          }
        ]
      }
    },
    "EorContractToCreateQuoteAdditionalFields": {
      "description": "Some countries require additional employee information for employment contracts.",
      "name": "EorContractToCreateQuoteAdditionalFields",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Employee's gender.",
            "key": "gender",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Type of worker.",
            "key": "worker_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractToCreateQuoteAdditionalFieldsWorkerType"
              }
            }
          },
          {
            "description": "Employee's date of birth.",
            "key": "dob",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractToCreate": {
      "name": "EorContractToCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractToCreateEmployee"
              }
            }
          },
          {
            "key": "employment",
            "valueType": {
              "type": "id",
              "value": "EorContractToCreateEmployment"
            }
          },
          {
            "description": "Employee's job title.",
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "seniority",
            "valueType": {
              "type": "id",
              "value": "EorContractToCreateSeniority"
            }
          },
          {
            "key": "client",
            "valueType": {
              "type": "id",
              "value": "EorContractToCreateClient"
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "id",
              "value": "EorContractToCreateCompensationDetails"
            }
          },
          {
            "description": "Some countries require additional employee information for employment contracts.",
            "key": "quote_additional_fields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorContractToCreateQuoteAdditionalFields"
                }
              }
            }
          },
          {
            "description": "Healthare plan Id. You can see available healthcare plans in the country guide endpoint.",
            "key": "health_plan_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractCreatedEmployment": {
      "name": "EorContractCreatedEmployment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Scope of work description.",
            "key": "scope_of_work",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          },
          {
            "description": "Country of employement.",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "State code of the state/province where the this person will be employed.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Do you require Deel to apply for work visa for this person?",
            "key": "work_visa_required",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "If you want to use standard number of holidays for this employee, choose \"STANDARD\". If you want to enter a specific number of holidays, choose \"SPECIFIC\" and enter the number of days in the holidays field.",
            "key": "time_off_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of probation days.",
            "key": "probation_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Number of calculate holidays for this contract.",
            "key": "calculated_holidays",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractCreatedClientLegalEntity": {
      "name": "EorContractCreatedClientLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Legal entity name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractCreatedClient": {
      "name": "EorContractCreatedClient",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "legal_entity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractCreatedClientLegalEntity"
              }
            }
          }
        ]
      }
    },
    "EorContractCreatedCompensationDetails": {
      "name": "EorContractCreatedCompensationDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Gross annual salary.",
            "key": "salary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Currency of gross annual salary.",
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Variable compensation acount or percentage.",
            "key": "variable_compensation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Type fo variable compensation.",
            "key": "variable_compensation_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EorContractCreatedEmployee": {
      "name": "EorContractCreatedEmployee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Employee's legal name.",
            "key": "legal_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Employee's first name.",
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Employee's last name.",
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Employee's email.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractCreatedHealthPlan": {
      "name": "EorContractCreatedHealthPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Health plan ID",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Health plan name",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorContractCreated": {
      "name": "EorContractCreated",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Id of the contract quote created",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractTypeEnum"
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeString"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContractStatusEnum"
              }
            }
          },
          {
            "description": "Employee's job title.",
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "employment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractCreatedEmployment"
              }
            }
          },
          {
            "key": "client",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractCreatedClient"
              }
            }
          },
          {
            "key": "compensation_details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractCreatedCompensationDetails"
              }
            }
          },
          {
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorContractCreatedEmployee"
              }
            }
          },
          {
            "key": "health_plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorContractCreatedHealthPlan"
                }
              }
            }
          },
          {
            "key": "seniority",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Seniority"
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsHoliday": {
      "description": "Range of the number of holidays.",
      "name": "EorCountryValidationsHoliday",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Minimum number of holidays required for a legally compliant contract.",
            "key": "min",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsPartTimeHolidayType": {
      "name": "EorCountryValidationsPartTimeHolidayType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PRORATED"
          },
          {
            "value": "STANDARD"
          },
          {
            "value": "SPECIFIC"
          }
        ]
      }
    },
    "EorCountryValidationsPartTimeHoliday": {
      "description": "Holiday type and range for part-time contracts.",
      "name": "EorCountryValidationsPartTimeHoliday",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsPartTimeHolidayType"
              }
            }
          },
          {
            "description": "Minimum number of holidays required for a legally compliant contract.",
            "key": "min",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsSickDays": {
      "name": "EorCountryValidationsSickDays",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Minimum number of sick days required for a legally compliant contract.",
            "key": "min",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Maximum number of sick days allowed for a legally compliant contract.",
            "key": "max",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsSalary": {
      "description": "Salary range.",
      "name": "EorCountryValidationsSalary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Minimum wage for a legally compliant contract.",
            "key": "min",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Maximum wage allowed for a legally compliant contract.",
            "key": "max",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsProbation": {
      "description": "Probation period range.",
      "name": "EorCountryValidationsProbation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Minimum probation days required for a legally compliant contract.",
            "key": "min",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          },
          {
            "description": "Maximum probation days allowed for a legally compliant contract.",
            "key": "max",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsPartTimeProbation": {
      "description": "Probation period range for part-time contracts.",
      "name": "EorCountryValidationsPartTimeProbation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Minimum probation days required for a legally compliant contract.",
            "key": "min",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Maximum probation days allowed for a legally compliant contract.",
            "key": "max",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsWorkScheduleDays": {
      "name": "EorCountryValidationsWorkScheduleDays",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "max",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsWorkScheduleHours": {
      "name": "EorCountryValidationsWorkScheduleHours",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "max",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsWorkSchedule": {
      "description": "Employee's Work schedule in days and hours.",
      "name": "EorCountryValidationsWorkSchedule",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "days",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsWorkScheduleDays"
              }
            }
          },
          {
            "key": "hours",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsWorkScheduleHours"
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsDefiniteContractType": {
      "name": "EorCountryValidationsDefiniteContractType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ALLOWED_WITHOUT_LIMITATION"
          },
          {
            "value": "ALLOWED_WITH_MAXIMUM_LIMITATION"
          },
          {
            "value": "NOT_ALLOWED"
          }
        ]
      }
    },
    "EorCountryValidationsDefiniteContract": {
      "description": "Conditions to make definitive contract.",
      "name": "EorCountryValidationsDefiniteContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsDefiniteContractType"
              }
            }
          },
          {
            "key": "maximum_limitation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidationsHealthInsurance": {
      "name": "EorCountryValidationsHealthInsurance",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "HealthInsuranceStatusEnum"
              }
            }
          },
          {
            "key": "providers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "HealthInsuranceProvider"
                }
              }
            }
          }
        ]
      }
    },
    "EorCountryValidations": {
      "name": "EorCountryValidations",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Range of the number of holidays.",
            "key": "holiday",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsHoliday"
              }
            }
          },
          {
            "description": "Holiday type and range for part-time contracts.",
            "key": "part_time_holiday",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsPartTimeHoliday"
              }
            }
          },
          {
            "key": "sick_days",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsSickDays"
              }
            }
          },
          {
            "description": "Salary range.",
            "key": "salary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsSalary"
              }
            }
          },
          {
            "description": "Probation period range.",
            "key": "probation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsProbation"
              }
            }
          },
          {
            "description": "Probation period range for part-time contracts.",
            "key": "part_time_probation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsPartTimeProbation"
              }
            }
          },
          {
            "description": "Employee's Work schedule in days and hours.",
            "key": "work_schedule",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsWorkSchedule"
              }
            }
          },
          {
            "description": "Insurance fee.",
            "key": "insurance_fee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Country currency.",
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Country name.",
            "key": "hiring_guide_country_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Calculate employee's minimum start date using the start date buffer. Today's date + (number of business days x start_date_buffer) = Minimum start date.",
            "key": "start_date_buffer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Conditions to make definitive contract.",
            "key": "definite_contract",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorCountryValidationsDefiniteContract"
              }
            }
          },
          {
            "description": "Country specific notes and information.",
            "key": "adjustments_information_box",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "health_insurance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorCountryValidationsHealthInsurance"
                }
              }
            }
          }
        ]
      }
    },
    "HealthInsuranceProviderAttachmentsItems": {
      "name": "HealthInsuranceProviderAttachmentsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "HealthInsuranceProviderPlansItems": {
      "name": "HealthInsuranceProviderPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Insurance plan id.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Insurance plan name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Insurance price.",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Insurance payment currency.",
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "is_enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "HealthInsuranceProvider": {
      "description": "Health insurance provider.",
      "name": "HealthInsuranceProvider",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of insurance provider.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "is_unisure",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Insurance provider's home page url.",
            "key": "home_page_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Payment currency.",
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Insurance type.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Insurance cycle ending rule.",
            "key": "ending_rule",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Days to cancel the insurance.",
            "key": "days_to_cancel",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          },
          {
            "description": "URL to price info.",
            "key": "pricing_info_link",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          },
          {
            "description": "URL to price info.",
            "key": "fixed_price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "File attachments.",
            "key": "attachments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "HealthInsuranceProviderAttachmentsItems"
                }
              }
            }
          },
          {
            "description": "Health insurance info banner.",
            "key": "client_info_banner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          },
          {
            "key": "is_available_for_new_quotes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "HealthInsuranceProviderPlansItems"
                }
              }
            }
          }
        ]
      }
    },
    "EorClientTimeoffs": {
      "name": "EorClientTimeoffs",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of employee time offs.",
            "key": "employees",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EorTimeoffsEmployeeItem"
              }
            }
          },
          {
            "key": "total_requests",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "EorTimeoffsEmployeeItem": {
      "name": "EorTimeoffsEmployeeItem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "eor_contract_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "contract_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of employee vacation time offs.",
            "key": "vacations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EorClientTimeoffRequests"
              }
            }
          },
          {
            "description": "List of employee sick leave time offs.",
            "key": "sick_leaves",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EorClientTimeoffRequests"
              }
            }
          },
          {
            "description": "List of all other employee time offs.",
            "key": "others",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EorClientTimeoffRequests"
              }
            }
          },
          {
            "key": "time_zones",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "EorClientTimeoffRequests": {
      "name": "EorClientTimeoffRequests",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Days off requested by employee.",
            "key": "days_requested",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Days off approved.",
            "key": "current_approved",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Total number of days off allowed per year.",
            "key": "yearly_limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Too many days off requested by employee.",
            "key": "over_annual_limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Total number of time off requests this year.",
            "key": "yearly_requests",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "List of time offs.",
            "key": "requests",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EorTimeoffsItem"
              }
            }
          }
        ]
      }
    },
    "EorTimeoffs": {
      "description": "List of time offs.",
      "name": "EorTimeoffs",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "EorTimeoffsItem"
          }
        }
      }
    },
    "EorTimeoffsItemCreatedAt": {
      "name": "EorTimeoffsItemCreatedAt",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "EorTimeoffsItemUpdatedAt": {
      "name": "EorTimeoffsItemUpdatedAt",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "EorTimeoffsItemStartDate": {
      "name": "EorTimeoffsItemStartDate",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "EorTimeoffsItemEndDate": {
      "name": "EorTimeoffsItemEndDate",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "EorTimeoffsItemChangeRequest": {
      "description": "Only valid if the requester asks to change existing time off and it has been reviewed.",
      "name": "EorTimeoffsItemChangeRequest",
      "shape": {
        "type": "object",
        "extends": [
          "EorTimeoffsBaseItem"
        ],
        "properties": []
      }
    },
    "EorTimeoffsItem": {
      "name": "EorTimeoffsItem",
      "shape": {
        "type": "object",
        "extends": [
          "EorTimeoffsBaseItem"
        ],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "contract_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "EorTimeoffsItemCreatedAt"
            }
          },
          {
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsItemUpdatedAt"
                }
              }
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EorTimeoffsItemStartDate"
              }
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsItemEndDate"
                }
              }
            }
          },
          {
            "description": "Indicates if it is possible to make changes to the time off request.",
            "key": "can_request_changes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "If true, an update to the original time off request was made.",
            "key": "is_updated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "Only valid if the requester asks to change existing time off and it has been reviewed.",
            "key": "change_request",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsItemChangeRequest"
                }
              }
            }
          },
          {
            "description": "List of changes applied to the time off.",
            "key": "applied_changes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsBaseItem"
                }
              }
            }
          }
        ]
      }
    },
    "EorTimeoffsBaseItemType": {
      "description": "The type of time off.",
      "name": "EorTimeoffsBaseItemType",
      "shape": {
        "type": "object",
        "extends": [
          "TimeoffsTypeEnum"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItemRequestedAt": {
      "description": "Timestamp when time off was requested.",
      "name": "EorTimeoffsBaseItemRequestedAt",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItemReviewedAt": {
      "description": "Timestamp when time off was reviewed.",
      "name": "EorTimeoffsBaseItemReviewedAt",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItemStatus": {
      "description": "Status of the time off request.",
      "name": "EorTimeoffsBaseItemStatus",
      "shape": {
        "type": "object",
        "extends": [
          "TimeoffsStatusEnum"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItemRequester": {
      "description": "Employee who requested the time off.",
      "name": "EorTimeoffsBaseItemRequester",
      "shape": {
        "type": "object",
        "extends": [
          "TimeoffsProfile"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItemReviewer": {
      "description": "User who reviewed the time off.",
      "name": "EorTimeoffsBaseItemReviewer",
      "shape": {
        "type": "object",
        "extends": [
          "TimeoffsProfile"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItemSingleDate": {
      "name": "EorTimeoffsBaseItemSingleDate",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItemAttachments": {
      "name": "EorTimeoffsBaseItemAttachments",
      "shape": {
        "type": "object",
        "extends": [
          "TimeoffsAttachments"
        ],
        "properties": []
      }
    },
    "EorTimeoffsBaseItem": {
      "name": "EorTimeoffsBaseItem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Reason for requesting time off.",
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The type of time off.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "EorTimeoffsBaseItemType"
            }
          },
          {
            "description": "Timestamp when time off was requested.",
            "key": "requested_at",
            "valueType": {
              "type": "id",
              "value": "EorTimeoffsBaseItemRequestedAt"
            }
          },
          {
            "description": "Timestamp when time off was reviewed.",
            "key": "reviewed_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsBaseItemReviewedAt"
                }
              }
            }
          },
          {
            "description": "Reason why time off was denied.",
            "key": "denial_reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if multiple time off days are requested.",
            "key": "has_multiple_dates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "Status of the time off request.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "EorTimeoffsBaseItemStatus"
            }
          },
          {
            "description": "Custom title for the time off. Only specify if type is \"OTHER\".",
            "key": "other_timeoff_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Employee who requested the time off.",
            "key": "requester",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsBaseItemRequester"
                }
              }
            }
          },
          {
            "description": "User who reviewed the time off.",
            "key": "reviewer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsBaseItemReviewer"
                }
              }
            }
          },
          {
            "description": "Days used at the start year.",
            "key": "days_used_start_year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Days used at the end year.",
            "key": "days_used_end_year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Total number of time off days used.",
            "key": "total_days_used",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates if the first day of time off is a half day.",
            "key": "start_date_is_half_day",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Indicates if the last day of time off is a half day.",
            "key": "end_date_is_half_day",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "single_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsBaseItemSingleDate"
                }
              }
            }
          },
          {
            "description": "If true, only a single date was specified.",
            "key": "date_is_half_day",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "key": "attachments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EorTimeoffsBaseItemAttachments"
                }
              }
            }
          }
        ]
      }
    },
    "TimeoffsAttachments": {
      "description": "A list of attachments. 2022-09-08 FE only allows for \"SICK LEAVE\"",
      "name": "TimeoffsAttachments",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "TimeoffsAttachmentsItem"
          }
        }
      }
    },
    "TimeoffsAttachmentsItem": {
      "description": "A item in attachments array. 2022-09-08 FE only allows for \"SICK LEAVE\"",
      "name": "TimeoffsAttachmentsItem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The file name",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The file name extension",
            "key": "file_extension",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "TimeoffsStatusEnum": {
      "name": "TimeoffsStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "REQUESTED"
          },
          {
            "value": "APPROVED"
          },
          {
            "value": "REJECTED"
          }
        ]
      }
    },
    "TimeoffsTypeEnum": {
      "name": "TimeoffsTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "VACATION"
          },
          {
            "value": "SICK_LEAVE"
          },
          {
            "value": "OTHER"
          }
        ]
      }
    },
    "HealthInsuranceStatusEnum": {
      "description": "Health insurance status.",
      "name": "HealthInsuranceStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "REQUIRED"
          },
          {
            "value": "ENABLED"
          },
          {
            "value": "DISABLED"
          }
        ]
      }
    },
    "InvoiceContractTypes": {
      "description": "invoice's allowed contract types",
      "name": "InvoiceContractTypes",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "paid"
          },
          {
            "value": "processing"
          },
          {
            "value": "canceled"
          },
          {
            "value": "skipped"
          },
          {
            "value": "failed"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "InvoiceContract": {
      "name": "InvoiceContract",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier of a Deel contract.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Contract title.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Type of Deel contract.",
            "key": "contract_type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "TimeoffsProfilePicUrl": {
      "description": "Avatar or selfie.",
      "name": "TimeoffsProfilePicUrl",
      "shape": {
        "type": "object",
        "extends": [
          "UrlType"
        ],
        "properties": []
      }
    },
    "TimeoffsProfileProfileType": {
      "name": "TimeoffsProfileProfileType",
      "shape": {
        "type": "object",
        "extends": [
          "ProfileTypeEnum"
        ],
        "properties": []
      }
    },
    "TimeoffsProfile": {
      "name": "TimeoffsProfile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Avatar or selfie.",
            "key": "pic_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeoffsProfilePicUrl"
                }
              }
            }
          },
          {
            "key": "profile_type",
            "valueType": {
              "type": "id",
              "value": "TimeoffsProfileProfileType"
            }
          },
          {
            "description": "Only valid for requester. True if requester is an employee.",
            "key": "is_employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "TimeoffToReviewContainer": {
      "name": "TimeoffToReviewContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TimeoffReview"
            }
          }
        ]
      }
    },
    "TimeoffReview": {
      "name": "TimeoffReview",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Approve or decline employee's time off request.",
            "key": "is_approved",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Denial reason for the time off requested.",
            "key": "denial_reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "TimeoffTypeListContainer": {
      "name": "TimeoffTypeListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "TimeoffTypeList"
            }
          }
        ]
      }
    },
    "TimeoffTypeList": {
      "name": "TimeoffTypeList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "CreateTimeoffContainer": {
      "name": "CreateTimeoffContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "CreateTimeoff"
            }
          }
        ]
      }
    },
    "CreateTimeoffType": {
      "description": "Time off type.",
      "name": "CreateTimeoffType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "VACATION"
          },
          {
            "value": "SICK_LEAVE"
          },
          {
            "value": "OTHER"
          }
        ]
      }
    },
    "CreateTimeoff": {
      "name": "CreateTimeoff",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Time off type.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "CreateTimeoffType"
            }
          },
          {
            "description": "Start date of employee's time off.",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "End date of employee's time off.",
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "If true, then multiple time off days were requested. You must supply a start and end date. If false, end date is ignored",
            "key": "with_multiple_dates",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Description for employee's time off.",
            "key": "reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Is the start day a half day?",
            "key": "is_start_date_half_day",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Is the start day a half day?",
            "key": "is_end_date_half_day",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom name for this time off.",
            "key": "other_timeoff_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EmployeeListContainer": {
      "name": "EmployeeListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EmployeeList"
              }
            }
          }
        ]
      }
    },
    "EmployeeListPaymentsItems": {
      "name": "EmployeeListPaymentsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "contract_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EmployeeListClientLegalEntity": {
      "name": "EmployeeListClientLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "EmployeeListMonthlyPayment": {
      "name": "EmployeeListMonthlyPayment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "EmployeeList": {
      "name": "EmployeeList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "timezone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "personal_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "birth_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "pic_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "nullable"
                }
              }
            }
          },
          {
            "key": "hiring_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "team_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "payments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeListPaymentsItems"
                }
              }
            }
          },
          {
            "key": "hourly_report_total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "client_legal_entity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EmployeeListClientLegalEntity"
              }
            }
          },
          {
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "seniority",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "completion_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "hiring_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "monthly_payment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "EmployeeListMonthlyPayment"
              }
            }
          }
        ]
      }
    },
    "WebhookItemStatus": {
      "description": "Status of webhook.",
      "name": "WebhookItemStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "enabled"
          },
          {
            "value": "disabled"
          }
        ]
      }
    },
    "WebhookItem": {
      "name": "WebhookItem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Webhook subscription's unique identifier.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Webhook subscription name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Webhook subscription description.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Status of webhook.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "WebhookItemStatus"
            }
          },
          {
            "description": "Endpoint to receive webhook.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The webhook's signing key, used to generate webhook signatures.",
            "key": "signing_key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Deel API version. Currently Deel only has one version: v1.",
            "key": "api_version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "default": "v1"
              }
            }
          },
          {
            "description": "The list of events to enable for this subscription.",
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Time at which the webhook was created.",
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Time at which the webhook was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Property to hide the webhook from frontend view. Commonly by Dell 3rd party apps",
            "key": "hidden",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WebhookListResponse": {
      "name": "WebhookListResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "WebhookItem"
              }
            }
          }
        ]
      }
    },
    "CreateWebhookRequestStatus": {
      "description": "Status of webhook.",
      "name": "CreateWebhookRequestStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "enabled"
          },
          {
            "value": "disabled"
          }
        ]
      }
    },
    "CreateWebhookRequest": {
      "name": "CreateWebhookRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Webhook subscription name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Webhook subscription description.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Status of webhook.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "CreateWebhookRequestStatus"
            }
          },
          {
            "description": "Endpoint to receive webhook.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The webhook's signing key, used to generate webhook signatures.",
            "key": "signing_key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Deel API version. Currently Deel only has one version: v1.",
            "key": "api_version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The list of events to enable for this subscription.",
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhookItemResponse": {
      "name": "WebhookItemResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "WebhookItem"
            }
          }
        ]
      }
    },
    "PatchWebhookRequestStatus": {
      "description": "Status of webhook.",
      "name": "PatchWebhookRequestStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "enabled"
          },
          {
            "value": "disabled"
          }
        ]
      }
    },
    "PatchWebhookRequest": {
      "name": "PatchWebhookRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Webhook subscription name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Webhook subscription description.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Status of webhook.",
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "PatchWebhookRequestStatus"
            }
          },
          {
            "description": "Endpoint to receive webhook.",
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The webhook's signing key, used to generate webhook signatures.",
            "key": "signing_key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The list of events to enable for this subscription.",
            "key": "events",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PaymentObject": {
      "name": "PaymentObject",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rows",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PaymentList"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "PaymentListContainer": {
      "name": "PaymentListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "PaymentObject"
            }
          }
        ]
      }
    },
    "PaymentList": {
      "name": "PaymentList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Payment"
          }
        }
      }
    },
    "PaymentWorkerList": {
      "name": "PaymentWorkerList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "PaymentWorker"
          }
        }
      }
    },
    "PaymentWorker": {
      "name": "PaymentWorker",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Worker's full name.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "default": ""
              }
            }
          },
          {
            "description": "URL to worker's Deel avatar.",
            "key": "picUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The worker's Deel contract Id.",
            "key": "contract_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "PaymentMethod": {
      "name": "PaymentMethod",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "PaymentMethodEnum"
            }
          }
        ]
      }
    },
    "PaymentPaidAt": {
      "description": "Timestamp when payment was paid.",
      "name": "PaymentPaidAt",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "PaymentCreatedAt": {
      "description": "Timestamp when the record was created.",
      "name": "PaymentCreatedAt",
      "shape": {
        "type": "object",
        "extends": [
          "DateTimeString"
        ],
        "properties": []
      }
    },
    "Payment": {
      "name": "Payment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier of the payment.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "payment_method",
            "valueType": {
              "type": "id",
              "value": "PaymentMethod"
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "PaymentStatusEnum"
            }
          },
          {
            "key": "payment_currency",
            "valueType": {
              "type": "id",
              "value": "CurrencyCode"
            }
          },
          {
            "key": "label",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Timestamp when payment was paid.",
            "key": "paid_at",
            "valueType": {
              "type": "id",
              "value": "PaymentPaidAt"
            }
          },
          {
            "description": "Timestamp when the record was created.",
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "PaymentCreatedAt"
            }
          },
          {
            "description": "Total paid.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "workers",
            "valueType": {
              "type": "id",
              "value": "PaymentWorkerList"
            }
          }
        ]
      }
    },
    "PaymentBreakDownContainer": {
      "name": "PaymentBreakDownContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "PaymentBreakDown"
              }
            }
          }
        ]
      }
    },
    "PeopleContainer": {
      "name": "PeopleContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "People"
              }
            }
          }
        ]
      }
    },
    "PeopleMeContainer": {
      "name": "PeopleMeContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ContractDocumentContainer": {
      "name": "ContractDocumentContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "FileAttachmentInfo"
            }
          }
        ]
      }
    },
    "PaymentBreakDown": {
      "name": "PaymentBreakDown",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "general_ledger_account",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Worker's unique identifier.",
            "key": "contractor_unique_identifier",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Worker's name.",
            "key": "contractor_employee_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Worker's email.",
            "key": "contractor_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Invoice number.",
            "key": "invoice_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Currency code.",
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "payment_currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "receipt_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "work",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "bonus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "expenses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "commissions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "deductions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "overtime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "pro_rata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "others",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "processing_fee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "adjustment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Total due.",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Total in payment currency.",
            "key": "total_payment_currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date of payment.",
            "key": "payment_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Country of the contract.",
            "key": "contract_country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Contract start date.",
            "key": "contract_start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "approvers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "approve_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "InvoiceObject": {
      "name": "InvoiceObject",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "rows",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "InvoiceList"
              }
            }
          },
          {
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "InvoiceDownloadObject": {
      "name": "InvoiceDownloadObject",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Requested invoice id to download.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL to requested invoice to download.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Expiration date time of download URL.",
            "key": "expires_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "InvoiceListContainer": {
      "name": "InvoiceListContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceObject"
            }
          }
        ]
      }
    },
    "InvoiceDownloadContainer": {
      "name": "InvoiceDownloadContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "InvoiceDownloadObject"
            }
          }
        ]
      }
    },
    "InvoiceList": {
      "name": "InvoiceList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Invoice"
          }
        }
      }
    },
    "ExchangeRatesRates": {
      "name": "ExchangeRatesRates",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ExchangeRates": {
      "name": "ExchangeRates",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "risk",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "rates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ExchangeRatesRates"
              }
            }
          }
        ]
      }
    },
    "Invoice": {
      "name": "Invoice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier of the invoice.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Unique oid of the invoice.",
            "key": "invoice_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "InvoiceStatusEnum"
            }
          },
          {
            "key": "currency",
            "valueType": {
              "type": "id",
              "value": "CurrencyCode"
            }
          },
          {
            "key": "payment_currency",
            "valueType": {
              "type": "id",
              "value": "CurrencyCode"
            }
          },
          {
            "key": "contract",
            "valueType": {
              "type": "id",
              "value": "InvoiceContract"
            }
          },
          {
            "key": "created_at",
            "valueType": {
              "type": "id",
              "value": "DateTimeString"
            }
          },
          {
            "description": "Total invoice amount including Fee and VAT.",
            "key": "total",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Invoice label as displayed in Deel platform.",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "payment_method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaymentMethodEnum"
                }
              }
            }
          },
          {
            "key": "paid_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeString"
              }
            }
          },
          {
            "key": "money_received_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeString"
              }
            }
          },
          {
            "key": "payment_processed_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateTimeString"
              }
            }
          },
          {
            "description": "Fee added to the amount.",
            "key": "fee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "key": "exchange_fee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Billed amount.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Amount of VAT.",
            "key": "vat_total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "VAT percentrage.",
            "key": "vat_percentage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the invoice is overdue.",
            "key": "is_overdue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the invoice related to an offcycle payment.",
            "key": "is_offcycle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "InvoiceContractor": {
      "name": "InvoiceContractor",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "default": ""
              }
            }
          }
        ]
      }
    },
    "HrisDirectEmployeeDetails": {
      "name": "HrisDirectEmployeeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "first_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100
              }
            }
          },
          {
            "key": "last_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 100
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 255
              }
            }
          },
          {
            "key": "work_email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 255
              }
            }
          },
          {
            "key": "nationality",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              }
            }
          },
          {
            "key": "country",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2
              }
            }
          },
          {
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 50
                }
              }
            }
          }
        ]
      }
    },
    "HrisTeamInformation": {
      "name": "HrisTeamInformation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "team_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "legal_entity_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "HrisJobInformationBase": {
      "name": "HrisJobInformationBase",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "seniority_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "HrisJobInformationTitleId": {
      "name": "HrisJobInformationTitleId",
      "shape": {
        "type": "object",
        "extends": [
          "HrisJobInformationBase"
        ],
        "properties": [
          {
            "key": "job_title_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "HrisJobInformationTitleName": {
      "name": "HrisJobInformationTitleName",
      "shape": {
        "type": "object",
        "extends": [
          "HrisJobInformationBase"
        ],
        "properties": [
          {
            "key": "job_title_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "HrisCompensation": {
      "name": "HrisCompensation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "gross_annual_salary",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "double"
              }
            }
          },
          {
            "key": "currency",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 3,
                "maxLength": 3
              }
            }
          }
        ]
      }
    },
    "HrisContractBase": {
      "name": "HrisContractBase",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Hris Direct employee contract ID",
            "key": "contract_oid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "start_date",
            "valueType": {
              "type": "id",
              "value": "DateStringRequired"
            }
          },
          {
            "key": "employee_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DateString"
              }
            }
          }
        ]
      }
    },
    "HrisContractPartTimeEmploymentType": {
      "name": "HrisContractPartTimeEmploymentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PART_TIME"
          }
        ]
      }
    },
    "HrisContractPartTime": {
      "name": "HrisContractPartTime",
      "shape": {
        "type": "object",
        "extends": [
          "HrisContractBase"
        ],
        "properties": [
          {
            "key": "employment_type",
            "valueType": {
              "type": "id",
              "value": "HrisContractPartTimeEmploymentType"
            }
          },
          {
            "description": "required if employmentType is \"PART_TIME\"",
            "key": "part_time_percentage",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 1,
                "maximum": 99
              }
            }
          }
        ]
      }
    },
    "HrisContractFullTimeEmploymentType": {
      "name": "HrisContractFullTimeEmploymentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "FULL_TIME"
          }
        ]
      }
    },
    "HrisContractFullTime": {
      "name": "HrisContractFullTime",
      "shape": {
        "type": "object",
        "extends": [
          "HrisContractBase"
        ],
        "properties": [
          {
            "key": "employment_type",
            "valueType": {
              "type": "id",
              "value": "HrisContractFullTimeEmploymentType"
            }
          }
        ]
      }
    },
    "HrisDirectEmployeeJobInformation": {
      "name": "HrisDirectEmployeeJobInformation",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "HrisJobInformationTitleId",
            "type": {
              "type": "id",
              "value": "HrisJobInformationTitleId"
            }
          },
          {
            "typeName": "HrisJobInformationTitleName",
            "type": {
              "type": "id",
              "value": "HrisJobInformationTitleName"
            }
          }
        ]
      }
    },
    "HrisDirectEmployeeContract": {
      "name": "HrisDirectEmployeeContract",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "HrisContractPartTime",
            "type": {
              "type": "id",
              "value": "HrisContractPartTime"
            }
          },
          {
            "typeName": "HrisContractFullTime",
            "type": {
              "type": "id",
              "value": "HrisContractFullTime"
            }
          }
        ]
      }
    },
    "HrisDirectEmployeeVacationInfo": {
      "name": "HrisDirectEmployeeVacationInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "vacation_accrual_start_date",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date"
              }
            }
          },
          {
            "key": "vacation_yearly_policy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer",
                "minimum": 1,
                "maximum": 365
              }
            }
          }
        ]
      }
    },
    "HrisDirectEmployee": {
      "name": "HrisDirectEmployee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "employee_details",
            "valueType": {
              "type": "id",
              "value": "HrisDirectEmployeeDetails"
            }
          },
          {
            "key": "team_information",
            "valueType": {
              "type": "id",
              "value": "HrisTeamInformation"
            }
          },
          {
            "key": "job_information",
            "valueType": {
              "type": "id",
              "value": "HrisDirectEmployeeJobInformation"
            }
          },
          {
            "key": "compensation",
            "valueType": {
              "type": "id",
              "value": "HrisCompensation"
            }
          },
          {
            "key": "contract",
            "valueType": {
              "type": "id",
              "value": "HrisDirectEmployeeContract"
            }
          },
          {
            "key": "vacation_info",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "HrisDirectEmployeeVacationInfo"
                }
              }
            }
          }
        ]
      }
    },
    "HrisDirectEmployeeResponse": {
      "name": "HrisDirectEmployeeResponse",
      "shape": {
        "type": "object",
        "extends": [
          "HrisDirectEmployee"
        ],
        "properties": [
          {
            "description": "The Hris Direct employee ID",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "HrisDirectEmployeeContainer": {
      "name": "HrisDirectEmployeeContainer",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "id",
              "value": "HrisDirectEmployeeResponse"
            }
          }
        ]
      }
    },
    "PeopleClientLegalEntity": {
      "name": "PeopleClientLegalEntity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the client legal entity.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The name of the client legal entity.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PeoplePayment": {
      "name": "PeoplePayment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The payment rate",
            "key": "rate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The payment scale (e.g., hourly, weekly, monthly, etc.)",
            "key": "scale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The currency code (ISO 4217) for the payment",
            "key": "currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the contract associated with the payment",
            "key": "contract_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Employment": {
      "name": "Employment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the employment.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the employment.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The team associated with the employment.",
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Team"
              }
            }
          },
          {
            "description": "The email associated with the employment.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state associated with the employment.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country associated with the employment.",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The payment information associated with the employment.",
            "key": "payment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PeoplePayment"
              }
            }
          },
          {
            "description": "Indicates whether the employment has ended.",
            "key": "is_ended",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The timezone associated with the employment.",
            "key": "timezone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The job title associated with the employment.",
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The seniority level associated with the employment.",
            "key": "seniority",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The start date of the employment.",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The work email associated with the employment.",
            "key": "work_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hiring type associated with the employment.",
            "key": "hiring_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hiring status associated with the employment.",
            "key": "hiring_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The completion date of the employment.",
            "key": "completion_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The contract status associated with the employment.",
            "key": "contract_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates whether the employment was left voluntarily.",
            "key": "voluntarily_left",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The client legal entity associated with the employment.",
            "key": "client_legal_entity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PeopleClientLegalEntity"
              }
            }
          },
          {
            "description": "Indicates whether the employment had an EOR termination.",
            "key": "has_eor_termination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Indicates whether the employment's contract is archived.",
            "key": "contract_is_archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "MonthlyPayment": {
      "description": "Monthly payment details for the user",
      "name": "MonthlyPayment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The number of monthly payments",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "Team": {
      "name": "Team",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the team.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The name of the team.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "People": {
      "description": "People object representing a Deel",
      "name": "People",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the user",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "First name of the user",
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Last name of the user",
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Full name of the user",
            "key": "full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Email address of the user",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Work email address of the user",
            "key": "work_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Personal email address of the user",
            "key": "personal_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the country where the user is located",
            "key": "country_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date of birth of the user in ISO format (yyyy-mm-dd)",
            "key": "birth_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL of the user's profile picture",
            "key": "pic_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date when the user started their current employment in ISO format (yyyy-mm-dd)",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "List of payment objects representing the user's payment history",
            "key": "payments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Payment"
                }
              }
            }
          },
          {
            "description": "Total amount of hours worked by the user in ISO format (hh:mm:ss)",
            "key": "hourly_report_total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Object representing the client legal entity that the user is associated with",
            "key": "client_legal_entity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PeopleClientLegalEntity"
              }
            }
          },
          {
            "description": "State where the user is located",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Seniority level of the user's role",
            "key": "seniority",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date when the user's current employment is expected to end in ISO format (yyyy-mm-ddThh:mm:ss.sssZ)",
            "key": "completion_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Object representing the user's monthly payment information",
            "key": "monthly_payment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MonthlyPayment"
              }
            }
          },
          {
            "description": "Name of the user's direct manager",
            "key": "direct_manager",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Names of the user's direct reports",
            "key": "direct_reports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of direct reports that the user has",
            "key": "direct_reports_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "List of employment objects representing the user's employment history",
            "key": "employments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Employment"
                }
              }
            }
          },
          {
            "description": "Hiring status of the user",
            "key": "hiring_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Type of employment contract that the user has",
            "key": "hiring_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Title of the user's role",
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "ISO 3166-1 alpha-2 code of the country where the user is located",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the team that the user belongs to",
            "key": "team_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Name of the team that the user belongs to",
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Time zone of the user's location",
            "key": "timezone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the department that the user belongs to",
            "key": "department",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Name of the user's work location",
            "key": "work_location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "List of contract types that the user has had in the past and/or currently has",
            "key": "contract_types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether the user has a Deel account or not",
            "key": "has_deel_user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "PeopleMeProfileType": {
      "name": "PeopleMeProfileType",
      "shape": {
        "type": "object",
        "extends": [
          "ProfileTypeEnum"
        ],
        "properties": []
      }
    },
    "PeopleMe": {
      "description": "People object representing a Deel",
      "name": "PeopleMe",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the user profile",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the user",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Username of the user",
            "key": "username",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "First name of the user",
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Middle name of the user",
            "key": "middle_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Last name of the user",
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Full name of the user",
            "key": "full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Email address of the user",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL of the user's avatar",
            "key": "avatar_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "profile_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PeopleMeProfileType"
              }
            }
          },
          {
            "description": "User's slack id",
            "key": "slack_user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "User's team slack id",
            "key": "slack_team_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Unique identifier for the organization",
            "key": "organization_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Name of the organization",
            "key": "organization_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "client_country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CountryCodeNulleable"
              }
            }
          },
          {
            "key": "contractor_country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CountryCodeNulleable"
              }
            }
          }
        ]
      }
    },
    "ContractPreview": {
      "name": "ContractPreview",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "UniqueObjectIdentifierOneOfZero": {
      "name": "UniqueObjectIdentifierOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "UniqueObjectIdentifierOneOfOne": {
      "name": "UniqueObjectIdentifierOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "UniqueObjectIdentifier": {
      "description": "Unique identifier of this resource.",
      "name": "UniqueObjectIdentifier",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "UniqueObjectIdentifierOneOfZero",
            "type": {
              "type": "id",
              "value": "UniqueObjectIdentifierOneOfZero"
            }
          },
          {
            "typeName": "UniqueObjectIdentifierOneOfOne",
            "type": {
              "type": "id",
              "value": "UniqueObjectIdentifierOneOfOne"
            }
          }
        ]
      }
    },
    "PublicId": {
      "description": "The public UUID of the object",
      "name": "PublicId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "ContractsContractIdFinalPaymentsGetParametersSchema": {
      "name": "ContractsContractIdFinalPaymentsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CUSTOM_AMOUNT"
          },
          {
            "value": "WORK_DAYS"
          },
          {
            "value": "CALENDAR_DAYS"
          },
          {
            "value": "FULL_AMOUNT"
          }
        ]
      }
    }
  },
  "subpackages": {
    "Hris": {
      "subpackageId": "Hris",
      "name": "Hris",
      "endpoints": [
        {
          "auth": false,
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createDirectEmployee",
          "originalEndpointId": "Hris.createDirectEmployee",
          "name": "Create a new Hris direct employee",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/hris/direct-employees"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "HrisDirectEmployee"
                }
              },
              "description": "Hris direct employee object that will be created"
            },
            "description": "Hris direct employee object that will be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "HrisDirectEmployeeContainer"
              }
            },
            "statusCode": 201,
            "description": "Hris direct employee object that was created or edited"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/hris/direct-employees",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "employee_details": {
                  "first_name": "foo",
                  "last_name": "foo",
                  "email": "foo",
                  "work_email": "foo",
                  "nationality": "foo",
                  "country": "foo"
                },
                "team_information": {
                  "team_id": 42,
                  "legal_entity_id": 42
                },
                "job_information": {
                  "seniority_id": 42,
                  "job_title_id": 42
                },
                "compensation": {
                  "gross_annual_salary": 42,
                  "currency": "foo"
                },
                "contract": {
                  "employment_type": "PART_TIME",
                  "part_time_percentage": 42
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "employee_details": {
                    "first_name": "foo",
                    "last_name": "foo",
                    "email": "foo",
                    "work_email": "foo",
                    "nationality": "foo",
                    "country": "foo"
                  },
                  "team_information": {
                    "team_id": 42,
                    "legal_entity_id": 42
                  },
                  "job_information": {
                    "seniority_id": 42,
                    "job_title_id": 42
                  },
                  "compensation": {
                    "gross_annual_salary": 42,
                    "currency": "foo"
                  },
                  "contract": {
                    "employment_type": "PART_TIME",
                    "part_time_percentage": 42
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "employee_details": {
                      "first_name": "foo",
                      "last_name": "foo",
                      "email": "foo",
                      "work_email": "foo",
                      "nationality": "foo",
                      "country": "foo"
                    },
                    "team_information": {
                      "team_id": 42,
                      "legal_entity_id": 42
                    },
                    "job_information": {
                      "seniority_id": 42,
                      "job_title_id": 42
                    },
                    "compensation": {
                      "gross_annual_salary": 42,
                      "currency": "foo"
                    },
                    "contract": {
                      "employment_type": "PART_TIME",
                      "part_time_percentage": 42
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "employee_details": {
                      "first_name": "foo",
                      "last_name": "foo",
                      "email": "foo",
                      "work_email": "foo",
                      "nationality": "foo",
                      "country": "foo"
                    },
                    "team_information": {
                      "team_id": 42,
                      "legal_entity_id": 42
                    },
                    "job_information": {
                      "seniority_id": 42,
                      "job_title_id": 42
                    },
                    "compensation": {
                      "gross_annual_salary": 42,
                      "currency": "foo"
                    },
                    "contract": {
                      "employment_type": "PART_TIME",
                      "part_time_percentage": 42
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "EOR": {
      "subpackageId": "EOR",
      "name": "EOR",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve the hiring guide data for a country. This data can be used to create Employee of Record (EOR) contract quotes.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getEorCountryValidations",
          "originalEndpointId": "EOR.getEorCountryValidations",
          "name": "Retrieve country guide",
          "path": {
            "pathParameters": [
              {
                "description": "Country code.",
                "key": "country_code",
                "type": {
                  "type": "id",
                  "value": "CountryCode"
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/eor/validations/"
              },
              {
                "type": "pathParameter",
                "value": "country_code"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EorCountryValidationsContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/eor/validations/",
              "pathParameters": {
                "country_code": "US"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create an Employee of Record (EOR) contract quote. The endpoints creates a contract quote request. Deel will process the information and get back with a quote for this contract.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createEorContract",
          "originalEndpointId": "EOR.createEorContract",
          "name": "Create an EOR contract",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/eor"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "EorContractToCreateContainer"
                }
              },
              "description": "Employee (eor) contract object that needs to be created"
            },
            "description": "Employee (eor) contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EorContractCreatedContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/eor",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "employment": {},
                  "job_title": "foo",
                  "seniority": {},
                  "client": {},
                  "compensation_details": {}
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "employment": {},
                    "job_title": "foo",
                    "seniority": {},
                    "client": {},
                    "compensation_details": {}
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Contractors": {
      "subpackageId": "Contractors",
      "name": "Contractors",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createContractTimeBased",
          "originalEndpointId": "Contractors.createContractTimeBased",
          "name": "Create a new contract (time-based)",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/time-based"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractToCreateContainer_pay_as_you_go_time_based"
                }
              },
              "description": "Contract object that needs to be created"
            },
            "description": "Contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractContainer_pay_as_you_go_time_based"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/time-based",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "title": "foo",
                  "client": {
                    "legal_entity": {
                      "id": 42
                    },
                    "team": {
                      "id": 42
                    }
                  },
                  "job_title": {},
                  "meta": {
                    "documents_required": true
                  },
                  "type": "pay_as_you_go_time_based",
                  "compensation_details": {
                    "currency_code": "foo",
                    "frequency": "weekly",
                    "cycle_end": 42,
                    "cycle_end_type": "DAY_OF_WEEK",
                    "payment_due_type": "REGULAR",
                    "payment_due_days": 42,
                    "amount": 42,
                    "scale": "hourly"
                  }
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "title": "foo",
                    "client": {
                      "legal_entity": {
                        "id": 42
                      },
                      "team": {
                        "id": 42
                      }
                    },
                    "job_title": {},
                    "meta": {
                      "documents_required": true
                    },
                    "type": "pay_as_you_go_time_based",
                    "compensation_details": {
                      "currency_code": "foo",
                      "frequency": "weekly",
                      "cycle_end": 42,
                      "cycle_end_type": "DAY_OF_WEEK",
                      "payment_due_type": "REGULAR",
                      "payment_due_days": 42,
                      "amount": 42,
                      "scale": "hourly"
                    }
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createContractTaskBased",
          "originalEndpointId": "Contractors.createContractTaskBased",
          "name": "Create a new contract (task-based)",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/task-based"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractToCreateContainer_payg_tasks"
                }
              },
              "description": "Contract object that needs to be created"
            },
            "description": "Contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractContainer_payg_tasks"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/task-based",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "title": "foo",
                  "client": {
                    "legal_entity": {
                      "id": 42
                    },
                    "team": {
                      "id": 42
                    }
                  },
                  "job_title": {},
                  "meta": {
                    "documents_required": true
                  },
                  "type": "payg_tasks",
                  "compensation_details": {
                    "currency_code": "foo",
                    "frequency": "weekly",
                    "cycle_end": 42,
                    "cycle_end_type": "DAY_OF_WEEK",
                    "payment_due_type": "REGULAR",
                    "payment_due_days": 42
                  }
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "title": "foo",
                    "client": {
                      "legal_entity": {
                        "id": 42
                      },
                      "team": {
                        "id": 42
                      }
                    },
                    "job_title": {},
                    "meta": {
                      "documents_required": true
                    },
                    "type": "payg_tasks",
                    "compensation_details": {
                      "currency_code": "foo",
                      "frequency": "weekly",
                      "cycle_end": 42,
                      "cycle_end_type": "DAY_OF_WEEK",
                      "payment_due_type": "REGULAR",
                      "payment_due_days": 42
                    }
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createContractMilestoneBased",
          "originalEndpointId": "Contractors.createContractMilestoneBased",
          "name": "Create a new contract (milestone-based)",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/milestone-based"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractToCreateContainer_payg_milestones"
                }
              },
              "description": "Contract object that needs to be created"
            },
            "description": "Contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractContainer_payg_milestones"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/milestone-based",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "title": "foo",
                  "client": {
                    "legal_entity": {
                      "id": 42
                    },
                    "team": {
                      "id": 42
                    }
                  },
                  "job_title": {},
                  "meta": {
                    "documents_required": true
                  },
                  "type": "payg_milestones",
                  "compensation_details": {
                    "currency_code": "foo",
                    "frequency": "weekly",
                    "cycle_end": 42,
                    "cycle_end_type": "DAY_OF_WEEK",
                    "payment_due_type": "REGULAR",
                    "payment_due_days": 42
                  }
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "title": "foo",
                    "client": {
                      "legal_entity": {
                        "id": 42
                      },
                      "team": {
                        "id": 42
                      }
                    },
                    "job_title": {},
                    "meta": {
                      "documents_required": true
                    },
                    "type": "payg_milestones",
                    "compensation_details": {
                      "currency_code": "foo",
                      "frequency": "weekly",
                      "cycle_end": 42,
                      "cycle_end_type": "DAY_OF_WEEK",
                      "payment_due_type": "REGULAR",
                      "payment_due_days": 42
                    }
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createContractFixedRate",
          "originalEndpointId": "Contractors.createContractFixedRate",
          "name": "Create a new contract (fixed-rate)",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/fixed-rate"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractToCreateContainer_ongoing_time_based"
                }
              },
              "description": "Contract object that needs to be created"
            },
            "description": "Contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractContainer_ongoing_time_based"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/fixed-rate",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "title": "foo",
                  "client": {
                    "legal_entity": {
                      "id": 42
                    },
                    "team": {
                      "id": 42
                    }
                  },
                  "job_title": {},
                  "meta": {
                    "documents_required": true
                  },
                  "type": "ongoing_time_based",
                  "compensation_details": {
                    "currency_code": "foo",
                    "frequency": "weekly",
                    "cycle_end": 42,
                    "cycle_end_type": "DAY_OF_WEEK",
                    "payment_due_type": "REGULAR",
                    "payment_due_days": 42,
                    "amount": 42,
                    "scale": "hourly"
                  }
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "title": "foo",
                    "client": {
                      "legal_entity": {
                        "id": 42
                      },
                      "team": {
                        "id": 42
                      }
                    },
                    "job_title": {},
                    "meta": {
                      "documents_required": true
                    },
                    "type": "ongoing_time_based",
                    "compensation_details": {
                      "currency_code": "foo",
                      "frequency": "weekly",
                      "cycle_end": 42,
                      "cycle_end_type": "DAY_OF_WEEK",
                      "payment_due_type": "REGULAR",
                      "payment_due_days": 42,
                      "amount": 42,
                      "scale": "hourly"
                    }
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a new Deel contract.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createContract",
          "originalEndpointId": "Contractors.createContract",
          "name": "Create a new contract",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractToCreateContainer"
                }
              },
              "description": "Contract object that needs to be created"
            },
            "description": "Contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "title": "foo",
                  "client": {
                    "legal_entity": {
                      "id": 42
                    },
                    "team": {
                      "id": 42
                    }
                  },
                  "job_title": {},
                  "meta": {
                    "documents_required": true
                  },
                  "type": "pay_as_you_go_time_based",
                  "compensation_details": {
                    "currency_code": "foo",
                    "frequency": "weekly",
                    "cycle_end": 42,
                    "cycle_end_type": "DAY_OF_WEEK",
                    "payment_due_type": "REGULAR",
                    "payment_due_days": 42,
                    "amount": 42,
                    "scale": "hourly"
                  }
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "title": "foo",
                    "client": {
                      "legal_entity": {
                        "id": 42
                      },
                      "team": {
                        "id": 42
                      }
                    },
                    "job_title": {},
                    "meta": {
                      "documents_required": true
                    },
                    "type": "pay_as_you_go_time_based",
                    "compensation_details": {
                      "currency_code": "foo",
                      "frequency": "weekly",
                      "cycle_end": 42,
                      "cycle_end_type": "DAY_OF_WEEK",
                      "payment_due_type": "REGULAR",
                      "payment_due_days": 42,
                      "amount": 42,
                      "scale": "hourly"
                    }
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve an IC contract agreement content in HTML. If no template is specified, the default or currently assigned template will be used. This endpoint does not support EOR and Global Payroll contract types.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getContractPreview",
          "originalEndpointId": "Contractors.getContractPreview",
          "name": "Preview a contract agreement",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/preview"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "ID of an existing contract template.",
              "key": "templateId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {
                "templateId": "foo"
              },
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Amend payment details of a contract.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "amendContractDetails",
          "originalEndpointId": "Contractors.amendContractDetails",
          "name": "Amend contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/amendments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractToAmendDetailsContainer"
                }
              },
              "description": "Contract object that needs to be amended"
            },
            "description": "Contract object that needs to be amended"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Terminate an active contract.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "terminateContract",
          "originalEndpointId": "Contractors.terminateContract",
          "name": "Terminate contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/terminations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractToTerminateContainer"
                }
              },
              "description": "Contract that needs to be terminated and when."
            },
            "description": "Contract that needs to be terminated and when."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractTerminationResultContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add additional protection against misclassification by upgrading to Deel Premium.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "addPremium",
          "originalEndpointId": "Contractors.addPremium",
          "name": "Upgrade to Premium",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/premium"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "PremiumToAddContainer"
                }
              },
              "description": "Answers for assessment in order to find eligibility for Deel Premium."
            },
            "description": "Answers for assessment in order to find eligibility for Deel Premium."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PremiumResultAddedContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "agreement_reflects_relation": true,
                  "contractor_characteristics": true
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "agreement_reflects_relation": true,
                    "contractor_characteristics": true
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "calculated_premium": 42,
                    "misclassification_guarantee": {},
                    "penalties": {},
                    "third_party_liabilities": {}
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "calculated_premium": 42,
                    "misclassification_guarantee": {},
                    "penalties": {},
                    "third_party_liabilities": {}
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Remove Deel Premium from an existing contract.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "removePremiumFromContract",
          "originalEndpointId": "Contractors.removePremiumFromContract",
          "name": "Downgrade from Premium",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/premium"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Reason for deleting an existing Deel Premium from a contract.",
              "key": "reason",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultDeleted"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {
                "reason": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Contracts": {
      "subpackageId": "Contracts",
      "name": "Contracts",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of contracts.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getContractList",
          "originalEndpointId": "Contracts.getContractList",
          "name": "List of contracts",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Return next page of results after given cursor.",
              "key": "after_cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Return a page of results with given number of records.",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10
                  }
                }
              }
            },
            {
              "description": "Order direction of results; ascending or descending.",
              "key": "order_direction",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SortDirEnum"
                }
              }
            },
            {
              "description": "You can filter contracts by type, a contract is included in results if its type is in this list.",
              "key": "types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractTypeEnumList"
                }
              }
            },
            {
              "description": "You can filter contracts by current status, a contract is included in results if its status is in this list.",
              "key": "statuses",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractStatusEnumList"
                }
              }
            },
            {
              "description": "Filter contracts for given team ID; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "team_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Filter contracts for given external ID",
              "key": "external_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Country codes of contracts to filter.",
              "key": "countries",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CountryCodeList"
                }
              }
            },
            {
              "description": "Currency codes of contracts to filter.",
              "key": "currencies",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CurrencyCodeList"
                }
              }
            },
            {
              "description": "Include a contract if by name or contractor name contains given search term.",
              "key": "search",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Sort contracts by given field name.",
              "key": "sort_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractsSortByEnum"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts",
              "pathParameters": {},
              "queryParameters": {
                "after_cursor": "foo",
                "limit": 42,
                "order_direction": "asc",
                "types": [
                  "ongoing_time_based"
                ],
                "statuses": [
                  "new"
                ],
                "team_id": 42,
                "external_id": "foo",
                "countries": [
                  "foo"
                ],
                "currencies": [
                  "foo"
                ],
                "search": "foo",
                "sort_by": "contract_title"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "title": "foo",
                      "type": "ongoing_time_based",
                      "status": "new",
                      "client": {},
                      "worker": {
                        "id": 42,
                        "full_name": "foo",
                        "email": "foo"
                      },
                      "invitations": {},
                      "signatures": {
                        "client_signed_at": "foo",
                        "worker_signature": "foo",
                        "worker_signed_at": "foo"
                      },
                      "is_shielded": true,
                      "is_archived": true,
                      "created_at": "foo",
                      "termination_date": "foo"
                    }
                  ],
                  "page": {
                    "cursor": "foo",
                    "total_rows": 42
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "title": "foo",
                      "type": "ongoing_time_based",
                      "status": "new",
                      "client": {},
                      "worker": {
                        "id": 42,
                        "full_name": "foo",
                        "email": "foo"
                      },
                      "invitations": {},
                      "signatures": {
                        "client_signed_at": "foo",
                        "worker_signature": "foo",
                        "worker_signed_at": "foo"
                      },
                      "is_shielded": true,
                      "is_archived": true,
                      "created_at": "foo",
                      "termination_date": "foo"
                    }
                  ],
                  "page": {
                    "cursor": "foo",
                    "total_rows": 42
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a single contract.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getContractById",
          "originalEndpointId": "Contracts.getContractById",
          "name": "Retrieve a single contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "title": "foo",
                    "type": "ongoing_time_based",
                    "status": "new",
                    "created_at": "foo",
                    "job_title": "foo",
                    "seniority": {
                      "id": 42,
                      "name": "foo"
                    },
                    "start_date": "foo",
                    "termination_date": "foo",
                    "special_clause": "foo",
                    "is_archived": true,
                    "client": {
                      "id": 42,
                      "full_name": "foo",
                      "email": "foo",
                      "team": {
                        "id": 42,
                        "name": "foo"
                      },
                      "legal_entity": {
                        "id": 42,
                        "name": "foo",
                        "email": "foo",
                        "type": "individual",
                        "subtype": "foo",
                        "registration_number": "foo",
                        "vat_number": "foo"
                      }
                    },
                    "worker": {},
                    "invitations": {},
                    "signatures": {
                      "client_signature": "foo",
                      "client_signed_at": "foo",
                      "worker_signature": "foo",
                      "worker_signed_at": "foo",
                      "signed_at": "foo"
                    },
                    "compensation_details": {
                      "currency_code": "foo",
                      "amount": "foo",
                      "scale": "foo",
                      "frequency": "foo",
                      "first_payment": "foo",
                      "first_payment_date": "foo",
                      "gross_annual_salary": "foo",
                      "gross_signing_bonus": "foo",
                      "gross_variable_bonus": "foo"
                    },
                    "employment_details": {
                      "type": "foo",
                      "days_per_week": 42,
                      "hours_per_day": 42,
                      "probation_period": 42,
                      "paid_vacation_days": 42
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add an external Id to a Deel contract. You can use this to add a Deel contract's refernece Id in your platform. External Id can be passed as a query parameter in List contract endpoint to find this conract later.",
          "method": "PATCH",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "attachExternalId",
          "originalEndpointId": "Contracts.attachExternalId",
          "name": "External Id",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "InputToPatchContractExternalId"
                }
              },
              "description": "Contract object that needs to be created"
            },
            "description": "Contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "external_id": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "external_id": "foo"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Attach document to a contract. You can only add one document at a time. If you need to attach more documents please attach a Zip file.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "addContractDocument",
          "originalEndpointId": "Contracts.addContractDocument",
          "name": "Add documents",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/documents"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractDocumentContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "filename": "foo",
                    "key": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "filename": "foo",
                    "key": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Overwrite the file currently attached to contract document.",
          "method": "PUT",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "editContractDocument",
          "originalEndpointId": "Contracts.editContractDocument",
          "name": "Edit the file attached to contract document.",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/documents"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractDocumentContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "filename": "foo",
                    "key": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "filename": "foo",
                    "key": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns an array of alternate email objects",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getAlternateEmailsByContractId",
          "originalEndpointId": "Contracts.getAlternateEmailsByContractId",
          "name": "Find contract emails by ID",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/alternate_emails"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AlternateEmailList"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "email": "foo",
                    "isVerified": true
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "email": "foo",
                    "isVerified": true
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Sign a contract as a client.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "signContract",
          "originalEndpointId": "Contracts.signContract",
          "name": "Sign a contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/signatures"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractSignatureToCreateContainer"
                }
              },
              "description": "Contract signature object that needs to be created"
            },
            "description": "Contract signature object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "client_signature": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "client_signature": "foo"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Archive a terminated, cancelled or completed contract.",
          "method": "PATCH",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "archiveContract",
          "originalEndpointId": "Contracts.archiveContract",
          "name": "Archive a contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultUpdated"
              }
            },
            "statusCode": 204,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 204,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Invite a worker to sign the contract. Worker will be notified via email.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "inviteToSignContract",
          "originalEndpointId": "Contracts.inviteToSignContract",
          "name": "Send contract to worker",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/invitations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ContractInvitationToCreateContainer"
                }
              },
              "description": "Contract invitation object that needs to be created"
            },
            "description": "Contract invitation object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "email": "foo",
                  "message": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "email": "foo",
                    "message": "foo"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Remove invite in order to re-invite a worker to sign the contract.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "uninviteToSignContract",
          "originalEndpointId": "Contracts.uninviteToSignContract",
          "name": "Remove invite",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/invitations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultDeleted"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Calculate the final payment due to the contractor when ending the contract.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "calculateFinalPayment",
          "originalEndpointId": "Contracts.calculateFinalPayment",
          "name": "Calculate final payment",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/final-payments"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The day to end the contract.",
              "key": "end_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "The days to calculate.",
              "key": "calculation_type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractsContractIdFinalPaymentsGetParametersSchema"
                }
              }
            },
            {
              "description": "The day the work week starts, 0 to 6",
              "key": "workweek_start",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The day the work week ends, 0 to 6",
              "key": "workweek_end",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "FinalPaymentCalculatedContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {
                "end_date": "foo",
                "calculation_type": "CUSTOM_AMOUNT",
                "workweek_start": "foo",
                "workweek_end": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "daily_rate": "foo",
                    "total": "foo",
                    "remaining_days": "foo",
                    "last_cycle": {},
                    "calculation_type": "CUSTOM_AMOUNT",
                    "workweek_start": 42,
                    "workweek_end": 42
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "daily_rate": "foo",
                    "total": "foo",
                    "remaining_days": "foo",
                    "last_cycle": {},
                    "calculation_type": "CUSTOM_AMOUNT",
                    "workweek_start": 42,
                    "workweek_end": 42
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "First payment is calculated from the number of working/calendar days between their start date and the start of the payment cycle.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "postContractEstimate",
          "originalEndpointId": "Contracts.postContractEstimate",
          "name": "Calculate first payment amount",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/estimate"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "EstimateFirstPaymentContainer"
                }
              },
              "description": "Pro-rata payment object that needs to estimated payment"
            },
            "description": "Pro-rata payment object that needs to estimated payment"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ResponseEstimateFirstPaymentContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/estimate",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "type": "ongoing_time_based",
                  "country_code": "foo",
                  "start_date": "foo",
                  "compensation_details": {}
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "type": "ongoing_time_based",
                    "country_code": "foo",
                    "start_date": "foo",
                    "compensation_details": {}
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of contract templates in your organization.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getContractTemplates",
          "originalEndpointId": "Contracts.getContractTemplates",
          "name": "Get contract templates",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contract-templates"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ContractTemplateListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contract-templates",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Tasks": {
      "subpackageId": "Tasks",
      "name": "Tasks",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of tasks for a given contract.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getTasksByContract",
          "originalEndpointId": "Tasks.getTasksByContract",
          "name": "List of tasks",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/tasks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "date_submitted": "foo",
                      "description": "foo",
                      "status": "approved"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "date_submitted": "foo",
                      "description": "foo",
                      "status": "approved"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a new task for the contractor.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createContractPgoTak",
          "originalEndpointId": "Tasks.createContractPgoTak",
          "name": "Create new task",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/tasks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "InputToCreatePgoTask"
                }
              },
              "description": "Contract object that needs to be created"
            },
            "description": "Contract object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "amount": "foo",
                  "date_submitted": "foo",
                  "description": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "amount": "foo",
                    "date_submitted": "foo",
                    "description": "foo"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review multiple tasks to approve or decline the submitted work.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createTaskManyReview",
          "originalEndpointId": "Tasks.createTaskManyReview",
          "name": "Review multiple tasks",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/tasks/many/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "RequestBodyToCreatePgoTaskReviewsReviewsContainer"
                }
              },
              "description": "Timesheet review objects that need to be created"
            },
            "description": "Timesheet review objects that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskListContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved",
                  "ids": [
                    42
                  ]
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved",
                    "ids": [
                      42
                    ]
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "date_submitted": "foo",
                      "description": "foo",
                      "status": "approved"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "date_submitted": "foo",
                      "description": "foo",
                      "status": "approved"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review a single task to approve or decline the submitted work.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createTaskReviewById",
          "originalEndpointId": "Tasks.createTaskReviewById",
          "name": "Review a single task",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "ID of task entity.",
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/tasks/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer"
                }
              },
              "description": "Timesheet review objects that need to be created"
            },
            "description": "Timesheet review objects that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskListContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "task_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "date_submitted": "foo",
                      "description": "foo",
                      "status": "approved"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "date_submitted": "foo",
                      "description": "foo",
                      "status": "approved"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete task from the contract.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "deleteContractPgoTak",
          "originalEndpointId": "Tasks.deleteContractPgoTak",
          "name": "Delete task",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "ID of task entity.",
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/tasks/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Reason for deleting an existing task",
              "key": "reason",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultDeleted"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "task_id": "foo"
              },
              "queryParameters": {
                "reason": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Timesheets": {
      "subpackageId": "Timesheets",
      "name": "Timesheets",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of timesheets found for a contract.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getTimesheetsByContract",
          "originalEndpointId": "Timesheets.getTimesheetsByContract",
          "name": "List of timesheets by contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/timesheets"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Types of contracts to filter.",
              "key": "contract_types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractTypeEnumList"
                }
              }
            },
            {
              "description": "Statuses of timesheets to filter.",
              "key": "statuses",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimesheetStatusEnumList"
                }
              }
            },
            {
              "description": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "reporter_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Filtered results will include records created on or after the provided date.",
              "key": "date_from",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Filtered results will include records created before the provided date.",
              "key": "date_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 99
                  }
                }
              }
            },
            {
              "description": "Return a page of results after given index of row",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 0
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TimesheetListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {
                "contract_types": [
                  "ongoing_time_based"
                ],
                "statuses": [
                  "approved"
                ],
                "reporter_id": 42,
                "date_from": "2022-01-01",
                "date_to": "2022-12-01",
                "limit": 42,
                "offset": 42
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "foo",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "total_amount": "foo",
                      "quantity": 42,
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "foo",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "total_amount": "foo",
                      "quantity": 42,
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of timesheets in your Deel account. You can filter the list by providing additional paramters e.g. contract_id, contract_type etc.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getTimesheets",
          "originalEndpointId": "Timesheets.getTimesheets",
          "name": "List of timesheets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/timesheets"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Id of a Deel contract.",
              "key": "contract_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Types of contracts to filter.",
              "key": "contract_types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractTypeEnumList"
                }
              }
            },
            {
              "description": "Statuses of timesheets to filter.",
              "key": "statuses",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimesheetStatusEnumList"
                }
              }
            },
            {
              "description": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "reporter_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Filtered results will include records created on or after the provided date.",
              "key": "date_from",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Filtered results will include records created before the provided date.",
              "key": "date_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 99
                  }
                }
              }
            },
            {
              "description": "Return a page of results after given index of row",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 0
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TimesheetListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/timesheets",
              "pathParameters": {},
              "queryParameters": {
                "contract_id": "foo",
                "contract_types": [
                  "ongoing_time_based"
                ],
                "statuses": [
                  "approved"
                ],
                "reporter_id": 42,
                "date_from": "2022-01-01",
                "date_to": "2022-12-01",
                "limit": 42,
                "offset": 42
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "foo",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "total_amount": "foo",
                      "quantity": 42,
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "foo",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "total_amount": "foo",
                      "quantity": 42,
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Submit work for a contractor.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createTimesheet",
          "originalEndpointId": "Timesheets.createTimesheet",
          "name": "Create a timesheet entry",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/timesheets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TimesheetToCreateContainer"
                }
              },
              "description": "Timesheet object that needs to be created"
            },
            "description": "Timesheet object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "InvoiceAdjustmentCreatedContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/timesheets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "contract_id": "foo",
                  "description": "foo",
                  "date_submitted": "foo",
                  "quantity": 42
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "contract_id": "foo",
                    "description": "foo",
                    "date_submitted": "foo",
                    "quantity": 42
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a single timesheet entry by Id.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getTimesheetById",
          "originalEndpointId": "Timesheets.getTimesheetById",
          "name": "Retrieve a single timesheet entry",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing timesheet",
                "key": "timesheet_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/timesheets/"
              },
              {
                "type": "pathParameter",
                "value": "timesheet_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TimesheetContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/timesheets/",
              "pathParameters": {
                "timesheet_id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "type": "foo",
                    "status": "approved",
                    "description": "foo",
                    "date_submitted": "foo",
                    "currency_code": "foo",
                    "total_amount": "foo",
                    "quantity": 42,
                    "created_at": "foo",
                    "attachment": {
                      "filename": "foo",
                      "key": "foo"
                    },
                    "worksheet": {
                      "weeks": 42,
                      "days": 42,
                      "hours": 42,
                      "minutes": 42
                    },
                    "reviewed_by": {
                      "id": 42,
                      "full_name": "foo",
                      "reviewed_at": "foo",
                      "remarks": "foo"
                    },
                    "contract": {
                      "id": "foo",
                      "title": "foo",
                      "type": "ongoing_time_based"
                    },
                    "reported_by": {
                      "id": 42,
                      "full_name": "foo"
                    },
                    "approvers": [
                      {
                        "full_name": "foo",
                        "email": "foo",
                        "approved": true
                      }
                    ]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "type": "foo",
                    "status": "approved",
                    "description": "foo",
                    "date_submitted": "foo",
                    "currency_code": "foo",
                    "total_amount": "foo",
                    "quantity": 42,
                    "created_at": "foo",
                    "attachment": {
                      "filename": "foo",
                      "key": "foo"
                    },
                    "worksheet": {
                      "weeks": 42,
                      "days": 42,
                      "hours": 42,
                      "minutes": 42
                    },
                    "reviewed_by": {
                      "id": 42,
                      "full_name": "foo",
                      "reviewed_at": "foo",
                      "remarks": "foo"
                    },
                    "contract": {
                      "id": "foo",
                      "title": "foo",
                      "type": "ongoing_time_based"
                    },
                    "reported_by": {
                      "id": 42,
                      "full_name": "foo"
                    },
                    "approvers": [
                      {
                        "full_name": "foo",
                        "email": "foo",
                        "approved": true
                      }
                    ]
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a single timesheet entry.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "deleteTimesheetById",
          "originalEndpointId": "Timesheets.deleteTimesheetById",
          "name": "Delete a timesheet entry",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing timesheet",
                "key": "timesheet_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/timesheets/"
              },
              {
                "type": "pathParameter",
                "value": "timesheet_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Reason for deleting an existing timesheet",
              "key": "reason",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultDeleted"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/timesheets/",
              "pathParameters": {
                "timesheet_id": 42
              },
              "queryParameters": {
                "reason": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update a single timesheet entry.",
          "method": "PATCH",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "updateTimesheetById",
          "originalEndpointId": "Timesheets.updateTimesheetById",
          "name": "Update a timesheet entry",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing timesheet",
                "key": "timesheet_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/timesheets/"
              },
              {
                "type": "pathParameter",
                "value": "timesheet_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TimesheetToUpdateContainer"
                }
              },
              "description": "Timesheet object that needs to be updated"
            },
            "description": "Timesheet object that needs to be updated"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultUpdated"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/timesheets/",
              "pathParameters": {
                "timesheet_id": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "description": "foo",
                  "quantity": 42
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "description": "foo",
                    "quantity": 42
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review a timesheet to approve or decline submitted work.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createTimesheetReview",
          "originalEndpointId": "Timesheets.createTimesheetReview",
          "name": "Review a single timesheet",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing timesheet",
                "key": "timesheet_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/timesheets/"
              },
              {
                "type": "pathParameter",
                "value": "timesheet_id"
              },
              {
                "type": "literal",
                "value": "/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TimesheetReviewToCreateContainer"
                }
              },
              "description": "Timesheet review object that need to be created"
            },
            "description": "Timesheet review object that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/timesheets/",
              "pathParameters": {
                "timesheet_id": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review a batch of timesheets to approve or reject submitted work.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createTimesheetReviews",
          "originalEndpointId": "Timesheets.createTimesheetReviews",
          "name": "Review multiple timesheets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/timesheets/many/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TimesheetReviewsToCreateContainer"
                }
              },
              "description": "Timesheet review objects that need to be created"
            },
            "description": "Timesheet review objects that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/timesheets/many/reviews",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved",
                  "ids": [
                    42
                  ]
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved",
                    "ids": [
                      42
                    ]
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Milestones": {
      "subpackageId": "Milestones",
      "name": "Milestones",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of milestones found for a contract.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getMilestonesByContract",
          "originalEndpointId": "Milestones.getMilestonesByContract",
          "name": "List of milestones by contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/milestones"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "MilestoneListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "approval_requested": true,
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      },
                      "title": "foo",
                      "description": "foo",
                      "status": "foo",
                      "created_at": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "amount": "foo",
                      "approval_requested": true,
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      },
                      "title": "foo",
                      "description": "foo",
                      "status": "foo",
                      "created_at": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add a new milestone to contract.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createMilestone",
          "originalEndpointId": "Milestones.createMilestone",
          "name": "Create a milestone",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/milestones"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "MilestoneToCreateContainer"
                }
              },
              "description": "Milestone object that needs to be created"
            },
            "description": "Milestone object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "amount": "foo",
                  "title": "foo",
                  "description": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "amount": "foo",
                    "title": "foo",
                    "description": "foo"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a single milestone.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getMilestonesByContractAndId",
          "originalEndpointId": "Milestones.getMilestonesByContractAndId",
          "name": "Retrieve a single milestone",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "ID of milestone to return",
                "key": "milestone_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/milestones/"
              },
              {
                "type": "pathParameter",
                "value": "milestone_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "MilestoneContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "milestone_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "amount": "foo",
                    "approval_requested": true,
                    "reviewed_by": {
                      "id": 42,
                      "full_name": "foo"
                    },
                    "reported_by": {
                      "id": 42,
                      "full_name": "foo"
                    },
                    "title": "foo",
                    "description": "foo",
                    "status": "foo",
                    "created_at": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "amount": "foo",
                    "approval_requested": true,
                    "reviewed_by": {
                      "id": 42,
                      "full_name": "foo"
                    },
                    "reported_by": {
                      "id": 42,
                      "full_name": "foo"
                    },
                    "title": "foo",
                    "description": "foo",
                    "status": "foo",
                    "created_at": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a single milestone from a contract.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "deleteMilestoneById",
          "originalEndpointId": "Milestones.deleteMilestoneById",
          "name": "Delete a milestone",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "ID of milestone to return",
                "key": "milestone_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/milestones/"
              },
              {
                "type": "pathParameter",
                "value": "milestone_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultDeleted"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "milestone_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review a milestone to approve or decline submitted work.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createMilestoneReview",
          "originalEndpointId": "Milestones.createMilestoneReview",
          "name": "Review a single milestone",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "ID of milestone to return",
                "key": "milestone_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/milestones/"
              },
              {
                "type": "pathParameter",
                "value": "milestone_id"
              },
              {
                "type": "literal",
                "value": "/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "MilestoneReviewToCreateContainer"
                }
              },
              "description": "Milestone review object that need to be created"
            },
            "description": "Milestone review object that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "milestone_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review a batch of milestones to approve or reject submitted work.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createMilestoneReviews",
          "originalEndpointId": "Milestones.createMilestoneReviews",
          "name": "Review multiple milestones",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/milestones/many/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "MilestoneReviewsToCreateContainer"
                }
              },
              "description": "Milestone review objects that need to be created"
            },
            "description": "Milestone review objects that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved",
                  "ids": [
                    42
                  ]
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved",
                    "ids": [
                      42
                    ]
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Off-cycle Payments": {
      "subpackageId": "Off-cycle Payments",
      "name": "Off-cycle Payments",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of off-cycle payments for the given contract id.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getOffCyclePaymentsByContract",
          "originalEndpointId": "Off-cycle Payments.getOffCyclePaymentsByContract",
          "name": "List of off-cycle payments",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/off-cycle-payments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OffCyclePaymentListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "amount": "foo",
                      "created_at": "foo",
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "amount": "foo",
                      "created_at": "foo",
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add a new invoice line-item for the purpose of off-cycle payment for a given contract.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createOffCyclePayment",
          "originalEndpointId": "Off-cycle Payments.createOffCyclePayment",
          "name": "Add off-cycle payment",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/off-cycle-payments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OffCyclePaymentToCreateContainer"
                }
              },
              "description": "Off-cycle payment object that needs to be created"
            },
            "description": "Off-cycle payment object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "date_submitted": "foo",
                  "amount": 42
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "date_submitted": "foo",
                    "amount": 42
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a single off-cycle payment.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getOffCyclePaymentByContractAndId",
          "originalEndpointId": "Off-cycle Payments.getOffCyclePaymentByContractAndId",
          "name": "Retrieve a single off-cycle payment",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "ID of off-cycle payment to return",
                "key": "offcycle_payment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/off-cycle-payments/"
              },
              {
                "type": "pathParameter",
                "value": "offcycle_payment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OffCyclePaymentContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "offcycle_payment_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "status": "approved",
                    "description": "foo",
                    "date_submitted": "foo",
                    "currency_code": "foo",
                    "amount": "foo",
                    "created_at": "foo",
                    "reviewed_by": {
                      "id": 42,
                      "full_name": "foo",
                      "reviewed_at": "foo",
                      "remarks": "foo"
                    },
                    "reported_by": {
                      "id": 42,
                      "full_name": "foo"
                    }
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": "foo",
                    "status": "approved",
                    "description": "foo",
                    "date_submitted": "foo",
                    "currency_code": "foo",
                    "amount": "foo",
                    "created_at": "foo",
                    "reviewed_by": {
                      "id": 42,
                      "full_name": "foo",
                      "reviewed_at": "foo",
                      "remarks": "foo"
                    },
                    "reported_by": {
                      "id": 42,
                      "full_name": "foo"
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Time Off": {
      "subpackageId": "Time Off",
      "name": "Time Off",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve the list of time off requests by an employee.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getEorTimeOffs",
          "originalEndpointId": "Time Off.getEorTimeOffs",
          "name": "List time off by contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/time-offs"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EorTimeoffsContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "created_at": "foo",
                      "start_date": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "created_at": "foo",
                      "start_date": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add a time off request for a full-time employee.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createEorTimeOffs",
          "originalEndpointId": "Time Off.createEorTimeOffs",
          "name": "Add a time off request",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/time-offs"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateTimeoffContainer"
                }
              },
              "description": "Detail of the time off that will be registered to the contract."
            },
            "description": "Detail of the time off that will be registered to the contract."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EorTimeoffsItemContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "type": "VACATION",
                  "with_multiple_dates": true
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "type": "VACATION",
                    "with_multiple_dates": true
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "created_at": "foo",
                    "start_date": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "created_at": "foo",
                    "start_date": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Edit a time off request for a full-time employee.",
          "method": "PUT",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "editEorTimeOffs",
          "originalEndpointId": "Time Off.editEorTimeOffs",
          "name": "Edit a time off request",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Time off Id",
                "key": "timeoff_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/time-offs/"
              },
              {
                "type": "pathParameter",
                "value": "timeoff_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateTimeoffContainer"
                }
              },
              "description": "Detail of the time off that will be registered to the contract."
            },
            "description": "Detail of the time off that will be registered to the contract."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EorTimeoffsItemContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "timeoff_id": "12345"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "type": "VACATION",
                  "with_multiple_dates": true
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "type": "VACATION",
                    "with_multiple_dates": true
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "created_at": "foo",
                    "start_date": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "created_at": "foo",
                    "start_date": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Cancel a time off request for an employee.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "deleteEorTimeOffs",
          "originalEndpointId": "Time Off.deleteEorTimeOffs",
          "name": "Cancel a time off request",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "Time off Id",
                "key": "timeoff_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/time-offs/"
              },
              {
                "type": "pathParameter",
                "value": "timeoff_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultDeleted"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x",
                "timeoff_id": "12345"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of time off entitlements for a full-time employee.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getEorEntitlements",
          "originalEndpointId": "Time Off.getEorEntitlements",
          "name": "List time off entitlements",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/entitlements"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EorEntitlementsContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "entitlements": [
                      {}
                    ]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "entitlements": [
                      {}
                    ]
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "List of time offs for all employees in your organization.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getEorClientTimeOffs",
          "originalEndpointId": "Time Off.getEorClientTimeOffs",
          "name": "List of time offs",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-offs/"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EorClientTimeoffsContainer"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-offs/",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "employees": [
                      {
                        "id": 42,
                        "name": "foo",
                        "eor_contract_id": 42,
                        "contract_id": "foo",
                        "vacations": [
                          {
                            "requests": [
                              {
                                "id": 42,
                                "created_at": "foo",
                                "start_date": "foo"
                              }
                            ]
                          }
                        ],
                        "sick_leaves": [
                          {
                            "requests": [
                              {
                                "id": 42,
                                "created_at": "foo",
                                "start_date": "foo"
                              }
                            ]
                          }
                        ],
                        "others": [
                          {
                            "requests": [
                              {
                                "id": 42,
                                "created_at": "foo",
                                "start_date": "foo"
                              }
                            ]
                          }
                        ],
                        "time_zones": "foo"
                      }
                    ],
                    "total_requests": 42
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "employees": [
                      {
                        "id": 42,
                        "name": "foo",
                        "eor_contract_id": 42,
                        "contract_id": "foo",
                        "vacations": [
                          {
                            "requests": [
                              {
                                "id": 42,
                                "created_at": "foo",
                                "start_date": "foo"
                              }
                            ]
                          }
                        ],
                        "sick_leaves": [
                          {
                            "requests": [
                              {
                                "id": 42,
                                "created_at": "foo",
                                "start_date": "foo"
                              }
                            ]
                          }
                        ],
                        "others": [
                          {
                            "requests": [
                              {
                                "id": 42,
                                "created_at": "foo",
                                "start_date": "foo"
                              }
                            ]
                          }
                        ],
                        "time_zones": "foo"
                      }
                    ],
                    "total_requests": 42
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Approve or decline an employee's time off request.",
          "method": "PATCH",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "reviewTimeoff",
          "originalEndpointId": "Time Off.reviewTimeoff",
          "name": "Review a time off request",
          "path": {
            "pathParameters": [
              {
                "description": "Time off Id",
                "key": "timeoff_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-offs/"
              },
              {
                "type": "pathParameter",
                "value": "timeoff_id"
              },
              {
                "type": "literal",
                "value": "/review"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TimeoffToReviewContainer"
                }
              },
              "description": "Timeoff acceptance approve or decline."
            },
            "description": "Timeoff acceptance approve or decline."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultUpdated"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-offs/",
              "pathParameters": {
                "timeoff_id": "12345"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "is_approved": true
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "is_approved": true
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Invoices": {
      "subpackageId": "Invoices",
      "name": "Invoices",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of invoice details for the given contract id.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getInvoiceAdjustmentsByContractId",
          "originalEndpointId": "Invoices.getInvoiceAdjustmentsByContractId",
          "name": "Invoice details by contract",
          "path": {
            "pathParameters": [
              {
                "description": "Deel contract id.",
                "key": "contract_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contracts/"
              },
              {
                "type": "pathParameter",
                "value": "contract_id"
              },
              {
                "type": "literal",
                "value": "/invoice-adjustments"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "types of contracts to filter",
              "key": "contract_types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractTypeEnumList"
                }
              }
            },
            {
              "description": "types of invoice adjustments to filter",
              "key": "types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "InvoiceAdjustmentTypeEnumList"
                }
              }
            },
            {
              "description": "statuses of invoice adjustment to filter",
              "key": "statuses",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "InvoiceAdjustmentStatusEnumList"
                }
              }
            },
            {
              "description": "ID of an existing invoice; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "invoice_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "description": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "reporter_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "to get invoice adjustments submitted on or after given start date (inclusive)",
              "key": "date_from",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "to get invoice adjustments submitted before given end date (excludes records submitted on this date)",
              "key": "date_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 99,
                    "default": 10
                  }
                }
              }
            },
            {
              "description": "Return a page of results after given index of row; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 0
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "InvoiceAdjustmentListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contracts/",
              "pathParameters": {
                "contract_id": "37nex2x"
              },
              "queryParameters": {
                "contract_types": [
                  "ongoing_time_based"
                ],
                "types": [
                  "accrued_holiday"
                ],
                "statuses": [
                  "approved"
                ],
                "invoice_id": 42,
                "reporter_id": 42,
                "date_from": "foo",
                "date_to": "foo",
                "limit": 42,
                "offset": 42
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "accrued_holiday",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "quantity": 42,
                      "total_amount": "foo",
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "payment_cycle": {
                        "start_date": "foo",
                        "end_date": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42,
                    "items_per_page": 42,
                    "offset": 42
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "accrued_holiday",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "quantity": 42,
                      "total_amount": "foo",
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "payment_cycle": {
                        "start_date": "foo",
                        "end_date": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42,
                    "items_per_page": 42,
                    "offset": 42
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of invoice details. You can filter the list by providing additional paramters e.g. contract_id, contract_type etc.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getInvoiceAdjustments",
          "originalEndpointId": "Invoices.getInvoiceAdjustments",
          "name": "List of invoice details",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoice-adjustments"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Id of an Deel contract.",
              "key": "contract_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "types of contracts to filter",
              "key": "contract_types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContractTypeEnumList"
                }
              }
            },
            {
              "description": "types of invoice adjustments to filter",
              "key": "types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "InvoiceAdjustmentTypeEnumList"
                }
              }
            },
            {
              "description": "statuses of invoice adjustment to filter",
              "key": "statuses",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "InvoiceAdjustmentStatusEnumList"
                }
              }
            },
            {
              "description": "ID of an existing invoice; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "invoice_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            },
            {
              "description": "ID of an existing profile; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "reporter_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "to get invoice adjustments submitted on or after given start date (inclusive)",
              "key": "date_from",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "to get invoice adjustments submitted before given end date (excludes records submitted on this date)",
              "key": "date_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 99,
                    "default": 10
                  }
                }
              }
            },
            {
              "description": "Return a page of results after given index of row; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 0
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "InvoiceAdjustmentListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoice-adjustments",
              "pathParameters": {},
              "queryParameters": {
                "contract_id": "foo",
                "contract_types": [
                  "ongoing_time_based"
                ],
                "types": [
                  "accrued_holiday"
                ],
                "statuses": [
                  "approved"
                ],
                "invoice_id": 42,
                "reporter_id": 42,
                "date_from": "foo",
                "date_to": "foo",
                "limit": 42,
                "offset": 42
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "accrued_holiday",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "quantity": 42,
                      "total_amount": "foo",
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "payment_cycle": {
                        "start_date": "foo",
                        "end_date": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42,
                    "items_per_page": 42,
                    "offset": 42
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": "foo",
                      "type": "accrued_holiday",
                      "status": "approved",
                      "description": "foo",
                      "date_submitted": "foo",
                      "currency_code": "foo",
                      "quantity": 42,
                      "total_amount": "foo",
                      "created_at": "foo",
                      "attachment": {
                        "filename": "foo",
                        "key": "foo"
                      },
                      "worksheet": {
                        "weeks": 42,
                        "days": 42,
                        "hours": 42,
                        "minutes": 42
                      },
                      "reviewed_by": {
                        "id": 42,
                        "full_name": "foo",
                        "reviewed_at": "foo",
                        "remarks": "foo"
                      },
                      "contract": {
                        "id": "foo",
                        "title": "foo",
                        "type": "ongoing_time_based"
                      },
                      "payment_cycle": {
                        "start_date": "foo",
                        "end_date": "foo"
                      },
                      "reported_by": {
                        "id": 42,
                        "full_name": "foo"
                      }
                    }
                  ],
                  "page": {
                    "total_rows": 42,
                    "items_per_page": 42,
                    "offset": 42
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create an invoice adjustment using this endpoint. For example, you can add a bonus, commission, VAT %, deduction etc. to an invoice.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createInvoiceAdjustment",
          "originalEndpointId": "Invoices.createInvoiceAdjustment",
          "name": "Create an invoice adjustment",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoice-adjustments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "InvoiceAdjustmentToCreateContainer"
                }
              },
              "description": "InvoiceAdjustment object that needs to be created"
            },
            "description": "InvoiceAdjustment object that needs to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "InvoiceAdjustmentCreatedContainer"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoice-adjustments",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "contract_id": "foo",
                  "date_submitted": "foo",
                  "type": "bonus",
                  "amount": 42
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "contract_id": "foo",
                    "date_submitted": "foo",
                    "type": "bonus",
                    "amount": 42
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update an existing invoice adjustment.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "deleteInvoiceAdjustmentById",
          "originalEndpointId": "Invoices.deleteInvoiceAdjustmentById",
          "name": "Delete an invoice adjustment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing invoice adjustment",
                "key": "invoice_adjustment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoice-adjustments/"
              },
              {
                "type": "pathParameter",
                "value": "invoice_adjustment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Reason for deleting an existing invoice adjustment",
              "key": "reason",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultDeleted"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoice-adjustments/",
              "pathParameters": {
                "invoice_adjustment_id": 42
              },
              "queryParameters": {
                "reason": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "deleted": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update an existing invoice adjustment. It is not possible to update VAT adjustments, we recommend you to delete the existing VAT adjust and create a new one.",
          "method": "PATCH",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "updateInvoiceAdjustmentById",
          "originalEndpointId": "Invoices.updateInvoiceAdjustmentById",
          "name": "Update an invoice adjustment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing invoice adjustment",
                "key": "invoice_adjustment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoice-adjustments/"
              },
              {
                "type": "pathParameter",
                "value": "invoice_adjustment_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "InvoiceAdjustmentToUpdateContainer"
                }
              },
              "description": "InvoiceAdjustment object that needs to be updated"
            },
            "description": "InvoiceAdjustment object that needs to be updated"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultUpdated"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoice-adjustments/",
              "pathParameters": {
                "invoice_adjustment_id": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "description": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "description": "foo"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "updated": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review an invoice adjustment to approve or decline it.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createInvoiceAdjustmentReview",
          "originalEndpointId": "Invoices.createInvoiceAdjustmentReview",
          "name": "Review an invoice adjustment",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing invoice adjustment",
                "key": "invoice_adjustment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoice-adjustments/"
              },
              {
                "type": "pathParameter",
                "value": "invoice_adjustment_id"
              },
              {
                "type": "literal",
                "value": "/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "InvoiceAdjustmentReviewToCreateContainer"
                }
              },
              "description": "InvoiceAdjustment review object that need to be created"
            },
            "description": "InvoiceAdjustment review object that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoice-adjustments/",
              "pathParameters": {
                "invoice_adjustment_id": 42
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved"
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Review multiple invoice adjustments to approve or decline a batch.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createInvoiceAdjustmentReviews",
          "originalEndpointId": "Invoices.createInvoiceAdjustmentReviews",
          "name": "Bulk review invoice adjustments",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoice-adjustments/many/reviews"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "InvoiceAdjustmentReviewsToCreateContainer"
                }
              },
              "description": "InvoiceAdjustment review objects that need to be created"
            },
            "description": "InvoiceAdjustment review objects that need to be created"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "GenericResultCreated"
              }
            },
            "statusCode": 201,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoice-adjustments/many/reviews",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "status": "approved",
                  "ids": [
                    42
                  ]
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "status": "approved",
                    "ids": [
                      42
                    ]
                  }
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "created": true
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Organizations": {
      "subpackageId": "Organizations",
      "name": "Organizations",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of legal entities in your account.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getLegalEntityList",
          "originalEndpointId": "Organizations.getLegalEntityList",
          "name": "List of legal entities",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/legal-entities"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "LegalEntityListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/legal-entities",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve the current organization details. Organization is automatically detected from the auth token.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getOrganizations",
          "originalEndpointId": "Organizations.getOrganizations",
          "name": "Get current organization",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/organizations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OrganizationListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/organizations",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of teams in your organization.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getTeams",
          "originalEndpointId": "Organizations.getTeams",
          "name": "Get team list",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/teams"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TeamListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/teams",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "This end-point returns a list of your agreements with Deel.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getAgreements",
          "originalEndpointId": "Organizations.getAgreements",
          "name": "Get agreements with Deel.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/agreements"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Deel contract id.",
              "key": "contract_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to return.",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AgreementsParamLimit"
                }
              }
            },
            {
              "description": "Offset/index of record for the next page of records to return.",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AgreementsParamOffset"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AgreementListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/agreements",
              "pathParameters": {},
              "queryParameters": {
                "contract_id": "37nex2x",
                "limit": "foo",
                "offset": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "agreement_title": "foo",
                      "agreement_type": "foo",
                      "msa": {
                        "id": "foo",
                        "title": "foo"
                      },
                      "client_legal_entity": {
                        "id": 42,
                        "name": "foo"
                      },
                      "provider_legal_entity": {
                        "id": 42,
                        "name": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "agreement_title": "foo",
                      "agreement_type": "foo",
                      "msa": {
                        "id": "foo",
                        "title": "foo"
                      },
                      "client_legal_entity": {
                        "id": 42,
                        "name": "foo"
                      },
                      "provider_legal_entity": {
                        "id": 42,
                        "name": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Lookups": {
      "subpackageId": "Lookups",
      "name": "Lookups",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of countries supported by Deel.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getCountries",
          "originalEndpointId": "Lookups.getCountries",
          "name": "Country list",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/lookups/countries"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CountryListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/lookups/countries",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "code": "foo",
                      "name": "foo",
                      "visa_support": true,
                      "eor_support": true,
                      "state_type": "foo",
                      "states": [
                        {
                          "code": "foo",
                          "name": "foo"
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "code": "foo",
                      "name": "foo",
                      "visa_support": true,
                      "eor_support": true,
                      "state_type": "foo",
                      "states": [
                        {
                          "code": "foo",
                          "name": "foo"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve the list of currencies used by Deel.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getCurrencies",
          "originalEndpointId": "Lookups.getCurrencies",
          "name": "Currency list",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/lookups/currencies"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CurrencyListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/lookups/currencies",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "code": "foo",
                      "name": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "code": "foo",
                      "name": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of pre-defined job titles in Deel platform.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getJobTitleList",
          "originalEndpointId": "Lookups.getJobTitleList",
          "name": "Job titles list",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/lookups/job-titles"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 99
                  }
                }
              }
            },
            {
              "description": "Return next page of results after given cursor",
              "key": "after_cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "JobTitleListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/lookups/job-titles",
              "pathParameters": {},
              "queryParameters": {
                "limit": 42,
                "after_cursor": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "page": {
                    "cursor": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "page": {
                    "cursor": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of pre-defined seniority level for roles in Deel platform.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getSeniorityList",
          "originalEndpointId": "Lookups.getSeniorityList",
          "name": "Seniority levels",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/lookups/seniorities"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Return a page of results with given number of records; NOTE: technically ALL query parameters are strings or array of strings",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 50
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "SeniorityListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/lookups/seniorities",
              "pathParameters": {},
              "queryParameters": {
                "limit": 42
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo",
                      "level": 42
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo",
                      "level": 42
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of pre-defined time off types to register in Deel platform.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getTimeoffTypeList",
          "originalEndpointId": "Lookups.getTimeoffTypeList",
          "name": "Time-off types",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/lookups/time-off-types"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TimeoffTypeListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/lookups/time-off-types",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Attachments": {
      "subpackageId": "Attachments",
      "name": "Attachments",
      "endpoints": [
        {
          "auth": true,
          "description": "Upload file to Deel storage to use the file attachment feature for other endpoints.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createFileRef",
          "originalEndpointId": "Attachments.createFileRef",
          "name": "Upload file to Deel",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/attachments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "InputToCreateFileRef"
                }
              },
              "description": "File info object that needs to be created."
            },
            "description": "File info object that needs to be created."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OutputToCreateFileRefContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/attachments",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "content_type": "application/pdf"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "content_type": "application/pdf"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "key": "foo",
                    "url": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "key": "foo",
                    "url": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Accounting": {
      "subpackageId": "Accounting",
      "name": "Accounting",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of paid invoices for your workforce.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getInvoiceList",
          "originalEndpointId": "Accounting.getInvoiceList",
          "name": "Retrieve invoices",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoices"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "to get records created after given issue date",
              "key": "issued_from_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "to get records created before given issued date",
              "key": "issued_to_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "statuses of invoices to filter",
              "key": "statuses",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "InvoiceStatusEnumList"
                }
              }
            },
            {
              "description": "Filter by legal entity type; company, or individual",
              "key": "entities",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LegalEntityArray"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "InvoiceListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoices",
              "pathParameters": {},
              "queryParameters": {
                "issued_from_date": "foo",
                "issued_to_date": "foo",
                "statuses": [
                  "pending"
                ],
                "entities": [
                  "individual"
                ]
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get link to download the invoice PDF.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getInvoiceDownloadLink",
          "originalEndpointId": "Accounting.getInvoiceDownloadLink",
          "name": "Download invoice PDF",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing invoice",
                "key": "invoice_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/invoices/"
              },
              {
                "type": "pathParameter",
                "value": "invoice_id"
              },
              {
                "type": "literal",
                "value": "/download"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "InvoiceDownloadContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/invoices/",
              "pathParameters": {
                "invoice_id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get a link to download the Deel billing invoice PDF.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getBillingInvoiceDownloadLink",
          "originalEndpointId": "Accounting.getBillingInvoiceDownloadLink",
          "name": "Download Deel invoice PDF",
          "path": {
            "pathParameters": [
              {
                "description": "ID of an existing invoice",
                "key": "invoice_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/billing/"
              },
              {
                "type": "pathParameter",
                "value": "invoice_id"
              },
              {
                "type": "literal",
                "value": "/download"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "InvoiceDownloadContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/billing/",
              "pathParameters": {
                "invoice_id": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a list of payments made to Deel.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getPaymentList",
          "originalEndpointId": "Accounting.getPaymentList",
          "name": "Retrieve payment reciepts",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filtered results will include records created on or after the provided date.",
              "key": "date_from",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Filtered results will include records created before the provided date.",
              "key": "date_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DateString"
                }
              }
            },
            {
              "description": "Currency codes of contracts to filter.",
              "key": "currencies",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CurrencyCodeList"
                }
              }
            },
            {
              "description": "statuses of payments to filter",
              "key": "statuses",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaymentStatusEnumList"
                }
              }
            },
            {
              "description": "Filter by legal entity type; company, or individual",
              "key": "entities",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LegalEntityArray"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaymentListContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/payments",
              "pathParameters": {},
              "queryParameters": {
                "date_from": "2022-01-01",
                "date_to": "2022-12-01",
                "currencies": [
                  "foo"
                ],
                "statuses": [
                  "paid"
                ],
                "entities": [
                  "individual"
                ]
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get a full breakdown of a payment made to Deel. Breakdown will include individual invoices and Deel fee as line items.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "GetPaymentsBreakDownById",
          "originalEndpointId": "Accounting.GetPaymentsBreakDownById",
          "name": "Retrieve a payment breakdown",
          "path": {
            "pathParameters": [
              {
                "key": "payment_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payments/"
              },
              {
                "type": "pathParameter",
                "value": "payment_id"
              },
              {
                "type": "literal",
                "value": "/breakdown"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaymentBreakDownContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/payments/",
              "pathParameters": {
                "payment_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {}
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {}
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Contract": {
      "subpackageId": "Contract",
      "name": "Contract",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getPeopleList",
          "originalEndpointId": "Contract.getPeopleList",
          "name": "Get people list",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/people"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Return a page of results with given number of records.",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "long",
                    "default": 0
                  }
                }
              }
            },
            {
              "description": "Return a page of results with given number of records.",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 200
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PeopleContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/people",
              "pathParameters": {},
              "queryParameters": {
                "offset": 42,
                "limit": 42
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {}
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {}
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getPeople",
          "originalEndpointId": "Contract.getPeople",
          "name": "Get my current profile",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/people/me"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PeopleMeContainer"
              }
            },
            "statusCode": 200,
            "description": "Successful operation."
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/people/me",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Webhooks": {
      "subpackageId": "Webhooks",
      "name": "Webhooks",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve a list of webhook subscriptions.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "getAllWebhooks",
          "originalEndpointId": "Webhooks.getAllWebhooks",
          "name": "List of webhooks",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhooks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WebhookListResponse"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/webhooks",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo",
                      "description": "foo",
                      "status": "enabled",
                      "url": "foo",
                      "signing_key": "foo",
                      "api_version": "foo",
                      "events": [
                        "foo"
                      ],
                      "created_at": "foo",
                      "updated_at": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": [
                    {
                      "id": 42,
                      "name": "foo",
                      "description": "foo",
                      "status": "enabled",
                      "url": "foo",
                      "signing_key": "foo",
                      "api_version": "foo",
                      "events": [
                        "foo"
                      ],
                      "created_at": "foo",
                      "updated_at": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a new webhooks subscription.",
          "method": "POST",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "createWebhook",
          "originalEndpointId": "Webhooks.createWebhook",
          "name": "Create a webhook",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhooks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateWebhookRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WebhookItemResponse"
              }
            },
            "statusCode": 201,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/webhooks",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "description": "foo",
                "status": "enabled",
                "url": "foo",
                "signing_key": "foo",
                "api_version": "foo",
                "events": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "description": "foo",
                  "status": "enabled",
                  "url": "foo",
                  "signing_key": "foo",
                  "api_version": "foo",
                  "events": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "name": "foo",
                    "description": "foo",
                    "status": "enabled",
                    "url": "foo",
                    "signing_key": "foo",
                    "api_version": "foo",
                    "events": [
                      "foo"
                    ],
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "name": "foo",
                    "description": "foo",
                    "status": "enabled",
                    "url": "foo",
                    "signing_key": "foo",
                    "api_version": "foo",
                    "events": [
                      "foo"
                    ],
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a single webhook subscription.",
          "method": "GET",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "WebhookController_getById",
          "originalEndpointId": "Webhooks.WebhookController_getById",
          "name": "Retrieve a single webhook",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhooks/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WebhookItemResponse"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/webhooks/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "name": "foo",
                    "description": "foo",
                    "status": "enabled",
                    "url": "foo",
                    "signing_key": "foo",
                    "api_version": "foo",
                    "events": [
                      "foo"
                    ],
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "name": "foo",
                    "description": "foo",
                    "status": "enabled",
                    "url": "foo",
                    "signing_key": "foo",
                    "api_version": "foo",
                    "events": [
                      "foo"
                    ],
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a webhook subscription.",
          "method": "DELETE",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "WebhookController_deleteById",
          "originalEndpointId": "Webhooks.WebhookController_deleteById",
          "name": "Delete a webhook",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhooks/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/webhooks/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Edit a webhook subscription.",
          "method": "PATCH",
          "defaultEnvironment": "Production server",
          "environments": [
            {
              "id": "Production server",
              "baseUrl": "https://api.letsdeel.com/rest/v1"
            },
            {
              "id": "Demo server",
              "baseUrl": "https://api-staging.letsdeel.com/rest/v1"
            }
          ],
          "id": "WebhookController_editById",
          "originalEndpointId": "Webhooks.WebhookController_editById",
          "name": "Edit a webhook",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhooks/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "PatchWebhookRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WebhookItemResponse"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/webhooks/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "description": "foo",
                "status": "enabled",
                "url": "foo",
                "signing_key": "foo",
                "events": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "description": "foo",
                  "status": "enabled",
                  "url": "foo",
                  "signing_key": "foo",
                  "events": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "name": "foo",
                    "description": "foo",
                    "status": "enabled",
                    "url": "foo",
                    "signing_key": "foo",
                    "api_version": "foo",
                    "events": [
                      "foo"
                    ],
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "id": 42,
                    "name": "foo",
                    "description": "foo",
                    "status": "enabled",
                    "url": "foo",
                    "signing_key": "foo",
                    "api_version": "foo",
                    "events": [
                      "foo"
                    ],
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "websockets": [],
    "types": [
      "PaymentStatementInitiatedWebhook",
      "AlternateEmailList",
      "AlternateEmailItem",
      "ApiErrorContainer",
      "ApiErrorRequest",
      "ApiError",
      "ContractSearchForm",
      "ContractSearchFormWithCursor",
      "ContractSearchFormWithoutCursor",
      "ContractListContainer",
      "ContractList",
      "BasicContract",
      "ContractContainer",
      "ContractContainer_pay_as_you_go_time_based",
      "ContractContainer_payg_tasks",
      "ContractContainer_payg_milestones",
      "ContractContainer_ongoing_time_based",
      "ResponseEstimateFirstPaymentContainer",
      "ResponseEstimateFirstPayment",
      "Contract",
      "ClientOfBasicContract",
      "ClientOfContract",
      "ClientLegalEntity",
      "DateStringDefaultNow",
      "DateStringRequired",
      "DateString",
      "DateTimeStringRequired",
      "DateTimeString",
      "WorkerOfBasicContract",
      "WorkerOfContract",
      "WorkerLegalEntity",
      "TeamOfBasicContract",
      "TeamOfContract",
      "InvitationsOfBasicContract",
      "SignaturesOfBasicContract",
      "SignaturesOfContract",
      "CompensationDetailsOfContract",
      "EmploymentDetailsOfContract",
      "ContractToAmendDetailsContainer",
      "ContractDetailsToAmend",
      "ContractToCreateContainer",
      "ContractToCreate",
      "ContractToCreateContainer_pay_as_you_go_time_based",
      "ContractToCreateContainer_payg_tasks",
      "ContractToCreateContainer_payg_milestones",
      "ContractToCreateContainer_ongoing_time_based",
      "ContractToCreate_pay_as_you_go_time_based",
      "ContractToCreate_payg_tasks",
      "ContractToCreate_payg_milestones",
      "ContractToCreate_ongoing_time_based",
      "ContractToCreate_Shared",
      "MetaDataOfContractToCreate",
      "CompensationDetailsOfContractToCreate_pay_as_you_go_time_based",
      "CompensationDetailsOfContractToCreate_ongoing_time_based",
      "CompensationDetailsOfContractToCreate_Shared",
      "ContractSignatureToCreateContainer",
      "ContractSignatureToCreate",
      "ContractInvitationToCreateContainer",
      "ContractInvitationToCreate",
      "WorkStatementScaleEnumOptional",
      "WorkStatementScaleEnum",
      "WorkStatementCycleScaleEnum",
      "WorkStatementCycleEndTypeEnum",
      "WeekDaysEnum",
      "WorkStatementPaymentDueTypeEnum",
      "LegalEntityListContainer",
      "LegalEntityList",
      "BasicLegalEntity",
      "OrganizationListContainer",
      "OrganizationList",
      "BasicOrganization",
      "TeamListContainer",
      "TeamList",
      "BasicTeam",
      "TimesheetListContainer",
      "TimesheetList",
      "BasicTimesheet",
      "TimesheetContainer",
      "Timesheet",
      "TimesheetApproversContainer",
      "TimesheetApproverList",
      "TimesheetApprover",
      "TimesheetToCreateContainer",
      "TimesheetToCreateContainerWithFile",
      "TimesheetSharedProperties",
      "TimesheetToCreate",
      "TimesheetToCreateWithFile",
      "TimesheetToUpdateContainer",
      "TimesheetToUpdate",
      "TimesheetReviewsToCreateContainer",
      "RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer",
      "RequestBodyToCreatePgoTaskReviewsReviewsContainer",
      "TimesheetReviewsToCreate",
      "GenericReportReviewCreatedContainer",
      "GenericReportReviewCreatedList",
      "GenericReportReviewCreated",
      "PgoTaskReviewsByIdToCreate",
      "PgoTaskReviewsToCreate",
      "TimesheetReviewToCreateContainer",
      "TimesheetReviewToCreate",
      "TimesheetSearchContainer",
      "TimesheetAccountingRefs",
      "InvoiceAdjustmentSearchContainer",
      "InvoiceAdjustmentListContainer",
      "InvoiceAdjustmentList",
      "BasicInvoiceAdjustment",
      "InvoiceAdjustmentContainer",
      "InvoiceAdjustment",
      "InvoiceAdjustmentApproversContainer",
      "InvoiceAdjustmentApproverList",
      "InvoiceAdjustmentApprover",
      "InvoiceAdjustmentToCreateContainer",
      "InvoiceAdjustmentToCreateWithFile",
      "InvoiceAdjustmentToCreate",
      "InvoiceAdjustmentCreatedContainer",
      "InvoiceAdjustmentCreated",
      "InvoiceAdjustmentToUpdateContainer",
      "InvoiceAdjustmentToUpdate",
      "InvoiceAdjustmentReviewsToCreateContainer",
      "InvoiceAdjustmentReviewsToCreate",
      "TimesheetIdItems",
      "InvoiceAdjustmentReviewToCreateContainer",
      "InvoiceAdjustmentReviewToCreate",
      "GenericResultCreated",
      "ContractExternalIdPatchedContainer",
      "GenericResultUpdated",
      "GenericResultDeleted",
      "ContractTypeEnumList",
      "ContractTypeEnum",
      "ContractTypeEnumToCreate",
      "ContractStatusEnumList",
      "ContractStatusEnum",
      "ContractWhoReportsEnum",
      "ContractFirstSignEnum",
      "ContractsSortByEnum",
      "ProfileTypeEnum",
      "CountryListContainer",
      "CountryList",
      "Country",
      "StateOfCountry",
      "CurrencyListContainer",
      "CurrencyList",
      "Currency",
      "PaymentMethodEnumList",
      "PaymentMethodEnum",
      "PaymentStatusEnumList",
      "PaymentStatusEnum",
      "InvoiceStatusEnumList",
      "InvoiceStatusEnum",
      "InvoiceTypeEnum",
      "CountryCodeList",
      "CountryCode",
      "CountryCodeNulleable",
      "CurrencyCodeList",
      "CurrencyCodeRequired",
      "CurrencyCode",
      "LegalEntityArray",
      "LegalEntityType",
      "LegalEntitySubType",
      "JobTitleListContainer",
      "JobTitleList",
      "JobTitle",
      "SeniorityListContainer",
      "SeniorityList",
      "SeniorityRequired",
      "Seniority",
      "TimesheetTypeEnumList",
      "TimesheetTypeEnum",
      "OffCyclePaymentTypeEnum",
      "TimesheetStatusEnumList",
      "TimesheetStatusEnum",
      "InvoiceAdjustmentTypeEnumList",
      "InvoiceAdjustmentTypeEnum",
      "InvoiceAdjustmentTypeToCreateEnum",
      "InvoiceAdjustmentStatusEnumList",
      "InvoiceAdjustmentStatusEnum",
      "SortDirEnum",
      "EmailTypeRequired",
      "WorkerEmailType",
      "EmailType",
      "UrlTypeRequired",
      "UrlType",
      "PageInfo",
      "PageInfoWithoutCursor",
      "PageInfoWithoutCursorNew",
      "MilestoneContainer",
      "MilestoneToCreateContainer",
      "MilestoneToCreateFormWithFile",
      "MilestoneToCreate",
      "MilestoneProperties",
      "MilestoneListContainer",
      "MilestoneList",
      "Milestone",
      "MilestoneReviewsToCreateContainer",
      "MilestoneReviewsToCreate",
      "MilestoneReviewToCreateContainer",
      "MilestoneReviewToCreate",
      "OffCyclePaymentContainer",
      "OffCyclePaymentToCreateContainer",
      "EstimateFirstPaymentContainer",
      "OffCyclePaymentToCreate",
      "EstimateFirstPayment",
      "ProRata",
      "FirstPaymentDate",
      "OffCyclePaymentListContainer",
      "OffCyclePaymentList",
      "OffCyclePayment",
      "FileAttachmentInfo",
      "FileObject",
      "FileRefTypeEnum",
      "InputToCreateFileRef",
      "OutputToCreateFileRef",
      "OutputToCreateFileRefContainer",
      "InputToPatchContractExternalId",
      "InputToCreatePgoTask",
      "InputToDeletePgoTask",
      "ContractExternalIdToPatch",
      "PgoTaskToCreate",
      "PgoTask",
      "PgoTaskToDelete",
      "TaskListContainer",
      "TaskList",
      "AgreementsSearchForm",
      "AgreementsParamLimit",
      "AgreementsParamOffset",
      "AgreementListContainer",
      "AgreementList",
      "Agreement",
      "InputToShieldContract",
      "PremiumToAddContainer",
      "PremiumToAdd",
      "PremiumResultAddedContainer",
      "EorEntitlementsContainer",
      "EorTimeoffsContainer",
      "EorTimeoffsItemContainer",
      "EorClientTimeoffsContainer",
      "FinalPaymentCalculatedContainer",
      "FinalPaymentCalculated",
      "PremiumResultAdded",
      "EorEntitlements",
      "EorEntitlementListItem",
      "EorHolidaysRolloverType",
      "ContractToTerminateContainer",
      "ContractToTerminate",
      "ContractTerminationResultContainer",
      "ContractTerminationResult",
      "ContractTemplateListContainer",
      "ContractTemplateList",
      "ContractTemplateSummary",
      "NoticePeriod",
      "ContractCustomField",
      "EorCountryValidationsContainer",
      "EorContractToCreateContainer",
      "EorContractCreatedContainer",
      "EorContractToCreate",
      "EorContractCreated",
      "EorCountryValidations",
      "HealthInsuranceProvider",
      "EorClientTimeoffs",
      "EorTimeoffsEmployeeItem",
      "EorClientTimeoffRequests",
      "EorTimeoffs",
      "EorTimeoffsItem",
      "EorTimeoffsBaseItem",
      "TimeoffsAttachments",
      "TimeoffsAttachmentsItem",
      "TimeoffsStatusEnum",
      "TimeoffsTypeEnum",
      "HealthInsuranceStatusEnum",
      "InvoiceContractTypes",
      "InvoiceContract",
      "TimeoffsProfile",
      "TimeoffToReviewContainer",
      "TimeoffReview",
      "TimeoffTypeListContainer",
      "TimeoffTypeList",
      "CreateTimeoffContainer",
      "CreateTimeoff",
      "EmployeeListContainer",
      "EmployeeList",
      "WebhookItem",
      "WebhookListResponse",
      "CreateWebhookRequest",
      "WebhookItemResponse",
      "PatchWebhookRequest",
      "PaymentObject",
      "PaymentListContainer",
      "PaymentList",
      "PaymentWorkerList",
      "PaymentWorker",
      "PaymentMethod",
      "Payment",
      "PaymentBreakDownContainer",
      "PeopleContainer",
      "PeopleMeContainer",
      "ContractDocumentContainer",
      "PaymentBreakDown",
      "InvoiceObject",
      "InvoiceDownloadObject",
      "InvoiceListContainer",
      "InvoiceDownloadContainer",
      "InvoiceList",
      "ExchangeRates",
      "Invoice",
      "InvoiceContractor",
      "HrisDirectEmployeeDetails",
      "HrisTeamInformation",
      "HrisJobInformationBase",
      "HrisJobInformationTitleId",
      "HrisJobInformationTitleName",
      "HrisCompensation",
      "HrisContractBase",
      "HrisContractPartTime",
      "HrisContractFullTime",
      "HrisDirectEmployee",
      "HrisDirectEmployeeResponse",
      "HrisDirectEmployeeContainer",
      "PeopleClientLegalEntity",
      "PeoplePayment",
      "Employment",
      "MonthlyPayment",
      "Team",
      "People",
      "PeopleMe",
      "ContractPreview",
      "UniqueObjectIdentifier",
      "PublicId"
    ],
    "subpackages": [
      "Hris",
      "EOR",
      "Contractors",
      "Contracts",
      "Tasks",
      "Timesheets",
      "Milestones",
      "Off-cycle Payments",
      "Time Off",
      "Invoices",
      "Organizations",
      "Lookups",
      "Attachments",
      "Accounting",
      "Contract",
      "Webhooks"
    ]
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}