{
  "types": {
    "GetAccountInfoResult": {
      "name": "GetAccountInfoResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of lamports assigned to this account.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Program owner of this account.",
            "key": "owner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Account data in the specified encoding format.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the account contains a program.",
            "key": "executable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The epoch at which this account will next owe rent.",
            "key": "rentEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The data size of the account.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETACCOUNTINFOParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETACCOUNTINFOParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETACCOUNTINFOParamsEncoding": {
      "description": "Encoding format for account data.",
      "name": "GETACCOUNTINFOParamsEncoding",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "base58"
          },
          {
            "value": "base64"
          },
          {
            "value": "base64+zstd"
          },
          {
            "value": "jsonParsed"
          }
        ]
      }
    },
    "GETACCOUNTINFOParamsDataSlice": {
      "name": "GETACCOUNTINFOParamsDataSlice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of bytes to return.",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Byte offset from which to start reading.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETACCOUNTINFOParams": {
      "name": "GETACCOUNTINFOParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETACCOUNTINFOParamsCommitment"
              }
            }
          },
          {
            "description": "Encoding format for account data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETACCOUNTINFOParamsEncoding"
              }
            }
          },
          {
            "key": "dataSlice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETACCOUNTINFOParamsDataSlice"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_A_c_c_o_u_n_t_I_n_f_o_Param_Pubkey": {
      "description": "Base-58 encoded public key.",
      "name": "GETACCOUNTINFOParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_A_c_c_o_u_n_t_I_n_f_o_Param_Configuration": {
      "name": "GETACCOUNTINFOParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETACCOUNTINFOParamsCommitment"
              }
            }
          },
          {
            "description": "Encoding format for account data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETACCOUNTINFOParamsEncoding"
              }
            }
          },
          {
            "key": "dataSlice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETACCOUNTINFOParamsDataSlice"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_A_c_c_o_u_n_t_I_n_f_o_Result": {
      "name": "GetAccountInfoResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of lamports assigned to this account.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Program owner of this account.",
            "key": "owner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Account data in the specified encoding format.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the account contains a program.",
            "key": "executable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The epoch at which this account will next owe rent.",
            "key": "rentEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The data size of the account.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETBALANCEParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETBALANCEParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETBALANCEParams": {
      "name": "GETBALANCEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBALANCEParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_a_l_a_n_c_e_Param_Pubkey": {
      "description": "Base-58 encoded public key.",
      "name": "GETBALANCEParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_B_a_l_a_n_c_e_Param_Configuration": {
      "name": "GETBALANCEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBALANCEParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_a_l_a_n_c_e_Result": {
      "description": "The balance in lamports of the account.",
      "name": "GetBalanceResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "GetBlockResultTransactionsItemsTransactionMessageHeader": {
      "name": "GetBlockResultTransactionsItemsTransactionMessageHeader",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The number of signatures required for the transaction.",
            "key": "numRequiredSignatures",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of read-only signed accounts.",
            "key": "numReadonlySignedAccounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of read-only unsigned accounts.",
            "key": "numReadonlyUnsignedAccounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsTransactionMessageInstructionsItems": {
      "name": "GetBlockResultTransactionsItemsTransactionMessageInstructionsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of account indices to be passed to the program.",
            "key": "accounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The program input data encoded as a base-58 string.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Index into the message.accountKeys array indicating the program account.",
            "key": "programIdIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsTransactionMessage": {
      "name": "GetBlockResultTransactionsItemsTransactionMessage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An array of account keys used by the transaction.",
            "key": "accountKeys",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "header",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetBlockResultTransactionsItemsTransactionMessageHeader"
              }
            }
          },
          {
            "key": "instructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItemsTransactionMessageInstructionsItems"
                }
              }
            }
          },
          {
            "description": "The recent blockhash used by the transaction.",
            "key": "recentBlockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsTransaction": {
      "description": "The transaction details, either in JSON format or encoded binary data, depending on the encoding parameter.",
      "name": "GetBlockResultTransactionsItemsTransaction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An array of signatures applied to the transaction.",
            "key": "signatures",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetBlockResultTransactionsItemsTransactionMessage"
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsMetaErr": {
      "description": "Error if the transaction failed, null if it succeeded.",
      "name": "GetBlockResultTransactionsItemsMetaErr",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetBlockResultTransactionsItemsMetaInnerInstructionsItemsInstructionsItems": {
      "name": "GetBlockResultTransactionsItemsMetaInnerInstructionsItemsInstructionsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Program ID invoked by this instruction.",
            "key": "programId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Account addresses involved in this instruction.",
            "key": "accounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The program input data encoded as a base-58 string.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsMetaInnerInstructionsItems": {
      "name": "GetBlockResultTransactionsItemsMetaInnerInstructionsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Index of the instruction in the transaction.",
            "key": "index",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "instructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItemsMetaInnerInstructionsItemsInstructionsItems"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsMetaPreTokenBalancesItems": {
      "name": "GetBlockResultTransactionsItemsMetaPreTokenBalancesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The raw balance without decimals, a string representation of u64.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of base-10 digits to the right of the decimal place.",
            "key": "decimals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance, using mint-prescribed decimals. **DEPRECATED**",
            "key": "uiAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The balance as a string, using mint-prescribed decimals.",
            "key": "uiAmountString",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsMetaPostTokenBalancesItems": {
      "name": "GetBlockResultTransactionsItemsMetaPostTokenBalancesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The raw balance without decimals, a string representation of u64.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of base-10 digits to the right of the decimal place.",
            "key": "decimals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance, using mint-prescribed decimals. **DEPRECATED**",
            "key": "uiAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The balance as a string, using mint-prescribed decimals.",
            "key": "uiAmountString",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsMetaRewardsItemsRewardType": {
      "description": "The type of reward.",
      "name": "GetBlockResultTransactionsItemsMetaRewardsItemsRewardType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "fee"
          },
          {
            "value": "rent"
          },
          {
            "value": "voting"
          },
          {
            "value": "staking"
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsMetaRewardsItems": {
      "name": "GetBlockResultTransactionsItemsMetaRewardsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The public key of the rewarded account.",
            "key": "pubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The amount of reward in lamports.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance of the account after the reward was applied.",
            "key": "postBalance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The type of reward.",
            "key": "rewardType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetBlockResultTransactionsItemsMetaRewardsItemsRewardType"
              }
            }
          },
          {
            "description": "The vote account commission when the reward was credited, if applicable.",
            "key": "commission",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItemsMetaLoadedAddresses": {
      "description": "Transaction addresses loaded from address lookup tables.",
      "name": "GetBlockResultTransactionsItemsMetaLoadedAddresses",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetBlockResultTransactionsItemsMetaReturnData": {
      "description": "Return data generated by an instruction in the transaction.",
      "name": "GetBlockResultTransactionsItemsMetaReturnData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetBlockResultTransactionsItemsMeta": {
      "description": "Transaction status metadata.",
      "name": "GetBlockResultTransactionsItemsMeta",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error if the transaction failed, null if it succeeded.",
            "key": "err",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItemsMetaErr"
                }
              }
            }
          },
          {
            "description": "Fee charged for this transaction.",
            "key": "fee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Array of u64 account balances before the transaction.",
            "key": "preBalances",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Array of u64 account balances after the transaction.",
            "key": "postBalances",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "List of inner instructions or null if not enabled.",
            "key": "innerInstructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "GetBlockResultTransactionsItemsMetaInnerInstructionsItems"
                  }
                }
              }
            }
          },
          {
            "description": "Token balances before the transaction, if available.",
            "key": "preTokenBalances",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "GetBlockResultTransactionsItemsMetaPreTokenBalancesItems"
                  }
                }
              }
            }
          },
          {
            "description": "Token balances after the transaction, if available.",
            "key": "postTokenBalances",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "GetBlockResultTransactionsItemsMetaPostTokenBalancesItems"
                  }
                }
              }
            }
          },
          {
            "description": "Array of string log messages or null if not enabled.",
            "key": "logMessages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Transaction-level rewards.",
            "key": "rewards",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "GetBlockResultTransactionsItemsMetaRewardsItems"
                  }
                }
              }
            }
          },
          {
            "description": "Transaction addresses loaded from address lookup tables.",
            "key": "loadedAddresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItemsMetaLoadedAddresses"
                }
              }
            }
          },
          {
            "description": "Return data generated by an instruction in the transaction.",
            "key": "returnData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItemsMetaReturnData"
                }
              }
            }
          },
          {
            "description": "Number of compute units consumed by the transaction.",
            "key": "computeUnitsConsumed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultTransactionsItems": {
      "name": "GetBlockResultTransactionsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The slot this transaction was processed in.",
            "key": "slot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The transaction details, either in JSON format or encoded binary data, depending on the encoding parameter.",
            "key": "transaction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetBlockResultTransactionsItemsTransaction"
              }
            }
          },
          {
            "description": "Estimated production time as a Unix timestamp. Null if not available.",
            "key": "blockTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Transaction status metadata.",
            "key": "meta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItemsMeta"
                }
              }
            }
          },
          {
            "description": "Transaction version. Undefined if not set.",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResultRewardsItemsRewardType": {
      "description": "The type of reward.",
      "name": "GetBlockResultRewardsItemsRewardType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "fee"
          },
          {
            "value": "rent"
          },
          {
            "value": "voting"
          },
          {
            "value": "staking"
          }
        ]
      }
    },
    "GetBlockResultRewardsItems": {
      "name": "GetBlockResultRewardsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The public key of the rewarded account.",
            "key": "pubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The amount of reward in lamports.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance of the account after the reward was applied.",
            "key": "postBalance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The type of reward.",
            "key": "rewardType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetBlockResultRewardsItemsRewardType"
              }
            }
          },
          {
            "description": "The vote account commission when the reward was credited, if applicable.",
            "key": "commission",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockResult": {
      "name": "GetBlockResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Blockhash of this block.",
            "key": "blockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Blockhash of the parent block.",
            "key": "previousBlockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slot index of the parent block.",
            "key": "parentSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Array of transaction objects.",
            "key": "transactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItems"
                }
              }
            }
          },
          {
            "description": "Array of transaction signatures.",
            "key": "signatures",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Block-level rewards.",
            "key": "rewards",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultRewardsItems"
                }
              }
            }
          },
          {
            "description": "Estimated production time as Unix timestamp.",
            "key": "blockTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of blocks beneath this block.",
            "key": "blockHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETBLOCKParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETBLOCKParamsCommitment",
      "shape": {
        "type": "enum",
        "default": "finalized",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETBLOCKParamsEncoding": {
      "description": "Encoding format for transactions.",
      "name": "GETBLOCKParamsEncoding",
      "shape": {
        "type": "enum",
        "default": "json",
        "values": [
          {
            "value": "json"
          },
          {
            "value": "jsonParsed"
          },
          {
            "value": "base58"
          },
          {
            "value": "base64"
          }
        ]
      }
    },
    "GETBLOCKParamsTransactionDetails": {
      "description": "Level of transaction detail to return.",
      "name": "GETBLOCKParamsTransactionDetails",
      "shape": {
        "type": "enum",
        "default": "full",
        "values": [
          {
            "value": "full"
          },
          {
            "value": "accounts"
          },
          {
            "value": "signatures"
          },
          {
            "value": "none"
          }
        ]
      }
    },
    "GETBLOCKParams": {
      "name": "GETBLOCKParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKParamsCommitment"
              }
            }
          },
          {
            "description": "Encoding format for transactions.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKParamsEncoding"
              }
            }
          },
          {
            "description": "Level of transaction detail to return.",
            "key": "transactionDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKParamsTransactionDetails"
              }
            }
          },
          {
            "description": "Max transaction version to return.",
            "key": "maxSupportedTransactionVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Include rewards array if true.",
            "key": "rewards",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_Param_slot": {
      "name": "GETBLOCKParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_B_l_o_c_k_Param_Configuration": {
      "name": "GETBLOCKParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKParamsCommitment"
              }
            }
          },
          {
            "description": "Encoding format for transactions.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKParamsEncoding"
              }
            }
          },
          {
            "description": "Level of transaction detail to return.",
            "key": "transactionDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKParamsTransactionDetails"
              }
            }
          },
          {
            "description": "Max transaction version to return.",
            "key": "maxSupportedTransactionVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Include rewards array if true.",
            "key": "rewards",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_Result": {
      "name": "GetBlockResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Blockhash of this block.",
            "key": "blockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Blockhash of the parent block.",
            "key": "previousBlockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slot index of the parent block.",
            "key": "parentSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Array of transaction objects.",
            "key": "transactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultTransactionsItems"
                }
              }
            }
          },
          {
            "description": "Array of transaction signatures.",
            "key": "signatures",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Block-level rewards.",
            "key": "rewards",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetBlockResultRewardsItems"
                }
              }
            }
          },
          {
            "description": "Estimated production time as Unix timestamp.",
            "key": "blockTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of blocks beneath this block.",
            "key": "blockHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockCommitmentResult": {
      "name": "GetBlockCommitmentResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Cluster stake in lamports voted on the block.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Total active stake in lamports.",
            "key": "totalStake",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_C_o_m_m_i_t_m_e_n_t_Param_block": {
      "name": "GETBLOCKCOMMITMENTParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_B_l_o_c_k_C_o_m_m_i_t_m_e_n_t_Result": {
      "name": "GetBlockCommitmentResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Cluster stake in lamports voted on the block.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Total active stake in lamports.",
            "key": "totalStake",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETBLOCKHEIGHTParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETBLOCKHEIGHTParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETBLOCKHEIGHTParams": {
      "name": "GETBLOCKHEIGHTParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKHEIGHTParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_H_e_i_g_h_t_Param_Configuration": {
      "name": "GETBLOCKHEIGHTParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKHEIGHTParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_H_e_i_g_h_t_Result": {
      "description": "The current block height.",
      "name": "GetBlockHeightResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "GetBlockProductionResultRange": {
      "name": "GetBlockProductionResultRange",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "First slot to return block production for.",
            "key": "firstSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Last slot to return block production for.",
            "key": "lastSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetBlockProductionResult": {
      "name": "GetBlockProductionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Validator identities with leader slots and blocks produced.",
            "key": "byIdentity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "range",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetBlockProductionResultRange"
              }
            }
          }
        ]
      }
    },
    "GETBLOCKPRODUCTIONParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETBLOCKPRODUCTIONParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETBLOCKPRODUCTIONParamsRange": {
      "name": "GETBLOCKPRODUCTIONParamsRange",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "First slot to return block production for.",
            "key": "firstSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Last slot to return block production for.",
            "key": "lastSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETBLOCKPRODUCTIONParams": {
      "name": "GETBLOCKPRODUCTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKPRODUCTIONParamsCommitment"
              }
            }
          },
          {
            "description": "Validator identity to filter results.",
            "key": "identity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "range",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKPRODUCTIONParamsRange"
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_P_r_o_d_u_c_t_i_o_n_Param_Configuration": {
      "name": "GETBLOCKPRODUCTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKPRODUCTIONParamsCommitment"
              }
            }
          },
          {
            "description": "Validator identity to filter results.",
            "key": "identity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "range",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKPRODUCTIONParamsRange"
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_P_r_o_d_u_c_t_i_o_n_Result": {
      "name": "GetBlockProductionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Validator identities with leader slots and blocks produced.",
            "key": "byIdentity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "range",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetBlockProductionResultRange"
              }
            }
          }
        ]
      }
    },
    "GETBLOCKSParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETBLOCKSParamsCommitment",
      "shape": {
        "type": "enum",
        "default": "finalized",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETBLOCKSParams": {
      "name": "GETBLOCKSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKSParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_s_Param_start_slot": {
      "name": "GETBLOCKSParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_B_l_o_c_k_s_Param_end_slot": {
      "name": "GETBLOCKSParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_B_l_o_c_k_s_Param_Configuration": {
      "name": "GETBLOCKSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKSParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_s_Result": {
      "description": "List of confirmed blocks between slots.",
      "name": "GetBlocksResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      }
    },
    "GETBLOCKSWITHLIMITParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETBLOCKSWITHLIMITParamsCommitment",
      "shape": {
        "type": "enum",
        "default": "finalized",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETBLOCKSWITHLIMITParams": {
      "name": "GETBLOCKSWITHLIMITParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKSWITHLIMITParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_s_W_i_t_h_L_i_m_i_t_Param_start_slot": {
      "name": "GETBLOCKSWITHLIMITParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_B_l_o_c_k_s_W_i_t_h_L_i_m_i_t_Param_limit": {
      "name": "GETBLOCKSWITHLIMITParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_B_l_o_c_k_s_W_i_t_h_L_i_m_i_t_Param_Configuration": {
      "name": "GETBLOCKSWITHLIMITParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETBLOCKSWITHLIMITParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_s_W_i_t_h_L_i_m_i_t_Result": {
      "description": "List of confirmed blocks between slots.",
      "name": "GetBlocksWithLimitResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "integer"
            }
          }
        }
      }
    },
    "GETBLOCKTIMEParams": {
      "name": "GETBLOCKTIMEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Block number identified by Slot.",
            "key": "block",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_T_i_m_e_Param_block": {
      "name": "GETBLOCKTIMEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Block number identified by Slot.",
            "key": "block",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_B_l_o_c_k_T_i_m_e_Result": {
      "description": "Estimated production time as Unix timestamp.",
      "name": "GetBlockTimeResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "GetClusterNodesResultItems": {
      "name": "GetClusterNodesResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Node public key.",
            "key": "pubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Gossip network address.",
            "key": "gossip",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "TPU network address.",
            "key": "tpu",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "JSON RPC network address.",
            "key": "rpc",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Software version of the node.",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Unique identifier of the node's feature set.",
            "key": "featureSet",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Shred version used by the node.",
            "key": "shredVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_C_l_u_s_t_e_r_N_o_d_e_s_Result": {
      "description": "Information about all nodes participating in the cluster.",
      "name": "GetClusterNodesResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetClusterNodesResultItems"
          }
        }
      }
    },
    "GetEpochInfoResult": {
      "name": "GetEpochInfoResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Current slot.",
            "key": "absoluteSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Current block height.",
            "key": "blockHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Current epoch.",
            "key": "epoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Slot index relative to the start of the epoch.",
            "key": "slotIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of slots in this epoch.",
            "key": "slotsInEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Total transactions processed without error since genesis.",
            "key": "transactionCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GETEPOCHINFOParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETEPOCHINFOParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETEPOCHINFOParams": {
      "name": "GETEPOCHINFOParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETEPOCHINFOParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_E_p_o_c_h_I_n_f_o_Param_Configuration": {
      "name": "GETEPOCHINFOParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETEPOCHINFOParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_E_p_o_c_h_I_n_f_o_Result": {
      "name": "GetEpochInfoResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Current slot.",
            "key": "absoluteSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Current block height.",
            "key": "blockHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Current epoch.",
            "key": "epoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Slot index relative to the start of the epoch.",
            "key": "slotIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of slots in this epoch.",
            "key": "slotsInEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Total transactions processed without error since genesis.",
            "key": "transactionCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GetEpochScheduleResult": {
      "name": "GetEpochScheduleResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Max number of slots in each epoch.",
            "key": "slotsPerEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Slots before epoch to calculate leader schedule.",
            "key": "leaderScheduleSlotOffset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether epochs start short and grow.",
            "key": "warmup",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "First normal-length epoch.",
            "key": "firstNormalEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "First normal slot.",
            "key": "firstNormalSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_E_p_o_c_h_S_c_h_e_d_u_l_e_Result": {
      "name": "GetEpochScheduleResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Max number of slots in each epoch.",
            "key": "slotsPerEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Slots before epoch to calculate leader schedule.",
            "key": "leaderScheduleSlotOffset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether epochs start short and grow.",
            "key": "warmup",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "First normal-length epoch.",
            "key": "firstNormalEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "First normal slot.",
            "key": "firstNormalSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETFEEFORMESSAGEParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETFEEFORMESSAGEParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETFEEFORMESSAGEParams": {
      "name": "GETFEEFORMESSAGEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Base-64 encoded Message.",
            "key": "Message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_F_e_e_F_o_r_M_e_s_s_a_g_e_Param_Message": {
      "name": "GETFEEFORMESSAGEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Base-64 encoded Message.",
            "key": "Message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_F_e_e_F_o_r_M_e_s_s_a_g_e_Param_Configuration": {
      "name": "GETFEEFORMESSAGEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETFEEFORMESSAGEParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_F_e_e_F_o_r_M_e_s_s_a_g_e_Result": {
      "description": "Fee corresponding to the message at the specified blockhash.",
      "name": "GetFeeForMessageResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_F_i_r_s_t_A_v_a_i_l_a_b_l_e_B_l_o_c_k_Result": {
      "description": "Slot of the lowest confirmed block still available in the ledger.",
      "name": "GetFirstAvailableBlockResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_G_e_n_e_s_i_s_H_a_s_h_Result": {
      "description": "The genesis hash as a base-58 encoded string.",
      "name": "GetGenesisHashResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "GetHealthResultOneOfZero": {
      "description": "Result is 'ok' if healthy.",
      "name": "GetHealthResultOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "GetHealthResultOneOfOne": {
      "description": "An error object if unhealthy.",
      "name": "GetHealthResultOneOfOne",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetHealthResult": {
      "description": "Result is 'ok' if healthy, or an error object if unhealthy.",
      "name": "GetHealthResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "GetHealthResultOneOfZero",
            "description": "Result is 'ok' if healthy.",
            "type": {
              "type": "id",
              "value": "GetHealthResultOneOfZero"
            }
          },
          {
            "typeName": "GetHealthResultOneOfOne",
            "description": "An error object if unhealthy.",
            "type": {
              "type": "id",
              "value": "GetHealthResultOneOfOne"
            }
          }
        ]
      }
    },
    "g_e_t_H_e_a_l_t_h_Result": {
      "description": "Result is 'ok' if healthy, or an error object if unhealthy.",
      "name": "GetHealthResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "GetHealthResultOneOfZero",
            "description": "Result is 'ok' if healthy.",
            "type": {
              "type": "id",
              "value": "GetHealthResultOneOfZero"
            }
          },
          {
            "typeName": "GetHealthResultOneOfOne",
            "description": "An error object if unhealthy.",
            "type": {
              "type": "id",
              "value": "GetHealthResultOneOfOne"
            }
          }
        ]
      }
    },
    "GetHighestSnapshotSlotResult": {
      "name": "GetHighestSnapshotSlotResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Highest full snapshot slot.",
            "key": "full",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Highest incremental snapshot slot based on the full snapshot.",
            "key": "incremental",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_H_i_g_h_e_s_t_S_n_a_p_s_h_o_t_S_l_o_t_Result": {
      "name": "GetHighestSnapshotSlotResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Highest full snapshot slot.",
            "key": "full",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Highest incremental snapshot slot based on the full snapshot.",
            "key": "incremental",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GetIdentityResult": {
      "name": "GetIdentityResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Identity pubkey of the current node.",
            "key": "identity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_I_d_e_n_t_i_t_y_Result": {
      "name": "GetIdentityResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Identity pubkey of the current node.",
            "key": "identity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetInflationGovernorResult": {
      "name": "GetInflationGovernorResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Initial inflation percentage from time 0.",
            "key": "initial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Terminal inflation percentage.",
            "key": "terminal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Rate per year at which inflation is lowered.",
            "key": "taper",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Percentage of total inflation allocated to the foundation.",
            "key": "foundation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Duration of foundation pool inflation in years.",
            "key": "foundationTerm",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETINFLATIONGOVERNORParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETINFLATIONGOVERNORParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETINFLATIONGOVERNORParams": {
      "name": "GETINFLATIONGOVERNORParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETINFLATIONGOVERNORParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_I_n_f_l_a_t_i_o_n_G_o_v_e_r_n_o_r_Param_Configuration": {
      "name": "GETINFLATIONGOVERNORParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETINFLATIONGOVERNORParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_I_n_f_l_a_t_i_o_n_G_o_v_e_r_n_o_r_Result": {
      "name": "GetInflationGovernorResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Initial inflation percentage from time 0.",
            "key": "initial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Terminal inflation percentage.",
            "key": "terminal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Rate per year at which inflation is lowered.",
            "key": "taper",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Percentage of total inflation allocated to the foundation.",
            "key": "foundation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Duration of foundation pool inflation in years.",
            "key": "foundationTerm",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetInflationRateResult": {
      "name": "GetInflationRateResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Total inflation rate.",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Inflation rate allocated to validators.",
            "key": "validator",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Inflation rate allocated to the foundation.",
            "key": "foundation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Epoch for which these values are valid.",
            "key": "epoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_I_n_f_l_a_t_i_o_n_R_a_t_e_Result": {
      "name": "GetInflationRateResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Total inflation rate.",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Inflation rate allocated to validators.",
            "key": "validator",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Inflation rate allocated to the foundation.",
            "key": "foundation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Epoch for which these values are valid.",
            "key": "epoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetInflationRewardResultItems": {
      "name": "GetInflationRewardResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Epoch for which the reward occurred.",
            "key": "epoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Slot in which rewards are effective.",
            "key": "effectiveSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Reward amount in lamports.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Post balance of the account in lamports.",
            "key": "postBalance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Vote account commission when reward was credited.",
            "key": "commission",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GETINFLATIONREWARDParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETINFLATIONREWARDParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETINFLATIONREWARDParams": {
      "name": "GETINFLATIONREWARDParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Array of addresses to query.",
            "key": "Addresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETINFLATIONREWARDParamsCommitment"
              }
            }
          },
          {
            "description": "Epoch for which the reward occurs.",
            "key": "epoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_I_n_f_l_a_t_i_o_n_R_e_w_a_r_d_Param_Addresses": {
      "name": "GETINFLATIONREWARDParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Array of addresses to query.",
            "key": "Addresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETINFLATIONREWARDParamsCommitment"
              }
            }
          },
          {
            "description": "Epoch for which the reward occurs.",
            "key": "epoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_I_n_f_l_a_t_i_o_n_R_e_w_a_r_d_Result": {
      "name": "GetInflationRewardResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetInflationRewardResultItems"
          }
        }
      }
    },
    "GetLargestAccountsResultItems": {
      "name": "GetLargestAccountsResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Address of the account.",
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of lamports in the account.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETLARGESTACCOUNTSParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETLARGESTACCOUNTSParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETLARGESTACCOUNTSParamsFilter": {
      "description": "Filter results by account type.",
      "name": "GETLARGESTACCOUNTSParamsFilter",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "circulating"
          },
          {
            "value": "nonCirculating"
          }
        ]
      }
    },
    "GETLARGESTACCOUNTSParams": {
      "name": "GETLARGESTACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETLARGESTACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "Filter results by account type.",
            "key": "filter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETLARGESTACCOUNTSParamsFilter"
              }
            }
          }
        ]
      }
    },
    "g_e_t_L_a_r_g_e_s_t_A_c_c_o_u_n_t_s_Param_Configuration": {
      "name": "GETLARGESTACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETLARGESTACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "Filter results by account type.",
            "key": "filter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETLARGESTACCOUNTSParamsFilter"
              }
            }
          }
        ]
      }
    },
    "g_e_t_L_a_r_g_e_s_t_A_c_c_o_u_n_t_s_Result": {
      "description": "List of the 20 largest accounts.",
      "name": "GetLargestAccountsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetLargestAccountsResultItems"
          }
        }
      }
    },
    "GetLatestBlockhashResult": {
      "name": "GetLatestBlockhashResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Blockhash as a base-58 encoded string.",
            "key": "blockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Last block height at which the blockhash is valid.",
            "key": "lastValidBlockHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETLATESTBLOCKHASHParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETLATESTBLOCKHASHParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETLATESTBLOCKHASHParams": {
      "name": "GETLATESTBLOCKHASHParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETLATESTBLOCKHASHParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_L_a_t_e_s_t_B_l_o_c_k_h_a_s_h_Param_Configuration": {
      "name": "GETLATESTBLOCKHASHParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETLATESTBLOCKHASHParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_L_a_t_e_s_t_B_l_o_c_k_h_a_s_h_Result": {
      "name": "GetLatestBlockhashResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Blockhash as a base-58 encoded string.",
            "key": "blockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Last block height at which the blockhash is valid.",
            "key": "lastValidBlockHeight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_M_a_x_R_e_t_r_a_n_s_m_i_t_S_l_o_t_Result": {
      "description": "The maximum slot number observed.",
      "name": "GetMaxRetransmitSlotResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_M_a_x_S_h_r_e_d_I_n_s_e_r_t_S_l_o_t_Result": {
      "description": "The maximum slot number observed.",
      "name": "GetMaxShredInsertSlotResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "GETMINIMUMBALANCEFORRENTEXEMPTIONParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETMINIMUMBALANCEFORRENTEXEMPTIONParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETMINIMUMBALANCEFORRENTEXEMPTIONParams": {
      "name": "GETMINIMUMBALANCEFORRENTEXEMPTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Account's data length in bytes.",
            "key": "dataLength",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_M_i_n_i_m_u_m_B_a_l_a_n_c_e_F_o_r_R_e_n_t_E_x_e_m_p_t_i_o_n_Param_Account data length": {
      "name": "GETMINIMUMBALANCEFORRENTEXEMPTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Account's data length in bytes.",
            "key": "dataLength",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_M_i_n_i_m_u_m_B_a_l_a_n_c_e_F_o_r_R_e_n_t_E_x_e_m_p_t_i_o_n_Param_Configuration": {
      "name": "GETMINIMUMBALANCEFORRENTEXEMPTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETMINIMUMBALANCEFORRENTEXEMPTIONParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_M_i_n_i_m_u_m_B_a_l_a_n_c_e_F_o_r_R_e_n_t_E_x_e_m_p_t_i_o_n_Result": {
      "description": "Minimum lamports required to make an account rent exempt.",
      "name": "GetMinimumBalanceForRentExemptionResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "GetMultipleAccountsResultItems": {
      "name": "GetMultipleAccountsResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of lamports assigned to this account.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Program owner of this account.",
            "key": "owner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Account data in the specified encoding format.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the account contains a program.",
            "key": "executable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The epoch at which this account will next owe rent.",
            "key": "rentEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The data size of the account.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETMULTIPLEACCOUNTSParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETMULTIPLEACCOUNTSParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETMULTIPLEACCOUNTSParamsDataSlice": {
      "name": "GETMULTIPLEACCOUNTSParamsDataSlice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of bytes to return.",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Byte offset from which to start reading.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETMULTIPLEACCOUNTSParamsEncoding": {
      "description": "Encoding format for data.",
      "name": "GETMULTIPLEACCOUNTSParamsEncoding",
      "shape": {
        "type": "enum",
        "default": "base64",
        "values": [
          {
            "value": "base58"
          },
          {
            "value": "base64"
          },
          {
            "value": "base64+zstd"
          },
          {
            "value": "jsonParsed"
          }
        ]
      }
    },
    "GETMULTIPLEACCOUNTSParams": {
      "name": "GETMULTIPLEACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETMULTIPLEACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "dataSlice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETMULTIPLEACCOUNTSParamsDataSlice"
              }
            }
          },
          {
            "description": "Encoding format for data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETMULTIPLEACCOUNTSParamsEncoding"
              }
            }
          }
        ]
      }
    },
    "g_e_t_M_u_l_t_i_p_l_e_A_c_c_o_u_n_t_s_Param_Pubkeys": {
      "name": "GETMULTIPLEACCOUNTSParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "g_e_t_M_u_l_t_i_p_l_e_A_c_c_o_u_n_t_s_Param_Configuration": {
      "name": "GETMULTIPLEACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETMULTIPLEACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "dataSlice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETMULTIPLEACCOUNTSParamsDataSlice"
              }
            }
          },
          {
            "description": "Encoding format for data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETMULTIPLEACCOUNTSParamsEncoding"
              }
            }
          }
        ]
      }
    },
    "g_e_t_M_u_l_t_i_p_l_e_A_c_c_o_u_n_t_s_Result": {
      "name": "GetMultipleAccountsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetMultipleAccountsResultItems"
          }
        }
      }
    },
    "GetProgramAccountsResultItemsAccount": {
      "name": "GetProgramAccountsResultItemsAccount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of lamports assigned to this account.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Program owner of this account.",
            "key": "owner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Account data in the specified encoding format.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the account contains a program.",
            "key": "executable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The epoch at which this account will next owe rent.",
            "key": "rentEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The data size of the account.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetProgramAccountsResultItems": {
      "name": "GetProgramAccountsResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The account Pubkey as a base-58 encoded string.",
            "key": "pubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "account",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetProgramAccountsResultItemsAccount"
              }
            }
          }
        ]
      }
    },
    "GETPROGRAMACCOUNTSParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETPROGRAMACCOUNTSParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETPROGRAMACCOUNTSParamsEncoding": {
      "description": "Encoding format for data.",
      "name": "GETPROGRAMACCOUNTSParamsEncoding",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "base58"
          },
          {
            "value": "base64"
          },
          {
            "value": "base64+zstd"
          },
          {
            "value": "jsonParsed"
          }
        ]
      }
    },
    "GETPROGRAMACCOUNTSParamsDataSlice": {
      "name": "GETPROGRAMACCOUNTSParamsDataSlice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of bytes to return.",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Byte offset from which to start reading.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETPROGRAMACCOUNTSParams": {
      "name": "GETPROGRAMACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETPROGRAMACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "If set, wraps the result in an `RpcResponse` JSON object.",
            "key": "withContext",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Encoding format for data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETPROGRAMACCOUNTSParamsEncoding"
              }
            }
          },
          {
            "key": "dataSlice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETPROGRAMACCOUNTSParamsDataSlice"
              }
            }
          },
          {
            "description": "Filters to apply using up to 4 filter objects.",
            "key": "filters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_P_r_o_g_r_a_m_A_c_c_o_u_n_t_s_Param_Pubkey": {
      "description": "Base-58 encoded public key.",
      "name": "GETPROGRAMACCOUNTSParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_P_r_o_g_r_a_m_A_c_c_o_u_n_t_s_Param_Configuration": {
      "name": "GETPROGRAMACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETPROGRAMACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "If set, wraps the result in an `RpcResponse` JSON object.",
            "key": "withContext",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Encoding format for data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETPROGRAMACCOUNTSParamsEncoding"
              }
            }
          },
          {
            "key": "dataSlice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETPROGRAMACCOUNTSParamsDataSlice"
              }
            }
          },
          {
            "description": "Filters to apply using up to 4 filter objects.",
            "key": "filters",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_P_r_o_g_r_a_m_A_c_c_o_u_n_t_s_Result": {
      "name": "GetProgramAccountsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetProgramAccountsResultItems"
          }
        }
      }
    },
    "GetRecentPerformanceSamplesResultItems": {
      "name": "GetRecentPerformanceSamplesResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The slot in which the sample was taken.",
            "key": "slot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of transactions processed during the sample period.",
            "key": "numTransactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of slots completed during the sample period.",
            "key": "numSlots",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of seconds in a sample window.",
            "key": "samplePeriodSecs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of non-vote transactions processed during the sample period.",
            "key": "numNonVoteTransactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_R_e_c_e_n_t_P_e_r_f_o_r_m_a_n_c_e_S_a_m_p_l_e_s_Param_limit": {
      "name": "GETRECENTPERFORMANCESAMPLESParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_R_e_c_e_n_t_P_e_r_f_o_r_m_a_n_c_e_S_a_m_p_l_e_s_Result": {
      "name": "GetRecentPerformanceSamplesResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetRecentPerformanceSamplesResultItems"
          }
        }
      }
    },
    "GetRecentPrioritizationFeesResultItems": {
      "name": "GetRecentPrioritizationFeesResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Slot in which the fee was observed.",
            "key": "slot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The per-compute-unit fee in micro-lamports.",
            "key": "prioritizationFee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_R_e_c_e_n_t_P_r_i_o_r_i_t_i_z_a_t_i_o_n_F_e_e_s_Param_Account addresses": {
      "name": "GETRECENTPRIORITIZATIONFEESParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "g_e_t_R_e_c_e_n_t_P_r_i_o_r_i_t_i_z_a_t_i_o_n_F_e_e_s_Result": {
      "description": "An array of prioritization fees observed in recent blocks.",
      "name": "GetRecentPrioritizationFeesResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetRecentPrioritizationFeesResultItems"
          }
        }
      }
    },
    "GetSignaturesForAddressResultItemsErr": {
      "description": "Error if the transaction failed, null if the transaction succeeded.",
      "name": "GetSignaturesForAddressResultItemsErr",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetSignaturesForAddressResultItems": {
      "name": "GetSignaturesForAddressResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The transaction signature as a base-58 encoded string.",
            "key": "signature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The slot that contains the block with the transaction.",
            "key": "slot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Error if the transaction failed, null if the transaction succeeded.",
            "key": "err",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetSignaturesForAddressResultItemsErr"
                }
              }
            }
          },
          {
            "description": "The memo associated with the transaction, null if no memo is present.",
            "key": "memo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The estimated production time of the transaction as a Unix timestamp, null if not available.",
            "key": "blockTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The transaction's cluster confirmation status, either `processed`, `confirmed`, or `finalized`.",
            "key": "confirmationStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GETSIGNATURESFORADDRESSParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETSIGNATURESFORADDRESSParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETSIGNATURESFORADDRESSParams": {
      "name": "GETSIGNATURESFORADDRESSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSIGNATURESFORADDRESSParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The maximum number of transaction signatures to return (between 1 and 1,000).",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": 1000
                }
              }
            }
          },
          {
            "description": "Start searching backwards from this transaction signature.",
            "key": "before",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Search until this transaction signature, if found before the limit is reached.",
            "key": "until",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_i_g_n_a_t_u_r_e_s_F_o_r_A_d_d_r_e_s_s_Param_Account address": {
      "description": "Base-58 encoded public key.",
      "name": "GETSIGNATURESFORADDRESSParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_S_i_g_n_a_t_u_r_e_s_F_o_r_A_d_d_r_e_s_s_Param_Configuration": {
      "name": "GETSIGNATURESFORADDRESSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSIGNATURESFORADDRESSParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The maximum number of transaction signatures to return (between 1 and 1,000).",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": 1000
                }
              }
            }
          },
          {
            "description": "Start searching backwards from this transaction signature.",
            "key": "before",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Search until this transaction signature, if found before the limit is reached.",
            "key": "until",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_i_g_n_a_t_u_r_e_s_F_o_r_A_d_d_r_e_s_s_Result": {
      "name": "GetSignaturesForAddressResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetSignaturesForAddressResultItems"
          }
        }
      }
    },
    "GetSignatureStatusesResultItemsErr": {
      "description": "Error if the transaction failed, or null if the transaction succeeded.",
      "name": "GetSignatureStatusesResultItemsErr",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetSignatureStatusesResultItemsStatus": {
      "description": "DEPRECATED. The transaction status.",
      "name": "GetSignatureStatusesResultItemsStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetSignatureStatusesResultItems": {
      "name": "GetSignatureStatusesResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The slot in which the transaction was processed.",
            "key": "slot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of blocks since signature confirmation, or null if rooted and finalized.",
            "key": "confirmations",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Error if the transaction failed, or null if the transaction succeeded.",
            "key": "err",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetSignatureStatusesResultItemsErr"
                }
              }
            }
          },
          {
            "description": "The transaction's cluster confirmation status.",
            "key": "confirmationStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "DEPRECATED. The transaction status.",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetSignatureStatusesResultItemsStatus"
              }
            }
          }
        ]
      }
    },
    "GETSIGNATURESTATUSESParams": {
      "name": "GETSIGNATURESTATUSESParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If true, searches the ledger cache for any signatures not found in the recent status cache.",
            "key": "searchTransactionHistory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_i_g_n_a_t_u_r_e_S_t_a_t_u_s_e_s_Param_Signatures": {
      "name": "GETSIGNATURESTATUSESParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "g_e_t_S_i_g_n_a_t_u_r_e_S_t_a_t_u_s_e_s_Param_Configuration": {
      "name": "GETSIGNATURESTATUSESParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "If true, searches the ledger cache for any signatures not found in the recent status cache.",
            "key": "searchTransactionHistory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_i_g_n_a_t_u_r_e_S_t_a_t_u_s_e_s_Result": {
      "name": "GetSignatureStatusesResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetSignatureStatusesResultItems"
          }
        }
      }
    },
    "GETSLOTParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETSLOTParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETSLOTParams": {
      "name": "GETSLOTParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSLOTParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_l_o_t_Param_Configuration": {
      "name": "GETSLOTParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSLOTParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_l_o_t_Result": {
      "name": "GetSlotResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "GETSLOTLEADERParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETSLOTLEADERParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETSLOTLEADERParams": {
      "name": "GETSLOTLEADERParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSLOTLEADERParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_l_o_t_L_e_a_d_e_r_Param_Configuration": {
      "name": "GETSLOTLEADERParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSLOTLEADERParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_l_o_t_L_e_a_d_e_r_Result": {
      "description": "The node identity Pubkey as a base-58 encoded string.",
      "name": "GetSlotLeaderResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_S_l_o_t_L_e_a_d_e_r_s_Param_Start slot": {
      "name": "GETSLOTLEADERSParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_S_l_o_t_L_e_a_d_e_r_s_Param_Limit": {
      "name": "GETSLOTLEADERSParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "g_e_t_S_l_o_t_L_e_a_d_e_r_s_Result": {
      "description": "An array of node identity public keys as base-58 encoded strings.",
      "name": "GetSlotLeadersResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetSupplyResult": {
      "name": "GetSupplyResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The total supply in lamports.",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The circulating supply in lamports.",
            "key": "circulating",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The non-circulating supply in lamports.",
            "key": "nonCirculating",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An array of account addresses of non-circulating accounts.",
            "key": "nonCirculatingAccounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GETSUPPLYParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETSUPPLYParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETSUPPLYParams": {
      "name": "GETSUPPLYParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSUPPLYParamsCommitment"
              }
            }
          },
          {
            "description": "Exclude non-circulating accounts list from the response.",
            "key": "excludeNonCirculatingAccountsList",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_u_p_p_l_y_Param_Configuration": {
      "name": "GETSUPPLYParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETSUPPLYParamsCommitment"
              }
            }
          },
          {
            "description": "Exclude non-circulating accounts list from the response.",
            "key": "excludeNonCirculatingAccountsList",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_S_u_p_p_l_y_Result": {
      "name": "GetSupplyResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The total supply in lamports.",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The circulating supply in lamports.",
            "key": "circulating",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The non-circulating supply in lamports.",
            "key": "nonCirculating",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An array of account addresses of non-circulating accounts.",
            "key": "nonCirculatingAccounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GetTokenAccountBalanceResult": {
      "name": "GetTokenAccountBalanceResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The raw balance without decimals, a string representation of u64.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of base-10 digits to the right of the decimal place.",
            "key": "decimals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance, using mint-prescribed decimals. **DEPRECATED**",
            "key": "uiAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The balance as a string, using mint-prescribed decimals.",
            "key": "uiAmountString",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GETTOKENACCOUNTBALANCEParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETTOKENACCOUNTBALANCEParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETTOKENACCOUNTBALANCEParams": {
      "name": "GETTOKENACCOUNTBALANCEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTOKENACCOUNTBALANCEParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_o_k_e_n_A_c_c_o_u_n_t_B_a_l_a_n_c_e_Param_Token account Pubkey": {
      "description": "Base-58 encoded public key.",
      "name": "GETTOKENACCOUNTBALANCEParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_T_o_k_e_n_A_c_c_o_u_n_t_B_a_l_a_n_c_e_Param_Configuration": {
      "name": "GETTOKENACCOUNTBALANCEParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTOKENACCOUNTBALANCEParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_o_k_e_n_A_c_c_o_u_n_t_B_a_l_a_n_c_e_Result": {
      "name": "GetTokenAccountBalanceResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The raw balance without decimals, a string representation of u64.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of base-10 digits to the right of the decimal place.",
            "key": "decimals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance, using mint-prescribed decimals. **DEPRECATED**",
            "key": "uiAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The balance as a string, using mint-prescribed decimals.",
            "key": "uiAmountString",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetTokenAccountsByOwnerResultItemsAccount": {
      "name": "GetTokenAccountsByOwnerResultItemsAccount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of lamports assigned to this account.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Program owner of this account.",
            "key": "owner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Account data in the specified encoding format.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the account contains a program.",
            "key": "executable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The epoch at which this account will next owe rent.",
            "key": "rentEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The data size of the account.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetTokenAccountsByOwnerResultItems": {
      "name": "GetTokenAccountsByOwnerResultItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The account Pubkey as a base-58 encoded string.",
            "key": "pubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "account",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetTokenAccountsByOwnerResultItemsAccount"
              }
            }
          }
        ]
      }
    },
    "GETTOKENACCOUNTSBYOWNERParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETTOKENACCOUNTSBYOWNERParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETTOKENACCOUNTSBYOWNERParamsDataSlice": {
      "name": "GETTOKENACCOUNTSBYOWNERParamsDataSlice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of bytes to return.",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Byte offset from which to start reading.",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GETTOKENACCOUNTSBYOWNERParamsEncoding": {
      "description": "Encoding format for account data.",
      "name": "GETTOKENACCOUNTSBYOWNERParamsEncoding",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "base58"
          },
          {
            "value": "base64"
          },
          {
            "value": "base64+zstd"
          },
          {
            "value": "jsonParsed"
          }
        ]
      }
    },
    "GETTOKENACCOUNTSBYOWNERParams": {
      "name": "GETTOKENACCOUNTSBYOWNERParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Pubkey of the specific token Mint to limit accounts to.",
            "key": "mint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Pubkey of the Token program that owns the accounts.",
            "key": "programId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_o_k_e_n_A_c_c_o_u_n_t_s_B_y_O_w_n_e_r_Param_Token owner Pubkey": {
      "description": "Base-58 encoded public key.",
      "name": "GETTOKENACCOUNTSBYOWNERParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_T_o_k_e_n_A_c_c_o_u_n_t_s_B_y_O_w_n_e_r_Param_Token filter": {
      "name": "GETTOKENACCOUNTSBYOWNERParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Pubkey of the specific token Mint to limit accounts to.",
            "key": "mint",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Pubkey of the Token program that owns the accounts.",
            "key": "programId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_o_k_e_n_A_c_c_o_u_n_t_s_B_y_O_w_n_e_r_Param_Configuration": {
      "name": "GETTOKENACCOUNTSBYOWNERParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTOKENACCOUNTSBYOWNERParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "dataSlice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTOKENACCOUNTSBYOWNERParamsDataSlice"
              }
            }
          },
          {
            "description": "Encoding format for account data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTOKENACCOUNTSBYOWNERParamsEncoding"
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_o_k_e_n_A_c_c_o_u_n_t_s_B_y_O_w_n_e_r_Result": {
      "name": "GetTokenAccountsByOwnerResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "GetTokenAccountsByOwnerResultItems"
          }
        }
      }
    },
    "GetTokenSupplyResult": {
      "name": "GetTokenSupplyResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The raw balance without decimals, a string representation of u64.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of base-10 digits to the right of the decimal place.",
            "key": "decimals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance, using mint-prescribed decimals. **DEPRECATED**",
            "key": "uiAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The balance as a string, using mint-prescribed decimals.",
            "key": "uiAmountString",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GETTOKENSUPPLYParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETTOKENSUPPLYParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETTOKENSUPPLYParams": {
      "name": "GETTOKENSUPPLYParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTOKENSUPPLYParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_o_k_e_n_S_u_p_p_l_y_Param_Token Mint Pubkey": {
      "description": "Base-58 encoded public key.",
      "name": "GETTOKENSUPPLYParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_T_o_k_e_n_S_u_p_p_l_y_Param_Configuration": {
      "name": "GETTOKENSUPPLYParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTOKENSUPPLYParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_o_k_e_n_S_u_p_p_l_y_Result": {
      "name": "GetTokenSupplyResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The raw balance without decimals, a string representation of u64.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of base-10 digits to the right of the decimal place.",
            "key": "decimals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The balance, using mint-prescribed decimals. **DEPRECATED**",
            "key": "uiAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The balance as a string, using mint-prescribed decimals.",
            "key": "uiAmountString",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetTransactionResultTransactionOneOfZero": {
      "description": "The transaction details in JSON format.",
      "name": "GetTransactionResultTransactionOneOfZero",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetTransactionResultTransactionOneOfOne": {
      "description": "The transaction details as encoded binary data.",
      "name": "GetTransactionResultTransactionOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "GetTransactionResultTransaction": {
      "description": "The transaction details, either in JSON format or encoded binary data.",
      "name": "GetTransactionResultTransaction",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "GetTransactionResultTransactionOneOfZero",
            "description": "The transaction details in JSON format.",
            "type": {
              "type": "id",
              "value": "GetTransactionResultTransactionOneOfZero"
            }
          },
          {
            "typeName": "GetTransactionResultTransactionOneOfOne",
            "description": "The transaction details as encoded binary data.",
            "type": {
              "type": "id",
              "value": "GetTransactionResultTransactionOneOfOne"
            }
          }
        ]
      }
    },
    "GetTransactionResultMeta": {
      "description": "Transaction status metadata.",
      "name": "GetTransactionResultMeta",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "GetTransactionResultVersionOneOfZero": {
      "name": "GetTransactionResultVersionOneOfZero",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "GetTransactionResultVersionOneOfOne": {
      "name": "GetTransactionResultVersionOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "GetTransactionResultVersion": {
      "description": "Transaction version.",
      "name": "GetTransactionResultVersion",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "GetTransactionResultVersionOneOfZero",
            "type": {
              "type": "id",
              "value": "GetTransactionResultVersionOneOfZero"
            }
          },
          {
            "typeName": "GetTransactionResultVersionOneOfOne",
            "type": {
              "type": "id",
              "value": "GetTransactionResultVersionOneOfOne"
            }
          }
        ]
      }
    },
    "GetTransactionResult": {
      "name": "GetTransactionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The slot this transaction was processed in.",
            "key": "slot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The transaction details, either in JSON format or encoded binary data.",
            "key": "transaction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetTransactionResultTransaction"
              }
            }
          },
          {
            "description": "Estimated production time as a Unix timestamp.",
            "key": "blockTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Transaction status metadata.",
            "key": "meta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetTransactionResultMeta"
                }
              }
            }
          },
          {
            "description": "Transaction version.",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetTransactionResultVersion"
                }
              }
            }
          }
        ]
      }
    },
    "GETTRANSACTIONParamsCommitment": {
      "description": "Commitment level to use. `Processed` is not supported.",
      "name": "GETTRANSACTIONParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETTRANSACTIONParamsEncoding": {
      "description": "Encoding format for the returned transaction.",
      "name": "GETTRANSACTIONParamsEncoding",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "json"
          },
          {
            "value": "jsonParsed"
          },
          {
            "value": "base64"
          },
          {
            "value": "base58"
          }
        ]
      }
    },
    "GETTRANSACTIONParams": {
      "name": "GETTRANSACTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Commitment level to use. `Processed` is not supported.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTRANSACTIONParamsCommitment"
              }
            }
          },
          {
            "description": "Sets the max transaction version to return.",
            "key": "maxSupportedTransactionVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Encoding format for the returned transaction.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTRANSACTIONParamsEncoding"
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_r_a_n_s_a_c_t_i_o_n_Param_Transaction signature": {
      "name": "GETTRANSACTIONParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "g_e_t_T_r_a_n_s_a_c_t_i_o_n_Param_Configuration": {
      "name": "GETTRANSACTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Commitment level to use. `Processed` is not supported.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTRANSACTIONParamsCommitment"
              }
            }
          },
          {
            "description": "Sets the max transaction version to return.",
            "key": "maxSupportedTransactionVersion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Encoding format for the returned transaction.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETTRANSACTIONParamsEncoding"
              }
            }
          }
        ]
      }
    },
    "g_e_t_T_r_a_n_s_a_c_t_i_o_n_Result": {
      "name": "GetTransactionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The slot this transaction was processed in.",
            "key": "slot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The transaction details, either in JSON format or encoded binary data.",
            "key": "transaction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetTransactionResultTransaction"
              }
            }
          },
          {
            "description": "Estimated production time as a Unix timestamp.",
            "key": "blockTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Transaction status metadata.",
            "key": "meta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetTransactionResultMeta"
                }
              }
            }
          },
          {
            "description": "Transaction version.",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GetTransactionResultVersion"
                }
              }
            }
          }
        ]
      }
    },
    "GetVersionResult": {
      "name": "GetVersionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The software version of solana-core.",
            "key": "solana-core",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier of the current software's feature set.",
            "key": "feature-set",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_V_e_r_s_i_o_n_Result": {
      "name": "GetVersionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The software version of solana-core.",
            "key": "solana-core",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier of the current software's feature set.",
            "key": "feature-set",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetVoteAccountsResultCurrentItems": {
      "name": "GetVoteAccountsResultCurrentItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Vote account address.",
            "key": "votePubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Validator identity.",
            "key": "nodePubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Active stake in lamports delegated to this vote account.",
            "key": "activatedStake",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether the vote account is staked for this epoch.",
            "key": "epochVoteAccount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Percentage of rewards payout owed to the vote account.",
            "key": "commission",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Most recent slot voted on by this vote account.",
            "key": "lastVote",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "History of earned credits for up to five epochs.",
            "key": "epochCredits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Current root slot for this vote account.",
            "key": "rootSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetVoteAccountsResultDelinquentItems": {
      "name": "GetVoteAccountsResultDelinquentItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Vote account address.",
            "key": "votePubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Validator identity.",
            "key": "nodePubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Active stake in lamports delegated to this vote account.",
            "key": "activatedStake",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether the vote account is staked for this epoch.",
            "key": "epochVoteAccount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Percentage of rewards payout owed to the vote account.",
            "key": "commission",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Most recent slot voted on by this vote account.",
            "key": "lastVote",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "History of earned credits for up to five epochs.",
            "key": "epochCredits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Current root slot for this vote account.",
            "key": "rootSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GetVoteAccountsResult": {
      "name": "GetVoteAccountsResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of current vote accounts.",
            "key": "current",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetVoteAccountsResultCurrentItems"
                }
              }
            }
          },
          {
            "description": "List of delinquent vote accounts.",
            "key": "delinquent",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetVoteAccountsResultDelinquentItems"
                }
              }
            }
          }
        ]
      }
    },
    "GETVOTEACCOUNTSParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "GETVOTEACCOUNTSParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "GETVOTEACCOUNTSParams": {
      "name": "GETVOTEACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETVOTEACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "Return results for this validator vote address.",
            "key": "votePubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Do not filter out delinquent validators with no stake.",
            "key": "keepUnstakedDelinquents",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Number of slots behind the tip for a validator to be considered delinquent.",
            "key": "delinquentSlotDistance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_V_o_t_e_A_c_c_o_u_n_t_s_Param_Configuration": {
      "name": "GETVOTEACCOUNTSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GETVOTEACCOUNTSParamsCommitment"
              }
            }
          },
          {
            "description": "Return results for this validator vote address.",
            "key": "votePubkey",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Do not filter out delinquent validators with no stake.",
            "key": "keepUnstakedDelinquents",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Number of slots behind the tip for a validator to be considered delinquent.",
            "key": "delinquentSlotDistance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "g_e_t_V_o_t_e_A_c_c_o_u_n_t_s_Result": {
      "name": "GetVoteAccountsResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of current vote accounts.",
            "key": "current",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetVoteAccountsResultCurrentItems"
                }
              }
            }
          },
          {
            "description": "List of delinquent vote accounts.",
            "key": "delinquent",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetVoteAccountsResultDelinquentItems"
                }
              }
            }
          }
        ]
      }
    },
    "ISBLOCKHASHVALIDParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "ISBLOCKHASHVALIDParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "ISBLOCKHASHVALIDParams": {
      "name": "ISBLOCKHASHVALIDParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The blockhash to evaluate, as a base-58 encoded string.",
            "key": "blockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ISBLOCKHASHVALIDParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "i_s_B_l_o_c_k_h_a_s_h_V_a_l_i_d_Param_blockhash": {
      "name": "ISBLOCKHASHVALIDParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "i_s_B_l_o_c_k_h_a_s_h_V_a_l_i_d_Param_Configuration": {
      "name": "ISBLOCKHASHVALIDParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The blockhash to evaluate, as a base-58 encoded string.",
            "key": "blockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ISBLOCKHASHVALIDParamsCommitment"
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "i_s_B_l_o_c_k_h_a_s_h_V_a_l_i_d_Result": {
      "description": "Indicates if the blockhash is still valid.",
      "name": "IsBlockhashValidResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "m_i_n_i_m_u_m_L_e_d_g_e_r_S_l_o_t_Result": {
      "description": "The lowest slot number the node has information about.",
      "name": "MinimumLedgerSlotResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "REQUESTAIRDROPParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "REQUESTAIRDROPParamsCommitment",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "REQUESTAIRDROPParams": {
      "name": "REQUESTAIRDROPParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "REQUESTAIRDROPParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "r_e_q_u_e_s_t_A_i_r_d_r_o_p_Param_Pubkey": {
      "description": "Base-58 encoded public key.",
      "name": "REQUESTAIRDROPParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "r_e_q_u_e_s_t_A_i_r_d_r_o_p_Param_Lamports": {
      "name": "REQUESTAIRDROPParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "r_e_q_u_e_s_t_A_i_r_d_r_o_p_Param_Configuration": {
      "name": "REQUESTAIRDROPParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "REQUESTAIRDROPParamsCommitment"
              }
            }
          }
        ]
      }
    },
    "r_e_q_u_e_s_t_A_i_r_d_r_o_p_Result": {
      "name": "RequestAirdropResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "SENDTRANSACTIONParamsEncoding": {
      "description": "Encoding used for the transaction data.",
      "name": "SENDTRANSACTIONParamsEncoding",
      "shape": {
        "type": "enum",
        "default": "base58",
        "values": [
          {
            "value": "base58"
          },
          {
            "value": "base64"
          }
        ]
      }
    },
    "SENDTRANSACTIONParamsPreflightCommitment": {
      "description": "Commitment level to use for preflight.",
      "name": "SENDTRANSACTIONParamsPreflightCommitment",
      "shape": {
        "type": "enum",
        "default": "finalized",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "SENDTRANSACTIONParams": {
      "name": "SENDTRANSACTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Encoding used for the transaction data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SENDTRANSACTIONParamsEncoding"
              }
            }
          },
          {
            "description": "Skip preflight transaction checks if `true`.",
            "key": "skipPreflight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Commitment level to use for preflight.",
            "key": "preflightCommitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SENDTRANSACTIONParamsPreflightCommitment"
              }
            }
          },
          {
            "description": "Maximum retries for the RPC node to send the transaction.",
            "key": "maxRetries",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "s_e_n_d_T_r_a_n_s_a_c_t_i_o_n_Param_Transaction": {
      "name": "SENDTRANSACTIONParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "s_e_n_d_T_r_a_n_s_a_c_t_i_o_n_Param_Configuration": {
      "name": "SENDTRANSACTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Encoding used for the transaction data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SENDTRANSACTIONParamsEncoding"
              }
            }
          },
          {
            "description": "Skip preflight transaction checks if `true`.",
            "key": "skipPreflight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Commitment level to use for preflight.",
            "key": "preflightCommitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SENDTRANSACTIONParamsPreflightCommitment"
              }
            }
          },
          {
            "description": "Maximum retries for the RPC node to send the transaction.",
            "key": "maxRetries",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "s_e_n_d_T_r_a_n_s_a_c_t_i_o_n_Result": {
      "description": "The transaction signature as a base-58 encoded string.",
      "name": "SendTransactionResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "SimulateTransactionResultAccountsItems": {
      "name": "SimulateTransactionResultAccountsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of lamports assigned to this account.",
            "key": "lamports",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Program owner of this account.",
            "key": "owner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Account data in the specified encoding format.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the account contains a program.",
            "key": "executable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The epoch at which this account will next owe rent.",
            "key": "rentEpoch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The data size of the account.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "SimulateTransactionResultReturnData": {
      "name": "SimulateTransactionResultReturnData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Program that generated the return data.",
            "key": "programId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Return data as base-64 encoded binary data.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SimulateTransactionResultInnerInstructions": {
      "description": "Inner instructions if `innerInstructions` is true.",
      "name": "SimulateTransactionResultInnerInstructions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SimulateTransactionResult": {
      "name": "SimulateTransactionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error if the transaction failed, null if succeeded.",
            "key": "err",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Log messages output during execution.",
            "key": "logs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Array of account information.",
            "key": "accounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "SimulateTransactionResultAccountsItems"
                  }
                }
              }
            }
          },
          {
            "description": "Compute budget units consumed.",
            "key": "unitsConsumed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "returnData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SimulateTransactionResultReturnData"
                }
              }
            }
          },
          {
            "description": "Inner instructions if `innerInstructions` is true.",
            "key": "innerInstructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SimulateTransactionResultInnerInstructions"
                }
              }
            }
          }
        ]
      }
    },
    "SIMULATETRANSACTIONParamsCommitment": {
      "description": "Configures the state commitment for querying.",
      "name": "SIMULATETRANSACTIONParamsCommitment",
      "shape": {
        "type": "enum",
        "default": "finalized",
        "values": [
          {
            "value": "processed"
          },
          {
            "value": "confirmed"
          },
          {
            "value": "finalized"
          }
        ]
      }
    },
    "SIMULATETRANSACTIONParamsEncoding": {
      "description": "Encoding used for the transaction data.",
      "name": "SIMULATETRANSACTIONParamsEncoding",
      "shape": {
        "type": "enum",
        "default": "base58",
        "values": [
          {
            "value": "base58"
          },
          {
            "value": "base64"
          }
        ]
      }
    },
    "SIMULATETRANSACTIONParamsAccountsEncoding": {
      "description": "Encoding for returned account data.",
      "name": "SIMULATETRANSACTIONParamsAccountsEncoding",
      "shape": {
        "type": "enum",
        "default": "base64",
        "values": [
          {
            "value": "base58"
          },
          {
            "value": "base64"
          },
          {
            "value": "base64+zstd"
          },
          {
            "value": "jsonParsed"
          }
        ]
      }
    },
    "SIMULATETRANSACTIONParamsAccounts": {
      "name": "SIMULATETRANSACTIONParamsAccounts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An array of account Pubkeys to return.",
            "key": "addresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Encoding for returned account data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SIMULATETRANSACTIONParamsAccountsEncoding"
              }
            }
          }
        ]
      }
    },
    "SIMULATETRANSACTIONParams": {
      "name": "SIMULATETRANSACTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SIMULATETRANSACTIONParamsCommitment"
              }
            }
          },
          {
            "description": "If true, the transaction signatures will be verified.",
            "key": "sigVerify",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "If true, replaces recent blockhash with the most recent one.",
            "key": "replaceRecentBlockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Encoding used for the transaction data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SIMULATETRANSACTIONParamsEncoding"
              }
            }
          },
          {
            "description": "If true, includes inner instructions in the response.",
            "key": "innerInstructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "accounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SIMULATETRANSACTIONParamsAccounts"
              }
            }
          }
        ]
      }
    },
    "s_i_m_u_l_a_t_e_T_r_a_n_s_a_c_t_i_o_n_Param_Transaction": {
      "name": "SIMULATETRANSACTIONParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "s_i_m_u_l_a_t_e_T_r_a_n_s_a_c_t_i_o_n_Param_Configuration": {
      "name": "SIMULATETRANSACTIONParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Configures the state commitment for querying.",
            "key": "commitment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SIMULATETRANSACTIONParamsCommitment"
              }
            }
          },
          {
            "description": "If true, the transaction signatures will be verified.",
            "key": "sigVerify",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "If true, replaces recent blockhash with the most recent one.",
            "key": "replaceRecentBlockhash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "The minimum slot that the request can be evaluated at.",
            "key": "minContextSlot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Encoding used for the transaction data.",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SIMULATETRANSACTIONParamsEncoding"
              }
            }
          },
          {
            "description": "If true, includes inner instructions in the response.",
            "key": "innerInstructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "accounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SIMULATETRANSACTIONParamsAccounts"
              }
            }
          }
        ]
      }
    },
    "s_i_m_u_l_a_t_e_T_r_a_n_s_a_c_t_i_o_n_Result": {
      "name": "SimulateTransactionResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error if the transaction failed, null if succeeded.",
            "key": "err",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Log messages output during execution.",
            "key": "logs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Array of account information.",
            "key": "accounts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "SimulateTransactionResultAccountsItems"
                  }
                }
              }
            }
          },
          {
            "description": "Compute budget units consumed.",
            "key": "unitsConsumed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "returnData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SimulateTransactionResultReturnData"
                }
              }
            }
          },
          {
            "description": "Inner instructions if `innerInstructions` is true.",
            "key": "innerInstructions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SimulateTransactionResultInnerInstructions"
                }
              }
            }
          }
        ]
      }
    }
  },
  "subpackages": {},
  "rootPackage": {
    "endpoints": [
      {
        "auth": false,
        "method": "POST",
        "id": "getAccountInfo",
        "originalEndpointId": "getAccountInfo",
        "name": "getAccountInfo",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Pubkey of the account to query.",
                  "key": "Pubkey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object for additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETACCOUNTINFOParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetAccountInfoResult"
            }
          },
          "description": "Returns details of the account including balance, ownership, and other relevant data."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getAccountInfo"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBalance",
        "originalEndpointId": "getBalance",
        "name": "getBalance",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Pubkey of the account to query.",
                  "key": "Pubkey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETBALANCEParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "Returns the balance in lamports of the account queried."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBalance"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBlock",
        "originalEndpointId": "getBlock",
        "name": "getBlock",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Slot number as a u64 integer.",
                  "key": "slot",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETBLOCKParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetBlockResult"
            }
          },
          "description": "Returns block information or null if the block is not confirmed."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBlock"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBlockCommitment",
        "originalEndpointId": "getBlockCommitment",
        "name": "getBlockCommitment",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Block number, identified by Slot.",
                  "key": "block",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetBlockCommitmentResult"
            }
          },
          "description": "Returns the commitment and total active stake for the block."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBlockCommitment"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBlockHeight",
        "originalEndpointId": "getBlockHeight",
        "name": "getBlockHeight",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object containing additional request parameters.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETBLOCKHEIGHTParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The current block height, as a u64 integer."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBlockHeight"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBlockProduction",
        "originalEndpointId": "getBlockProduction",
        "name": "getBlockProduction",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETBLOCKPRODUCTIONParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetBlockProductionResult"
            }
          },
          "description": "Returns block production information for the specified range."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBlockProduction"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBlocks",
        "originalEndpointId": "getBlocks",
        "name": "getBlocks",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The starting slot.",
                  "key": "start_slot",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The ending slot.",
                  "key": "end_slot",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETBLOCKSParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "description": "Returns an array of u64 integers listing confirmed blocks."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  42
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  42
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBlocks"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBlocksWithLimit",
        "originalEndpointId": "getBlocksWithLimit",
        "name": "getBlocksWithLimit",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The starting slot.",
                  "key": "start_slot",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The limit for the number of blocks to return.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETBLOCKSWITHLIMITParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "description": "Returns an array of u64 integers listing confirmed blocks starting at the start_slot."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  42
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  42
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBlocksWithLimit"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getBlockTime",
        "originalEndpointId": "getBlockTime",
        "name": "getBlockTime",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Block number, identified by Slot.",
                  "key": "block",
                  "valueType": {
                    "type": "id",
                    "value": "GETBLOCKTIMEParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The estimated production time of the block as a Unix timestamp."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getBlockTime"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getClusterNodes",
        "originalEndpointId": "getClusterNodes",
        "name": "getClusterNodes",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetClusterNodesResultItems"
              }
            }
          },
          "description": "Returns an array of JSON objects, each containing information about a node in the cluster."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getClusterNodes"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getEpochInfo",
        "originalEndpointId": "getEpochInfo",
        "name": "getEpochInfo",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETEPOCHINFOParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetEpochInfoResult"
            }
          },
          "description": "Returns an object containing information about the current epoch."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getEpochInfo"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getEpochSchedule",
        "originalEndpointId": "getEpochSchedule",
        "name": "getEpochSchedule",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetEpochScheduleResult"
            }
          },
          "description": "Returns an object containing information about the epoch schedule."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getEpochSchedule"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getFeeForMessage",
        "originalEndpointId": "getFeeForMessage",
        "name": "getFeeForMessage",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Base-64 encoded Message.",
                  "key": "Message",
                  "valueType": {
                    "type": "id",
                    "value": "GETFEEFORMESSAGEParams"
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETFEEFORMESSAGEParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The fee corresponding to the message at the specified blockhash."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getFeeForMessage"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getFirstAvailableBlock",
        "originalEndpointId": "getFirstAvailableBlock",
        "name": "getFirstAvailableBlock",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The slot number of the lowest confirmed block that is still available in the ledger."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getFirstAvailableBlock"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getGenesisHash",
        "originalEndpointId": "getGenesisHash",
        "name": "getGenesisHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The genesis hash as a base-58 encoded string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getGenesisHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getHealth",
        "originalEndpointId": "getHealth",
        "name": "getHealth",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetHealthResult"
            }
          },
          "description": "If the node is healthy, the result is \"ok\"."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getHealth"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getHighestSnapshotSlot",
        "originalEndpointId": "getHighestSnapshotSlot",
        "name": "getHighestSnapshotSlot",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetHighestSnapshotSlotResult"
            }
          },
          "description": "Returns a JSON object with the highest full snapshot slot."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getHighestSnapshotSlot"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getIdentity",
        "originalEndpointId": "getIdentity",
        "name": "getIdentity",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetIdentityResult"
            }
          },
          "description": "The identity pubkey of the current node."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getIdentity"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getInflationGovernor",
        "originalEndpointId": "getInflationGovernor",
        "name": "getInflationGovernor",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETINFLATIONGOVERNORParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetInflationGovernorResult"
            }
          },
          "description": "Returns a JSON object containing the inflation governor parameters."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getInflationGovernor"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getInflationRate",
        "originalEndpointId": "getInflationRate",
        "name": "getInflationRate",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetInflationRateResult"
            }
          },
          "description": "Returns a JSON object containing the inflation values for the current epoch."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getInflationRate"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getInflationReward",
        "originalEndpointId": "getInflationReward",
        "name": "getInflationReward",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of addresses to query.",
                  "key": "Addresses",
                  "valueType": {
                    "type": "id",
                    "value": "GETINFLATIONREWARDParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetInflationRewardResultItems"
              }
            }
          },
          "description": "Returns a JSON array with reward details for each address."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getInflationReward"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getLargestAccounts",
        "originalEndpointId": "getLargestAccounts",
        "name": "getLargestAccounts",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETLARGESTACCOUNTSParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetLargestAccountsResultItems"
              }
            }
          },
          "description": "An array of objects containing the address of the account and its lamport balance."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getLargestAccounts"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getLatestBlockhash",
        "originalEndpointId": "getLatestBlockhash",
        "name": "getLatestBlockhash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "A configuration object with optional fields for specifying commitment and minimum context slot.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETLATESTBLOCKHASHParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetLatestBlockhashResult"
            }
          },
          "description": "RpcResponse object with blockhash information."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getLatestBlockhash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getMaxRetransmitSlot",
        "originalEndpointId": "getMaxRetransmitSlot",
        "name": "getMaxRetransmitSlot",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The maximum slot number seen from the retransmit stage."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getMaxRetransmitSlot"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getMaxShredInsertSlot",
        "originalEndpointId": "getMaxShredInsertSlot",
        "name": "getMaxShredInsertSlot",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The maximum slot number seen after shred insert."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getMaxShredInsertSlot"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getMinimumBalanceForRentExemption",
        "originalEndpointId": "getMinimumBalanceForRentExemption",
        "name": "getMinimumBalanceForRentExemption",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The account's data length in bytes.",
                  "key": "Account data length",
                  "valueType": {
                    "type": "id",
                    "value": "GETMINIMUMBALANCEFORRENTEXEMPTIONParams"
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETMINIMUMBALANCEFORRENTEXEMPTIONParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The minimum number of lamports required in the account to remain rent-free."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getMinimumBalanceForRentExemption"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getMultipleAccounts",
        "originalEndpointId": "getMultipleAccounts",
        "name": "getMultipleAccounts",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of Pubkeys to query.",
                  "key": "Pubkeys",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETMULTIPLEACCOUNTSParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetMultipleAccountsResultItems"
              }
            }
          },
          "description": "An array of JSON objects containing account details."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getMultipleAccounts"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getProgramAccounts",
        "originalEndpointId": "getProgramAccounts",
        "name": "getProgramAccounts",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The Pubkey of the program.",
                  "key": "Pubkey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETPROGRAMACCOUNTSParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetProgramAccountsResultItems"
              }
            }
          },
          "description": "An array of JSON objects containing program account details."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getProgramAccounts"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getRecentPerformanceSamples",
        "originalEndpointId": "getRecentPerformanceSamples",
        "name": "getRecentPerformanceSamples",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The number of samples to return.",
                  "key": "limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetRecentPerformanceSamplesResultItems"
              }
            }
          },
          "description": "An array of performance sample data."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getRecentPerformanceSamples"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getRecentPrioritizationFees",
        "originalEndpointId": "getRecentPrioritizationFees",
        "name": "getRecentPrioritizationFees",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of up to 128 account addresses. If provided, the response will reflect a fee to land a transaction locking all of the provided accounts as writable.",
                  "key": "Account addresses",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetRecentPrioritizationFeesResultItems"
              }
            }
          },
          "description": "An array of prioritization fees observed in recent blocks."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getRecentPrioritizationFees"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getSignaturesForAddress",
        "originalEndpointId": "getSignaturesForAddress",
        "name": "getSignaturesForAddress",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The account address.",
                  "key": "Account address",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETSIGNATURESFORADDRESSParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetSignaturesForAddressResultItems"
              }
            }
          },
          "description": "An array of objects containing transaction signature information."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getSignaturesForAddress"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getSignatureStatuses",
        "originalEndpointId": "getSignatureStatuses",
        "name": "getSignatureStatuses",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "An array of transaction signatures to confirm.",
                  "key": "Signatures",
                  "valueType": {
                    "type": "list",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETSIGNATURESTATUSESParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetSignatureStatusesResultItems"
              }
            }
          },
          "description": "An array containing the status of each transaction signature."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getSignatureStatuses"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getSlot",
        "originalEndpointId": "getSlot",
        "name": "getSlot",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETSLOTParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The current slot at the specified commitment level."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getSlot"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getSlotLeader",
        "originalEndpointId": "getSlotLeader",
        "name": "getSlotLeader",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETSLOTLEADERParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The node identity Pubkey as a base-58 encoded string."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getSlotLeader"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getSlotLeaders",
        "originalEndpointId": "getSlotLeaders",
        "name": "getSlotLeaders",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The starting slot as a u64 integer.",
                  "key": "Start slot",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "The number of slot leaders to return, between 1 and 5,000.",
                  "key": "Limit",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "description": "An array of node identity public keys as base-58 encoded strings."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  "foo"
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  "foo"
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getSlotLeaders"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getSupply",
        "originalEndpointId": "getSupply",
        "name": "getSupply",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETSUPPLYParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetSupplyResult"
            }
          },
          "description": "An RpcResponse JSON object containing the current supply information."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getSupply"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getTokenAccountBalance",
        "originalEndpointId": "getTokenAccountBalance",
        "name": "getTokenAccountBalance",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The Pubkey of the token account to query.",
                  "key": "Token account Pubkey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETTOKENACCOUNTBALANCEParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetTokenAccountBalanceResult"
            }
          },
          "description": "The balance of the SPL Token account."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getTokenAccountBalance"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getTokenAccountsByOwner",
        "originalEndpointId": "getTokenAccountsByOwner",
        "name": "getTokenAccountsByOwner",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The Pubkey of the account owner to query.",
                  "key": "Token owner Pubkey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "A filter object containing either the Mint Pubkey or the Token program Pubkey.",
                  "key": "Token filter",
                  "valueType": {
                    "type": "id",
                    "value": "GETTOKENACCOUNTSBYOWNERParams"
                  }
                },
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETTOKENACCOUNTSBYOWNERParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "GetTokenAccountsByOwnerResultItems"
              }
            }
          },
          "description": "An array of JSON objects representing the token accounts owned by the specified Pubkey."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getTokenAccountsByOwner"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getTokenSupply",
        "originalEndpointId": "getTokenSupply",
        "name": "getTokenSupply",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The Pubkey of the token Mint to query.",
                  "key": "Token Mint Pubkey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETTOKENSUPPLYParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetTokenSupplyResult"
            }
          },
          "description": "The total supply of the specified SPL Token."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getTokenSupply"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getTransaction",
        "originalEndpointId": "getTransaction",
        "name": "getTransaction",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Transaction signature as a base-58 encoded string.",
                  "key": "Transaction signature",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object containing additional settings.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETTRANSACTIONParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetTransactionResult"
            }
          },
          "description": "The details of a confirmed transaction."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getTransaction"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getVersion",
        "originalEndpointId": "getVersion",
        "name": "getVersion",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetVersionResult"
            }
          },
          "description": "The current Solana version running on the node."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getVersion"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "getVoteAccounts",
        "originalEndpointId": "getVoteAccounts",
        "name": "getVoteAccounts",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "GETVOTEACCOUNTSParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "GetVoteAccountsResult"
            }
          },
          "description": "Information about current and delinquent vote accounts."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "getVoteAccounts"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "isBlockhashValid",
        "originalEndpointId": "isBlockhashValid",
        "name": "isBlockhashValid",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The blockhash of the block to evaluate.",
                  "key": "blockhash",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "ISBLOCKHASHVALIDParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          "description": "Indicates if the blockhash is still valid."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "isBlockhashValid"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "minimumLedgerSlot",
        "originalEndpointId": "minimumLedgerSlot",
        "name": "minimumLedgerSlot",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          "description": "The lowest slot number the node has information about."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": 42
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "minimumLedgerSlot"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "requestAirdrop",
        "originalEndpointId": "requestAirdrop",
        "name": "requestAirdrop",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The Pubkey of the account to receive lamports.",
                  "key": "Pubkey",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The number of lamports to airdrop, as a \"u64\".",
                  "key": "Lamports",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "REQUESTAIRDROPParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "Transaction Signature of the airdrop."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "requestAirdrop"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "sendTransaction",
        "originalEndpointId": "sendTransaction",
        "name": "sendTransaction",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Fully-signed Transaction, as encoded string.",
                  "key": "Transaction",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "SENDTRANSACTIONParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "The first signature in the transaction, used as the transaction ID."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "sendTransaction"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "simulateTransaction",
        "originalEndpointId": "simulateTransaction",
        "name": "simulateTransaction",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The transaction to simulate, as an encoded string.",
                  "key": "Transaction",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Optional configuration object containing additional options.",
                  "key": "Configuration",
                  "valueType": {
                    "type": "id",
                    "value": "SIMULATETRANSACTIONParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "SimulateTransactionResult"
            }
          },
          "description": "The result of simulating the transaction."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "simulateTransaction"
        }
      }
    ],
    "webhooks": [],
    "websockets": [],
    "types": [],
    "subpackages": []
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}