{
  "types": {
    "AsyncJobResult": {
      "name": "AsyncJobResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "task_id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        ]
      }
    },
    "BodyTaskRunParametersTaskInput": {
      "description": "The data input to the Task. This should be relevant to the `user_prompt` and cover any dynamic `{...}` parameters that are referenced in the prompt. Not required if `image_required` is set to `true` and there are no dynamic parameters in the prompt.",
      "name": "BodyTaskRunParametersTaskInput",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Body_Task_Run_Parameters": {
      "name": "Body_Task_Run_Parameters",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The data input to the Task. This should be relevant to the `user_prompt` and cover any dynamic `{...}` parameters that are referenced in the prompt. Not required if `image_required` is set to `true` and there are no dynamic parameters in the prompt.",
            "key": "task_input",
            "valueType": {
              "type": "id",
              "value": "BodyTaskRunParametersTaskInput"
            }
          },
          {
            "description": "Image file to be provided to the LLM, only required when `image_required` is set to `true`.",
            "key": "task_file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        ]
      }
    },
    "Body_document_create_org__org_id__project__project_id__document_post": {
      "name": "Body_document_create_org__org_id__project__project_id__document_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "files",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Body_document_upload_org__org_id__project__project_id__document_upload_post": {
      "name": "Body_document_upload_org__org_id__project__project_id__document_upload_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "files",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Body_fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post": {
      "name": "Body_fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Body_fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post": {
      "name": "Body_fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Body_fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post": {
      "name": "Body_fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Body_fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post": {
      "name": "Body_fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Body_fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post": {
      "name": "Body_fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Body_fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post": {
      "name": "Body_fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Body_fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post": {
      "name": "Body_fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Body_generate_org__org_id__project__project_id__compose_generate_post": {
      "name": "Body_generate_org__org_id__project__project_id__compose_generate_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "compose",
            "valueType": {
              "type": "id",
              "value": "ComposeGenerate"
            }
          },
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "ComposeInit"
            }
          }
        ]
      }
    },
    "Body_org_update_avatar_org__org_id__avatar_post": {
      "name": "Body_org_update_avatar_org__org_id__avatar_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "file",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        ]
      }
    },
    "Body_project_update_avatar_org__org_id__project__project_id__avatar_post": {
      "name": "Body_project_update_avatar_org__org_id__project__project_id__avatar_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "file",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        ]
      }
    },
    "Body_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post": {
      "name": "Body_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "ComposeInit"
            }
          },
          {
            "key": "existing_content",
            "valueType": {
              "type": "id",
              "value": "ComposeContent"
            }
          },
          {
            "key": "update_instruction",
            "valueType": {
              "type": "id",
              "value": "ComposeSectionTalkingPoint"
            }
          }
        ]
      }
    },
    "Body_update_section_org__org_id__project__project_id__compose_update_section_post": {
      "name": "Body_update_section_org__org_id__project__project_id__compose_update_section_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "context",
            "valueType": {
              "type": "id",
              "value": "ComposeInit"
            }
          },
          {
            "key": "existing_content",
            "valueType": {
              "type": "id",
              "value": "ComposeContent"
            }
          },
          {
            "key": "update_instruction",
            "valueType": {
              "type": "id",
              "value": "ComposeSectionUpdate"
            }
          }
        ]
      }
    },
    "Body_user_update_avatar_user_avatar_post": {
      "name": "Body_user_update_avatar_user_avatar_post",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "file",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        ]
      }
    },
    "Chat": {
      "name": "Chat",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "summary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "collection_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "key": "created_by_user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "last_message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "documents_have_been_modified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "ChatConfigInputLlm": {
      "name": "ChatConfigInputLlm",
      "shape": {
        "type": "enum",
        "default": "gpt-3.5-turbo",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "ChatConfig-Input": {
      "name": "ChatConfig-Input",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "llm",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ChatConfigInputLlm"
              }
            }
          },
          {
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.5
                }
              }
            }
          },
          {
            "key": "knn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": 5
                }
              }
            }
          },
          {
            "key": "chat_system_commands",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Conversational Guardrails can be defined to run against Chat `input` (i.e. the users query) or on Chat `output` (i.e. the LLM output)",
            "key": "chat_guardrails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ConversationalGuardrails"
                }
              }
            }
          },
          {
            "description": "Enable query expansion. Uses an LLM to generate multiple rephrasing of the original query for better broad spectrum vector retrieval",
            "key": "query_expansion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "ChatConfigOutputLlm": {
      "name": "ChatConfigOutputLlm",
      "shape": {
        "type": "enum",
        "default": "gpt-3.5-turbo",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "ChatConfig-Output": {
      "name": "ChatConfig-Output",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "llm",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ChatConfigOutputLlm"
              }
            }
          },
          {
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.5
                }
              }
            }
          },
          {
            "key": "knn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": 5
                }
              }
            }
          },
          {
            "key": "chat_system_commands",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Conversational Guardrails can be defined to run against Chat `input` (i.e. the users query) or on Chat `output` (i.e. the LLM output)",
            "key": "chat_guardrails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ConversationalGuardrails"
                }
              }
            }
          },
          {
            "description": "Enable query expansion. Uses an LLM to generate multiple rephrasing of the original query for better broad spectrum vector retrieval",
            "key": "query_expansion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "ChatCreate": {
      "name": "ChatCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "summary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "collection_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    },
    "ChatDocumentSource": {
      "name": "ChatDocumentSource",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "upload"
          },
          {
            "value": "gdrive"
          },
          {
            "value": "onedrive"
          },
          {
            "value": "web_scrape"
          },
          {
            "value": "notion"
          },
          {
            "value": "confluence"
          },
          {
            "value": "box"
          },
          {
            "value": "dropbox"
          },
          {
            "value": "sharepoint"
          }
        ]
      }
    },
    "ChatDocumentSourceMeta": {
      "name": "ChatDocumentSourceMeta",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ChatDocument": {
      "name": "ChatDocument",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "project_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocumentSource"
                }
              }
            }
          },
          {
            "key": "strategy",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "source_meta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocumentSourceMeta"
                }
              }
            }
          },
          {
            "key": "connection_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "chunks",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "original_mime",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "embedding_instances",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocumentEmbeddingInstance"
                }
              }
            }
          }
        ]
      }
    },
    "ChatDocumentEmbeddingInstanceConfig": {
      "name": "ChatDocumentEmbeddingInstanceConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ChatDocumentEmbeddingInstance": {
      "name": "ChatDocumentEmbeddingInstance",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocumentEmbeddingInstanceConfig"
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "chat_document_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "is_active",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "ChatDocumentEmbeddingRecord": {
      "name": "ChatDocumentEmbeddingRecord",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "document",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ChatDocumentQueryResult": {
      "name": "ChatDocumentQueryResult",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "chat_document_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "score",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "ChatDocumentUpdate": {
      "name": "ChatDocumentUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ChatGuardrailId0": {
      "name": "ChatGuardrailId0",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "source_validation"
          }
        ]
      }
    },
    "ChatGuardrailId1": {
      "name": "ChatGuardrailId1",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "prompt_policy"
          },
          {
            "value": "pii_policy"
          }
        ]
      }
    },
    "ChatGuardrailId": {
      "name": "ChatGuardrailId",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ChatGuardrailId0",
            "type": {
              "type": "id",
              "value": "ChatGuardrailId0"
            }
          },
          {
            "typeName": "ChatGuardrailId1",
            "type": {
              "type": "id",
              "value": "ChatGuardrailId1"
            }
          }
        ]
      }
    },
    "ChatGuardrailType": {
      "name": "ChatGuardrailType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "input"
          },
          {
            "value": "output"
          }
        ]
      }
    },
    "ChatGuardrail": {
      "name": "ChatGuardrail",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "id",
              "value": "ChatGuardrailId"
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ChatGuardrailType"
            }
          }
        ]
      }
    },
    "ChatIamMemberRoleUpdateAddItems": {
      "name": "ChatIamMemberRoleUpdateAddItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "ChatIamMemberRoleUpdateRemoveItems": {
      "name": "ChatIamMemberRoleUpdateRemoveItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "ChatIAMMemberRoleUpdate": {
      "name": "ChatIAMMemberRoleUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of chat roles to grant to the member.\n\nRoles in this list are applied to the member AFTER any removals specified in `remove`.\n\nThis may be combined with `remove_all` to replace the member's entire role list.",
            "key": "add",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatIamMemberRoleUpdateAddItems"
                }
              }
            }
          },
          {
            "description": "A list of chat roles to revoke from the member.",
            "key": "remove",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatIamMemberRoleUpdateRemoveItems"
                }
              }
            }
          },
          {
            "description": "Removes all existing roles from the member. This may be combined with `add` to replace all existing roles that the member holds.",
            "key": "remove_all",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ChatIamPermissionTestPermissionsItems": {
      "name": "ChatIamPermissionTestPermissionsItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "add_editor"
          },
          {
            "value": "add_member"
          },
          {
            "value": "add_owner"
          },
          {
            "value": "edit"
          },
          {
            "value": "query"
          },
          {
            "value": "remove_editor"
          },
          {
            "value": "remove_member"
          },
          {
            "value": "remove_owner"
          },
          {
            "value": "view"
          },
          {
            "value": "view_members"
          }
        ]
      }
    },
    "ChatIAMPermissionTest": {
      "name": "ChatIAMPermissionTest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of permissions to test on the chat.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ChatIamPermissionTestPermissionsItems"
              }
            }
          },
          {
            "key": "member",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ChatModelName": {
      "description": "LLM reference name.",
      "name": "ChatModelName",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "ChatModel": {
      "name": "ChatModel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "LLM reference name.",
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "ChatModelName"
            }
          },
          {
            "description": "Human readable name for the LLM.",
            "key": "alias",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The company that produces the LLM.",
            "key": "provider",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Key information about the LLM.",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Whether the LLM is able to see and interpret images.",
            "key": "supports_vision",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean",
                "default": false
              }
            }
          }
        ]
      }
    },
    "ChatUpdate": {
      "name": "ChatUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "Collection": {
      "name": "Collection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "project_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "summary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "key": "modified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "key": "embedding_instances",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocumentEmbeddingInstance"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionChatShow": {
      "name": "CollectionChatShow",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "all"
          },
          {
            "value": "viewable"
          }
        ]
      }
    },
    "CollectionCreate": {
      "description": "'Meta schema to enable passing non-standard\nproperties on POST for create",
      "name": "CollectionCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "document_embedding_instance_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CollectionEmbeddingUpdate": {
      "name": "CollectionEmbeddingUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "embedding_instance_ids",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionIamMemberRoleUpdateAddItems": {
      "name": "CollectionIamMemberRoleUpdateAddItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "CollectionIamMemberRoleUpdateRemoveItems": {
      "name": "CollectionIamMemberRoleUpdateRemoveItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "CollectionIAMMemberRoleUpdate": {
      "name": "CollectionIAMMemberRoleUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of collection roles to grant to the member.\n\nRoles in this list are applied to the member AFTER any removals specified in `remove`.\n\nThis may be combined with `remove_all` to replace the member's entire role list.",
            "key": "add",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CollectionIamMemberRoleUpdateAddItems"
                }
              }
            }
          },
          {
            "description": "A list of collection roles to revoke from the member.",
            "key": "remove",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CollectionIamMemberRoleUpdateRemoveItems"
                }
              }
            }
          },
          {
            "description": "Removes all existing roles from the member. This may be combined with `add` to replace all existing roles that the member holds.",
            "key": "remove_all",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CollectionIamPermissionTestPermissionsItems": {
      "name": "CollectionIamPermissionTestPermissionsItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "add_document"
          },
          {
            "value": "add_editor"
          },
          {
            "value": "add_member"
          },
          {
            "value": "add_owner"
          },
          {
            "value": "create_chat"
          },
          {
            "value": "edit"
          },
          {
            "value": "list_chats"
          },
          {
            "value": "query"
          },
          {
            "value": "remove_document"
          },
          {
            "value": "remove_editor"
          },
          {
            "value": "remove_member"
          },
          {
            "value": "remove_owner"
          },
          {
            "value": "view"
          },
          {
            "value": "view_members"
          }
        ]
      }
    },
    "CollectionIAMPermissionTest": {
      "name": "CollectionIAMPermissionTest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of permissions to test on the collection.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "CollectionIamPermissionTestPermissionsItems"
              }
            }
          },
          {
            "key": "member",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CollectionQuery": {
      "description": "Meta schema to define required schema parameter",
      "name": "CollectionQuery",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CollectionStatsResponse": {
      "name": "CollectionStatsResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "documents_by_source",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SourceRow"
              }
            }
          },
          {
            "key": "number_of_chats",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "CollectionUpdate": {
      "name": "CollectionUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ComposeContent": {
      "name": "ComposeContent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "existing_content",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ComposeGenerate": {
      "name": "ComposeGenerate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "structure",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "InitialComposeSection"
              }
            }
          }
        ]
      }
    },
    "ComposeInitLanguage": {
      "name": "ComposeInitLanguage",
      "shape": {
        "type": "enum",
        "default": "english_british",
        "values": [
          {
            "value": "english_british"
          },
          {
            "value": "english_american"
          },
          {
            "value": "french"
          },
          {
            "value": "chinese"
          },
          {
            "value": "spanish"
          },
          {
            "value": "korean"
          },
          {
            "value": "italian"
          },
          {
            "value": "german"
          }
        ]
      }
    },
    "ComposeInit": {
      "name": "ComposeInit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "topic",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "purpose",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "audience",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "num_sections",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "key": "word_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "key": "voice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "domain",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "tone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "favourable_words",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "deny_words",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "keywords",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "cta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "language",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ComposeInitLanguage"
              }
            }
          }
        ]
      }
    },
    "ComposeSectionTalkingPoint": {
      "name": "ComposeSectionTalkingPoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "section_heading",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ComposeSectionUpdate": {
      "name": "ComposeSectionUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "position",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "section_title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "instructions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "text",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ComposeTopicPoint": {
      "name": "ComposeTopicPoint",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "blog"
                }
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ConversationalGuardrails": {
      "name": "ConversationalGuardrails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of valid Input Conversational Guardrails to enable",
            "key": "input",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "InputConversationalGuardrailDefinition"
                }
              }
            }
          },
          {
            "description": "List of valid Output Conversational Guardrails to enable",
            "key": "output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "OutputConversationalGuardrailDefinition"
                }
              }
            }
          }
        ]
      }
    },
    "Datasource": {
      "name": "Datasource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    },
    "DatasourceConfiguration": {
      "name": "DatasourceConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "private",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "root_folder_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "DatasourceConnectionConfig": {
      "name": "DatasourceConnectionConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "DatasourceConnection": {
      "name": "DatasourceConnection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "private",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "key": "project_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "datasource_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DatasourceConnectionConfig"
              }
            }
          },
          {
            "key": "token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": ""
                }
              }
            }
          },
          {
            "key": "created_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    },
    "DatasourceConnectionPublicConfig": {
      "name": "DatasourceConnectionPublicConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "DatasourceConnectionPublic": {
      "name": "DatasourceConnectionPublic",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "private",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "project_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "datasource_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "key": "modified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "key": "config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DatasourceConnectionPublicConfig"
              }
            }
          },
          {
            "key": "datasource",
            "valueType": {
              "type": "id",
              "value": "Datasource"
            }
          }
        ]
      }
    },
    "DatasourceSyncRunStatus": {
      "name": "DatasourceSyncRunStatus",
      "shape": {
        "type": "enum",
        "default": "pending",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "started"
          },
          {
            "value": "success"
          },
          {
            "value": "failure"
          },
          {
            "value": "retry"
          },
          {
            "value": "progress"
          }
        ]
      }
    },
    "DatasourceSyncRunRunOutput": {
      "name": "DatasourceSyncRunRunOutput",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "DatasourceSyncRun": {
      "name": "DatasourceSyncRun",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "task_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DatasourceSyncRunStatus"
              }
            }
          },
          {
            "key": "run_output",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DatasourceSyncRunRunOutput"
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "key": "modified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "key": "datasource_connection",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DatasourceConnection"
                }
              }
            }
          }
        ]
      }
    },
    "DocumentCreateTaskState": {
      "name": "DocumentCreateTaskState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PENDING"
          },
          {
            "value": "STARTED"
          },
          {
            "value": "SUCCESS"
          },
          {
            "value": "FAILURE"
          },
          {
            "value": "RETRY"
          },
          {
            "value": "PROGRESS"
          }
        ]
      }
    },
    "DocumentCreateTaskInfo": {
      "name": "DocumentCreateTaskInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "DocumentCreateTask": {
      "name": "DocumentCreateTask",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "task_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "state",
            "valueType": {
              "type": "id",
              "value": "DocumentCreateTaskState"
            }
          },
          {
            "key": "info",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DocumentCreateTaskInfo"
                }
              }
            }
          }
        ]
      }
    },
    "DocumentIamMemberRoleUpdateAddItems": {
      "name": "DocumentIamMemberRoleUpdateAddItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "DocumentIamMemberRoleUpdateRemoveItems": {
      "name": "DocumentIamMemberRoleUpdateRemoveItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "DocumentIAMMemberRoleUpdate": {
      "name": "DocumentIAMMemberRoleUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of document roles to grant to the member.\n\nRoles in this list are applied to the member AFTER any removals specified in `remove`.\n\nThis may be combined with `remove_all` to replace the member's entire role list.",
            "key": "add",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "DocumentIamMemberRoleUpdateAddItems"
                }
              }
            }
          },
          {
            "description": "A list of document roles to revoke from the member.",
            "key": "remove",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "DocumentIamMemberRoleUpdateRemoveItems"
                }
              }
            }
          },
          {
            "description": "Removes all existing roles from the member. This may be combined with `add` to replace all existing roles that the member holds.",
            "key": "remove_all",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        ]
      }
    },
    "DocumentIamPermissionTestPermissionsItems": {
      "name": "DocumentIamPermissionTestPermissionsItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "add_editor"
          },
          {
            "value": "add_member"
          },
          {
            "value": "add_owner"
          },
          {
            "value": "edit"
          },
          {
            "value": "query"
          },
          {
            "value": "remove_editor"
          },
          {
            "value": "remove_member"
          },
          {
            "value": "remove_owner"
          },
          {
            "value": "view"
          },
          {
            "value": "view_members"
          }
        ]
      }
    },
    "DocumentIAMPermissionTest": {
      "name": "DocumentIAMPermissionTest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of permissions to test on the document.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "DocumentIamPermissionTestPermissionsItems"
              }
            }
          },
          {
            "key": "member",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "DocumentStatusResponse": {
      "name": "DocumentStatusResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "group_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "task_count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "tasks",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "DocumentCreateTask"
              }
            }
          }
        ]
      }
    },
    "EmptyErrorDetails": {
      "name": "EmptyErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "HTTPValidationError": {
      "name": "HTTPValidationError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "detail",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ValidationError"
                }
              }
            }
          }
        ]
      }
    },
    "HydraWebhookTokenHook": {
      "name": "HydraWebhookTokenHook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "session",
            "valueType": {
              "type": "id",
              "value": "HydraWebhookTokenHookSession"
            }
          }
        ]
      }
    },
    "HydraWebhookTokenHookSession": {
      "name": "HydraWebhookTokenHookSession",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "client_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "id_token",
            "valueType": {
              "type": "id",
              "value": "HydraWebhookTokenHookSessionIDTokenClaims"
            }
          }
        ]
      }
    },
    "HydraWebhookTokenHookSessionIdTokenClaimsIdTokenClaims": {
      "name": "HydraWebhookTokenHookSessionIdTokenClaimsIdTokenClaims",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "HydraWebhookTokenHookSessionIDTokenClaims": {
      "name": "HydraWebhookTokenHookSessionIDTokenClaims",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id_token_claims",
            "valueType": {
              "type": "id",
              "value": "HydraWebhookTokenHookSessionIdTokenClaimsIdTokenClaims"
            }
          }
        ]
      }
    },
    "IAMMember": {
      "name": "IAMMember",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The member identifier string, the format of which is '<subject_type>:<subject_id>'",
            "key": "member",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of roles that the member holds on an entity.\n\nSome entities, such as Organizations, may contain members that exist without any roles.",
            "key": "roles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the member.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "If avatar of the member, if it is supported by their subject type.",
            "key": "avatar_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The total number of subjects that the member represents, which may be a value other than `1` if the member is not a User.",
            "key": "total_subjects",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": 1
                }
              }
            }
          }
        ]
      }
    },
    "IAMObjectErrorDetails": {
      "name": "IAMObjectErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "IAMPermissionTest": {
      "name": "IAMPermissionTest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "member",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "InitialComposeSection": {
      "name": "InitialComposeSection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "position",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "ideas",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "InputConversationalGuardrailDefinitionName": {
      "name": "InputConversationalGuardrailDefinitionName",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "prompt_policy"
          },
          {
            "value": "pii_policy"
          }
        ]
      }
    },
    "InputConversationalGuardrailDefinition": {
      "name": "InputConversationalGuardrailDefinition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "InputConversationalGuardrailDefinitionName"
            }
          }
        ]
      }
    },
    "InvalidMemberErrorDetails": {
      "name": "InvalidMemberErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resource",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IAMObjectErrorDetails"
                }
              }
            }
          },
          {
            "key": "subject",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IAMObjectErrorDetails"
                }
              }
            }
          }
        ]
      }
    },
    "InvalidMemberErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "InvalidMemberErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "INVALID_MEMBER"
          }
        ]
      }
    },
    "InvalidMemberErrorResponseInvalidMemberError": {
      "description": "Metadata detailing more information about the error.",
      "name": "InvalidMemberErrorResponseInvalidMemberError",
      "shape": {
        "type": "object",
        "extends": [
          "InvalidMemberErrorDetails"
        ],
        "properties": []
      }
    },
    "InvalidMemberErrorResponse": {
      "name": "InvalidMemberErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "InvalidMemberErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "invalidMemberError",
            "valueType": {
              "type": "id",
              "value": "InvalidMemberErrorResponseInvalidMemberError"
            }
          }
        ]
      }
    },
    "InvalidRoleErrorDetails": {
      "name": "InvalidRoleErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resource",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IAMObjectErrorDetails"
                }
              }
            }
          },
          {
            "key": "role",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "InvalidRoleErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "InvalidRoleErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "INVALID_ROLE"
          }
        ]
      }
    },
    "InvalidRoleErrorResponseInvalidRoleError": {
      "description": "Metadata detailing more information about the error.",
      "name": "InvalidRoleErrorResponseInvalidRoleError",
      "shape": {
        "type": "object",
        "extends": [
          "InvalidRoleErrorDetails"
        ],
        "properties": []
      }
    },
    "InvalidRoleErrorResponse": {
      "name": "InvalidRoleErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "InvalidRoleErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "invalidRoleError",
            "valueType": {
              "type": "id",
              "value": "InvalidRoleErrorResponseInvalidRoleError"
            }
          }
        ]
      }
    },
    "InvalidSubjectTypeErrorDetails": {
      "name": "InvalidSubjectTypeErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "subject",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IAMObjectErrorDetails"
                }
              }
            }
          }
        ]
      }
    },
    "InvalidSubjectTypeErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "InvalidSubjectTypeErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "INVALID_SUBJECT_TYPE"
          }
        ]
      }
    },
    "InvalidSubjectTypeErrorResponseInvalidSubjectTypeError": {
      "description": "Metadata detailing more information about the error.",
      "name": "InvalidSubjectTypeErrorResponseInvalidSubjectTypeError",
      "shape": {
        "type": "object",
        "extends": [
          "InvalidSubjectTypeErrorDetails"
        ],
        "properties": []
      }
    },
    "InvalidSubjectTypeErrorResponse": {
      "name": "InvalidSubjectTypeErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "invalidSubjectTypeError",
            "valueType": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponseInvalidSubjectTypeError"
            }
          }
        ]
      }
    },
    "KratosIdentity": {
      "name": "KratosIdentity",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "traits",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "KratosIdentityTraits"
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "KratosIdentityTraits": {
      "name": "KratosIdentityTraits",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "avatar_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "project_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "org_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "sso_email_verified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "KratosWebhookCtx": {
      "name": "KratosWebhookCtx",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "KratosWebhook": {
      "name": "KratosWebhook",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "identity_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          },
          {
            "key": "bio",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "flow_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "flow_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "identity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "KratosIdentity"
                }
              }
            }
          },
          {
            "key": "ctx",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "KratosWebhookCtx"
                }
              }
            }
          }
        ]
      }
    },
    "KratosWebhookDetailedMessageType": {
      "name": "KratosWebhookDetailedMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "info"
          },
          {
            "value": "error"
          },
          {
            "value": "success"
          },
          {
            "value": "validation"
          }
        ]
      }
    },
    "KratosWebhookDetailedMessage": {
      "description": "Sourced from detailedMessage in:\nhttps://github.com/ory/kratos/blob/master/selfservice/hook/web_hook.go",
      "name": "KratosWebhookDetailedMessage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "KratosWebhookDetailedMessageType"
            }
          }
        ]
      }
    },
    "KratosWebhookErrorMessage": {
      "description": "Sourced from errorMessage in:\nhttps://github.com/ory/kratos/blob/master/selfservice/hook/web_hook.go",
      "name": "KratosWebhookErrorMessage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "instance_ptr",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "KratosWebhookDetailedMessage"
                }
              }
            }
          }
        ]
      }
    },
    "KratosWebhookResponseIdentity0": {
      "name": "KratosWebhookResponseIdentity0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "KratosWebhookResponseIdentity": {
      "name": "KratosWebhookResponseIdentity",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "KratosWebhookResponseIdentity0",
            "type": {
              "type": "id",
              "value": "KratosWebhookResponseIdentity0"
            }
          },
          {
            "typeName": "KratosIdentity",
            "type": {
              "type": "id",
              "value": "KratosIdentity"
            }
          }
        ]
      }
    },
    "KratosWebhookResponse": {
      "description": "Sourced from rawHookResponse in:\nhttps://github.com/ory/kratos/blob/master/selfservice/hook/web_hook.go",
      "name": "KratosWebhookResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "messages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "KratosWebhookErrorMessage"
                  }
                }
              }
            }
          },
          {
            "key": "identity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "KratosWebhookResponseIdentity"
                }
              }
            }
          }
        ]
      }
    },
    "MalformedResourceIdentifierErrorDetails": {
      "name": "MalformedResourceIdentifierErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "field",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "expected_format",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "MalformedResourceIdentifierErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "MalformedResourceIdentifierErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "MALFORMED_RESOURCE_IDENTIFIER"
          }
        ]
      }
    },
    "MalformedResourceIdentifierErrorResponseMalformedResourceIdentifierError": {
      "description": "Metadata detailing more information about the error.",
      "name": "MalformedResourceIdentifierErrorResponseMalformedResourceIdentifierError",
      "shape": {
        "type": "object",
        "extends": [
          "MalformedResourceIdentifierErrorDetails"
        ],
        "properties": []
      }
    },
    "MalformedResourceIdentifierErrorResponse": {
      "name": "MalformedResourceIdentifierErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "malformedResourceIdentifierError",
            "valueType": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponseMalformedResourceIdentifierError"
            }
          }
        ]
      }
    },
    "MissingAuthenticationErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "MissingAuthenticationErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "MISSING_AUTHENTICATION"
          }
        ]
      }
    },
    "MissingAuthenticationErrorResponseMissingAuthenticationError": {
      "description": "Metadata detailing more information about the error.",
      "name": "MissingAuthenticationErrorResponseMissingAuthenticationError",
      "shape": {
        "type": "object",
        "extends": [
          "EmptyErrorDetails"
        ],
        "properties": []
      }
    },
    "MissingAuthenticationErrorResponse": {
      "name": "MissingAuthenticationErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "missingAuthenticationError",
            "valueType": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponseMissingAuthenticationError"
            }
          }
        ]
      }
    },
    "MultipleRolesNotAllowedErrorDetails": {
      "name": "MultipleRolesNotAllowedErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "resource",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IAMObjectErrorDetails"
                }
              }
            }
          },
          {
            "key": "roles",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "MultipleRolesNotAllowedErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "MultipleRolesNotAllowedErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "MULTIPLE_ROLES_NOT_ALLOWED"
          }
        ]
      }
    },
    "MultipleRolesNotAllowedErrorResponseMultipleRolesNotAllowedError": {
      "description": "Metadata detailing more information about the error.",
      "name": "MultipleRolesNotAllowedErrorResponseMultipleRolesNotAllowedError",
      "shape": {
        "type": "object",
        "extends": [
          "MultipleRolesNotAllowedErrorDetails"
        ],
        "properties": []
      }
    },
    "MultipleRolesNotAllowedErrorResponse": {
      "name": "MultipleRolesNotAllowedErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "multipleRolesNotAllowedError",
            "valueType": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponseMultipleRolesNotAllowedError"
            }
          }
        ]
      }
    },
    "OAuthClientCreateProfile": {
      "name": "OAuthClientCreateProfile",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "rightbrain_docs"
          },
          {
            "value": "rightbrain_tasks"
          },
          {
            "value": "user_defined"
          },
          {
            "value": "zendesk"
          }
        ]
      }
    },
    "OAuthClientCreate": {
      "name": "OAuthClientCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 255
                }
              }
            }
          },
          {
            "key": "profile",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "OAuthClientCreateProfile"
              }
            }
          },
          {
            "key": "redirect_uris",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "OAuthClientCreateResponse": {
      "name": "OAuthClientCreateResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "redirect_uris",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "client_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "client_secret",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "scope",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": ""
                }
              }
            }
          }
        ]
      }
    },
    "OAuthClientProfile": {
      "name": "OAuthClientProfile",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "rightbrain_docs"
          },
          {
            "value": "rightbrain_tasks"
          },
          {
            "value": "user_defined"
          },
          {
            "value": "zendesk"
          }
        ]
      }
    },
    "Object": {
      "name": "Object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "synced",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "mimeType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": "text/plain"
                  }
                }
              }
            }
          },
          {
            "key": "createdTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "modifiedTime",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ObjectType"
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ObjectTags"
                }
              }
            }
          }
        ]
      }
    },
    "ObjectList": {
      "name": "ObjectList",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Object"
          }
        }
      }
    },
    "ObjectTags": {
      "name": "ObjectTags",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "no_size"
          },
          {
            "value": "site"
          }
        ]
      }
    },
    "ObjectType": {
      "name": "ObjectType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "file"
          },
          {
            "value": "dir"
          }
        ]
      }
    },
    "Org": {
      "name": "Org",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "contact_email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "email"
              }
            }
          },
          {
            "key": "avatar_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    },
    "OrgCreate": {
      "name": "OrgCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "contact_email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "email"
              }
            }
          }
        ]
      }
    },
    "OrgInviteBase": {
      "name": "OrgInviteBase",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "email_address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "email"
              }
            }
          },
          {
            "key": "roles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "OrgInviteShow": {
      "name": "OrgInviteShow",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "all"
          },
          {
            "value": "pending"
          },
          {
            "value": "accepted"
          }
        ]
      }
    },
    "OrgMembership": {
      "name": "OrgMembership",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "joinable"
          },
          {
            "value": "joinable_by_domain"
          },
          {
            "value": "joinable_by_invite"
          }
        ]
      }
    },
    "OrgUpdate": {
      "name": "OrgUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "contact_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "OrganizationDomainStatus": {
      "name": "OrganizationDomainStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "unverified"
          },
          {
            "value": "verified"
          }
        ]
      }
    },
    "OrganizationDomain": {
      "name": "OrganizationDomain",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "domain",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "OrganizationDomainStatus"
            }
          }
        ]
      }
    },
    "OrganizationDomainCreate": {
      "name": "OrganizationDomainCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "domain",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OrganizationIamMemberRoleUpdateAddItems": {
      "name": "OrganizationIamMemberRoleUpdateAddItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "OrganizationIamMemberRoleUpdateRemoveItems": {
      "name": "OrganizationIamMemberRoleUpdateRemoveItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "OrganizationIAMMemberRoleUpdate": {
      "name": "OrganizationIAMMemberRoleUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of organization roles to grant to the member.\n\nRoles in this list are applied to the member AFTER any removals specified in `remove`.\n\nThis may be combined with `remove_all` to replace the member's entire role list.",
            "key": "add",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "OrganizationIamMemberRoleUpdateAddItems"
                }
              }
            }
          },
          {
            "description": "A list of organization roles to revoke from the member.",
            "key": "remove",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "OrganizationIamMemberRoleUpdateRemoveItems"
                }
              }
            }
          },
          {
            "description": "Removes all existing roles from the member. This may be combined with `add` to replace all existing roles that the member holds.",
            "key": "remove_all",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        ]
      }
    },
    "OrganizationIamPermissionTestPermissionsItems": {
      "name": "OrganizationIamPermissionTestPermissionsItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "add_editor"
          },
          {
            "value": "add_member"
          },
          {
            "value": "add_owner"
          },
          {
            "value": "create_project"
          },
          {
            "value": "edit"
          },
          {
            "value": "remove_editor"
          },
          {
            "value": "remove_member"
          },
          {
            "value": "remove_owner"
          },
          {
            "value": "view"
          },
          {
            "value": "view_members"
          }
        ]
      }
    },
    "OrganizationIAMPermissionTest": {
      "name": "OrganizationIAMPermissionTest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of permissions to test on the organization.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "OrganizationIamPermissionTestPermissionsItems"
              }
            }
          },
          {
            "key": "member",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "OrganizationInvite": {
      "name": "OrganizationInvite",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "email_address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "email"
              }
            }
          },
          {
            "key": "roles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    },
    "OrganizationInviteAlreadyExistsErrorDetails": {
      "name": "OrganizationInviteAlreadyExistsErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "organization_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "email_address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OrganizationInviteAlreadyExistsErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "OrganizationInviteAlreadyExistsErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ORGANIZATION_INVITE_ALREADY_EXISTS"
          }
        ]
      }
    },
    "OrganizationInviteAlreadyExistsErrorResponseOrganizationInviteAlreadyExistsError": {
      "description": "Metadata detailing more information about the error.",
      "name": "OrganizationInviteAlreadyExistsErrorResponseOrganizationInviteAlreadyExistsError",
      "shape": {
        "type": "object",
        "extends": [
          "OrganizationInviteAlreadyExistsErrorDetails"
        ],
        "properties": []
      }
    },
    "OrganizationInviteAlreadyExistsErrorResponse": {
      "name": "OrganizationInviteAlreadyExistsErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "OrganizationInviteAlreadyExistsErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "organizationInviteAlreadyExistsError",
            "valueType": {
              "type": "id",
              "value": "OrganizationInviteAlreadyExistsErrorResponseOrganizationInviteAlreadyExistsError"
            }
          }
        ]
      }
    },
    "OrganizationMemberAlreadyExistsErrorDetails": {
      "name": "OrganizationMemberAlreadyExistsErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "organization_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "member_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OrganizationMemberAlreadyExistsErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "OrganizationMemberAlreadyExistsErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ORGANIZATION_MEMBER_ALREADY_EXISTS"
          }
        ]
      }
    },
    "OrganizationMemberAlreadyExistsErrorResponseOrganizationMemberAlreadyExistsError": {
      "description": "Metadata detailing more information about the error.",
      "name": "OrganizationMemberAlreadyExistsErrorResponseOrganizationMemberAlreadyExistsError",
      "shape": {
        "type": "object",
        "extends": [
          "OrganizationMemberAlreadyExistsErrorDetails"
        ],
        "properties": []
      }
    },
    "OrganizationMemberAlreadyExistsErrorResponse": {
      "name": "OrganizationMemberAlreadyExistsErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "OrganizationMemberAlreadyExistsErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "organizationMemberAlreadyExistsError",
            "valueType": {
              "type": "id",
              "value": "OrganizationMemberAlreadyExistsErrorResponseOrganizationMemberAlreadyExistsError"
            }
          }
        ]
      }
    },
    "OutputConversationalGuardrailDefinitionName": {
      "name": "OutputConversationalGuardrailDefinitionName",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "source_validation"
          }
        ]
      }
    },
    "OutputConversationalGuardrailDefinition": {
      "name": "OutputConversationalGuardrailDefinition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "id",
              "value": "OutputConversationalGuardrailDefinitionName"
            }
          }
        ]
      }
    },
    "PaginatedResultSet_ChatDocumentEmbeddingRecord_": {
      "name": "PaginatedResultSet_ChatDocumentEmbeddingRecord_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ChatDocumentEmbeddingRecord"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_ChatDocument_": {
      "name": "PaginatedResultSet_ChatDocument_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ChatDocument"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_Chat_": {
      "name": "PaginatedResultSet_Chat_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Chat"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_Collection_": {
      "name": "PaginatedResultSet_Collection_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Collection"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_DatasourceSyncRun_": {
      "name": "PaginatedResultSet_DatasourceSyncRun_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_IAMMember_": {
      "name": "PaginatedResultSet_IAMMember_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "IAMMember"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_OrganizationDomain_": {
      "name": "PaginatedResultSet_OrganizationDomain_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "OrganizationDomain"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_OrganizationInvite_": {
      "name": "PaginatedResultSet_OrganizationInvite_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "OrganizationInvite"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_Project_": {
      "name": "PaginatedResultSet_Project_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Project"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_TaskForwarder_": {
      "name": "PaginatedResultSet_TaskForwarder_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "TaskForwarder"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_TaskRun_": {
      "name": "PaginatedResultSet_TaskRun_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "TaskRun"
              }
            }
          }
        ]
      }
    },
    "PaginatedResultSet_Task_": {
      "name": "PaginatedResultSet_Task_",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Contains pagination information for the result set.",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PaginationDetails"
                }
              }
            }
          },
          {
            "description": "The list of items returned for the current page.",
            "key": "results",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Task"
              }
            }
          }
        ]
      }
    },
    "PaginationDetails": {
      "name": "PaginationDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A token used to retrieve the next page of results. If `null`, there are no more results.",
            "key": "next_cursor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether there are more results available in the next page.",
            "key": "has_next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          {
            "description": "The maximum number of items returned per page.",
            "key": "page_limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 0
                  }
                }
              }
            }
          }
        ]
      }
    },
    "PermissionCheckFailedErrorDetails": {
      "name": "PermissionCheckFailedErrorDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "subject",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IAMObjectErrorDetails"
                }
              }
            }
          },
          {
            "key": "resource",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IAMObjectErrorDetails"
                }
              }
            }
          },
          {
            "key": "permission",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "PermissionCheckFailedErrorResponseReason": {
      "description": "The machine-readable error reason.",
      "name": "PermissionCheckFailedErrorResponseReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PERMISSION_CHECK_FAILED"
          }
        ]
      }
    },
    "PermissionCheckFailedErrorResponsePermissionCheckFailedError": {
      "description": "Metadata detailing more information about the error.",
      "name": "PermissionCheckFailedErrorResponsePermissionCheckFailedError",
      "shape": {
        "type": "object",
        "extends": [
          "PermissionCheckFailedErrorDetails"
        ],
        "properties": []
      }
    },
    "PermissionCheckFailedErrorResponse": {
      "name": "PermissionCheckFailedErrorResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable representation of the error",
            "key": "message",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The machine-readable error reason.",
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponseReason"
            }
          },
          {
            "description": "Metadata detailing more information about the error.",
            "key": "permissionCheckFailedError",
            "valueType": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponsePermissionCheckFailedError"
            }
          }
        ]
      }
    },
    "Project": {
      "name": "Project",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "avatar_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "org_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "tasks_oauth_client_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ProjectConfigInputLlm": {
      "name": "ProjectConfigInputLlm",
      "shape": {
        "type": "enum",
        "default": "gpt-3.5-turbo",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "ProjectConfig-Input": {
      "name": "ProjectConfig-Input",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "llm",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ProjectConfigInputLlm"
              }
            }
          },
          {
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.5
                }
              }
            }
          },
          {
            "key": "knn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": 4
                }
              }
            }
          },
          {
            "key": "chat_system_commands",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "chat_guardrails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ConversationalGuardrails"
                }
              }
            }
          },
          {
            "description": "Enable query expansion. Uses an LLM to generate multiple rephrasing of the original query for better broad spectrum vector retrieval",
            "key": "query_expansion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "ProjectConfigOutputLlm": {
      "name": "ProjectConfigOutputLlm",
      "shape": {
        "type": "enum",
        "default": "gpt-3.5-turbo",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "ProjectConfig-Output": {
      "name": "ProjectConfig-Output",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "llm",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ProjectConfigOutputLlm"
              }
            }
          },
          {
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.5
                }
              }
            }
          },
          {
            "key": "knn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "default": 4
                }
              }
            }
          },
          {
            "key": "chat_system_commands",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "key": "chat_guardrails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ConversationalGuardrails"
                }
              }
            }
          },
          {
            "description": "Enable query expansion. Uses an LLM to generate multiple rephrasing of the original query for better broad spectrum vector retrieval",
            "key": "query_expansion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "ProjectCreate": {
      "name": "ProjectCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ProjectIamMemberRoleUpdateAddItems": {
      "name": "ProjectIamMemberRoleUpdateAddItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "data_creator"
          },
          {
            "value": "data_editor"
          },
          {
            "value": "data_viewer"
          },
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "task_creator"
          },
          {
            "value": "task_runner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "ProjectIamMemberRoleUpdateRemoveItems": {
      "name": "ProjectIamMemberRoleUpdateRemoveItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "data_creator"
          },
          {
            "value": "data_editor"
          },
          {
            "value": "data_viewer"
          },
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "task_creator"
          },
          {
            "value": "task_runner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "ProjectIAMMemberRoleUpdate": {
      "name": "ProjectIAMMemberRoleUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of project roles to grant to the member.\n\nRoles in this list are applied to the member AFTER any removals specified in `remove`.\n\nThis may be combined with `remove_all` to replace the member's entire role list.",
            "key": "add",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ProjectIamMemberRoleUpdateAddItems"
                }
              }
            }
          },
          {
            "description": "A list of project roles to revoke from the member.",
            "key": "remove",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ProjectIamMemberRoleUpdateRemoveItems"
                }
              }
            }
          },
          {
            "description": "Removes all existing roles from the member. This may be combined with `add` to replace all existing roles that the member holds.",
            "key": "remove_all",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ProjectIamPermissionTestPermissionsItems": {
      "name": "ProjectIamPermissionTestPermissionsItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "add_editor"
          },
          {
            "value": "add_member"
          },
          {
            "value": "add_owner"
          },
          {
            "value": "collections_edit"
          },
          {
            "value": "collections_view"
          },
          {
            "value": "create_chat"
          },
          {
            "value": "create_collection"
          },
          {
            "value": "create_compose"
          },
          {
            "value": "create_datasource_connection"
          },
          {
            "value": "create_document"
          },
          {
            "value": "create_task"
          },
          {
            "value": "datasource_connections_edit"
          },
          {
            "value": "datasource_connections_view"
          },
          {
            "value": "documents_edit"
          },
          {
            "value": "documents_view"
          },
          {
            "value": "edit"
          },
          {
            "value": "edit_data"
          },
          {
            "value": "list_documents"
          },
          {
            "value": "query_data"
          },
          {
            "value": "remove_editor"
          },
          {
            "value": "remove_member"
          },
          {
            "value": "remove_owner"
          },
          {
            "value": "run_task"
          },
          {
            "value": "view"
          },
          {
            "value": "view_data"
          },
          {
            "value": "view_members"
          }
        ]
      }
    },
    "ProjectIAMPermissionTest": {
      "name": "ProjectIAMPermissionTest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of permissions to test on the project.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ProjectIamPermissionTestPermissionsItems"
              }
            }
          },
          {
            "key": "member",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ProjectUpdate": {
      "name": "ProjectUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ProjectWithDatasources": {
      "name": "ProjectWithDatasources",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "avatar_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "org_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "tasks_oauth_client_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "key": "datasource_connections",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "DatasourceConnectionPublic"
                }
              }
            }
          }
        ]
      }
    },
    "SiteScrapeRequest": {
      "name": "SiteScrapeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "urls",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri",
                  "minLength": 1
                }
              }
            }
          },
          {
            "key": "max_crawl_depth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "maximum": 7,
                  "default": 3
                }
              }
            }
          }
        ]
      }
    },
    "SourceRowSource": {
      "name": "SourceRowSource",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "upload"
          },
          {
            "value": "gdrive"
          },
          {
            "value": "onedrive"
          },
          {
            "value": "web_scrape"
          },
          {
            "value": "notion"
          },
          {
            "value": "confluence"
          },
          {
            "value": "box"
          },
          {
            "value": "dropbox"
          },
          {
            "value": "sharepoint"
          }
        ]
      }
    },
    "SourceRow": {
      "name": "SourceRow",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "id",
              "value": "SourceRowSource"
            }
          },
          {
            "key": "count",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "Task": {
      "name": "Task",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A name or reference for the Task.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A longer description of the Task for internal reference.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "When `true` the Task is active and callable. `false` denotes the Task is not yet operational.",
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "The unique identifier of the Task.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "The Project that the Task belongs to.",
            "key": "project_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "When the Task was created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "When the Task was last updated.",
            "key": "modified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "Each update to a Task results in a new Revision being created. Task Revisions are a powerful concept that can be used to assist with A/B testing, comparing responses from different LLM's, etc.",
            "key": "revisions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "TaskRevision"
              }
            }
          }
        ]
      }
    },
    "TaskCreateLlmModel": {
      "description": "The LLM model to use for the Task.",
      "name": "TaskCreateLlmModel",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "TaskCreateLlmConfig": {
      "description": "Specific configuration parameters for the LLM model.",
      "name": "TaskCreateLlmConfig",
      "shape": {
        "type": "object",
        "extends": [
          "TaskLLMConfig"
        ],
        "properties": []
      }
    },
    "TaskCreateOutputFormat": {
      "name": "TaskCreateOutputFormat",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "str"
          },
          {
            "value": "string"
          },
          {
            "value": "boolean"
          },
          {
            "value": "bool"
          },
          {
            "value": "int"
          },
          {
            "value": "integer"
          },
          {
            "value": "list"
          }
        ]
      }
    },
    "TaskCreate": {
      "name": "TaskCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The LLM model to use for the Task.",
            "key": "llm_model",
            "valueType": {
              "type": "id",
              "value": "TaskCreateLlmModel"
            }
          },
          {
            "description": "Specific configuration parameters for the LLM model.",
            "key": "llm_config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TaskCreateLlmConfig"
              }
            }
          },
          {
            "description": "This gives control over the structure of how the Task responds. Supports shorthand notation or an object with `type` can be specified for each attribute. In most instances, the LLM will be able to generate the desired output into the relevant property, but an optional `description` can be passed to provide it with additional context.",
            "key": "output_format",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "TaskCreateOutputFormat"
              }
            }
          },
          {
            "description": "The unique identifier for a valid Task Forwarder. It is used to forward the Task output to another system or service.",
            "key": "task_forwarder_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "**Note: This is a Paid Tier feature.** Provide additional domain specific input to the LLM so that it is able to reference user specific information when executing the Task. Examples of this could be a product catalogue, terms and conditions or a user manual.",
            "key": "rag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskRAG"
                }
              }
            }
          },
          {
            "description": "When `true` it requires an image to be sent in the Task Run request.",
            "key": "image_required",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "A name or reference for the Task.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A longer description of the Task for internal reference.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "When `true` the Task is active and callable. `false` denotes the Task is not yet operational.",
            "key": "enabled",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "TaskForwarder": {
      "name": "TaskForwarder",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A descriptive name for the Task Forwarder.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional details about the Task Forwarder's purpose or configuration.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Configuration parameters for the Task Forwarder such as a `destination` URL.",
            "key": "config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskForwarderConfig"
                }
              }
            }
          },
          {
            "description": "Sensitive parameters for the Task Forwarder such as a `signing_key`.",
            "key": "config_sensitive",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskForwarderSensitiveConfig"
                }
              }
            }
          },
          {
            "description": "The unique identifier of the Task Forwarder.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "The Project that the Task Forwarder belongs to.",
            "key": "project_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "When the Task Forwarder was created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "When the Task Forwarder was last updated.",
            "key": "modified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      }
    },
    "TaskForwarderConfig": {
      "name": "TaskForwarderConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The URL where Task Run result will be forwarded. Must be a valid HTTPS URL.",
            "key": "destination_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "TaskForwarderCreate": {
      "name": "TaskForwarderCreate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A descriptive name for the Task Forwarder.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional details about the Task Forwarder's purpose or configuration.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Configuration parameters for the Task Forwarder such as a `destination` URL.",
            "key": "config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskForwarderConfig"
                }
              }
            }
          },
          {
            "description": "Sensitive parameters for the Task Forwarder such as a `signing_key`.",
            "key": "config_sensitive",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskForwarderSensitiveConfig"
                }
              }
            }
          }
        ]
      }
    },
    "TaskForwarderSensitiveConfig": {
      "name": "TaskForwarderSensitiveConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A secret key used to sign the forwarded data for verification purposes.",
            "key": "signing_key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "TaskForwarderUpdate": {
      "name": "TaskForwarderUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A descriptive name for the Task Forwarder.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Additional details about the Task Forwarder's purpose or configuration.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Configuration parameters for the Task Forwarder such as a `destination` URL.",
            "key": "config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskForwarderConfig"
                }
              }
            }
          },
          {
            "description": "Sensitive parameters for the Task Forwarder such as a `signing_key`.",
            "key": "config_sensitive",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskForwarderSensitiveConfig"
                }
              }
            }
          }
        ]
      }
    },
    "TaskIamMemberRoleUpdateAddItems": {
      "name": "TaskIamMemberRoleUpdateAddItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "TaskIamMemberRoleUpdateRemoveItems": {
      "name": "TaskIamMemberRoleUpdateRemoveItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "editor"
          },
          {
            "value": "owner"
          },
          {
            "value": "viewer"
          }
        ]
      }
    },
    "TaskIAMMemberRoleUpdate": {
      "name": "TaskIAMMemberRoleUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of task roles to grant to the member.\n\nRoles in this list are applied to the member AFTER any removals specified in `remove`.\n\nThis may be combined with `remove_all` to replace the member's entire role list.",
            "key": "add",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "TaskIamMemberRoleUpdateAddItems"
                }
              }
            }
          },
          {
            "description": "A list of task roles to revoke from the member.",
            "key": "remove",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "TaskIamMemberRoleUpdateRemoveItems"
                }
              }
            }
          },
          {
            "description": "Removes all existing roles from the member. This may be combined with `add` to replace all existing roles that the member holds.",
            "key": "remove_all",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TaskIamPermissionTestPermissionsItems": {
      "name": "TaskIamPermissionTestPermissionsItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "add_editor"
          },
          {
            "value": "add_member"
          },
          {
            "value": "add_owner"
          },
          {
            "value": "edit"
          },
          {
            "value": "remove_editor"
          },
          {
            "value": "remove_member"
          },
          {
            "value": "remove_owner"
          },
          {
            "value": "run_task"
          },
          {
            "value": "view"
          },
          {
            "value": "view_members"
          }
        ]
      }
    },
    "TaskIAMPermissionTest": {
      "name": "TaskIAMPermissionTest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of permissions to test on the task.",
            "key": "permissions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "TaskIamPermissionTestPermissionsItems"
              }
            }
          },
          {
            "key": "member",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TaskLLMConfig": {
      "name": "TaskLLMConfig",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Controls randomness in the output. Lower values make the output more focused and deterministic, while higher values make it more creative and diverse.",
            "key": "temperature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 1,
                  "default": 0.2
                }
              }
            }
          }
        ]
      }
    },
    "TaskRAG": {
      "name": "TaskRAG",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "collection_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "key": "rag_param",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "TaskRevisionLlmModel": {
      "description": "The LLM model to use for the Task.",
      "name": "TaskRevisionLlmModel",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "TaskRevisionLlmConfig": {
      "description": "Specific configuration parameters for the LLM model.",
      "name": "TaskRevisionLlmConfig",
      "shape": {
        "type": "object",
        "extends": [
          "TaskLLMConfig"
        ],
        "properties": []
      }
    },
    "TaskRevisionOutputFormat": {
      "name": "TaskRevisionOutputFormat",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "str"
          },
          {
            "value": "string"
          },
          {
            "value": "boolean"
          },
          {
            "value": "bool"
          },
          {
            "value": "int"
          },
          {
            "value": "integer"
          },
          {
            "value": "list"
          }
        ]
      }
    },
    "TaskRevision": {
      "name": "TaskRevision",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The LLM model to use for the Task.",
            "key": "llm_model",
            "valueType": {
              "type": "id",
              "value": "TaskRevisionLlmModel"
            }
          },
          {
            "description": "Specific configuration parameters for the LLM model.",
            "key": "llm_config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TaskRevisionLlmConfig"
              }
            }
          },
          {
            "description": "This gives control over the structure of how the Task responds. Supports shorthand notation or an object with `type` can be specified for each attribute. In most instances, the LLM will be able to generate the desired output into the relevant property, but an optional `description` can be passed to provide it with additional context.",
            "key": "output_format",
            "valueType": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "id",
                "value": "TaskRevisionOutputFormat"
              }
            }
          },
          {
            "description": "The unique identifier for a valid Task Forwarder. It is used to forward the Task output to another system or service.",
            "key": "task_forwarder_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "**Note: This is a Paid Tier feature.** Provide additional domain specific input to the LLM so that it is able to reference user specific information when executing the Task. Examples of this could be a product catalogue, terms and conditions or a user manual.",
            "key": "rag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskRAG"
                }
              }
            }
          },
          {
            "description": "When `true` it requires an image to be sent in the Task Run request.",
            "key": "image_required",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "The unique identifier of the Revision.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "When the Task was created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "When the Task was last updated.",
            "key": "modified",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          {
            "description": "When `true` the Revision is the currently active version and will be activated when the Task Run is executed.",
            "key": "active",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "TaskRunResponse": {
      "description": "The structured response from the Task execution.",
      "name": "TaskRunResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "TaskRunRunData": {
      "description": "Additional data about the Task run, including audit information and submitted input.",
      "name": "TaskRunRunData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "TaskRun": {
      "name": "TaskRun",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier of the Task Revision associated with this run.",
            "key": "task_revision_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "The structured response from the Task execution.",
            "key": "response",
            "valueType": {
              "type": "id",
              "value": "TaskRunResponse"
            }
          },
          {
            "description": "Additional data about the Task run, including audit information and submitted input.",
            "key": "run_data",
            "valueType": {
              "type": "id",
              "value": "TaskRunRunData"
            }
          },
          {
            "description": "The unique identifier of the Task Run.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "The timestamp when the Task Run was created.",
            "key": "created",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      }
    },
    "TaskUpdateLlmModel": {
      "description": "The LLM model to use for the Task.",
      "name": "TaskUpdateLlmModel",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "gpt-4o"
          },
          {
            "value": "gpt-3.5-turbo"
          },
          {
            "value": "gpt-4"
          },
          {
            "value": "gpt-4-turbo"
          },
          {
            "value": "gpt-4-turbo-preview"
          },
          {
            "value": "gpt-4-1106-preview"
          },
          {
            "value": "claude-3-5-sonnet-20240620"
          },
          {
            "value": "claude-3-haiku-20240307"
          },
          {
            "value": "claude-3-sonnet-20240229"
          },
          {
            "value": "claude-3-opus-20240229"
          },
          {
            "value": "gemini-1.5-pro-latest"
          },
          {
            "value": "gemini-pro"
          }
        ]
      }
    },
    "TaskUpdateOutputFormat": {
      "name": "TaskUpdateOutputFormat",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "str"
          },
          {
            "value": "string"
          },
          {
            "value": "boolean"
          },
          {
            "value": "bool"
          },
          {
            "value": "int"
          },
          {
            "value": "integer"
          },
          {
            "value": "list"
          }
        ]
      }
    },
    "TaskUpdate": {
      "name": "TaskUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The LLM model to use for the Task.",
            "key": "llm_model",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskUpdateLlmModel"
                }
              }
            }
          },
          {
            "description": "Specific configuration parameters for the LLM model.",
            "key": "llm_config",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskLLMConfig"
                }
              }
            }
          },
          {
            "description": "This gives control over the structure of how the Task responds. Supports shorthand notation or an object with `type` can be specified for each attribute. In most instances, the LLM will be able to generate the desired output into the relevant property, but an optional `description` can be passed to provide it with additional context.",
            "key": "output_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "map",
                  "keyType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  },
                  "valueType": {
                    "type": "id",
                    "value": "TaskUpdateOutputFormat"
                  }
                }
              }
            }
          },
          {
            "description": "The unique identifier for a valid Task Forwarder. It is used to forward the Task output to another system or service.",
            "key": "task_forwarder_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "**Note: This is a Paid Tier feature.** Provide additional domain specific input to the LLM so that it is able to reference user specific information when executing the Task. Examples of this could be a product catalogue, terms and conditions or a user manual.",
            "key": "rag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaskRAG"
                }
              }
            }
          },
          {
            "description": "When `true` it requires an image to be sent in the Task Run request.",
            "key": "image_required",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "A name or reference for the Task.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A longer description of the Task for internal reference.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "When `true` the Task is active and callable. `false` denotes the Task is not yet operational.",
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "User": {
      "name": "User",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "email"
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "bio",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "avatar_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    },
    "UserProfileUpdate": {
      "name": "UserProfileUpdate",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "bio",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ValidationErrorLocItems0": {
      "name": "ValidationErrorLocItems0",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "ValidationErrorLocItems1": {
      "name": "ValidationErrorLocItems1",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "ValidationErrorLocItems": {
      "name": "ValidationErrorLocItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ValidationErrorLocItems0",
            "type": {
              "type": "id",
              "value": "ValidationErrorLocItems0"
            }
          },
          {
            "typeName": "ValidationErrorLocItems1",
            "type": {
              "type": "id",
              "value": "ValidationErrorLocItems1"
            }
          }
        ]
      }
    },
    "ValidationError": {
      "name": "ValidationError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "loc",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ValidationErrorLocItems"
              }
            }
          },
          {
            "key": "msg",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "OrgOrgIdIamMembersGetParametersSchema": {
      "name": "OrgOrgIdIamMembersGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "organization"
          },
          {
            "value": "project"
          }
        ]
      }
    },
    "org_organization_iam_list_members_Response_403": {
      "name": "org_organization_iam_list_members_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_organization_get_member_Response_403": {
      "name": "org_organization_get_member_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_organization_iam_update_member_roles_Response_400": {
      "name": "org_organization_iam_update_member_roles_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MultipleRolesNotAllowedErrorResponse",
            "type": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          }
        ]
      }
    },
    "org_organization_iam_update_member_roles_Response_403": {
      "name": "org_organization_iam_update_member_roles_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_organization_iam_test_permissions_Response_400": {
      "name": "org_organization_iam_test_permissions_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          }
        ]
      }
    },
    "org_organization_iam_test_permissions_Response_403": {
      "name": "org_organization_iam_test_permissions_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgGetParametersSchema": {
      "name": "OrgGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "joinable"
          },
          {
            "value": "joinable_by_domain"
          },
          {
            "value": "joinable_by_invite"
          }
        ]
      }
    },
    "org_getOrgOrgIdGet_Response_403": {
      "name": "org_getOrgOrgIdGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_updateOrgOrgIdPost_Response_403": {
      "name": "org_updateOrgOrgIdPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_joinOrgOrgIdJoinPost_Response_403": {
      "name": "org_joinOrgOrgIdJoinPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgOrgIdInviteGetParametersSchema": {
      "name": "OrgOrgIdInviteGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "all"
          },
          {
            "value": "pending"
          },
          {
            "value": "accepted"
          }
        ]
      }
    },
    "org_invitesListOrgOrgIdInviteGet_Response_403": {
      "name": "org_invitesListOrgOrgIdInviteGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_invitesCreateOrgOrgIdInvitePost_Response_400": {
      "name": "org_invitesCreateOrgOrgIdInvitePost_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "OrganizationInviteAlreadyExistsErrorResponse",
            "type": {
              "type": "id",
              "value": "OrganizationInviteAlreadyExistsErrorResponse"
            }
          },
          {
            "typeName": "OrganizationMemberAlreadyExistsErrorResponse",
            "type": {
              "type": "id",
              "value": "OrganizationMemberAlreadyExistsErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          }
        ]
      }
    },
    "org_invitesCreateOrgOrgIdInvitePost_Response_403": {
      "name": "org_invitesCreateOrgOrgIdInvitePost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_invitesDeleteOrgOrgIdInviteOrgInviteIdDelete_Response_403": {
      "name": "org_invitesDeleteOrgOrgIdInviteOrgInviteIdDelete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_domainsListOrgOrgIdDomainsGet_Response_403": {
      "name": "org_domainsListOrgOrgIdDomainsGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_domainsPostOrgOrgIdDomainsPost_Response_403": {
      "name": "org_domainsPostOrgOrgIdDomainsPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_domainDeleteOrgOrgIdDomainsDomainIdDelete_Response_403": {
      "name": "org_domainDeleteOrgOrgIdDomainsDomainIdDelete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "org_updateAvatarOrgOrgIdAvatarPost_Response_403": {
      "name": "org_updateAvatarOrgOrgIdAvatarPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_list_project_org__org_id__project_get_Response_403": {
      "name": "project_list_project_org__org_id__project_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_create_project_org__org_id__project_post_Response_403": {
      "name": "project_create_project_org__org_id__project_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_get_project_org__org_id__project__project_id__get_Response_403": {
      "name": "project_get_project_org__org_id__project__project_id__get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_update_project_org__org_id__project__project_id__post_Response_403": {
      "name": "project_update_project_org__org_id__project__project_id__post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_set_project_config_org__org_id__project__project_id__config_post_Response_403": {
      "name": "project_set_project_config_org__org_id__project__project_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_updateAvatarOrgOrgIdProjectProjectIdAvatarPost_Response_403": {
      "name": "project_updateAvatarOrgOrgIdProjectProjectIdAvatarPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgOrgIdProjectProjectIdIamMembersGetParametersSchema": {
      "name": "OrgOrgIdProjectProjectIdIamMembersGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "organization"
          },
          {
            "value": "project"
          }
        ]
      }
    },
    "project_iamListMembers_Response_403": {
      "name": "project_iamListMembers_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_getMember_Response_403": {
      "name": "project_getMember_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_iamUpdateMemberRoles_Response_400": {
      "name": "project_iamUpdateMemberRoles_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MultipleRolesNotAllowedErrorResponse",
            "type": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          }
        ]
      }
    },
    "project_iamUpdateMemberRoles_Response_403": {
      "name": "project_iamUpdateMemberRoles_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "project_iamTestPermissions_Response_400": {
      "name": "project_iamTestPermissions_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          }
        ]
      }
    },
    "project_iamTestPermissions_Response_403": {
      "name": "project_iamTestPermissions_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_list_collections_org__org_id__project__project_id__collection_get_Response_403": {
      "name": "collection_list_collections_org__org_id__project__project_id__collection_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_create_collection_org__org_id__project__project_id__collection_post_Response_403": {
      "name": "collection_create_collection_org__org_id__project__project_id__collection_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_get_collection_org__org_id__project__project_id__collection__collection_id__get_Response_403": {
      "name": "collection_get_collection_org__org_id__project__project_id__collection__collection_id__get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_editOrgOrgIdProjectProjectIdCollectionCollectionIdPost_Response_403": {
      "name": "collection_editOrgOrgIdProjectProjectIdCollectionCollectionIdPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_statsOrgOrgIdProjectProjectIdCollectionCollectionIdStatsGet_Response_403": {
      "name": "collection_statsOrgOrgIdProjectProjectIdCollectionCollectionIdStatsGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgOrgIdProjectProjectIdCollectionCollectionIdChatGetParametersSchema": {
      "name": "OrgOrgIdProjectProjectIdCollectionCollectionIdChatGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "all"
          },
          {
            "value": "viewable"
          }
        ]
      }
    },
    "collection_list_chats_org__org_id__project__project_id__collection__collection_id__chat_get_Response_403": {
      "name": "collection_list_chats_org__org_id__project__project_id__collection__collection_id__chat_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_query_collection_org__org_id__project__project_id__collection__collection_id__query_post_Response_403": {
      "name": "collection_query_collection_org__org_id__project__project_id__collection__collection_id__query_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_update_summary_org__org_id__project__project_id__collection__collection_id__update_summary_post_Response_403": {
      "name": "collection_update_summary_org__org_id__project__project_id__collection__collection_id__update_summary_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_addOrgOrgIdProjectProjectIdCollectionCollectionIdAddPost_Response_403": {
      "name": "collection_addOrgOrgIdProjectProjectIdCollectionCollectionIdAddPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_removeOrgOrgIdProjectProjectIdCollectionCollectionIdRemovePost_Response_403": {
      "name": "collection_removeOrgOrgIdProjectProjectIdCollectionCollectionIdRemovePost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgOrgIdProjectProjectIdCollectionCollectionIdIamMembersGetParametersSchema": {
      "name": "OrgOrgIdProjectProjectIdCollectionCollectionIdIamMembersGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "organization"
          },
          {
            "value": "project"
          }
        ]
      }
    },
    "collection_iamListMembers_Response_403": {
      "name": "collection_iamListMembers_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_getMember_Response_403": {
      "name": "collection_getMember_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_iamUpdateMemberRoles_Response_400": {
      "name": "collection_iamUpdateMemberRoles_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MultipleRolesNotAllowedErrorResponse",
            "type": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          }
        ]
      }
    },
    "collection_iamUpdateMemberRoles_Response_403": {
      "name": "collection_iamUpdateMemberRoles_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "collection_iamTestPermissions_Response_400": {
      "name": "collection_iamTestPermissions_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          }
        ]
      }
    },
    "collection_iamTestPermissions_Response_403": {
      "name": "collection_iamTestPermissions_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgOrgIdProjectProjectIdDocumentGetParametersSchema": {
      "name": "OrgOrgIdProjectProjectIdDocumentGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "upload"
          },
          {
            "value": "gdrive"
          },
          {
            "value": "onedrive"
          },
          {
            "value": "web_scrape"
          },
          {
            "value": "notion"
          },
          {
            "value": "confluence"
          },
          {
            "value": "box"
          },
          {
            "value": "dropbox"
          },
          {
            "value": "sharepoint"
          }
        ]
      }
    },
    "document_listOrgOrgIdProjectProjectIdDocumentGet_Response_403": {
      "name": "document_listOrgOrgIdProjectProjectIdDocumentGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_createOrgOrgIdProjectProjectIdDocumentPost_Response_403": {
      "name": "document_createOrgOrgIdProjectProjectIdDocumentPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_uploadOrgOrgIdProjectProjectIdDocumentUploadPost_Response_403": {
      "name": "document_uploadOrgOrgIdProjectProjectIdDocumentUploadPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_task_status_org__org_id__project__project_id__document_create_status__group_id__get_Response_403": {
      "name": "document_task_status_org__org_id__project__project_id__document_create_status__group_id__get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_queryOrgOrgIdProjectProjectIdDocumentDocumentIdQueryGet_Response_403": {
      "name": "document_queryOrgOrgIdProjectProjectIdDocumentDocumentIdQueryGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_fetchOrgOrgIdProjectProjectIdDocumentDocumentIdGet_Response_403": {
      "name": "document_fetchOrgOrgIdProjectProjectIdDocumentDocumentIdGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_updateOrgOrgIdProjectProjectIdDocumentDocumentIdPost_Response_403": {
      "name": "document_updateOrgOrgIdProjectProjectIdDocumentDocumentIdPost_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_deleteOrgOrgIdProjectProjectIdDocumentDocumentIdDelete_Response_403": {
      "name": "document_deleteOrgOrgIdProjectProjectIdDocumentDocumentIdDelete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_embeddingQueryOrgOrgIdProjectProjectIdDocumentDocumentIdEmbeddingsGet_Response_403": {
      "name": "document_embeddingQueryOrgOrgIdProjectProjectIdDocumentDocumentIdEmbeddingsGet_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgOrgIdProjectProjectIdDocumentDocumentIdIamMembersGetParametersSchema": {
      "name": "OrgOrgIdProjectProjectIdDocumentDocumentIdIamMembersGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "organization"
          },
          {
            "value": "project"
          }
        ]
      }
    },
    "document_iamListMembers_Response_403": {
      "name": "document_iamListMembers_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_getMember_Response_403": {
      "name": "document_getMember_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_iamUpdateMemberRoles_Response_400": {
      "name": "document_iamUpdateMemberRoles_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MultipleRolesNotAllowedErrorResponse",
            "type": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          }
        ]
      }
    },
    "document_iamUpdateMemberRoles_Response_403": {
      "name": "document_iamUpdateMemberRoles_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "document_iamTestPermissions_Response_400": {
      "name": "document_iamTestPermissions_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          }
        ]
      }
    },
    "document_iamTestPermissions_Response_403": {
      "name": "document_iamTestPermissions_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_get_chat_chat__chat_id__get_Response_403": {
      "name": "chat_get_chat_chat__chat_id__get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_update_chat_chat__chat_id__post_Response_403": {
      "name": "chat_update_chat_chat__chat_id__post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_get_chat_config_chat__chat_id__config_get_Response_403": {
      "name": "chat_get_chat_config_chat__chat_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_set_chat_config_chat__chat_id__config_post_Response_403": {
      "name": "chat_set_chat_config_chat__chat_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_create_chat_chat_post_Response_403": {
      "name": "chat_create_chat_chat_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_query_chat_chat__chat_id__query_get_Response_403": {
      "name": "chat_query_chat_chat__chat_id__query_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "ChatChatIdIamMembersGetParametersSchema": {
      "name": "ChatChatIdIamMembersGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "organization"
          },
          {
            "value": "project"
          }
        ]
      }
    },
    "chat_iamListMembers_Response_403": {
      "name": "chat_iamListMembers_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_getMember_Response_403": {
      "name": "chat_getMember_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_iamUpdateMemberRoles_Response_400": {
      "name": "chat_iamUpdateMemberRoles_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MultipleRolesNotAllowedErrorResponse",
            "type": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          }
        ]
      }
    },
    "chat_iamUpdateMemberRoles_Response_403": {
      "name": "chat_iamUpdateMemberRoles_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "chat_iamTestPermissions_Response_400": {
      "name": "chat_iamTestPermissions_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          }
        ]
      }
    },
    "chat_iamTestPermissions_Response_403": {
      "name": "chat_iamTestPermissions_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - box_authorize_org__org_id__project__project_id__datasource_box_authorize_get_Response_403": {
      "name": "datasource - box_authorize_org__org_id__project__project_id__datasource_box_authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - box_authorize_org__org_id__project__project_id__datasource_box__connection_id__authorize_get_Response_403": {
      "name": "datasource - box_authorize_org__org_id__project__project_id__datasource_box__connection_id__authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - box_delete_org__org_id__project__project_id__datasource_box__connection_id__delete_Response_403": {
      "name": "datasource - box_delete_org__org_id__project__project_id__datasource_box__connection_id__delete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - box_list_runs_org__org_id__project__project_id__datasource_box__connection_id__runs_get_Response_403": {
      "name": "datasource - box_list_runs_org__org_id__project__project_id__datasource_box__connection_id__runs_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - box_check_status_org__org_id__project__project_id__datasource_box__connection_id__run_get_Response_403": {
      "name": "datasource - box_check_status_org__org_id__project__project_id__datasource_box__connection_id__run_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - box_get_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_get_Response_403": {
      "name": "datasource - box_get_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - box_set_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_post_Response_403": {
      "name": "datasource - box_set_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - confluence_authorize_org__org_id__project__project_id__datasource_confluence_authorize_get_Response_403": {
      "name": "datasource - confluence_authorize_org__org_id__project__project_id__datasource_confluence_authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - confluence_authorize_org__org_id__project__project_id__datasource_confluence__connection_id__authorize_get_Response_403": {
      "name": "datasource - confluence_authorize_org__org_id__project__project_id__datasource_confluence__connection_id__authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - confluence_delete_org__org_id__project__project_id__datasource_confluence__connection_id__delete_Response_403": {
      "name": "datasource - confluence_delete_org__org_id__project__project_id__datasource_confluence__connection_id__delete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - confluence_list_runs_org__org_id__project__project_id__datasource_confluence__connection_id__runs_get_Response_403": {
      "name": "datasource - confluence_list_runs_org__org_id__project__project_id__datasource_confluence__connection_id__runs_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - confluence_check_status_org__org_id__project__project_id__datasource_confluence__connection_id__run_get_Response_403": {
      "name": "datasource - confluence_check_status_org__org_id__project__project_id__datasource_confluence__connection_id__run_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - confluence_get_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_get_Response_403": {
      "name": "datasource - confluence_get_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - confluence_set_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_post_Response_403": {
      "name": "datasource - confluence_set_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - dropbox_authorize_org__org_id__project__project_id__datasource_dropbox_authorize_get_Response_403": {
      "name": "datasource - dropbox_authorize_org__org_id__project__project_id__datasource_dropbox_authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - dropbox_authorize_org__org_id__project__project_id__datasource_dropbox__connection_id__authorize_get_Response_403": {
      "name": "datasource - dropbox_authorize_org__org_id__project__project_id__datasource_dropbox__connection_id__authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - dropbox_delete_org__org_id__project__project_id__datasource_dropbox__connection_id__delete_Response_403": {
      "name": "datasource - dropbox_delete_org__org_id__project__project_id__datasource_dropbox__connection_id__delete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - dropbox_list_runs_org__org_id__project__project_id__datasource_dropbox__connection_id__runs_get_Response_403": {
      "name": "datasource - dropbox_list_runs_org__org_id__project__project_id__datasource_dropbox__connection_id__runs_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - dropbox_check_status_org__org_id__project__project_id__datasource_dropbox__connection_id__run_get_Response_403": {
      "name": "datasource - dropbox_check_status_org__org_id__project__project_id__datasource_dropbox__connection_id__run_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - dropbox_get_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_get_Response_403": {
      "name": "datasource - dropbox_get_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - dropbox_set_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_post_Response_403": {
      "name": "datasource - dropbox_set_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - gdrive_authorize_org__org_id__project__project_id__datasource_gdrive_authorize_get_Response_403": {
      "name": "datasource - gdrive_authorize_org__org_id__project__project_id__datasource_gdrive_authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - gdrive_authorize_org__org_id__project__project_id__datasource_gdrive__connection_id__authorize_get_Response_403": {
      "name": "datasource - gdrive_authorize_org__org_id__project__project_id__datasource_gdrive__connection_id__authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - gdrive_delete_org__org_id__project__project_id__datasource_gdrive__connection_id__delete_Response_403": {
      "name": "datasource - gdrive_delete_org__org_id__project__project_id__datasource_gdrive__connection_id__delete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - gdrive_list_runs_org__org_id__project__project_id__datasource_gdrive__connection_id__runs_get_Response_403": {
      "name": "datasource - gdrive_list_runs_org__org_id__project__project_id__datasource_gdrive__connection_id__runs_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - gdrive_check_status_org__org_id__project__project_id__datasource_gdrive__connection_id__run_get_Response_403": {
      "name": "datasource - gdrive_check_status_org__org_id__project__project_id__datasource_gdrive__connection_id__run_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - gdrive_get_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_get_Response_403": {
      "name": "datasource - gdrive_get_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - gdrive_set_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_post_Response_403": {
      "name": "datasource - gdrive_set_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - notion_authorize_org__org_id__project__project_id__datasource_notion_authorize_get_Response_403": {
      "name": "datasource - notion_authorize_org__org_id__project__project_id__datasource_notion_authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - notion_authorize_org__org_id__project__project_id__datasource_notion__connection_id__authorize_get_Response_403": {
      "name": "datasource - notion_authorize_org__org_id__project__project_id__datasource_notion__connection_id__authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - notion_delete_org__org_id__project__project_id__datasource_notion__connection_id__delete_Response_403": {
      "name": "datasource - notion_delete_org__org_id__project__project_id__datasource_notion__connection_id__delete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - notion_list_runs_org__org_id__project__project_id__datasource_notion__connection_id__runs_get_Response_403": {
      "name": "datasource - notion_list_runs_org__org_id__project__project_id__datasource_notion__connection_id__runs_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - notion_check_status_org__org_id__project__project_id__datasource_notion__connection_id__run_get_Response_403": {
      "name": "datasource - notion_check_status_org__org_id__project__project_id__datasource_notion__connection_id__run_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - notion_get_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_get_Response_403": {
      "name": "datasource - notion_get_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - notion_set_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_post_Response_403": {
      "name": "datasource - notion_set_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - onedrive_authorize_org__org_id__project__project_id__datasource_onedrive_authorize_get_Response_403": {
      "name": "datasource - onedrive_authorize_org__org_id__project__project_id__datasource_onedrive_authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - onedrive_authorize_org__org_id__project__project_id__datasource_onedrive__connection_id__authorize_get_Response_403": {
      "name": "datasource - onedrive_authorize_org__org_id__project__project_id__datasource_onedrive__connection_id__authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - onedrive_delete_org__org_id__project__project_id__datasource_onedrive__connection_id__delete_Response_403": {
      "name": "datasource - onedrive_delete_org__org_id__project__project_id__datasource_onedrive__connection_id__delete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - onedrive_list_runs_org__org_id__project__project_id__datasource_onedrive__connection_id__runs_get_Response_403": {
      "name": "datasource - onedrive_list_runs_org__org_id__project__project_id__datasource_onedrive__connection_id__runs_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - onedrive_check_status_org__org_id__project__project_id__datasource_onedrive__connection_id__run_get_Response_403": {
      "name": "datasource - onedrive_check_status_org__org_id__project__project_id__datasource_onedrive__connection_id__run_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - onedrive_get_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_get_Response_403": {
      "name": "datasource - onedrive_get_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - onedrive_set_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_post_Response_403": {
      "name": "datasource - onedrive_set_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - sharepoint_authorize_org__org_id__project__project_id__datasource_sharepoint_authorize_get_Response_403": {
      "name": "datasource - sharepoint_authorize_org__org_id__project__project_id__datasource_sharepoint_authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - sharepoint_authorize_org__org_id__project__project_id__datasource_sharepoint__connection_id__authorize_get_Response_403": {
      "name": "datasource - sharepoint_authorize_org__org_id__project__project_id__datasource_sharepoint__connection_id__authorize_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - sharepoint_delete_org__org_id__project__project_id__datasource_sharepoint__connection_id__delete_Response_403": {
      "name": "datasource - sharepoint_delete_org__org_id__project__project_id__datasource_sharepoint__connection_id__delete_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - sharepoint_list_runs_org__org_id__project__project_id__datasource_sharepoint__connection_id__runs_get_Response_403": {
      "name": "datasource - sharepoint_list_runs_org__org_id__project__project_id__datasource_sharepoint__connection_id__runs_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - sharepoint_check_status_org__org_id__project__project_id__datasource_sharepoint__connection_id__run_get_Response_403": {
      "name": "datasource - sharepoint_check_status_org__org_id__project__project_id__datasource_sharepoint__connection_id__run_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - sharepoint_get_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_get_Response_403": {
      "name": "datasource - sharepoint_get_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_get_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "datasource - sharepoint_set_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_post_Response_403": {
      "name": "datasource - sharepoint_set_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "internal_register_oauth_client_internal_project__project_id__register_oauth_client_post_Response_403": {
      "name": "internal_register_oauth_client_internal_project__project_id__register_oauth_client_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "compose_initialise_org__org_id__project__project_id__compose_post_Response_403": {
      "name": "compose_initialise_org__org_id__project__project_id__compose_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "compose_generate_org__org_id__project__project_id__compose_generate_post_Response_403": {
      "name": "compose_generate_org__org_id__project__project_id__compose_generate_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "compose_update_section_org__org_id__project__project_id__compose_update_section_post_Response_403": {
      "name": "compose_update_section_org__org_id__project__project_id__compose_update_section_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "compose_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post_Response_403": {
      "name": "compose_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "compose_topic_org__org_id__project__project_id__compose_topic_post_Response_403": {
      "name": "compose_topic_org__org_id__project__project_id__compose_topic_post_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_getAllTasks_Response_403": {
      "name": "tasks_getAllTasks_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_createTask_Response_403": {
      "name": "tasks_createTask_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_getTask_Response_403": {
      "name": "tasks_getTask_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_editTask_Response_403": {
      "name": "tasks_editTask_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_getTaskRuns_Response_403": {
      "name": "tasks_getTaskRuns_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_runTask_Response_403": {
      "name": "tasks_runTask_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "OrgOrgIdProjectProjectIdTaskTaskIdIamMembersGetParametersSchema": {
      "name": "OrgOrgIdProjectProjectIdTaskTaskIdIamMembersGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          },
          {
            "value": "organization"
          },
          {
            "value": "project"
          }
        ]
      }
    },
    "tasks_task_iam_list_members_Response_403": {
      "name": "tasks_task_iam_list_members_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_task_get_member_Response_403": {
      "name": "tasks_task_get_member_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_task_iam_update_member_roles_Response_400": {
      "name": "tasks_task_iam_update_member_roles_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MultipleRolesNotAllowedErrorResponse",
            "type": {
              "type": "id",
              "value": "MultipleRolesNotAllowedErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_task_iam_update_member_roles_Response_403": {
      "name": "tasks_task_iam_update_member_roles_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_task_iam_test_permissions_Response_400": {
      "name": "tasks_task_iam_test_permissions_Response_400",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InvalidSubjectTypeErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidSubjectTypeErrorResponse"
            }
          },
          {
            "typeName": "InvalidMemberErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidMemberErrorResponse"
            }
          },
          {
            "typeName": "InvalidRoleErrorResponse",
            "type": {
              "type": "id",
              "value": "InvalidRoleErrorResponse"
            }
          },
          {
            "typeName": "MalformedResourceIdentifierErrorResponse",
            "type": {
              "type": "id",
              "value": "MalformedResourceIdentifierErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_task_iam_test_permissions_Response_403": {
      "name": "tasks_task_iam_test_permissions_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "task forwarders_getAllTaskForwarders_Response_403": {
      "name": "task forwarders_getAllTaskForwarders_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "task forwarders_createTaskForwarder_Response_403": {
      "name": "task forwarders_createTaskForwarder_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "task forwarders_getTaskForwarder_Response_403": {
      "name": "task forwarders_getTaskForwarder_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "task forwarders_updateTaskForwarder_Response_403": {
      "name": "task forwarders_updateTaskForwarder_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "tasks_getTaskRun_Response_403": {
      "name": "tasks_getTaskRun_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    },
    "listings_getAllModels_Response_403": {
      "name": "listings_getAllModels_Response_403",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MissingAuthenticationErrorResponse",
            "type": {
              "type": "id",
              "value": "MissingAuthenticationErrorResponse"
            }
          },
          {
            "typeName": "PermissionCheckFailedErrorResponse",
            "type": {
              "type": "id",
              "value": "PermissionCheckFailedErrorResponse"
            }
          }
        ]
      }
    }
  },
  "subpackages": {
    "subpackage_org": {
      "subpackageId": "subpackage_org",
      "name": "org",
      "endpoints": [
        {
          "auth": true,
          "description": "Lists all members that have been granted direct access to the organization.",
          "method": "GET",
          "id": "organization_iam_list_members",
          "originalEndpointId": "org.organization_iam_list_members",
          "name": "IAM - List Organization Members",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/iam/members"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "OrgOrgIdIamMembersGetParametersSchema"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_IAMMember_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a specific member that has been granted direct access to the organization.",
          "method": "GET",
          "id": "organization_get_member",
          "originalEndpointId": "org.organization_get_member",
          "name": "IAM - Lookup Organization Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update the roles that a member holds on the organization.",
          "method": "POST",
          "id": "organization_iam_update_member_roles",
          "originalEndpointId": "org.organization_iam_update_member_roles",
          "name": "IAM - Update Organization Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OrganizationIAMMemberRoleUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Test the permissions that the caller (or another subject) holds on the organization.",
          "method": "POST",
          "id": "organization_iam_test_permissions",
          "originalEndpointId": "org.organization_iam_test_permissions",
          "name": "IAM - Test Organization Permissions",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/iam/test"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OrganizationIAMPermissionTest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMPermissionTest"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "permissions": [
                  "add_editor"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "add_editor"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "listOrgGet",
          "originalEndpointId": "org.listOrgGet",
          "name": "Org List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "membership",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "OrgGetParametersSchema"
                }
              }
            },
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 100
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "createOrgPost",
          "originalEndpointId": "org.createOrgPost",
          "name": "Org Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OrgCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Org"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "contact_email": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "getOrgOrgIdGet",
          "originalEndpointId": "org.getOrgOrgIdGet",
          "name": "Org Get",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Org"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "updateOrgOrgIdPost",
          "originalEndpointId": "org.updateOrgOrgIdPost",
          "name": "Org Update",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OrgUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Org"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "joinOrgOrgIdJoinPost",
          "originalEndpointId": "org.joinOrgOrgIdJoinPost",
          "name": "Org Join",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/join"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "invitesListOrgOrgIdInviteGet",
          "originalEndpointId": "org.invitesListOrgOrgIdInviteGet",
          "name": "Org Invites List",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/invite"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "show",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "OrgOrgIdInviteGetParametersSchema"
                }
              }
            },
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 100
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_OrganizationInvite_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "email_address": "foo",
                      "roles": [
                        "foo"
                      ],
                      "id": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "email_address": "foo",
                      "roles": [
                        "foo"
                      ],
                      "id": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "invitesCreateOrgOrgIdInvitePost",
          "originalEndpointId": "org.invitesCreateOrgOrgIdInvitePost",
          "name": "Org Invites Create",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/invite"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OrgInviteBase"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OrganizationInvite"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "email_address": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "email_address": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "email_address": "foo",
                  "roles": [
                    "foo"
                  ],
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "email_address": "foo",
                  "roles": [
                    "foo"
                  ],
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "invitesDeleteOrgOrgIdInviteOrgInviteIdDelete",
          "originalEndpointId": "org.invitesDeleteOrgOrgIdInviteOrgInviteIdDelete",
          "name": "Org Invites Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "org_invite_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/invite/"
              },
              {
                "type": "pathParameter",
                "value": "org_invite_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "org_invite_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "domainsListOrgOrgIdDomainsGet",
          "originalEndpointId": "org.domainsListOrgOrgIdDomainsGet",
          "name": "Org Domains List",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/domains"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_OrganizationDomain_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "domain": "foo",
                      "id": "foo",
                      "status": "unverified"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "domain": "foo",
                      "id": "foo",
                      "status": "unverified"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "domainsPostOrgOrgIdDomainsPost",
          "originalEndpointId": "org.domainsPostOrgOrgIdDomainsPost",
          "name": "Org Domains Post",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/domains"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OrganizationDomainCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OrganizationDomain"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "domain": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "domain": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "domain": "foo",
                  "id": "foo",
                  "status": "unverified"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "domain": "foo",
                  "id": "foo",
                  "status": "unverified"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "domainDeleteOrgOrgIdDomainsDomainIdDelete",
          "originalEndpointId": "org.domainDeleteOrgOrgIdDomainsDomainIdDelete",
          "name": "Org Domain Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "domain_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/domains/"
              },
              {
                "type": "pathParameter",
                "value": "domain_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OrganizationDomain"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "domain_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "domain": "foo",
                  "id": "foo",
                  "status": "unverified"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "domain": "foo",
                  "id": "foo",
                  "status": "unverified"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "updateAvatarOrgOrgIdAvatarPost",
          "originalEndpointId": "org.updateAvatarOrgOrgIdAvatarPost",
          "name": "Org Update Avatar",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/avatar"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Org"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "contact_email": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_user": {
      "subpackageId": "subpackage_user",
      "name": "user",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve the profile of the current user.",
          "method": "GET",
          "id": "getUserGet",
          "originalEndpointId": "user.getUserGet",
          "name": "User Get",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "name": "foo",
                  "bio": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "name": "foo",
                  "bio": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update the profile of the current user.",
          "method": "POST",
          "id": "postUserPost",
          "originalEndpointId": "user.postUserPost",
          "name": "User Post",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "UserProfileUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "name": "foo",
                  "bio": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "name": "foo",
                  "bio": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "updateAvatarUserAvatarPost",
          "originalEndpointId": "user.updateAvatarUserAvatarPost",
          "name": "User Update Avatar",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/avatar"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/avatar",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "name": "foo",
                  "bio": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "email": "foo",
                  "name": "foo",
                  "bio": "foo",
                  "avatar_url": "foo",
                  "id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_project": {
      "subpackageId": "subpackage_project",
      "name": "project",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_project_org__org_id__project_get",
          "originalEndpointId": "project.list_project_org__org_id__project_get",
          "name": "List Project",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 100
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_Project_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "name": "foo",
                      "avatar_url": "foo",
                      "id": "foo",
                      "org_id": "foo",
                      "tasks_oauth_client_id": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "name": "foo",
                      "avatar_url": "foo",
                      "id": "foo",
                      "org_id": "foo",
                      "tasks_oauth_client_id": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "create_project_org__org_id__project_post",
          "originalEndpointId": "project.create_project_org__org_id__project_post",
          "name": "Create Project",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ProjectCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Project"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_project_org__org_id__project__project_id__get",
          "originalEndpointId": "project.get_project_org__org_id__project__project_id__get",
          "name": "Get Project",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ProjectWithDatasources"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo",
                  "datasource_connections": [
                    {
                      "id": "foo",
                      "name": "foo",
                      "private": true,
                      "project_id": "foo",
                      "datasource_id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "config": {},
                      "datasource": {
                        "name": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo",
                  "datasource_connections": [
                    {
                      "id": "foo",
                      "name": "foo",
                      "private": true,
                      "project_id": "foo",
                      "datasource_id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "config": {},
                      "datasource": {
                        "name": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "update_project_org__org_id__project__project_id__post",
          "originalEndpointId": "project.update_project_org__org_id__project__project_id__post",
          "name": "Update Project",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ProjectUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Project"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "method": "GET",
          "id": "get_project_config_org__org_id__project__project_id__config_get",
          "originalEndpointId": "project.get_project_config_org__org_id__project__project_id__config_get",
          "name": "Get Project Config",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ProjectConfig-Output"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 4,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 4,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_project_config_org__org_id__project__project_id__config_post",
          "originalEndpointId": "project.set_project_config_org__org_id__project__project_id__config_post",
          "name": "Set Project Config",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ProjectConfig-Input"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ProjectConfig-Output"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 4,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 4,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "updateAvatarOrgOrgIdProjectProjectIdAvatarPost",
          "originalEndpointId": "project.updateAvatarOrgOrgIdProjectProjectIdAvatarPost",
          "name": "Project Update Avatar",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/avatar"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Project"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "avatar_url": "foo",
                  "id": "foo",
                  "org_id": "foo",
                  "tasks_oauth_client_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Lists all members that have been granted direct access to the project.",
          "method": "GET",
          "id": "iamListMembers",
          "originalEndpointId": "project.iamListMembers",
          "name": "IAM - List Project Members",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/iam/members"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "OrgOrgIdProjectProjectIdIamMembersGetParametersSchema"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_IAMMember_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a specific member that has been granted direct access to the project.",
          "method": "GET",
          "id": "getMember",
          "originalEndpointId": "project.getMember",
          "name": "IAM - Lookup Project Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update the roles that a member holds on the project.",
          "method": "POST",
          "id": "iamUpdateMemberRoles",
          "originalEndpointId": "project.iamUpdateMemberRoles",
          "name": "IAM - Update Project Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ProjectIAMMemberRoleUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Test the permissions that the caller (or another subject) holds on the project.",
          "method": "POST",
          "id": "iamTestPermissions",
          "originalEndpointId": "project.iamTestPermissions",
          "name": "IAM - Test Project Permissions",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/iam/test"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ProjectIAMPermissionTest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMPermissionTest"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "permissions": [
                  "add_editor"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "add_editor"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_collection": {
      "subpackageId": "subpackage_collection",
      "name": "collection",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_collections_org__org_id__project__project_id__collection_get",
          "originalEndpointId": "collection.list_collections_org__org_id__project__project_id__collection_get",
          "name": "List Collections",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "title",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 100
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_Collection_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "title": "foo",
                      "project_id": "foo",
                      "id": "foo",
                      "summary": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "embedding_instances": [
                        {
                          "config": {},
                          "id": "foo",
                          "chat_document_id": "foo",
                          "is_active": true
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "title": "foo",
                      "project_id": "foo",
                      "id": "foo",
                      "summary": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "embedding_instances": [
                        {
                          "config": {},
                          "id": "foo",
                          "chat_document_id": "foo",
                          "is_active": true
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "create_collection_org__org_id__project__project_id__collection_post",
          "originalEndpointId": "collection.create_collection_org__org_id__project__project_id__collection_post",
          "name": "Create Collection",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CollectionCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Collection"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_collection_org__org_id__project__project_id__collection__collection_id__get",
          "originalEndpointId": "collection.get_collection_org__org_id__project__project_id__collection__collection_id__get",
          "name": "Get Collection",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Collection"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Edit collection details",
          "method": "POST",
          "id": "editOrgOrgIdProjectProjectIdCollectionCollectionIdPost",
          "originalEndpointId": "collection.editOrgOrgIdProjectProjectIdCollectionCollectionIdPost",
          "name": "Collection Edit",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CollectionUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Collection"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "statsOrgOrgIdProjectProjectIdCollectionCollectionIdStatsGet",
          "originalEndpointId": "collection.statsOrgOrgIdProjectProjectIdCollectionCollectionIdStatsGet",
          "name": "Collection Stats",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/stats"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "CollectionStatsResponse"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "documents_by_source": [
                    {
                      "source": "upload",
                      "count": 42
                    }
                  ],
                  "number_of_chats": 42
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "documents_by_source": [
                    {
                      "source": "upload",
                      "count": 42
                    }
                  ],
                  "number_of_chats": 42
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_chats_org__org_id__project__project_id__collection__collection_id__chat_get",
          "originalEndpointId": "collection.list_chats_org__org_id__project__project_id__collection__collection_id__chat_get",
          "name": "List Chats",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/chat"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "show",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "OrgOrgIdProjectProjectIdCollectionCollectionIdChatGetParametersSchema"
                }
              }
            },
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 100
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_Chat_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "title": "foo",
                      "description": "foo",
                      "summary": "foo",
                      "collection_id": "foo",
                      "created": "foo",
                      "created_by_user_id": "foo",
                      "last_message": "foo",
                      "id": "foo",
                      "documents_have_been_modified": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "title": "foo",
                      "description": "foo",
                      "summary": "foo",
                      "collection_id": "foo",
                      "created": "foo",
                      "created_by_user_id": "foo",
                      "last_message": "foo",
                      "id": "foo",
                      "documents_have_been_modified": false
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "query_collection_org__org_id__project__project_id__collection__collection_id__query_post",
          "originalEndpointId": "collection.query_collection_org__org_id__project__project_id__collection__collection_id__query_post",
          "name": "Query Collection",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/query"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CollectionQuery"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "query": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Generate and update the summary for a collection",
          "method": "POST",
          "id": "update_summary_org__org_id__project__project_id__collection__collection_id__update_summary_post",
          "originalEndpointId": "collection.update_summary_org__org_id__project__project_id__collection__collection_id__update_summary_post",
          "name": "Update Summary",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/update_summary"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AsyncJobResult"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "status": "foo",
                  "task_id": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "status": "foo",
                  "task_id": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add an embedding instance to the collection",
          "method": "POST",
          "id": "addOrgOrgIdProjectProjectIdCollectionCollectionIdAddPost",
          "originalEndpointId": "collection.addOrgOrgIdProjectProjectIdCollectionCollectionIdAddPost",
          "name": "Collection Add",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/add"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CollectionEmbeddingUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Collection"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "embedding_instance_ids": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "embedding_instance_ids": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Remove an embedding instance from the collection",
          "method": "POST",
          "id": "removeOrgOrgIdProjectProjectIdCollectionCollectionIdRemovePost",
          "originalEndpointId": "collection.removeOrgOrgIdProjectProjectIdCollectionCollectionIdRemovePost",
          "name": "Collection Remove",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/remove"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CollectionEmbeddingUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Collection"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "embedding_instance_ids": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "embedding_instance_ids": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "id": "foo",
                  "summary": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Lists all members that have been granted direct access to the collection.",
          "method": "GET",
          "id": "iamListMembers",
          "originalEndpointId": "collection.iamListMembers",
          "name": "IAM - List Collection Members",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/iam/members"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "OrgOrgIdProjectProjectIdCollectionCollectionIdIamMembersGetParametersSchema"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_IAMMember_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a specific member that has been granted direct access to the collection.",
          "method": "GET",
          "id": "getMember",
          "originalEndpointId": "collection.getMember",
          "name": "IAM - Lookup Collection Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update the roles that a member holds on the collection.",
          "method": "POST",
          "id": "iamUpdateMemberRoles",
          "originalEndpointId": "collection.iamUpdateMemberRoles",
          "name": "IAM - Update Collection Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CollectionIAMMemberRoleUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Test the permissions that the caller (or another subject) holds on the collection.",
          "method": "POST",
          "id": "iamTestPermissions",
          "originalEndpointId": "collection.iamTestPermissions",
          "name": "IAM - Test Collection Permissions",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/collection/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/iam/test"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CollectionIAMPermissionTest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMPermissionTest"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "collection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "permissions": [
                  "add_document"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "add_document"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_document": {
      "subpackageId": "subpackage_document",
      "name": "document",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "listOrgOrgIdProjectProjectIdDocumentGet",
          "originalEndpointId": "document.listOrgOrgIdProjectProjectIdDocumentGet",
          "name": "Document List",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "title",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "collection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            },
            {
              "key": "source",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "OrgOrgIdProjectProjectIdDocumentGetParametersSchema"
                  }
                }
              }
            },
            {
              "key": "strategy",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_ChatDocument_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "title": "foo",
                      "project_id": "foo",
                      "description": "foo",
                      "source": "upload",
                      "strategy": "foo",
                      "source_meta": {},
                      "connection_id": "foo",
                      "id": "foo",
                      "chunks": 42,
                      "original_mime": "foo",
                      "embedding_instances": [
                        {
                          "config": {},
                          "id": "foo",
                          "chat_document_id": "foo",
                          "is_active": true
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "title": "foo",
                      "project_id": "foo",
                      "description": "foo",
                      "source": "upload",
                      "strategy": "foo",
                      "source_meta": {},
                      "connection_id": "foo",
                      "id": "foo",
                      "chunks": 42,
                      "original_mime": "foo",
                      "embedding_instances": [
                        {
                          "config": {},
                          "id": "foo",
                          "chat_document_id": "foo",
                          "is_active": true
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "createOrgOrgIdProjectProjectIdDocumentPost",
          "originalEndpointId": "document.createOrgOrgIdProjectProjectIdDocumentPost",
          "name": "Document Create",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DocumentStatusResponse"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "group_id": "foo",
                  "task_count": 42,
                  "tasks": [
                    {
                      "task_id": "foo",
                      "state": "PENDING",
                      "info": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "group_id": "foo",
                  "task_count": 42,
                  "tasks": [
                    {
                      "task_id": "foo",
                      "state": "PENDING",
                      "info": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "availability": "Deprecated",
          "auth": true,
          "method": "POST",
          "id": "uploadOrgOrgIdProjectProjectIdDocumentUploadPost",
          "originalEndpointId": "document.uploadOrgOrgIdProjectProjectIdDocumentUploadPost",
          "name": "Document Upload",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/upload"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocument"
                }
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "title": "foo",
                    "project_id": "foo",
                    "description": "foo",
                    "source": "upload",
                    "strategy": "foo",
                    "source_meta": {},
                    "connection_id": "foo",
                    "id": "foo",
                    "chunks": 42,
                    "original_mime": "foo",
                    "embedding_instances": [
                      {
                        "config": {},
                        "id": "foo",
                        "chat_document_id": "foo",
                        "is_active": true
                      }
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "title": "foo",
                    "project_id": "foo",
                    "description": "foo",
                    "source": "upload",
                    "strategy": "foo",
                    "source_meta": {},
                    "connection_id": "foo",
                    "id": "foo",
                    "chunks": 42,
                    "original_mime": "foo",
                    "embedding_instances": [
                      {
                        "config": {},
                        "id": "foo",
                        "chat_document_id": "foo",
                        "is_active": true
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "task_status_org__org_id__project__project_id__document_create_status__group_id__get",
          "originalEndpointId": "document.task_status_org__org_id__project__project_id__document_create_status__group_id__get",
          "name": "Task Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "group_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/create/status/"
              },
              {
                "type": "pathParameter",
                "value": "group_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DocumentStatusResponse"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "group_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "group_id": "foo",
                  "task_count": 42,
                  "tasks": [
                    {
                      "task_id": "foo",
                      "state": "PENDING",
                      "info": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "group_id": "foo",
                  "task_count": 42,
                  "tasks": [
                    {
                      "task_id": "foo",
                      "state": "PENDING",
                      "info": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "queryOrgOrgIdProjectProjectIdDocumentDocumentIdQueryGet",
          "originalEndpointId": "document.queryOrgOrgIdProjectProjectIdDocumentDocumentIdQueryGet",
          "name": "Document Query",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": "/query"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "query",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocumentQueryResult"
                }
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo"
              },
              "queryParameters": {
                "query": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "chat_document_id": "foo",
                    "text": "foo",
                    "score": 42
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "chat_document_id": "foo",
                    "text": "foo",
                    "score": 42
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "fetchOrgOrgIdProjectProjectIdDocumentDocumentIdGet",
          "originalEndpointId": "document.fetchOrgOrgIdProjectProjectIdDocumentDocumentIdGet",
          "name": "Document Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ChatDocument"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "description": "foo",
                  "source": "upload",
                  "strategy": "foo",
                  "source_meta": {},
                  "connection_id": "foo",
                  "id": "foo",
                  "chunks": 42,
                  "original_mime": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "description": "foo",
                  "source": "upload",
                  "strategy": "foo",
                  "source_meta": {},
                  "connection_id": "foo",
                  "id": "foo",
                  "chunks": 42,
                  "original_mime": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "updateOrgOrgIdProjectProjectIdDocumentDocumentIdPost",
          "originalEndpointId": "document.updateOrgOrgIdProjectProjectIdDocumentDocumentIdPost",
          "name": "Document Update",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChatDocumentUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ChatDocument"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "description": "foo",
                  "source": "upload",
                  "strategy": "foo",
                  "source_meta": {},
                  "connection_id": "foo",
                  "id": "foo",
                  "chunks": 42,
                  "original_mime": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "project_id": "foo",
                  "description": "foo",
                  "source": "upload",
                  "strategy": "foo",
                  "source_meta": {},
                  "connection_id": "foo",
                  "id": "foo",
                  "chunks": 42,
                  "original_mime": "foo",
                  "embedding_instances": [
                    {
                      "config": {},
                      "id": "foo",
                      "chat_document_id": "foo",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "deleteOrgOrgIdProjectProjectIdDocumentDocumentIdDelete",
          "originalEndpointId": "document.deleteOrgOrgIdProjectProjectIdDocumentDocumentIdDelete",
          "name": "Document Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "embeddingQueryOrgOrgIdProjectProjectIdDocumentDocumentIdEmbeddingsGet",
          "originalEndpointId": "document.embeddingQueryOrgOrgIdProjectProjectIdDocumentDocumentIdEmbeddingsGet",
          "name": "Document Embedding Query",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": "/embeddings"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_ChatDocumentEmbeddingRecord_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "id": "foo",
                      "document": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "id": "foo",
                      "document": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Fetch an individual embedding record by its ID. Useful for examining the source submitted to an LLM",
          "method": "GET",
          "id": "embeddingGetOrgOrgIdProjectProjectIdDocumentDocumentIdEmbeddingEmbeddingIdGet",
          "originalEndpointId": "document.embeddingGetOrgOrgIdProjectProjectIdDocumentDocumentIdEmbeddingEmbeddingIdGet",
          "name": "Document Embedding Get",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "embedding_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": "/embedding/"
              },
              {
                "type": "pathParameter",
                "value": "embedding_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ChatDocumentEmbeddingRecord"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo",
                "embedding_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "foo",
                  "document": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "foo",
                  "document": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Lists all members that have been granted direct access to the document.",
          "method": "GET",
          "id": "iamListMembers",
          "originalEndpointId": "document.iamListMembers",
          "name": "IAM - List Document Members",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": "/iam/members"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "OrgOrgIdProjectProjectIdDocumentDocumentIdIamMembersGetParametersSchema"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_IAMMember_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a specific member that has been granted direct access to the document.",
          "method": "GET",
          "id": "getMember",
          "originalEndpointId": "document.getMember",
          "name": "IAM - Lookup Document Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update the roles that a member holds on the document.",
          "method": "POST",
          "id": "iamUpdateMemberRoles",
          "originalEndpointId": "document.iamUpdateMemberRoles",
          "name": "IAM - Update Document Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DocumentIAMMemberRoleUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Test the permissions that the caller (or another subject) holds on the document.",
          "method": "POST",
          "id": "iamTestPermissions",
          "originalEndpointId": "document.iamTestPermissions",
          "name": "IAM - Test Document Permissions",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "document_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/document/"
              },
              {
                "type": "pathParameter",
                "value": "document_id"
              },
              {
                "type": "literal",
                "value": "/iam/test"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DocumentIAMPermissionTest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMPermissionTest"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "document_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "permissions": [
                  "add_editor"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "add_editor"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_chat": {
      "subpackageId": "subpackage_chat",
      "name": "chat",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "get_recent_chats_for_user_chat_recent_get",
          "originalEndpointId": "chat.get_recent_chats_for_user_chat_recent_get",
          "name": "Get Recent Chats For User",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/recent"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "project_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Chat"
                }
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/recent",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "title": "foo",
                    "description": "foo",
                    "summary": "foo",
                    "collection_id": "foo",
                    "created": "foo",
                    "created_by_user_id": "foo",
                    "last_message": "foo",
                    "id": "foo",
                    "documents_have_been_modified": false
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "title": "foo",
                    "description": "foo",
                    "summary": "foo",
                    "collection_id": "foo",
                    "created": "foo",
                    "created_by_user_id": "foo",
                    "last_message": "foo",
                    "id": "foo",
                    "documents_have_been_modified": false
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_chat_chat__chat_id__get",
          "originalEndpointId": "chat.get_chat_chat__chat_id__get",
          "name": "Get Chat",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Chat"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "description": "foo",
                  "summary": "foo",
                  "collection_id": "foo",
                  "created": "foo",
                  "created_by_user_id": "foo",
                  "last_message": "foo",
                  "id": "foo",
                  "documents_have_been_modified": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "description": "foo",
                  "summary": "foo",
                  "collection_id": "foo",
                  "created": "foo",
                  "created_by_user_id": "foo",
                  "last_message": "foo",
                  "id": "foo",
                  "documents_have_been_modified": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "update_chat_chat__chat_id__post",
          "originalEndpointId": "chat.update_chat_chat__chat_id__post",
          "name": "Update Chat",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChatUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Chat"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "description": "foo",
                  "summary": "foo",
                  "collection_id": "foo",
                  "created": "foo",
                  "created_by_user_id": "foo",
                  "last_message": "foo",
                  "id": "foo",
                  "documents_have_been_modified": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "description": "foo",
                  "summary": "foo",
                  "collection_id": "foo",
                  "created": "foo",
                  "created_by_user_id": "foo",
                  "last_message": "foo",
                  "id": "foo",
                  "documents_have_been_modified": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_chat_config_chat__chat_id__config_get",
          "originalEndpointId": "chat.get_chat_config_chat__chat_id__config_get",
          "name": "Get Chat Config",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ChatConfig-Output"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 5,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 5,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_chat_config_chat__chat_id__config_post",
          "originalEndpointId": "chat.set_chat_config_chat__chat_id__config_post",
          "name": "Set Chat Config",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChatConfig-Input"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ChatConfig-Output"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 5,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "llm": "gpt-3.5-turbo",
                  "temperature": 0.5,
                  "knn": 5,
                  "chat_system_commands": [
                    "foo"
                  ],
                  "chat_guardrails": {
                    "input": [
                      {
                        "name": "prompt_policy"
                      }
                    ],
                    "output": [
                      {
                        "name": "source_validation"
                      }
                    ]
                  },
                  "query_expansion": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "create_chat_chat_post",
          "originalEndpointId": "chat.create_chat_chat_post",
          "name": "Create Chat",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChatCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Chat"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "collection_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "collection_id": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "description": "foo",
                  "summary": "foo",
                  "collection_id": "foo",
                  "created": "foo",
                  "created_by_user_id": "foo",
                  "last_message": "foo",
                  "id": "foo",
                  "documents_have_been_modified": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo",
                  "description": "foo",
                  "summary": "foo",
                  "collection_id": "foo",
                  "created": "foo",
                  "created_by_user_id": "foo",
                  "last_message": "foo",
                  "id": "foo",
                  "documents_have_been_modified": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "query_chat_chat__chat_id__query_get",
          "originalEndpointId": "chat.query_chat_chat__chat_id__query_get",
          "name": "Query Chat",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": "/query"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "query",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatDocumentQueryResult"
                }
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo"
              },
              "queryParameters": {
                "query": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "chat_document_id": "foo",
                    "text": "foo",
                    "score": 42
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "chat_document_id": "foo",
                    "text": "foo",
                    "score": 42
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Lists all members that have been granted direct access to the chat.",
          "method": "GET",
          "id": "iamListMembers",
          "originalEndpointId": "chat.iamListMembers",
          "name": "IAM - List Chat Members",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": "/iam/members"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "ChatChatIdIamMembersGetParametersSchema"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_IAMMember_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a specific member that has been granted direct access to the chat.",
          "method": "GET",
          "id": "getMember",
          "originalEndpointId": "chat.getMember",
          "name": "IAM - Lookup Chat Member",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update the roles that a member holds on the chat.",
          "method": "POST",
          "id": "iamUpdateMemberRoles",
          "originalEndpointId": "chat.iamUpdateMemberRoles",
          "name": "IAM - Update Chat Member",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChatIAMMemberRoleUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Test the permissions that the caller (or another subject) holds on the chat.",
          "method": "POST",
          "id": "iamTestPermissions",
          "originalEndpointId": "chat.iamTestPermissions",
          "name": "IAM - Test Chat Permissions",
          "path": {
            "pathParameters": [
              {
                "key": "chat_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/chat/"
              },
              {
                "type": "pathParameter",
                "value": "chat_id"
              },
              {
                "type": "literal",
                "value": "/iam/test"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ChatIAMPermissionTest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMPermissionTest"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/chat/",
              "pathParameters": {
                "chat_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "permissions": [
                  "add_editor"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "add_editor"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_datasourceBox": {
      "subpackageId": "subpackage_datasourceBox",
      "name": "datasourceBox",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_files_org__org_id__project__project_id__datasource_box__connection_id__list_files_get",
          "originalEndpointId": "datasource - box.list_files_org__org_id__project__project_id__datasource_box__connection_id__list_files_get",
          "name": "List Files",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/list-files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "parent_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ObjectList"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post",
          "originalEndpointId": "datasource - box.fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post",
          "name": "Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/fetch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/x-www-form-urlencoded",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_box_authorize_get",
          "originalEndpointId": "datasource - box.authorize_org__org_id__project__project_id__datasource_box_authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_box__connection_id__authorize_get",
          "originalEndpointId": "datasource - box.authorize_org__org_id__project__project_id__datasource_box__connection_id__authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "delete_org__org_id__project__project_id__datasource_box__connection_id__delete",
          "originalEndpointId": "datasource - box.delete_org__org_id__project__project_id__datasource_box__connection_id__delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__datasource_box__connection_id__runs_get",
          "originalEndpointId": "datasource - box.list_runs_org__org_id__project__project_id__datasource_box__connection_id__runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__datasource_box__connection_id__run_get",
          "originalEndpointId": "datasource - box.check_status_org__org_id__project__project_id__datasource_box__connection_id__run_get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "sync_run_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {
                "sync_run_id": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_get",
          "originalEndpointId": "datasource - box.get_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_get",
          "name": "Get Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceConfiguration"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_post",
          "originalEndpointId": "datasource - box.set_configuration_org__org_id__project__project_id__datasource_box__connection_id__config_post",
          "name": "Set Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/box/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DatasourceConfiguration"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "private": true,
                "root_folder_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "callback_datasource_box_callback_get",
          "originalEndpointId": "datasource - box.callback_datasource_box_callback_get",
          "name": "Callback",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasource/box/callback"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/datasource/box/callback",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_datasourceConfluence": {
      "subpackageId": "subpackage_datasourceConfluence",
      "name": "datasourceConfluence",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_files_org__org_id__project__project_id__datasource_confluence__connection_id__list_files_get",
          "originalEndpointId": "datasource - confluence.list_files_org__org_id__project__project_id__datasource_confluence__connection_id__list_files_get",
          "name": "List Files",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/list-files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "parent_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ObjectList"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post",
          "originalEndpointId": "datasource - confluence.fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post",
          "name": "Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/fetch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/x-www-form-urlencoded",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_confluence_authorize_get",
          "originalEndpointId": "datasource - confluence.authorize_org__org_id__project__project_id__datasource_confluence_authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_confluence__connection_id__authorize_get",
          "originalEndpointId": "datasource - confluence.authorize_org__org_id__project__project_id__datasource_confluence__connection_id__authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "delete_org__org_id__project__project_id__datasource_confluence__connection_id__delete",
          "originalEndpointId": "datasource - confluence.delete_org__org_id__project__project_id__datasource_confluence__connection_id__delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__datasource_confluence__connection_id__runs_get",
          "originalEndpointId": "datasource - confluence.list_runs_org__org_id__project__project_id__datasource_confluence__connection_id__runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__datasource_confluence__connection_id__run_get",
          "originalEndpointId": "datasource - confluence.check_status_org__org_id__project__project_id__datasource_confluence__connection_id__run_get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "sync_run_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {
                "sync_run_id": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_get",
          "originalEndpointId": "datasource - confluence.get_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_get",
          "name": "Get Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceConfiguration"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_post",
          "originalEndpointId": "datasource - confluence.set_configuration_org__org_id__project__project_id__datasource_confluence__connection_id__config_post",
          "name": "Set Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DatasourceConfiguration"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "private": true,
                "root_folder_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "callback_datasource_confluence_callback_get",
          "originalEndpointId": "datasource - confluence.callback_datasource_confluence_callback_get",
          "name": "Callback",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasource/confluence/callback"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/datasource/confluence/callback",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_datasourceDropbox": {
      "subpackageId": "subpackage_datasourceDropbox",
      "name": "datasourceDropbox",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_files_org__org_id__project__project_id__datasource_dropbox__connection_id__list_files_get",
          "originalEndpointId": "datasource - dropbox.list_files_org__org_id__project__project_id__datasource_dropbox__connection_id__list_files_get",
          "name": "List Files",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/list-files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "parent_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ObjectList"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post",
          "originalEndpointId": "datasource - dropbox.fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post",
          "name": "Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/fetch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/x-www-form-urlencoded",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_dropbox_authorize_get",
          "originalEndpointId": "datasource - dropbox.authorize_org__org_id__project__project_id__datasource_dropbox_authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_dropbox__connection_id__authorize_get",
          "originalEndpointId": "datasource - dropbox.authorize_org__org_id__project__project_id__datasource_dropbox__connection_id__authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "delete_org__org_id__project__project_id__datasource_dropbox__connection_id__delete",
          "originalEndpointId": "datasource - dropbox.delete_org__org_id__project__project_id__datasource_dropbox__connection_id__delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__datasource_dropbox__connection_id__runs_get",
          "originalEndpointId": "datasource - dropbox.list_runs_org__org_id__project__project_id__datasource_dropbox__connection_id__runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__datasource_dropbox__connection_id__run_get",
          "originalEndpointId": "datasource - dropbox.check_status_org__org_id__project__project_id__datasource_dropbox__connection_id__run_get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "sync_run_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {
                "sync_run_id": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_get",
          "originalEndpointId": "datasource - dropbox.get_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_get",
          "name": "Get Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceConfiguration"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_post",
          "originalEndpointId": "datasource - dropbox.set_configuration_org__org_id__project__project_id__datasource_dropbox__connection_id__config_post",
          "name": "Set Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DatasourceConfiguration"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "private": true,
                "root_folder_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "callback_datasource_dropbox_callback_get",
          "originalEndpointId": "datasource - dropbox.callback_datasource_dropbox_callback_get",
          "name": "Callback",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasource/dropbox/callback"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/datasource/dropbox/callback",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_datasourceGdrive": {
      "subpackageId": "subpackage_datasourceGdrive",
      "name": "datasourceGdrive",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_files_org__org_id__project__project_id__datasource_gdrive__connection_id__list_files_get",
          "originalEndpointId": "datasource - gdrive.list_files_org__org_id__project__project_id__datasource_gdrive__connection_id__list_files_get",
          "name": "List Files",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/list-files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "parent_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ObjectList"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post",
          "originalEndpointId": "datasource - gdrive.fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post",
          "name": "Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/fetch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/x-www-form-urlencoded",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_gdrive_authorize_get",
          "originalEndpointId": "datasource - gdrive.authorize_org__org_id__project__project_id__datasource_gdrive_authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_gdrive__connection_id__authorize_get",
          "originalEndpointId": "datasource - gdrive.authorize_org__org_id__project__project_id__datasource_gdrive__connection_id__authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "delete_org__org_id__project__project_id__datasource_gdrive__connection_id__delete",
          "originalEndpointId": "datasource - gdrive.delete_org__org_id__project__project_id__datasource_gdrive__connection_id__delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__datasource_gdrive__connection_id__runs_get",
          "originalEndpointId": "datasource - gdrive.list_runs_org__org_id__project__project_id__datasource_gdrive__connection_id__runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__datasource_gdrive__connection_id__run_get",
          "originalEndpointId": "datasource - gdrive.check_status_org__org_id__project__project_id__datasource_gdrive__connection_id__run_get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "sync_run_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {
                "sync_run_id": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_get",
          "originalEndpointId": "datasource - gdrive.get_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_get",
          "name": "Get Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceConfiguration"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_post",
          "originalEndpointId": "datasource - gdrive.set_configuration_org__org_id__project__project_id__datasource_gdrive__connection_id__config_post",
          "name": "Set Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DatasourceConfiguration"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "private": true,
                "root_folder_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "callback_datasource_gdrive_callback_get",
          "originalEndpointId": "datasource - gdrive.callback_datasource_gdrive_callback_get",
          "name": "Callback",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasource/gdrive/callback"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/datasource/gdrive/callback",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_datasourceNotion": {
      "subpackageId": "subpackage_datasourceNotion",
      "name": "datasourceNotion",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_files_org__org_id__project__project_id__datasource_notion__connection_id__list_files_get",
          "originalEndpointId": "datasource - notion.list_files_org__org_id__project__project_id__datasource_notion__connection_id__list_files_get",
          "name": "List Files",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/list-files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "parent_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ObjectList"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post",
          "originalEndpointId": "datasource - notion.fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post",
          "name": "Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/fetch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/x-www-form-urlencoded",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_notion_authorize_get",
          "originalEndpointId": "datasource - notion.authorize_org__org_id__project__project_id__datasource_notion_authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_notion__connection_id__authorize_get",
          "originalEndpointId": "datasource - notion.authorize_org__org_id__project__project_id__datasource_notion__connection_id__authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "delete_org__org_id__project__project_id__datasource_notion__connection_id__delete",
          "originalEndpointId": "datasource - notion.delete_org__org_id__project__project_id__datasource_notion__connection_id__delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__datasource_notion__connection_id__runs_get",
          "originalEndpointId": "datasource - notion.list_runs_org__org_id__project__project_id__datasource_notion__connection_id__runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__datasource_notion__connection_id__run_get",
          "originalEndpointId": "datasource - notion.check_status_org__org_id__project__project_id__datasource_notion__connection_id__run_get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "sync_run_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {
                "sync_run_id": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_get",
          "originalEndpointId": "datasource - notion.get_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_get",
          "name": "Get Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceConfiguration"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_post",
          "originalEndpointId": "datasource - notion.set_configuration_org__org_id__project__project_id__datasource_notion__connection_id__config_post",
          "name": "Set Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/notion/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DatasourceConfiguration"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "private": true,
                "root_folder_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "callback_datasource_notion_callback_get",
          "originalEndpointId": "datasource - notion.callback_datasource_notion_callback_get",
          "name": "Callback",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasource/notion/callback"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/datasource/notion/callback",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_datasourceOnedrive": {
      "subpackageId": "subpackage_datasourceOnedrive",
      "name": "datasourceOnedrive",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_files_org__org_id__project__project_id__datasource_onedrive__connection_id__list_files_get",
          "originalEndpointId": "datasource - onedrive.list_files_org__org_id__project__project_id__datasource_onedrive__connection_id__list_files_get",
          "name": "List Files",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/list-files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "parent_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ObjectList"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post",
          "originalEndpointId": "datasource - onedrive.fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post",
          "name": "Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/fetch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/x-www-form-urlencoded",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_onedrive_authorize_get",
          "originalEndpointId": "datasource - onedrive.authorize_org__org_id__project__project_id__datasource_onedrive_authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_onedrive__connection_id__authorize_get",
          "originalEndpointId": "datasource - onedrive.authorize_org__org_id__project__project_id__datasource_onedrive__connection_id__authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "delete_org__org_id__project__project_id__datasource_onedrive__connection_id__delete",
          "originalEndpointId": "datasource - onedrive.delete_org__org_id__project__project_id__datasource_onedrive__connection_id__delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__datasource_onedrive__connection_id__runs_get",
          "originalEndpointId": "datasource - onedrive.list_runs_org__org_id__project__project_id__datasource_onedrive__connection_id__runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__datasource_onedrive__connection_id__run_get",
          "originalEndpointId": "datasource - onedrive.check_status_org__org_id__project__project_id__datasource_onedrive__connection_id__run_get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "sync_run_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {
                "sync_run_id": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_get",
          "originalEndpointId": "datasource - onedrive.get_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_get",
          "name": "Get Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceConfiguration"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_post",
          "originalEndpointId": "datasource - onedrive.set_configuration_org__org_id__project__project_id__datasource_onedrive__connection_id__config_post",
          "name": "Set Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DatasourceConfiguration"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "private": true,
                "root_folder_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "callback_datasource_onedrive_callback_get",
          "originalEndpointId": "datasource - onedrive.callback_datasource_onedrive_callback_get",
          "name": "Callback",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasource/onedrive/callback"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/datasource/onedrive/callback",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_datasourceSharepoint": {
      "subpackageId": "subpackage_datasourceSharepoint",
      "name": "datasourceSharepoint",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "list_files_org__org_id__project__project_id__datasource_sharepoint__connection_id__list_files_get",
          "originalEndpointId": "datasource - sharepoint.list_files_org__org_id__project__project_id__datasource_sharepoint__connection_id__list_files_get",
          "name": "List Files",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/list-files"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "parent_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "default": ""
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ObjectList"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "foo",
                    "name": "foo",
                    "synced": false,
                    "size": "foo",
                    "mimeType": "foo",
                    "createdTime": "foo",
                    "modifiedTime": "foo",
                    "type": "file",
                    "tags": [
                      "no_size"
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post",
          "originalEndpointId": "datasource - sharepoint.fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post",
          "name": "Fetch",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/fetch"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/x-www-form-urlencoded",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_sharepoint_authorize_get",
          "originalEndpointId": "datasource - sharepoint.authorize_org__org_id__project__project_id__datasource_sharepoint_authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "connection_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "authorize_org__org_id__project__project_id__datasource_sharepoint__connection_id__authorize_get",
          "originalEndpointId": "datasource - sharepoint.authorize_org__org_id__project__project_id__datasource_sharepoint__connection_id__authorize_get",
          "name": "Authorize",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/authorize"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "redirect_to",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "DELETE",
          "id": "delete_org__org_id__project__project_id__datasource_sharepoint__connection_id__delete",
          "originalEndpointId": "datasource - sharepoint.delete_org__org_id__project__project_id__datasource_sharepoint__connection_id__delete",
          "name": "Delete",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__datasource_sharepoint__connection_id__runs_get",
          "originalEndpointId": "datasource - sharepoint.list_runs_org__org_id__project__project_id__datasource_sharepoint__connection_id__runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__datasource_sharepoint__connection_id__run_get",
          "originalEndpointId": "datasource - sharepoint.check_status_org__org_id__project__project_id__datasource_sharepoint__connection_id__run_get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "sync_run_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {
                "sync_run_id": "foo"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "get_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_get",
          "originalEndpointId": "datasource - sharepoint.get_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_get",
          "name": "Get Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceConfiguration"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "set_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_post",
          "originalEndpointId": "datasource - sharepoint.set_configuration_org__org_id__project__project_id__datasource_sharepoint__connection_id__config_post",
          "name": "Set Configuration",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "connection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/"
              },
              {
                "type": "pathParameter",
                "value": "connection_id"
              },
              {
                "type": "literal",
                "value": "/config"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DatasourceConfiguration"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "connection_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo",
                "private": true,
                "root_folder_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "private": true,
                  "root_folder_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "callback_datasource_sharepoint_callback_get",
          "originalEndpointId": "datasource - sharepoint.callback_datasource_sharepoint_callback_get",
          "name": "Callback",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/datasource/sharepoint/callback"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "code",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/datasource/sharepoint/callback",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_internal": {
      "subpackageId": "subpackage_internal",
      "name": "internal",
      "endpoints": [
        {
          "auth": false,
          "method": "POST",
          "id": "webhook_hydra_token_hook_internal_webhook_hydra_token_hook_post",
          "originalEndpointId": "internal.webhook_hydra_token_hook_internal_webhook_hydra_token_hook_post",
          "name": "Webhook Hydra Token Hook",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/internal/webhook/hydra/token_hook"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "HydraWebhookTokenHook"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/internal/webhook/hydra/token_hook",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "session": {
                  "client_id": "foo",
                  "id_token": {
                    "id_token_claims": {}
                  }
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "session": {
                    "client_id": "foo",
                    "id_token": {
                      "id_token_claims": {}
                    }
                  }
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "register_oauth_client_internal_project__project_id__register_oauth_client_post",
          "originalEndpointId": "internal.register_oauth_client_internal_project__project_id__register_oauth_client_post",
          "name": "Register Oauth Client",
          "path": {
            "pathParameters": [
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/internal/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/register_oauth_client"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "OAuthClientCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "OAuthClientCreateResponse"
              }
            },
            "statusCode": 201,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/internal/project/",
              "pathParameters": {
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "redirect_uris": [
                    "foo"
                  ],
                  "client_id": "foo",
                  "client_secret": "foo",
                  "scope": ""
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "foo",
                  "redirect_uris": [
                    "foo"
                  ],
                  "client_id": "foo",
                  "client_secret": "foo",
                  "scope": ""
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "method": "POST",
          "id": "webhook_kratos_signup_check_internal_webhook_kratos_signup_check_post",
          "originalEndpointId": "internal.webhook_kratos_signup_check_internal_webhook_kratos_signup_check_post",
          "name": "Webhook Kratos Signup Check",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/internal/webhook/kratos/signup_check"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "KratosWebhook"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "KratosWebhookResponse"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/internal/webhook/kratos/signup_check",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "identity_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "identity_id": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "messages": [
                    {
                      "instance_ptr": "foo",
                      "messages": [
                        {
                          "id": 42,
                          "text": "foo",
                          "type": "info"
                        }
                      ]
                    }
                  ],
                  "identity": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "messages": [
                    {
                      "instance_ptr": "foo",
                      "messages": [
                        {
                          "id": 42,
                          "text": "foo",
                          "type": "info"
                        }
                      ]
                    }
                  ],
                  "identity": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "method": "POST",
          "id": "webhook_kratos_signup_commit_internal_webhook_kratos_signup_commit_post",
          "originalEndpointId": "internal.webhook_kratos_signup_commit_internal_webhook_kratos_signup_commit_post",
          "name": "Webhook Kratos Signup Commit",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/internal/webhook/kratos/signup_commit"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "KratosWebhook"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "KratosWebhookResponse"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/internal/webhook/kratos/signup_commit",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "identity_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "identity_id": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "messages": [
                    {
                      "instance_ptr": "foo",
                      "messages": [
                        {
                          "id": 42,
                          "text": "foo",
                          "type": "info"
                        }
                      ]
                    }
                  ],
                  "identity": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "messages": [
                    {
                      "instance_ptr": "foo",
                      "messages": [
                        {
                          "id": 42,
                          "text": "foo",
                          "type": "info"
                        }
                      ]
                    }
                  ],
                  "identity": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_scrape": {
      "subpackageId": "subpackage_scrape",
      "name": "scrape",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "id": "enable_org__org_id__project__project_id__scrape_post",
          "originalEndpointId": "scrape.enable_org__org_id__project__project_id__scrape_post",
          "name": "Enable Web Scrape",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/scrape"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "fetch_org__org_id__project__project_id__scrape_start_post",
          "originalEndpointId": "scrape.fetch_org__org_id__project__project_id__scrape_start_post",
          "name": "Initialise Web Scrape",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/scrape/start"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "SiteScrapeRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "urls": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "urls": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "method": "GET",
          "id": "check_status_org__org_id__project__project_id__scrape_run__sync_run_id__get",
          "originalEndpointId": "scrape.check_status_org__org_id__project__project_id__scrape_run__sync_run_id__get",
          "name": "Check Status",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "sync_run_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/scrape/run/"
              },
              {
                "type": "pathParameter",
                "value": "sync_run_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "DatasourceSyncRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "sync_run_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_id": "foo",
                  "status": "pending",
                  "run_output": {},
                  "id": "foo",
                  "created": "foo",
                  "modified": "foo",
                  "datasource_connection": {
                    "private": true,
                    "project_id": "foo",
                    "datasource_id": "foo",
                    "config": {},
                    "token": "",
                    "created_by": "foo",
                    "id": "foo"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "list_runs_org__org_id__project__project_id__scrape_runs_get",
          "originalEndpointId": "scrape.list_runs_org__org_id__project__project_id__scrape_runs_get",
          "name": "List Runs",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/scrape/runs"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "default": 25
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_DatasourceSyncRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_id": "foo",
                      "status": "pending",
                      "run_output": {},
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "datasource_connection": {
                        "private": true,
                        "project_id": "foo",
                        "datasource_id": "foo",
                        "config": {},
                        "token": "",
                        "created_by": "foo",
                        "id": "foo"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_compose": {
      "subpackageId": "subpackage_compose",
      "name": "compose",
      "endpoints": [
        {
          "auth": true,
          "method": "POST",
          "id": "initialise_org__org_id__project__project_id__compose_post",
          "originalEndpointId": "compose.initialise_org__org_id__project__project_id__compose_post",
          "name": "Initialise",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/compose"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ComposeInit"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "generate_org__org_id__project__project_id__compose_generate_post",
          "originalEndpointId": "compose.generate_org__org_id__project__project_id__compose_generate_post",
          "name": "Generate",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/compose/generate"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_generate_org__org_id__project__project_id__compose_generate_post"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "compose": {
                  "structure": [
                    {
                      "position": 42,
                      "title": "foo"
                    }
                  ]
                },
                "context": {
                  "title": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "compose": {
                    "structure": [
                      {
                        "position": 42,
                        "title": "foo"
                      }
                    ]
                  },
                  "context": {
                    "title": "foo"
                  }
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "update_section_org__org_id__project__project_id__compose_update_section_post",
          "originalEndpointId": "compose.update_section_org__org_id__project__project_id__compose_update_section_post",
          "name": "Update Section",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/compose/update_section"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_update_section_org__org_id__project__project_id__compose_update_section_post"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "context": {
                  "title": "foo"
                },
                "existing_content": {
                  "existing_content": "foo"
                },
                "update_instruction": {
                  "position": 42,
                  "section_title": "foo",
                  "instructions": [
                    "foo"
                  ]
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "context": {
                    "title": "foo"
                  },
                  "existing_content": {
                    "existing_content": "foo"
                  },
                  "update_instruction": {
                    "position": 42,
                    "section_title": "foo",
                    "instructions": [
                      "foo"
                    ]
                  }
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post",
          "originalEndpointId": "compose.section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post",
          "name": "Section Talking Points",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/compose/section_talking_points"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Body_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "context": {
                  "title": "foo"
                },
                "existing_content": {
                  "existing_content": "foo"
                },
                "update_instruction": {
                  "section_heading": "foo"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "context": {
                    "title": "foo"
                  },
                  "existing_content": {
                    "existing_content": "foo"
                  },
                  "update_instruction": {
                    "section_heading": "foo"
                  }
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "topic_org__org_id__project__project_id__compose_topic_post",
          "originalEndpointId": "compose.topic_org__org_id__project__project_id__compose_topic_post",
          "name": "Topic",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/compose/topic"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ComposeTopicPoint"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "title": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_tasks": {
      "subpackageId": "subpackage_tasks",
      "name": "tasks",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "getAllTasks",
          "originalEndpointId": "tasks.getAllTasks",
          "name": "List all Tasks",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter tasks by name. Supports partial matches.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            {
              "description": "The maximum number of items to return per page. Defaults to `100` if not specified.",
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100,
                      "default": 100
                    }
                  }
                }
              }
            },
            {
              "description": "A cursor for pagination. Use the `next_cursor` value from the previous response to get the next page of results.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_Task_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "name": "foo",
                      "description": "foo",
                      "enabled": true,
                      "id": "foo",
                      "project_id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "revisions": [
                        {
                          "system_prompt": null,
                          "user_prompt": null,
                          "llm_model": "gpt-4o",
                          "llm_config": {
                            "temperature": 0.2
                          },
                          "output_format": {},
                          "task_forwarder_id": "foo",
                          "rag": {
                            "collection_id": "foo",
                            "rag_param": "foo"
                          },
                          "image_required": false,
                          "id": "foo",
                          "created": "foo",
                          "modified": "foo",
                          "active": false
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "name": "foo",
                      "description": "foo",
                      "enabled": true,
                      "id": "foo",
                      "project_id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "revisions": [
                        {
                          "system_prompt": null,
                          "user_prompt": null,
                          "llm_model": "gpt-4o",
                          "llm_config": {
                            "temperature": 0.2
                          },
                          "output_format": {},
                          "task_forwarder_id": "foo",
                          "rag": {
                            "collection_id": "foo",
                            "rag_param": "foo"
                          },
                          "image_required": false,
                          "id": "foo",
                          "created": "foo",
                          "modified": "foo",
                          "active": false
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Tasks are the core of the platform and define the prompts and models used to generate responses.",
          "method": "POST",
          "id": "createTask",
          "originalEndpointId": "tasks.createTask",
          "name": "Create a Task",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TaskCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Task"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "system_prompt": null,
                "user_prompt": null,
                "llm_model": "gpt-4o",
                "output_format": {
                  "compliance": "bool",
                  "hint": {
                    "type": "str"
                  },
                  "match": {
                    "description": "True if the provided description is a close match",
                    "type": "bool"
                  },
                  "rationale": "str"
                },
                "image_required": false,
                "name": "Fintech Pre-Triage",
                "description": "A task to pre-triage user onboarding before IDV.",
                "enabled": true
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "system_prompt": null,
                  "user_prompt": null,
                  "llm_model": "gpt-4o",
                  "output_format": {
                    "compliance": "bool",
                    "hint": {
                      "type": "str"
                    },
                    "match": {
                      "description": "True if the provided description is a close match",
                      "type": "bool"
                    },
                    "rationale": "str"
                  },
                  "image_required": false,
                  "name": "Fintech Pre-Triage",
                  "description": "A task to pre-triage user onboarding before IDV.",
                  "enabled": true
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Fintech Pre-Triage",
                  "description": "A task to pre-triage user onboarding before IDV.",
                  "enabled": true,
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "2024-06-13T14:01:03.021673",
                  "modified": "2024-06-13T14:01:03.021673",
                  "revisions": [
                    {
                      "system_prompt": null,
                      "user_prompt": null,
                      "llm_model": "gpt-4o",
                      "llm_config": {
                        "temperature": 0.2
                      },
                      "output_format": {},
                      "task_forwarder_id": "foo",
                      "rag": {
                        "collection_id": "foo",
                        "rag_param": "foo"
                      },
                      "image_required": false,
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "active": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Fintech Pre-Triage",
                  "description": "A task to pre-triage user onboarding before IDV.",
                  "enabled": true,
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "2024-06-13T14:01:03.021673",
                  "modified": "2024-06-13T14:01:03.021673",
                  "revisions": [
                    {
                      "system_prompt": null,
                      "user_prompt": null,
                      "llm_model": "gpt-4o",
                      "llm_config": {
                        "temperature": 0.2
                      },
                      "output_format": {},
                      "task_forwarder_id": "foo",
                      "rag": {
                        "collection_id": "foo",
                        "rag_param": "foo"
                      },
                      "image_required": false,
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "active": false
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "getTask",
          "originalEndpointId": "tasks.getTask",
          "name": "Fetch a Task",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task to reference.",
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Task"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001",
                "task_id": "01909843-3596-da54-4756-28af46917e74"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Fintech Pre-Triage",
                  "description": "A task to pre-triage user onboarding before IDV.",
                  "enabled": true,
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "2024-06-13T14:01:03.021673",
                  "modified": "2024-06-13T14:01:03.021673",
                  "revisions": [
                    {
                      "system_prompt": null,
                      "user_prompt": null,
                      "llm_model": "gpt-4o",
                      "llm_config": {
                        "temperature": 0.2
                      },
                      "output_format": {},
                      "task_forwarder_id": "foo",
                      "rag": {
                        "collection_id": "foo",
                        "rag_param": "foo"
                      },
                      "image_required": false,
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "active": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Fintech Pre-Triage",
                  "description": "A task to pre-triage user onboarding before IDV.",
                  "enabled": true,
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "2024-06-13T14:01:03.021673",
                  "modified": "2024-06-13T14:01:03.021673",
                  "revisions": [
                    {
                      "system_prompt": null,
                      "user_prompt": null,
                      "llm_model": "gpt-4o",
                      "llm_config": {
                        "temperature": 0.2
                      },
                      "output_format": {},
                      "task_forwarder_id": "foo",
                      "rag": {
                        "collection_id": "foo",
                        "rag_param": "foo"
                      },
                      "image_required": false,
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "active": false
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "editTask",
          "originalEndpointId": "tasks.editTask",
          "name": "Update a Task",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task to reference.",
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TaskUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Task"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001",
                "task_id": "01909843-3596-da54-4756-28af46917e74"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Fintech Pre-Triage",
                  "description": "A task to pre-triage user onboarding before IDV.",
                  "enabled": true,
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "2024-06-13T14:01:03.021673",
                  "modified": "2024-06-13T14:01:03.021673",
                  "revisions": [
                    {
                      "system_prompt": null,
                      "user_prompt": null,
                      "llm_model": "gpt-4o",
                      "llm_config": {
                        "temperature": 0.2
                      },
                      "output_format": {},
                      "task_forwarder_id": "foo",
                      "rag": {
                        "collection_id": "foo",
                        "rag_param": "foo"
                      },
                      "image_required": false,
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "active": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Fintech Pre-Triage",
                  "description": "A task to pre-triage user onboarding before IDV.",
                  "enabled": true,
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "2024-06-13T14:01:03.021673",
                  "modified": "2024-06-13T14:01:03.021673",
                  "revisions": [
                    {
                      "system_prompt": null,
                      "user_prompt": null,
                      "llm_model": "gpt-4o",
                      "llm_config": {
                        "temperature": 0.2
                      },
                      "output_format": {},
                      "task_forwarder_id": "foo",
                      "rag": {
                        "collection_id": "foo",
                        "rag_param": "foo"
                      },
                      "image_required": false,
                      "id": "foo",
                      "created": "foo",
                      "modified": "foo",
                      "active": false
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Individual Task Runs provide an audit trail for all Task executions.",
          "method": "GET",
          "id": "getTaskRuns",
          "originalEndpointId": "tasks.getTaskRuns",
          "name": "Fetch Task Runs",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task to reference.",
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The maximum number of items to return per page. Defaults to `100` if not specified.",
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100,
                      "default": 100
                    }
                  }
                }
              }
            },
            {
              "description": "A cursor for pagination. Use the `next_cursor` value from the previous response to get the next page of results.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            },
            {
              "description": "The specific Task Revision to reference.",
              "key": "task_revision_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_TaskRun_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001",
                "task_id": "01909843-3596-da54-4756-28af46917e74"
              },
              "queryParameters": {
                "task_revision_id": "0190a234-8dc6-6d08-aea9-928fcecad8f1"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_revision_id": "foo",
                      "response": {},
                      "run_data": {},
                      "id": "foo",
                      "created": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "task_revision_id": "foo",
                      "response": {},
                      "run_data": {},
                      "id": "foo",
                      "created": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Run a specified Task against provided text and/or image input. The response is controlled by the `output_format` of the Task. Note that a Task must be `enabled` to be run.",
          "method": "POST",
          "id": "runTask",
          "originalEndpointId": "tasks.runTask",
          "name": "Run a Task",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task to reference.",
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/run"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "org_id",
                "project_id": "project_id",
                "task_id": "task_id"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "task_input": {
                  "description": "brown hair, blue sweater"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "body": {
                    "task_revision_id": "0190a234-8dc6-6d08-aea9-928fcecad8f1",
                    "response": {
                      "hint": "The image is not suitable for authentication and onboarding checks. Please ensure the photo is a clear, passport-style image with a plain background, good lighting, and no accessories like sunglasses.",
                      "match": false,
                      "rationale": "The image does not meet the requirements for a passport-style photo. The person is wearing sunglasses, and the background is not plain.",
                      "compliance": false
                    },
                    "run_data": {
                      "audit": {
                        "ip": "10.152.3.59",
                        "ua": "Vercel Edge Functions"
                      },
                      "submitted": {
                        "description": "brown hair, blue sweater"
                      }
                    },
                    "id": "0190a234-cb74-6342-dec6-4be8f73f0c9f",
                    "created": "2024-07-11T14:31:21.989219"
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "body": {
                    "task_revision_id": "0190a234-8dc6-6d08-aea9-928fcecad8f1",
                    "response": {
                      "hint": "The image is not suitable for authentication and onboarding checks. Please ensure the photo is a clear, passport-style image with a plain background, good lighting, and no accessories like sunglasses.",
                      "match": false,
                      "rationale": "The image does not meet the requirements for a passport-style photo. The person is wearing sunglasses, and the background is not plain.",
                      "compliance": false
                    },
                    "run_data": {
                      "audit": {
                        "ip": "10.152.3.59",
                        "ua": "Vercel Edge Functions"
                      },
                      "submitted": {
                        "description": "brown hair, blue sweater"
                      }
                    },
                    "id": "0190a234-cb74-6342-dec6-4be8f73f0c9f",
                    "created": "2024-07-11T14:31:21.989219"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Lists all members that have been granted direct access to the task.",
          "method": "GET",
          "id": "task_iam_list_members",
          "originalEndpointId": "tasks.task_iam_list_members",
          "name": "IAM - List Task Members",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/iam/members"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "id",
                    "value": "OrgOrgIdProjectProjectIdTaskTaskIdIamMembersGetParametersSchema"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_IAMMember_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "task_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "member": "foo",
                      "roles": [
                        "foo"
                      ],
                      "name": "foo",
                      "avatar_url": "foo",
                      "total_subjects": 1
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a specific member that has been granted direct access to the task.",
          "method": "GET",
          "id": "task_get_member",
          "originalEndpointId": "tasks.task_get_member",
          "name": "IAM - Lookup Task Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "task_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update the roles that a member holds on the task.",
          "method": "POST",
          "id": "task_iam_update_member_roles",
          "originalEndpointId": "tasks.task_iam_update_member_roles",
          "name": "IAM - Update Task Member",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "key": "member",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/iam/members/"
              },
              {
                "type": "pathParameter",
                "value": "member"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TaskIAMMemberRoleUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMMember"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "task_id": "foo",
                "member": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "member": "foo",
                  "roles": [
                    "foo"
                  ],
                  "name": "foo",
                  "avatar_url": "foo",
                  "total_subjects": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Test the permissions that the caller (or another subject) holds on the task.",
          "method": "POST",
          "id": "task_iam_test_permissions",
          "originalEndpointId": "tasks.task_iam_test_permissions",
          "name": "IAM - Test Task Permissions",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/iam/test"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TaskIAMPermissionTest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "IAMPermissionTest"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo",
                "task_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "permissions": [
                  "add_editor"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "add_editor"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "permissions": [
                    "foo"
                  ],
                  "member": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Fetch an individual Task Run.",
          "method": "GET",
          "id": "getTaskRun",
          "originalEndpointId": "tasks.getTaskRun",
          "name": "Fetch Task Run",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task to reference.",
                "key": "task_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task Run to reference.",
                "key": "task_run_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task/"
              },
              {
                "type": "pathParameter",
                "value": "task_id"
              },
              {
                "type": "literal",
                "value": "/run/"
              },
              {
                "type": "pathParameter",
                "value": "task_run_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskRun"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001",
                "task_id": "01909843-3596-da54-4756-28af46917e74",
                "task_run_id": "129c78d7-2e1f-4a77-adf3-68d69b0a3c71"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "task_revision_id": "0190a234-8dc6-6d08-aea9-928fcecad8f1",
                  "response": {
                    "compliance": false,
                    "hint": "The image is not suitable for authentication and onboarding checks. Please ensure the photo is a clear, passport-style image with a plain background, good lighting, and no accessories like sunglasses.",
                    "match": false,
                    "rationale": "The image does not meet the requirements for a passport-style photo. The person is wearing sunglasses, and the background is not plain."
                  },
                  "run_data": {
                    "audit": {
                      "ip": "10.152.3.59",
                      "ua": "Vercel Edge Functions"
                    },
                    "submitted": {
                      "description": "brown hair, blue sweater"
                    }
                  },
                  "id": "0190a234-cb74-6342-dec6-4be8f73f0c9f",
                  "created": "2024-07-11T14:31:21.989219"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "task_revision_id": "0190a234-8dc6-6d08-aea9-928fcecad8f1",
                  "response": {
                    "compliance": false,
                    "hint": "The image is not suitable for authentication and onboarding checks. Please ensure the photo is a clear, passport-style image with a plain background, good lighting, and no accessories like sunglasses.",
                    "match": false,
                    "rationale": "The image does not meet the requirements for a passport-style photo. The person is wearing sunglasses, and the background is not plain."
                  },
                  "run_data": {
                    "audit": {
                      "ip": "10.152.3.59",
                      "ua": "Vercel Edge Functions"
                    },
                    "submitted": {
                      "description": "brown hair, blue sweater"
                    }
                  },
                  "id": "0190a234-cb74-6342-dec6-4be8f73f0c9f",
                  "created": "2024-07-11T14:31:21.989219"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_taskForwarders": {
      "subpackageId": "subpackage_taskForwarders",
      "name": "taskForwarders",
      "endpoints": [
        {
          "auth": true,
          "method": "GET",
          "id": "getAllTaskForwarders",
          "originalEndpointId": "task forwarders.getAllTaskForwarders",
          "name": "List all Task Forwarders",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task_forwarder"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The maximum number of items to return per page. Defaults to `100` if not specified.",
              "key": "page_limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 100,
                      "default": 100
                    }
                  }
                }
              }
            },
            {
              "description": "A cursor for pagination. Use the `next_cursor` value from the previous response to get the next page of results.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "optional",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedResultSet_TaskForwarder_"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "name": "foo",
                      "description": "foo",
                      "config": {
                        "destination_url": "foo"
                      },
                      "config_sensitive": {
                        "signing_key": "foo"
                      },
                      "id": "foo",
                      "project_id": "foo",
                      "created": "foo",
                      "modified": "foo"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pagination": {
                    "next_cursor": "019097c5-5560-05b5-4a48-5197a269683b",
                    "has_next": true,
                    "page_limit": 100
                  },
                  "results": [
                    {
                      "name": "foo",
                      "description": "foo",
                      "config": {
                        "destination_url": "foo"
                      },
                      "config_sensitive": {
                        "signing_key": "foo"
                      },
                      "id": "foo",
                      "project_id": "foo",
                      "created": "foo",
                      "modified": "foo"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "A Task Forwarder will receive the output of a Task and forward it to the specified destination. This can be used to send data to external systems, or to trigger other actions based on the output of a Task.",
          "method": "POST",
          "id": "createTaskForwarder",
          "originalEndpointId": "task forwarders.createTaskForwarder",
          "name": "Create a Task Forwarder",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task_forwarder"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TaskForwarderCreate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskForwarder"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "Webhook Endpoint",
                "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                "config": {
                  "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                },
                "config_sensitive": {
                  "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "Webhook Endpoint",
                  "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                  "config": {
                    "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                  },
                  "config_sensitive": {
                    "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Webhook Endpoint",
                  "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                  "config": {
                    "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                  },
                  "config_sensitive": {
                    "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                  },
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "foo",
                  "modified": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Webhook Endpoint",
                  "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                  "config": {
                    "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                  },
                  "config_sensitive": {
                    "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                  },
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "foo",
                  "modified": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "GET",
          "id": "getTaskForwarder",
          "originalEndpointId": "task forwarders.getTaskForwarder",
          "name": "Fetch a Task Forwarder",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task to reference.",
                "key": "task_forwarder_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task_forwarder/"
              },
              {
                "type": "pathParameter",
                "value": "task_forwarder_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskForwarder"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001",
                "task_forwarder_id": "01909843-3596-da54-4756-28af46917e74"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Webhook Endpoint",
                  "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                  "config": {
                    "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                  },
                  "config_sensitive": {
                    "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                  },
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "foo",
                  "modified": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Webhook Endpoint",
                  "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                  "config": {
                    "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                  },
                  "config_sensitive": {
                    "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                  },
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "foo",
                  "modified": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "POST",
          "id": "updateTaskForwarder",
          "originalEndpointId": "task forwarders.updateTaskForwarder",
          "name": "Update a Task Forwarder",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The specific Task to reference.",
                "key": "task_forwarder_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/task_forwarder/"
              },
              {
                "type": "pathParameter",
                "value": "task_forwarder_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TaskForwarderUpdate"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TaskForwarder"
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "123e4567-e89b-12d3-a456-426614174000",
                "project_id": "123e4567-e89b-12d3-a456-426614174001",
                "task_forwarder_id": "01909843-3596-da54-4756-28af46917e74"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Webhook Endpoint",
                  "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                  "config": {
                    "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                  },
                  "config_sensitive": {
                    "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                  },
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "foo",
                  "modified": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Webhook Endpoint",
                  "description": "Send all Task output to this API endpoint to ensure real-time updates of all Task Runs.",
                  "config": {
                    "destination_url": "https://eoalydnvgieppd9.m.pipedream.net"
                  },
                  "config_sensitive": {
                    "signing_key": "sdkjhsfd2sdfkj3223.23rh"
                  },
                  "id": "019011e6-e530-3aca-6cf7-2973387c255d",
                  "project_id": "019010a2-8327-2607-11d7-41bb0a8936d4",
                  "created": "foo",
                  "modified": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_listings": {
      "subpackageId": "subpackage_listings",
      "name": "listings",
      "endpoints": [
        {
          "auth": true,
          "description": "All supported LLM providers and models. Not all models have the same functionality.",
          "method": "GET",
          "id": "getAllModels",
          "originalEndpointId": "listings.getAllModels",
          "name": "List available LLM's",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of the organization.",
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              },
              {
                "description": "The unique identifier of the project.",
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/model"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatModel"
                }
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "01902fbf-6de7-a1cc-fb86-b1230a7af301",
                "project_id": "01902fc0-a119-26bc-827d-4138841301db"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "body": [
                    {
                      "name": "gpt-3.5-turbo",
                      "alias": "GPT 3.5 Turbo",
                      "provider": "OpenAI",
                      "description": "A fast and cost-effective model for a broad range of tasks. 16K context window with training cut off of Sep 2021.",
                      "supports_vision": false
                    },
                    {
                      "name": "gpt-4",
                      "alias": "GPT 4",
                      "provider": "OpenAI",
                      "description": "The fourth-generation model with advanced reasoning and understanding. 8k context window with training cut off of Sep 2021.",
                      "supports_vision": false
                    },
                    {
                      "name": "gpt-4-turbo",
                      "alias": "GPT 4 Turbo",
                      "provider": "OpenAI",
                      "description": "The latest GPT-4 Turbo model with vision capabilities. 128K context window with training cut off of Dec 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "gpt-4-turbo-preview",
                      "alias": "GPT 4 Turbo Preview",
                      "provider": "OpenAI",
                      "description": "GPT-4 Turbo preview model featuring improved instruction following, JSON mode. 128K context window with training cut off of April 2023. Returns a maximum of 4,096 output tokens. This is a preview model.",
                      "supports_vision": false
                    },
                    {
                      "name": "gpt-4o",
                      "alias": "GPT 4o",
                      "provider": "OpenAI",
                      "description": "GPT-4o (\"o\" for \"omni\") is OpenAI's most advanced model. It is multimodal, it has the same high intelligence as GPT-4 Turbo but is much more efficient — it generates text 2x faster and is 50% cheaper.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-5-sonnet-20240620",
                      "alias": "Claude 3.5 Sonnet",
                      "provider": "Anthropic",
                      "description": "Anthropics most intelligent model. 200K context window with 4k max output with training cut off of June 2024.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-haiku-20240307",
                      "alias": "Claude 3 Haiku",
                      "provider": "Anthropic",
                      "description": "Anthropics fastest and most compact model. 200K context window with 4k max output with training cut off of Aug 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-sonnet-20240229",
                      "alias": "Claude 3 Sonnet",
                      "provider": "Anthropic",
                      "description": "Balanced model between intelligence and speed. 200K context window with 4k max output with training cut off of Aug 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-opus-20240229",
                      "alias": "Claude 3 Opus",
                      "provider": "Anthropic",
                      "description": "Anthropics most powerful model. 200K context window with 4k max output with training cut off of Aug 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "gemini-1.5-pro-latest",
                      "alias": "Gemini 1.5 Pro",
                      "provider": "Google",
                      "description": "Googles latest gemini model. 100K context window and 8k max output with training cut off in late 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "gemini-pro",
                      "alias": "Gemini 1.0 Pro",
                      "provider": "Google",
                      "description": "Googles 1.0 version gemini model. 30K context window and 2k max output with training cut off in late 2023.",
                      "supports_vision": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "body": [
                    {
                      "name": "gpt-3.5-turbo",
                      "alias": "GPT 3.5 Turbo",
                      "provider": "OpenAI",
                      "description": "A fast and cost-effective model for a broad range of tasks. 16K context window with training cut off of Sep 2021.",
                      "supports_vision": false
                    },
                    {
                      "name": "gpt-4",
                      "alias": "GPT 4",
                      "provider": "OpenAI",
                      "description": "The fourth-generation model with advanced reasoning and understanding. 8k context window with training cut off of Sep 2021.",
                      "supports_vision": false
                    },
                    {
                      "name": "gpt-4-turbo",
                      "alias": "GPT 4 Turbo",
                      "provider": "OpenAI",
                      "description": "The latest GPT-4 Turbo model with vision capabilities. 128K context window with training cut off of Dec 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "gpt-4-turbo-preview",
                      "alias": "GPT 4 Turbo Preview",
                      "provider": "OpenAI",
                      "description": "GPT-4 Turbo preview model featuring improved instruction following, JSON mode. 128K context window with training cut off of April 2023. Returns a maximum of 4,096 output tokens. This is a preview model.",
                      "supports_vision": false
                    },
                    {
                      "name": "gpt-4o",
                      "alias": "GPT 4o",
                      "provider": "OpenAI",
                      "description": "GPT-4o (\"o\" for \"omni\") is OpenAI's most advanced model. It is multimodal, it has the same high intelligence as GPT-4 Turbo but is much more efficient — it generates text 2x faster and is 50% cheaper.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-5-sonnet-20240620",
                      "alias": "Claude 3.5 Sonnet",
                      "provider": "Anthropic",
                      "description": "Anthropics most intelligent model. 200K context window with 4k max output with training cut off of June 2024.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-haiku-20240307",
                      "alias": "Claude 3 Haiku",
                      "provider": "Anthropic",
                      "description": "Anthropics fastest and most compact model. 200K context window with 4k max output with training cut off of Aug 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-sonnet-20240229",
                      "alias": "Claude 3 Sonnet",
                      "provider": "Anthropic",
                      "description": "Balanced model between intelligence and speed. 200K context window with 4k max output with training cut off of Aug 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "claude-3-opus-20240229",
                      "alias": "Claude 3 Opus",
                      "provider": "Anthropic",
                      "description": "Anthropics most powerful model. 200K context window with 4k max output with training cut off of Aug 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "gemini-1.5-pro-latest",
                      "alias": "Gemini 1.5 Pro",
                      "provider": "Google",
                      "description": "Googles latest gemini model. 100K context window and 8k max output with training cut off in late 2023.",
                      "supports_vision": true
                    },
                    {
                      "name": "gemini-pro",
                      "alias": "Gemini 1.0 Pro",
                      "provider": "Google",
                      "description": "Googles 1.0 version gemini model. 30K context window and 2k max output with training cut off in late 2023.",
                      "supports_vision": false
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "method": "GET",
          "id": "list_available_guardrails_org__org_id__project__project_id__guardrail_get",
          "originalEndpointId": "listings.list_available_guardrails_org__org_id__project__project_id__guardrail_get",
          "name": "List Available Guardrails",
          "path": {
            "pathParameters": [
              {
                "key": "org_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "key": "project_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/org/"
              },
              {
                "type": "pathParameter",
                "value": "org_id"
              },
              {
                "type": "literal",
                "value": "/project/"
              },
              {
                "type": "pathParameter",
                "value": "project_id"
              },
              {
                "type": "literal",
                "value": "/guardrail"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ChatGuardrail"
                }
              }
            },
            "statusCode": 200,
            "description": "Successful Response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/org/",
              "pathParameters": {
                "org_id": "foo",
                "project_id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": "source_validation",
                    "name": "foo",
                    "description": "foo",
                    "type": "input"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": "source_validation",
                    "name": "foo",
                    "description": "foo",
                    "type": "input"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [
      {
        "auth": false,
        "description": "Root endpoint that returns a \"Hello World\" message.",
        "method": "GET",
        "id": "root_ping_get",
        "originalEndpointId": "root_ping_get",
        "name": "Root",
        "path": {
          "pathParameters": [],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/ping"
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/ping",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "rest"
        }
      },
      {
        "auth": true,
        "method": "GET",
        "id": "whoami_whoami_get",
        "originalEndpointId": "whoami_whoami_get",
        "name": "Whoami",
        "path": {
          "pathParameters": [],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/whoami"
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/whoami",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "rest"
        }
      }
    ],
    "webhooks": [],
    "websockets": [],
    "types": [
      "AsyncJobResult",
      "Body_Task_Run_Parameters",
      "Body_document_create_org__org_id__project__project_id__document_post",
      "Body_document_upload_org__org_id__project__project_id__document_upload_post",
      "Body_fetch_org__org_id__project__project_id__datasource_box__connection_id__fetch_post",
      "Body_fetch_org__org_id__project__project_id__datasource_confluence__connection_id__fetch_post",
      "Body_fetch_org__org_id__project__project_id__datasource_dropbox__connection_id__fetch_post",
      "Body_fetch_org__org_id__project__project_id__datasource_gdrive__connection_id__fetch_post",
      "Body_fetch_org__org_id__project__project_id__datasource_notion__connection_id__fetch_post",
      "Body_fetch_org__org_id__project__project_id__datasource_onedrive__connection_id__fetch_post",
      "Body_fetch_org__org_id__project__project_id__datasource_sharepoint__connection_id__fetch_post",
      "Body_generate_org__org_id__project__project_id__compose_generate_post",
      "Body_org_update_avatar_org__org_id__avatar_post",
      "Body_project_update_avatar_org__org_id__project__project_id__avatar_post",
      "Body_section_talking_points_org__org_id__project__project_id__compose_section_talking_points_post",
      "Body_update_section_org__org_id__project__project_id__compose_update_section_post",
      "Body_user_update_avatar_user_avatar_post",
      "Chat",
      "ChatConfig-Input",
      "ChatConfig-Output",
      "ChatCreate",
      "ChatDocument",
      "ChatDocumentEmbeddingInstance",
      "ChatDocumentEmbeddingRecord",
      "ChatDocumentQueryResult",
      "ChatDocumentUpdate",
      "ChatGuardrail",
      "ChatIAMMemberRoleUpdate",
      "ChatIAMPermissionTest",
      "ChatModel",
      "ChatUpdate",
      "Collection",
      "CollectionChatShow",
      "CollectionCreate",
      "CollectionEmbeddingUpdate",
      "CollectionIAMMemberRoleUpdate",
      "CollectionIAMPermissionTest",
      "CollectionQuery",
      "CollectionStatsResponse",
      "CollectionUpdate",
      "ComposeContent",
      "ComposeGenerate",
      "ComposeInit",
      "ComposeSectionTalkingPoint",
      "ComposeSectionUpdate",
      "ComposeTopicPoint",
      "ConversationalGuardrails",
      "Datasource",
      "DatasourceConfiguration",
      "DatasourceConnection",
      "DatasourceConnectionPublic",
      "DatasourceSyncRun",
      "DocumentCreateTask",
      "DocumentIAMMemberRoleUpdate",
      "DocumentIAMPermissionTest",
      "DocumentStatusResponse",
      "EmptyErrorDetails",
      "HTTPValidationError",
      "HydraWebhookTokenHook",
      "HydraWebhookTokenHookSession",
      "HydraWebhookTokenHookSessionIDTokenClaims",
      "IAMMember",
      "IAMObjectErrorDetails",
      "IAMPermissionTest",
      "InitialComposeSection",
      "InputConversationalGuardrailDefinition",
      "InvalidMemberErrorDetails",
      "InvalidMemberErrorResponse",
      "InvalidRoleErrorDetails",
      "InvalidRoleErrorResponse",
      "InvalidSubjectTypeErrorDetails",
      "InvalidSubjectTypeErrorResponse",
      "KratosIdentity",
      "KratosIdentityTraits",
      "KratosWebhook",
      "KratosWebhookDetailedMessage",
      "KratosWebhookErrorMessage",
      "KratosWebhookResponse",
      "MalformedResourceIdentifierErrorDetails",
      "MalformedResourceIdentifierErrorResponse",
      "MissingAuthenticationErrorResponse",
      "MultipleRolesNotAllowedErrorDetails",
      "MultipleRolesNotAllowedErrorResponse",
      "OAuthClientCreate",
      "OAuthClientCreateResponse",
      "OAuthClientProfile",
      "Object",
      "ObjectList",
      "ObjectTags",
      "ObjectType",
      "Org",
      "OrgCreate",
      "OrgInviteBase",
      "OrgInviteShow",
      "OrgMembership",
      "OrgUpdate",
      "OrganizationDomain",
      "OrganizationDomainCreate",
      "OrganizationIAMMemberRoleUpdate",
      "OrganizationIAMPermissionTest",
      "OrganizationInvite",
      "OrganizationInviteAlreadyExistsErrorDetails",
      "OrganizationInviteAlreadyExistsErrorResponse",
      "OrganizationMemberAlreadyExistsErrorDetails",
      "OrganizationMemberAlreadyExistsErrorResponse",
      "OutputConversationalGuardrailDefinition",
      "PaginatedResultSet_ChatDocumentEmbeddingRecord_",
      "PaginatedResultSet_ChatDocument_",
      "PaginatedResultSet_Chat_",
      "PaginatedResultSet_Collection_",
      "PaginatedResultSet_DatasourceSyncRun_",
      "PaginatedResultSet_IAMMember_",
      "PaginatedResultSet_OrganizationDomain_",
      "PaginatedResultSet_OrganizationInvite_",
      "PaginatedResultSet_Project_",
      "PaginatedResultSet_TaskForwarder_",
      "PaginatedResultSet_TaskRun_",
      "PaginatedResultSet_Task_",
      "PaginationDetails",
      "PermissionCheckFailedErrorDetails",
      "PermissionCheckFailedErrorResponse",
      "Project",
      "ProjectConfig-Input",
      "ProjectConfig-Output",
      "ProjectCreate",
      "ProjectIAMMemberRoleUpdate",
      "ProjectIAMPermissionTest",
      "ProjectUpdate",
      "ProjectWithDatasources",
      "SiteScrapeRequest",
      "SourceRow",
      "Task",
      "TaskCreate",
      "TaskForwarder",
      "TaskForwarderConfig",
      "TaskForwarderCreate",
      "TaskForwarderSensitiveConfig",
      "TaskForwarderUpdate",
      "TaskIAMMemberRoleUpdate",
      "TaskIAMPermissionTest",
      "TaskLLMConfig",
      "TaskRAG",
      "TaskRevision",
      "TaskRun",
      "TaskUpdate",
      "User",
      "UserProfileUpdate",
      "ValidationError"
    ],
    "subpackages": [
      "subpackage_org",
      "subpackage_user",
      "subpackage_project",
      "subpackage_collection",
      "subpackage_document",
      "subpackage_chat",
      "subpackage_datasourceBox",
      "subpackage_datasourceConfluence",
      "subpackage_datasourceDropbox",
      "subpackage_datasourceGdrive",
      "subpackage_datasourceNotion",
      "subpackage_datasourceOnedrive",
      "subpackage_datasourceSharepoint",
      "subpackage_internal",
      "subpackage_scrape",
      "subpackage_compose",
      "subpackage_tasks",
      "subpackage_taskForwarders",
      "subpackage_listings"
    ]
  },
  "auth": {
    "type": "bearerAuth",
    "tokenName": "token"
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}