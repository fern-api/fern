{
  "types": {
    "ActivityLogPerformedBy": {
      "description": "Details about the Admin involved in the activity.",
      "name": "ActivityLogPerformedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `admin`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the admin.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email of the admin.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The IP address of the admin.",
            "key": "ip",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ActivityLogActivityType": {
      "name": "ActivityLogActivityType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin_assignment_limit_change"
          },
          {
            "value": "admin_away_mode_change"
          },
          {
            "value": "admin_deletion"
          },
          {
            "value": "admin_deprovisioned"
          },
          {
            "value": "admin_impersonation_end"
          },
          {
            "value": "admin_impersonation_start"
          },
          {
            "value": "admin_invite_change"
          },
          {
            "value": "admin_invite_creation"
          },
          {
            "value": "admin_invite_deletion"
          },
          {
            "value": "admin_login_failure"
          },
          {
            "value": "admin_login_success"
          },
          {
            "value": "admin_logout"
          },
          {
            "value": "admin_password_reset_request"
          },
          {
            "value": "admin_password_reset_success"
          },
          {
            "value": "admin_permission_change"
          },
          {
            "value": "admin_provisioned"
          },
          {
            "value": "admin_two_factor_auth_change"
          },
          {
            "value": "admin_unauthorized_sign_in_method"
          },
          {
            "value": "app_admin_join"
          },
          {
            "value": "app_authentication_method_change"
          },
          {
            "value": "app_data_deletion"
          },
          {
            "value": "app_data_export"
          },
          {
            "value": "app_google_sso_domain_change"
          },
          {
            "value": "app_identity_verification_change"
          },
          {
            "value": "app_name_change"
          },
          {
            "value": "app_outbound_address_change"
          },
          {
            "value": "app_package_installation"
          },
          {
            "value": "app_package_token_regeneration"
          },
          {
            "value": "app_package_uninstallation"
          },
          {
            "value": "app_team_creation"
          },
          {
            "value": "app_team_deletion"
          },
          {
            "value": "app_team_membership_modification"
          },
          {
            "value": "app_timezone_change"
          },
          {
            "value": "app_webhook_creation"
          },
          {
            "value": "app_webhook_deletion"
          },
          {
            "value": "articles_in_messenger_enabled_change"
          },
          {
            "value": "bulk_delete"
          },
          {
            "value": "bulk_export"
          },
          {
            "value": "campaign_deletion"
          },
          {
            "value": "campaign_state_change"
          },
          {
            "value": "conversation_part_deletion"
          },
          {
            "value": "conversation_topic_change"
          },
          {
            "value": "conversation_topic_creation"
          },
          {
            "value": "conversation_topic_deletion"
          },
          {
            "value": "help_center_settings_change"
          },
          {
            "value": "inbound_conversations_change"
          },
          {
            "value": "inbox_access_change"
          },
          {
            "value": "message_deletion"
          },
          {
            "value": "message_state_change"
          },
          {
            "value": "messenger_look_and_feel_change"
          },
          {
            "value": "messenger_search_required_change"
          },
          {
            "value": "messenger_spaces_change"
          },
          {
            "value": "office_hours_change"
          },
          {
            "value": "role_change"
          },
          {
            "value": "role_creation"
          },
          {
            "value": "role_deletion"
          },
          {
            "value": "ruleset_activation_title_preview"
          },
          {
            "value": "ruleset_creation"
          },
          {
            "value": "ruleset_deletion"
          },
          {
            "value": "search_browse_enabled_change"
          },
          {
            "value": "search_browse_required_change"
          },
          {
            "value": "seat_change"
          },
          {
            "value": "seat_revoke"
          },
          {
            "value": "security_settings_change"
          },
          {
            "value": "temporary_expectation_change"
          },
          {
            "value": "upfront_email_collection_change"
          },
          {
            "value": "welcome_message_change"
          }
        ]
      }
    },
    "activity_log": {
      "description": "Activities performed by Admins.",
      "name": "activity_log",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The id representing the activity.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Details about the Admin involved in the activity.",
            "key": "performed_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ActivityLogPerformedBy"
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "activity_log_metadata"
              }
            }
          },
          {
            "description": "The time the activity was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "activity_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ActivityLogActivityType"
              }
            }
          },
          {
            "description": "A sentence or two describing the activity.",
            "key": "activity_description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "activity_log_list": {
      "description": "A paginated list of activity logs.",
      "name": "activity_log_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `activity_log.list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          },
          {
            "description": "An array of activity logs",
            "key": "activity_logs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "activity_log"
                }
              }
            }
          }
        ]
      }
    },
    "activity_log_metadata": {
      "description": "Additional data provided about Admin activity.",
      "name": "activity_log_metadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The way the admin signed in.",
            "key": "sign_in_method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is provided by the Client.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The away mode status which is set to true when away and false when returned.",
            "key": "away_mode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "The reason the Admin is away.",
            "key": "away_status_reason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if conversations should be reassigned while an Admin is away.",
            "key": "reassign_conversations",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "The action that initiated the status change.",
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates if the status was changed automatically or manually.",
            "key": "auto_changed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The ID of the Admin who initiated the activity.",
            "key": "update_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the Admin who initiated the activity.",
            "key": "update_by_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "addressable_list": {
      "description": "A list used to access other resources from a parent model.",
      "name": "addressable_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The addressable object type",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "The id of the addressable object",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Url to get more company resources for this contact",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "admin": {
      "description": "Admins are teammate accounts that have access to a workspace.",
      "name": "admin",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `admin`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the admin.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the admin.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email of the admin.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The job title of the admin.",
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifies if this admin is currently set in away mode.",
            "key": "away_mode_enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox.",
            "key": "away_mode_reassign",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them.",
            "key": "has_inbox_seat",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This object represents the avatar associated with the admin.",
            "key": "team_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Image for the associated team or teammate",
            "key": "avatar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "key": "team_priority_level",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "team_priority_level"
              }
            }
          }
        ]
      }
    },
    "admin_list": {
      "description": "A list of admins associated with a given workspace.",
      "name": "admin_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `admin.list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A list of admins associated with a given workspace.",
            "key": "admins",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "admin"
                }
              }
            }
          }
        ]
      }
    },
    "admin_priority_level": {
      "description": "Admin priority levels for the team",
      "name": "admin_priority_level",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The primary admin ids for the team",
            "key": "primary_admin_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The secondary admin ids for the team",
            "key": "secondary_admin_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "AdminReplyConversationRequestMessageType": {
      "name": "AdminReplyConversationRequestMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "comment"
          },
          {
            "value": "note"
          }
        ]
      }
    },
    "AdminReplyConversationRequestType": {
      "name": "AdminReplyConversationRequestType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          }
        ]
      }
    },
    "admin_reply_conversation_request": {
      "description": "Payload of the request to reply on behalf of an admin",
      "name": "admin_reply_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "AdminReplyConversationRequestMessageType"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "AdminReplyConversationRequestType"
            }
          },
          {
            "description": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the admin who is authoring the comment.",
            "key": "admin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time the reply was created. If not provided, the current time will be used.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
            "key": "attachment_urls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "A list of files that will be added as attachments. You can include up to 10 files",
            "key": "attachment_files",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "conversation_attachment_files"
                }
              }
            }
          }
        ]
      }
    },
    "AdminReplyTicketRequestMessageType": {
      "name": "AdminReplyTicketRequestMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "comment"
          },
          {
            "value": "note"
          },
          {
            "value": "quick_reply"
          }
        ]
      }
    },
    "AdminReplyTicketRequestType": {
      "name": "AdminReplyTicketRequestType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          }
        ]
      }
    },
    "AdminReplyTicketRequestReplyOptionsItems": {
      "name": "AdminReplyTicketRequestReplyOptionsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The text to display in this quick reply option.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A unique identifier for this quick reply option. This value will be available within the metadata of the comment ticket part that is created when a user clicks on this reply option.",
            "key": "uuid",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ]
      }
    },
    "admin_reply_ticket_request": {
      "description": "Payload of the request to reply on behalf of an admin",
      "name": "admin_reply_ticket_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "AdminReplyTicketRequestMessageType"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "AdminReplyTicketRequestType"
            }
          },
          {
            "description": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the admin who is authoring the comment.",
            "key": "admin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time the reply was created. If not provided, the current time will be used.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The quick reply options to display. Must be present for quick_reply message types.",
            "key": "reply_options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "AdminReplyTicketRequestReplyOptionsItems"
                }
              }
            }
          },
          {
            "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
            "key": "attachment_urls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "AdminWithAppAvatar": {
      "description": "This object represents the avatar associated with the admin.",
      "name": "AdminWithAppAvatar",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "This is a string that identifies the type of the object. It will always have the value `avatar`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "avatar"
                }
              }
            }
          },
          {
            "description": "This object represents the avatar associated with the admin.",
            "key": "image_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "admin_with_app": {
      "description": "Admins are the teammate accounts that have access to a workspace",
      "name": "admin_with_app",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `admin`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the admin.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the admin.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email of the admin.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The job title of the admin.",
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifies if this admin is currently set in away mode.",
            "key": "away_mode_enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox.",
            "key": "away_mode_reassign",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them.",
            "key": "has_inbox_seat",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is a list of ids of the teams that this admin is part of.",
            "key": "team_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "This object represents the avatar associated with the admin.",
            "key": "avatar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AdminWithAppAvatar"
              }
            }
          },
          {
            "description": "Identifies if this admin's email is verified.",
            "key": "email_verified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "App that the admin belongs to.",
            "key": "app",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "app"
                }
              }
            }
          }
        ]
      }
    },
    "AiAgentSourceType": {
      "description": "The type of the source that triggered AI Agent involvement in the conversation.",
      "name": "AiAgentSourceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "essentials_plan_setup"
          },
          {
            "value": "profile"
          },
          {
            "value": "workflow"
          },
          {
            "value": "workflow_preview"
          },
          {
            "value": "fin_preview"
          }
        ]
      }
    },
    "AiAgentLastAnswerType": {
      "description": "The type of the last answer delivered by AI Agent. If no answer was delivered then this will return `null`",
      "name": "AiAgentLastAnswerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ai_answer"
          },
          {
            "value": "custom_answer"
          }
        ]
      }
    },
    "AiAgentResolutionState": {
      "description": "The resolution state of AI Agent. If no AI or custom answer has been delivered then this will return `null`.",
      "name": "AiAgentResolutionState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "assumed_resolution"
          },
          {
            "value": "confirmed_resolution"
          },
          {
            "value": "routed_to_team"
          },
          {
            "value": "abandoned"
          }
        ]
      }
    },
    "ai_agent": {
      "description": "Data related to AI Agent involvement in the conversation.",
      "name": "ai_agent",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the source that triggered AI Agent involvement in the conversation.",
            "key": "source_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AiAgentSourceType"
              }
            }
          },
          {
            "description": "The title of the source that triggered AI Agent involvement in the conversation. If this is `essentials_plan_setup` then it will return `null`.",
            "key": "source_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The type of the last answer delivered by AI Agent. If no answer was delivered then this will return `null`",
            "key": "last_answer_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AiAgentLastAnswerType"
                }
              }
            }
          },
          {
            "description": "The resolution state of AI Agent. If no AI or custom answer has been delivered then this will return `null`.",
            "key": "resolution_state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AiAgentResolutionState"
                }
              }
            }
          },
          {
            "description": "The customer satisfaction rating given to AI Agent, from 1-5.",
            "key": "rating",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The customer satisfaction rating remark given to AI Agent.",
            "key": "rating_remark",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "content_sources",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "content_sources_list"
              }
            }
          }
        ]
      }
    },
    "app": {
      "description": "App is a workspace on Intercom",
      "name": "app",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "app"
                }
              }
            }
          },
          {
            "description": "The id of the app.",
            "key": "id_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the app.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Intercom region the app is located in.",
            "key": "region",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The timezone of the region where the app is located.",
            "key": "timezone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "When the app was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether or not the app uses identity verification.",
            "key": "identity_verification",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "article": {
      "description": "The Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone.",
      "name": "article",
      "shape": {
        "type": "object",
        "extends": [
          "article_list_item"
        ],
        "properties": [
          {
            "key": "statistics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "article_statistics"
                }
              }
            }
          }
        ]
      }
    },
    "ArticleContentType": {
      "description": "The type of object - `article_content` .",
      "name": "ArticleContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "article_content"
          }
        ]
      }
    },
    "ArticleContentState": {
      "description": "Whether the article is `published` or is a `draft` .",
      "name": "ArticleContentState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "published"
          },
          {
            "value": "draft"
          }
        ]
      }
    },
    "article_content": {
      "description": "The Content of an Article.",
      "name": "article_content",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `article_content` .",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ArticleContentType"
                }
              }
            }
          },
          {
            "description": "The title of the article.",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the article.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The body of the article.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the author of the article.",
            "key": "author_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether the article is `published` or is a `draft` .",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleContentState"
              }
            }
          },
          {
            "description": "The time when the article was created (seconds).",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time when the article was last updated (seconds).",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The URL of the article.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ArticleListType": {
      "description": "The type of the object - `list`.",
      "name": "ArticleListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "article_list": {
      "description": "This will return a list of articles for the App.",
      "name": "article_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object - `list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleListType"
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          },
          {
            "description": "A count of the total number of articles.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An array of Article objects",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "article_list_item"
                }
              }
            }
          }
        ]
      }
    },
    "ArticleListItemType": {
      "description": "The type of object - `article`.",
      "name": "ArticleListItemType",
      "shape": {
        "type": "enum",
        "default": "article",
        "values": [
          {
            "value": "article"
          }
        ]
      }
    },
    "ArticleListItemState": {
      "description": "Whether the article is `published` or is a `draft`. For multilingual articles, this will be the state of the default language's content.",
      "name": "ArticleListItemState",
      "shape": {
        "type": "enum",
        "default": "draft",
        "values": [
          {
            "value": "published"
          },
          {
            "value": "draft"
          }
        ]
      }
    },
    "article_list_item": {
      "description": "The data returned about your articles when you list them.",
      "name": "article_list_item",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `article`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleListItemType"
              }
            }
          },
          {
            "description": "The unique identifier for the article which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the workspace which the article belongs to.",
            "key": "workspace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The title of the article. For multilingual articles, this will be the title of the default language's content.",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The body of the article in HTML. For multilingual articles, this will be the body of the default language's content.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
            "key": "author_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether the article is `published` or is a `draft`. For multilingual articles, this will be the state of the default language's content.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleListItemState"
              }
            }
          },
          {
            "description": "The time when the article was created. For multilingual articles, this will be the timestamp of creation of the default language's content in seconds.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time when the article was last updated. For multilingual articles, this will be the timestamp of last update of the default language's content in seconds.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The URL of the article. For multilingual articles, this will be the URL of the default language's content.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The id of the article's parent collection or section. An article without this field stands alone.",
            "key": "parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The ids of the article's parent collections or sections. An article without this field stands alone.",
            "key": "parent_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The type of parent, which can either be a `collection` or `section`.",
            "key": "parent_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The default locale of the help center. This field is only returned for multilingual help centers.",
            "key": "default_locale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "translated_content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "article_translated_content"
                }
              }
            }
          }
        ]
      }
    },
    "ArticleSearchHighlightsHighlightedTitleItemsType": {
      "description": "The type of text - `highlight` or `plain`.",
      "name": "ArticleSearchHighlightsHighlightedTitleItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "highlight"
          },
          {
            "value": "plain"
          }
        ]
      }
    },
    "ArticleSearchHighlightsHighlightedTitleItems": {
      "description": "A highlighted article title.",
      "name": "ArticleSearchHighlightsHighlightedTitleItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of text - `highlight` or `plain`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleSearchHighlightsHighlightedTitleItemsType"
              }
            }
          },
          {
            "description": "The text of the title.",
            "key": "text",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ArticleSearchHighlightsHighlightedSummaryItemsItemsType": {
      "description": "The type of text - `highlight` or `plain`.",
      "name": "ArticleSearchHighlightsHighlightedSummaryItemsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "highlight"
          },
          {
            "value": "plain"
          }
        ]
      }
    },
    "ArticleSearchHighlightsHighlightedSummaryItemsItems": {
      "description": "An instance of highlighted summary text.",
      "name": "ArticleSearchHighlightsHighlightedSummaryItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of text - `highlight` or `plain`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleSearchHighlightsHighlightedSummaryItemsItemsType"
              }
            }
          },
          {
            "description": "The text of the title.",
            "key": "text",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "article_search_highlights": {
      "description": "The highlighted results of an Article search. In the examples provided my search query is always \"my query\".",
      "name": "article_search_highlights",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the corresponding article.",
            "key": "article_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An Article title highlighted.",
            "key": "highlighted_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ArticleSearchHighlightsHighlightedTitleItems"
                }
              }
            }
          },
          {
            "description": "An Article description and body text highlighted.",
            "key": "highlighted_summary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "ArticleSearchHighlightsHighlightedSummaryItemsItems"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ArticleSearchResponseType": {
      "description": "The type of the object - `list`.",
      "name": "ArticleSearchResponseType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "ArticleSearchResponseData": {
      "description": "An object containing the results of the search.",
      "name": "ArticleSearchResponseData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An array of Article objects",
            "key": "articles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "article"
                }
              }
            }
          },
          {
            "description": "A corresponding array of highlighted Article content",
            "key": "highlights",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "article_search_highlights"
                }
              }
            }
          }
        ]
      }
    },
    "article_search_response": {
      "description": "The results of an Article search",
      "name": "article_search_response",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object - `list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleSearchResponseType"
              }
            }
          },
          {
            "description": "The total number of Articles matching the search query",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An object containing the results of the search.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleSearchResponseData"
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          }
        ]
      }
    },
    "ArticleStatisticsType": {
      "description": "The type of object - `article_statistics`.",
      "name": "ArticleStatisticsType",
      "shape": {
        "type": "enum",
        "default": "article_statistics",
        "values": [
          {
            "value": "article_statistics"
          }
        ]
      }
    },
    "article_statistics": {
      "description": "The statistics of an article.",
      "name": "article_statistics",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `article_statistics`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ArticleStatisticsType"
              }
            }
          },
          {
            "description": "The number of total views the article has received.",
            "key": "views",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of conversations started from the article.",
            "key": "conversions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of total reactions the article has received.",
            "key": "reactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The percentage of happy reactions the article has received against other types of reaction.",
            "key": "happy_reaction_percentage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The percentage of neutral reactions the article has received against other types of reaction.",
            "key": "neutral_reaction_percentage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The percentage of sad reactions the article has received against other types of reaction.",
            "key": "sad_reaction_percentage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "ArticleTranslatedContentType": {
      "description": "The type of object - article_translated_content.",
      "name": "ArticleTranslatedContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "article_translated_content"
          }
        ]
      }
    },
    "article_translated_content": {
      "description": "The Translated Content of an Article. The keys are the locale codes and the values are the translated content of the article.",
      "name": "article_translated_content",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - article_translated_content.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ArticleTranslatedContentType"
                }
              }
            }
          },
          {
            "description": "The content of the article in Arabic",
            "key": "ar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Bulgarian",
            "key": "bg",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Bosnian",
            "key": "bs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Catalan",
            "key": "ca",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Czech",
            "key": "cs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Danish",
            "key": "da",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in German",
            "key": "de",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Greek",
            "key": "el",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in English",
            "key": "en",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Spanish",
            "key": "es",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Estonian",
            "key": "et",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Finnish",
            "key": "fi",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in French",
            "key": "fr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Hebrew",
            "key": "he",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Croatian",
            "key": "hr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Hungarian",
            "key": "hu",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Indonesian",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Italian",
            "key": "it",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Japanese",
            "key": "ja",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Korean",
            "key": "ko",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Lithuanian",
            "key": "lt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Latvian",
            "key": "lv",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Mongolian",
            "key": "mn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Norwegian",
            "key": "nb",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Dutch",
            "key": "nl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Polish",
            "key": "pl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Portuguese (Portugal)",
            "key": "pt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Romanian",
            "key": "ro",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Russian",
            "key": "ru",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Slovenian",
            "key": "sl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Serbian",
            "key": "sr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Swedish",
            "key": "sv",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Turkish",
            "key": "tr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Vietnamese",
            "key": "vi",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Portuguese (Brazil)",
            "key": "pt-BR",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Chinese (China)",
            "key": "zh-CN",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          },
          {
            "description": "The content of the article in Chinese (Taiwan)",
            "key": "zh-TW",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_content"
              }
            }
          }
        ]
      }
    },
    "AssignConversationRequestMessageType": {
      "name": "AssignConversationRequestMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "assignment"
          }
        ]
      }
    },
    "AssignConversationRequestType": {
      "name": "AssignConversationRequestType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "team"
          }
        ]
      }
    },
    "assign_conversation_request": {
      "description": "Payload of the request to assign a conversation",
      "name": "assign_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "AssignConversationRequestMessageType"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "AssignConversationRequestType"
            }
          },
          {
            "description": "The id of the admin who is performing the action.",
            "key": "admin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The `id` of the `admin` or `team` which will be assigned the conversation. A conversation can be assigned both an admin and a team.\\nSet `0` if you want this assign to no admin or team (ie. Unassigned).",
            "key": "assignee_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Optionally you can send a response in the conversation when it is assigned.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "AttachContactToConversationRequestCustomer0": {
      "name": "AttachContactToConversationRequestCustomer0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The identifier for the contact as given by Intercom.",
            "key": "intercom_user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "customer_request"
              }
            }
          }
        ]
      }
    },
    "AttachContactToConversationRequestCustomer1": {
      "name": "AttachContactToConversationRequestCustomer1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The external_id you have defined for the contact who is being added as a participant.",
            "key": "user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "customer_request"
              }
            }
          }
        ]
      }
    },
    "AttachContactToConversationRequestCustomer2": {
      "name": "AttachContactToConversationRequestCustomer2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The email you have defined for the contact who is being added as a participant.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "customer_request"
              }
            }
          }
        ]
      }
    },
    "AttachContactToConversationRequestCustomer": {
      "name": "AttachContactToConversationRequestCustomer",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "AttachContactToConversationRequestCustomer0",
            "type": {
              "type": "id",
              "value": "AttachContactToConversationRequestCustomer0"
            }
          },
          {
            "typeName": "AttachContactToConversationRequestCustomer1",
            "type": {
              "type": "id",
              "value": "AttachContactToConversationRequestCustomer1"
            }
          },
          {
            "typeName": "AttachContactToConversationRequestCustomer2",
            "type": {
              "type": "id",
              "value": "AttachContactToConversationRequestCustomer2"
            }
          }
        ]
      }
    },
    "attach_contact_to_conversation_request": {
      "description": "Payload of the request to assign a conversation",
      "name": "attach_contact_to_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The `id` of the admin who is adding the new participant.",
            "key": "admin_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "customer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AttachContactToConversationRequestCustomer"
              }
            }
          }
        ]
      }
    },
    "CloseConversationRequestMessageType": {
      "name": "CloseConversationRequestMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "close"
          }
        ]
      }
    },
    "CloseConversationRequestType": {
      "name": "CloseConversationRequestType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          }
        ]
      }
    },
    "close_conversation_request": {
      "description": "Payload of the request to close a conversation",
      "name": "close_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "CloseConversationRequestMessageType"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "CloseConversationRequestType"
            }
          },
          {
            "description": "The id of the admin who is performing the action.",
            "key": "admin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Optionally you can leave a message in the conversation to provide additional context to the user and other teammates.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "collection": {
      "description": "Collections are top level containers for Articles within the Help Center.",
      "name": "collection",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the collection which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the workspace which the collection belongs to.",
            "key": "workspace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the collection. For multilingual help centers, this will be the description of the collection for the default language.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The time when the article was created (seconds). For multilingual articles, this will be the timestamp of creation of the default language's content.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time when the article was last updated (seconds). For multilingual articles, this will be the timestamp of last update of the default language's content.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The URL of the collection. For multilingual help centers, this will be the URL of the collection for the default language.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The icon of the collection.",
            "key": "icon",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The order of the section in relation to others sections within a collection. Values go from `0` upwards. `0` is the default if there's no order.",
            "key": "order",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The default locale of the help center. This field is only returned for multilingual help centers.",
            "key": "default_locale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "translated_content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "group_translated_content"
                }
              }
            }
          },
          {
            "description": "The id of the parent collection. If `null` then it is the first level collection.",
            "key": "parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The id of the help center the collection is in.",
            "key": "help_center_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CollectionListType": {
      "description": "The type of the object - `list`.",
      "name": "CollectionListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "collection_list": {
      "description": "This will return a list of Collections for the App.",
      "name": "collection_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object - `list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionListType"
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          },
          {
            "description": "A count of the total number of collections.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An array of collection objects",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "collection"
                }
              }
            }
          }
        ]
      }
    },
    "CompanyType": {
      "description": "Value is `company`",
      "name": "CompanyType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "company"
          }
        ]
      }
    },
    "CompanyPlan": {
      "name": "CompanyPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Value is always \"plan\"",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the plan",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "CompanyTagsType": {
      "description": "The type of the object",
      "name": "CompanyTagsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "tag.list"
          }
        ]
      }
    },
    "CompanyTags": {
      "description": "The list of tags associated with the company",
      "name": "CompanyTags",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyTagsType"
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CompanySegmentsType": {
      "description": "The type of the object",
      "name": "CompanySegmentsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "segment.list"
          }
        ]
      }
    },
    "CompanySegments": {
      "description": "The list of segments associated with the company",
      "name": "CompanySegments",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanySegmentsType"
              }
            }
          },
          {
            "key": "segments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "segment"
                }
              }
            }
          }
        ]
      }
    },
    "company": {
      "description": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
      "name": "company",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Value is `company`",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyType"
              }
            }
          },
          {
            "description": "The Intercom defined id representing the company.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the company.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Intercom defined code of the workspace the company is associated to.",
            "key": "app_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyPlan"
              }
            }
          },
          {
            "description": "The company id you have defined for the company.",
            "key": "company_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time the company was created by you.",
            "key": "remote_created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the company was added in Intercom.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the company was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the company last recorded making a request.",
            "key": "last_request_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of employees in the company.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The URL for the company website.",
            "key": "website",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The industry that the company operates in.",
            "key": "industry",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "How much revenue the company generates for your business.",
            "key": "monthly_spend",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "How many sessions the company has recorded.",
            "key": "session_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of users in the company.",
            "key": "user_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The custom attributes you have set on the company.",
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The list of tags associated with the company",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyTags"
              }
            }
          },
          {
            "description": "The list of segments associated with the company",
            "key": "segments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanySegments"
              }
            }
          }
        ]
      }
    },
    "CompanyAttachedContactsType": {
      "description": "The type of object - `list`",
      "name": "CompanyAttachedContactsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "company_attached_contacts": {
      "description": "A list of Contact Objects",
      "name": "company_attached_contacts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `list`",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyAttachedContactsType"
              }
            }
          },
          {
            "description": "An array containing Contact Objects",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "contact"
                }
              }
            }
          },
          {
            "description": "The total number of contacts",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          }
        ]
      }
    },
    "CompanyAttachedSegmentsType": {
      "description": "The type of object - `list`",
      "name": "CompanyAttachedSegmentsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "company_attached_segments": {
      "description": "A list of Segment Objects",
      "name": "company_attached_segments",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `list`",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyAttachedSegmentsType"
              }
            }
          },
          {
            "description": "An array containing Segment Objects",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "segment"
                }
              }
            }
          }
        ]
      }
    },
    "CompanyListType": {
      "description": "The type of object - `list`.",
      "name": "CompanyListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "company_list": {
      "description": "This will return a list of companies for the App.",
      "name": "company_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyListType"
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          },
          {
            "description": "The total number of companies.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An array containing Company Objects.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "company"
                }
              }
            }
          }
        ]
      }
    },
    "CompanyScrollType": {
      "description": "The type of object - `list`",
      "name": "CompanyScrollType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "company_scroll": {
      "description": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
      "name": "company_scroll",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `list`",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CompanyScrollType"
              }
            }
          },
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "company"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          },
          {
            "description": "The total number of companies",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The scroll parameter to use in the next request to fetch the next page of results.",
            "key": "scroll_param",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ContactCustomAttributes": {
      "description": "The custom attributes which are set for the contact.",
      "name": "ContactCustomAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ContactAvatar": {
      "name": "ContactAvatar",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An image URL containing the avatar of a contact.",
            "key": "image_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "contact": {
      "description": "Contact are the objects that represent your leads and users in Intercom.",
      "name": "contact",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is provided by the Client.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The id of the workspace which the contact belongs to.",
            "key": "workspace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The role of the contact.",
            "key": "role",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The contact's email.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The contact's email domain.",
            "key": "email_domain",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The contacts phone.",
            "key": "phone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The contacts phone number normalized to the E164 format",
            "key": "formatted_phone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The contacts name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The id of an admin that has been assigned account ownership of the contact.",
            "key": "owner_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the contact has had an email sent to them hard bounce.",
            "key": "has_hard_bounced",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Whether the contact has marked an email sent to them as spam.",
            "key": "marked_email_as_spam",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Whether the contact is unsubscribed from emails.",
            "key": "unsubscribed_from_emails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact was last updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time specified for when a contact signed up.",
            "key": "signed_up_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).",
            "key": "last_seen_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact last messaged in.",
            "key": "last_replied_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact was last messaged.",
            "key": "last_contacted_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact last opened an email.",
            "key": "last_email_opened_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact last clicked a link in an email.",
            "key": "last_email_clicked_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "A preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change.",
            "key": "language_override",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the browser which the contact is using.",
            "key": "browser",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the browser which the contact is using.",
            "key": "browser_version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The language set by the browser which the contact is using.",
            "key": "browser_language",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The operating system which the contact is using.",
            "key": "os",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the Android app which the contact is using.",
            "key": "android_app_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the Android app which the contact is using.",
            "key": "android_app_version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The Android device which the contact is using.",
            "key": "android_device",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the Android OS which the contact is using.",
            "key": "android_os_version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the Android SDK which the contact is using.",
            "key": "android_sdk_version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The time when the contact was last seen on an Android device.",
            "key": "android_last_seen_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the iOS app which the contact is using.",
            "key": "ios_app_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the iOS app which the contact is using.",
            "key": "ios_app_version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The iOS device which the contact is using.",
            "key": "ios_device",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of iOS which the contact is using.",
            "key": "ios_os_version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The version of the iOS SDK which the contact is using.",
            "key": "ios_sdk_version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "(UNIX timestamp) The last time the contact used the iOS app.",
            "key": "ios_last_seen_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The custom attributes which are set for the contact.",
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactCustomAttributes"
              }
            }
          },
          {
            "key": "avatar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ContactAvatar"
                }
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "contact_tags"
              }
            }
          },
          {
            "key": "notes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "contact_notes"
              }
            }
          },
          {
            "key": "companies",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "contact_companies"
              }
            }
          },
          {
            "key": "location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "contact_location"
              }
            }
          },
          {
            "key": "social_profiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "contact_social_profiles"
              }
            }
          }
        ]
      }
    },
    "ContactArchivedType": {
      "description": "always contact",
      "name": "ContactArchivedType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          }
        ]
      }
    },
    "contact_archived": {
      "description": "archived contact object",
      "name": "contact_archived",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "always contact",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactArchivedType"
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is provided by the Client.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the contact is archived or not.",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "ContactAttachedCompaniesType": {
      "description": "The type of object",
      "name": "ContactAttachedCompaniesType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "contact_attached_companies": {
      "description": "A list of Company Objects",
      "name": "contact_attached_companies",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactAttachedCompaniesType"
              }
            }
          },
          {
            "description": "An array containing Company Objects",
            "key": "companies",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "company"
                }
              }
            }
          },
          {
            "description": "The total number of companies associated to this contact",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "pages_link"
              }
            }
          }
        ]
      }
    },
    "contact_companies": {
      "description": "An object containing companies meta data about the companies that a contact has. Up to 10 will be displayed here. Use the url to get more.",
      "name": "contact_companies",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Url to get more company resources for this contact",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Int representing the total number of companyies attached to this contact",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
            "key": "has_more",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "ContactDeletedType": {
      "description": "always contact",
      "name": "ContactDeletedType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          }
        ]
      }
    },
    "contact_deleted": {
      "description": "deleted contact object",
      "name": "contact_deleted",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "always contact",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactDeletedType"
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is provided by the Client.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the contact is deleted or not.",
            "key": "deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "ContactListType": {
      "description": "Always list",
      "name": "ContactListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "contact_list": {
      "description": "Contacts are your users in Intercom.",
      "name": "contact_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always list",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactListType"
              }
            }
          },
          {
            "description": "The list of contact objects",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "contact"
                }
              }
            }
          },
          {
            "description": "A count of the total number of objects.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          }
        ]
      }
    },
    "contact_location": {
      "description": "An object containing location meta data about a Intercom contact.",
      "name": "contact_location",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always location",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The country that the contact is located in",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The overal region that the contact is located in",
            "key": "region",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The city that the contact is located in",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "contact_notes": {
      "description": "An object containing notes meta data about the notes that a contact has. Up to 10 will be displayed here. Use the url to get more.",
      "name": "contact_notes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "This object represents the notes attached to a contact.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "addressable_list"
                }
              }
            }
          },
          {
            "description": "Url to get more company resources for this contact",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Int representing the total number of companyies attached to this contact",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
            "key": "has_more",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "ContactReferenceType": {
      "description": "always contact",
      "name": "ContactReferenceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          }
        ]
      }
    },
    "contact_reference": {
      "description": "reference to contact object",
      "name": "contact_reference",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "always contact",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactReferenceType"
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is provided by the Client.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ContactReplyBaseRequestMessageType": {
      "name": "ContactReplyBaseRequestMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "comment"
          }
        ]
      }
    },
    "ContactReplyBaseRequestType": {
      "name": "ContactReplyBaseRequestType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user"
          }
        ]
      }
    },
    "contact_reply_base_request": {
      "name": "contact_reply_base_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "ContactReplyBaseRequestMessageType"
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "ContactReplyBaseRequestType"
            }
          },
          {
            "description": "The text body of the comment.",
            "key": "body",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time the reply was created. If not provided, the current time will be used.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
            "key": "attachment_urls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "contact_reply_conversation_request": {
      "name": "contact_reply_conversation_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "contact_reply_intercom_user_id_request",
            "type": {
              "type": "id",
              "value": "contact_reply_intercom_user_id_request"
            }
          },
          {
            "typeName": "contact_reply_email_request",
            "type": {
              "type": "id",
              "value": "contact_reply_email_request"
            }
          },
          {
            "typeName": "contact_reply_user_id_request",
            "type": {
              "type": "id",
              "value": "contact_reply_user_id_request"
            }
          }
        ]
      }
    },
    "contact_reply_email_request": {
      "description": "Payload of the request to reply on behalf of a contact using their `email`",
      "name": "contact_reply_email_request",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "description": "The email you have defined for the user.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of files that will be added as attachments.",
            "key": "attachment_files",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "conversation_attachment_files"
                }
              }
            }
          }
        ]
      }
    },
    "contact_reply_intercom_user_id_request": {
      "description": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`",
      "name": "contact_reply_intercom_user_id_request",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "description": "The identifier for the contact as given by Intercom.",
            "key": "intercom_user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of files that will be added as attachments.",
            "key": "attachment_files",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "conversation_attachment_files"
                }
              }
            }
          }
        ]
      }
    },
    "contact_reply_ticket_email_request": {
      "description": "Payload of the request to reply on behalf of a contact using their `email`",
      "name": "contact_reply_ticket_email_request",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "description": "The email you have defined for the user.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "contact_reply_ticket_intercom_user_id_request": {
      "description": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`",
      "name": "contact_reply_ticket_intercom_user_id_request",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "description": "The identifier for the contact as given by Intercom.",
            "key": "intercom_user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "contact_reply_ticket_request": {
      "name": "contact_reply_ticket_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "contact_reply_ticket_intercom_user_id_request",
            "type": {
              "type": "id",
              "value": "contact_reply_ticket_intercom_user_id_request"
            }
          },
          {
            "typeName": "contact_reply_ticket_user_id_request",
            "type": {
              "type": "id",
              "value": "contact_reply_ticket_user_id_request"
            }
          },
          {
            "typeName": "contact_reply_ticket_email_request",
            "type": {
              "type": "id",
              "value": "contact_reply_ticket_email_request"
            }
          }
        ]
      }
    },
    "contact_reply_ticket_user_id_request": {
      "description": "Payload of the request to reply on behalf of a contact using their `user_id`",
      "name": "contact_reply_ticket_user_id_request",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "description": "The external_id you have defined for the contact.",
            "key": "user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "contact_reply_user_id_request": {
      "description": "Payload of the request to reply on behalf of a contact using their `user_id`",
      "name": "contact_reply_user_id_request",
      "shape": {
        "type": "object",
        "extends": [
          "contact_reply_base_request"
        ],
        "properties": [
          {
            "description": "The external_id you have defined for the contact.",
            "key": "user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of files that will be added as attachments. You can include up to 10 files.",
            "key": "attachment_files",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "conversation_attachment_files"
                }
              }
            }
          }
        ]
      }
    },
    "ContactSegmentsType": {
      "description": "The type of the object",
      "name": "ContactSegmentsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "contact_segments": {
      "description": "A list of segments objects attached to a specific contact.",
      "name": "contact_segments",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactSegmentsType"
              }
            }
          },
          {
            "description": "Segment objects associated with the contact.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "segment"
                }
              }
            }
          }
        ]
      }
    },
    "contact_social_profiles": {
      "description": "An object containing social profiles that a contact has.",
      "name": "contact_social_profiles",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of social profiles objects associated with the contact.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "social_profile"
                }
              }
            }
          }
        ]
      }
    },
    "contact_subscription_types": {
      "description": "An object containing Subscription Types meta data about the SubscriptionTypes that a contact has.",
      "name": "contact_subscription_types",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "This object represents the subscriptions attached to a contact.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "addressable_list"
                }
              }
            }
          },
          {
            "description": "Url to get more subscription type resources for this contact",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Int representing the total number of subscription types attached to this contact",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
            "key": "has_more",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "contact_tags": {
      "description": "An object containing tags meta data about the tags that a contact has. Up to 10 will be displayed here. Use the url to get more.",
      "name": "contact_tags",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "This object represents the tags attached to a contact.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "addressable_list"
                }
              }
            }
          },
          {
            "description": "url to get more tag resources for this contact",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Int representing the total number of tags attached to this contact",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
            "key": "has_more",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "ContactUnarchivedType": {
      "description": "always contact",
      "name": "ContactUnarchivedType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          }
        ]
      }
    },
    "contact_unarchived": {
      "description": "unarchived contact object",
      "name": "contact_unarchived",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "always contact",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContactUnarchivedType"
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact which is provided by the Client.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the contact is archived or not.",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "ContentSourceContentType": {
      "description": "The type of the content source.",
      "name": "ContentSourceContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "file"
          },
          {
            "value": "article"
          },
          {
            "value": "external_content"
          },
          {
            "value": "content_snippet"
          },
          {
            "value": "workflow_connector_action"
          }
        ]
      }
    },
    "content_source": {
      "description": "The content source used by AI Agent in the conversation.",
      "name": "content_source",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the content source.",
            "key": "content_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContentSourceContentType"
              }
            }
          },
          {
            "description": "The internal URL linking to the content source for teammates.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The title of the content source.",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ISO 639 language code of the content source.",
            "key": "locale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ContentSourcesListType": {
      "name": "ContentSourcesListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "content_source.list"
          }
        ]
      }
    },
    "content_sources_list": {
      "name": "content_sources_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ContentSourcesListType"
              }
            }
          },
          {
            "description": "The total number of content sources used by AI Agent in the conversation.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The content sources used by AI Agent in the conversation.",
            "key": "content_sources",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "content_source"
                }
              }
            }
          }
        ]
      }
    },
    "ConversationState": {
      "description": "Can be set to \"open\", \"closed\" or \"snoozed\".",
      "name": "ConversationState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "open"
          },
          {
            "value": "closed"
          },
          {
            "value": "snoozed"
          }
        ]
      }
    },
    "ConversationPriority": {
      "description": "If marked as priority, it will return priority or else not_priority.",
      "name": "ConversationPriority",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "priority"
          },
          {
            "value": "not_priority"
          }
        ]
      }
    },
    "conversation": {
      "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
      "name": "conversation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always conversation.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the conversation.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The title given to the conversation.",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The time the conversation was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the conversation was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time a Contact responded to an Admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an Admin.",
            "key": "waiting_since",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "If set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time. i.e. it will be in a snoozed state until this time.",
            "key": "snoozed_until",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether a conversation is open (true) or closed (false).",
            "key": "open",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Can be set to \"open\", \"closed\" or \"snoozed\".",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ConversationState"
              }
            }
          },
          {
            "description": "Indicates whether a conversation has been read.",
            "key": "read",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "If marked as priority, it will return priority or else not_priority.",
            "key": "priority",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ConversationPriority"
              }
            }
          },
          {
            "description": "The id of the admin assigned to the conversation. If it's not assigned to an admin it will return null.",
            "key": "admin_assignee_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The id of the team assigned to the conversation. If it's not assigned to a team it will return null.",
            "key": "team_assignee_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "tags"
              }
            }
          },
          {
            "key": "conversation_rating",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_rating"
              }
            }
          },
          {
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_source"
              }
            }
          },
          {
            "key": "contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_contacts"
              }
            }
          },
          {
            "key": "teammates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_teammates"
              }
            }
          },
          {
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "custom_attributes"
              }
            }
          },
          {
            "key": "first_contact_reply",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_first_contact_reply"
              }
            }
          },
          {
            "key": "sla_applied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "sla_applied"
              }
            }
          },
          {
            "key": "statistics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_statistics"
              }
            }
          },
          {
            "key": "conversation_parts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_parts"
              }
            }
          },
          {
            "key": "linked_objects",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "linked_object_list"
              }
            }
          },
          {
            "description": "Indicates whether the AI Agent participated in the conversation.",
            "key": "ai_agent_participated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "ai_agent",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "ai_agent"
                }
              }
            }
          }
        ]
      }
    },
    "conversation_attachment_files": {
      "description": "Properties of the attachment files in a conversation part",
      "name": "conversation_attachment_files",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The content type of the file",
            "key": "content_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The base64 encoded file data.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the file.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "ConversationContactsType": {
      "description": "",
      "name": "ConversationContactsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact.list"
          }
        ]
      }
    },
    "conversation_contacts": {
      "description": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.",
      "name": "conversation_contacts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ConversationContactsType"
              }
            }
          },
          {
            "description": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.",
            "key": "contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "contact_reference"
                }
              }
            }
          }
        ]
      }
    },
    "conversation_first_contact_reply": {
      "description": "An object containing information on the first users message. For a contact initiated message this will represent the users original message.",
      "name": "conversation_first_contact_reply",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ConversationListType": {
      "description": "Always conversation.list",
      "name": "ConversationListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "conversation.list"
          }
        ]
      }
    },
    "conversation_list": {
      "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
      "name": "conversation_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always conversation.list",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ConversationListType"
              }
            }
          },
          {
            "description": "The list of conversation objects",
            "key": "conversations",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "conversation"
                }
              }
            }
          },
          {
            "description": "A count of the total number of objects.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          }
        ]
      }
    },
    "conversation_part": {
      "description": "A Conversation Part represents a message in the conversation.",
      "name": "conversation_part",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always conversation_part",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the conversation part.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of conversation part.",
            "key": "part_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The time the conversation part was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the conversation part was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the user was notified with the conversation part.",
            "key": "notified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)",
            "key": "assigned_to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "reference"
                }
              }
            }
          },
          {
            "key": "author",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_part_author"
              }
            }
          },
          {
            "description": "A list of attachments for the part.",
            "key": "attachments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "part_attachment"
                }
              }
            }
          },
          {
            "description": "The external id of the conversation part",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether or not the conversation part has been redacted.",
            "key": "redacted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "conversation_part_author": {
      "description": "The object who initiated the conversation, which can be a Contact, Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams. For Twitter, this will be blank.",
      "name": "conversation_part_author",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the author",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the author",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the author",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email of the author",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "ConversationPartsType": {
      "description": "",
      "name": "ConversationPartsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "conversation_part.list"
          }
        ]
      }
    },
    "conversation_parts": {
      "description": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.",
      "name": "conversation_parts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ConversationPartsType"
              }
            }
          },
          {
            "description": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.",
            "key": "conversation_parts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "conversation_part"
                }
              }
            }
          },
          {
            "description": "",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "conversation_rating": {
      "description": "The Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation.",
      "name": "conversation_rating",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The rating, between 1 and 5, for the conversation.",
            "key": "rating",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An optional field to add a remark to correspond to the number rating",
            "key": "remark",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time the rating was requested in the conversation being rated.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "contact",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "contact_reference"
              }
            }
          },
          {
            "key": "teammate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "reference"
              }
            }
          }
        ]
      }
    },
    "conversation_source": {
      "description": "The Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated.",
      "name": "conversation_source",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "This includes conversation, email, facebook, instagram, phone_call, phone_switch, push, sms, twitter and whatsapp.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the message.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The conversation's initiation type. Possible values are customer_initiated, campaigns_initiated (legacy campaigns), operator_initiated (Custom bot), automated (Series and other outbounds with dynamic audience message) and admin_initiated (fixed audience message, ticket initiated by an admin, group email).",
            "key": "delivered_as",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Optional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.",
            "key": "subject",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "author",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "conversation_part_author"
              }
            }
          },
          {
            "description": "A list of attachments for the part.",
            "key": "attachments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "part_attachment"
                }
              }
            }
          },
          {
            "description": "The URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether or not the source message has been redacted. Only applicable for contact initiated messages.",
            "key": "redacted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "conversation_statistics": {
      "description": "A Statistics object containing all information required for reporting, with timestamps and calculated metrics.",
      "name": "conversation_statistics",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Duration until last assignment before first admin reply. In seconds.",
            "key": "time_to_assignment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Duration until first admin reply. Subtracts out of business hours. In seconds.",
            "key": "time_to_admin_reply",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Duration until conversation was closed first time. Subtracts out of business hours. In seconds.",
            "key": "time_to_first_close",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Duration until conversation was closed last time. Subtracts out of business hours. In seconds.",
            "key": "time_to_last_close",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Median based on all admin replies after a contact reply. Subtracts out of business hours. In seconds.",
            "key": "median_time_to_reply",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of first text conversation part from a contact.",
            "key": "first_contact_reply_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of first assignment after first_contact_reply_at.",
            "key": "first_assignment_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of first admin reply after first_contact_reply_at.",
            "key": "first_admin_reply_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of first close after first_contact_reply_at.",
            "key": "first_close_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of last assignment after first_contact_reply_at.",
            "key": "last_assignment_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of first admin reply since most recent assignment.",
            "key": "last_assignment_admin_reply_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of the last conversation part from a contact.",
            "key": "last_contact_reply_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of the last conversation part from an admin.",
            "key": "last_admin_reply_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Time of the last conversation close.",
            "key": "last_close_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last admin who closed the conversation. Returns a reference to an Admin object.",
            "key": "last_closed_by_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Number of reopens after first_contact_reply_at.",
            "key": "count_reopens",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Number of assignments after first_contact_reply_at.",
            "key": "count_assignments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Total number of conversation parts.",
            "key": "count_conversation_parts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "conversation_teammates": {
      "description": "The list of teammates who participated in the conversation (wrote at least one conversation part).",
      "name": "conversation_teammates",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object - `admin.list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The list of teammates who participated in the conversation (wrote at least one conversation part).",
            "key": "teammates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "reference"
                }
              }
            }
          }
        ]
      }
    },
    "convert_conversation_to_ticket_request": {
      "description": "You can convert a Conversation to a Ticket",
      "name": "convert_conversation_to_ticket_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the type of ticket you want to convert the conversation to",
            "key": "ticket_type_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_request_custom_attributes"
              }
            }
          }
        ]
      }
    },
    "ConvertVisitorRequestUser": {
      "description": "The unique identifiers retained after converting or merging.",
      "name": "ConvertVisitorRequestUser",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": []
      }
    },
    "ConvertVisitorRequestVisitor": {
      "description": "The unique identifiers to convert a single Visitor.",
      "name": "ConvertVisitorRequestVisitor",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": []
      }
    },
    "convert_visitor_request": {
      "description": "You can merge a Visitor to a Contact of role type lead or user.",
      "name": "convert_visitor_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Represents the role of the Contact model. Accepts `lead` or `user`.",
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The unique identifiers retained after converting or merging.",
            "key": "user",
            "valueType": {
              "type": "id",
              "value": "ConvertVisitorRequestUser"
            }
          },
          {
            "description": "The unique identifiers to convert a single Visitor.",
            "key": "visitor",
            "valueType": {
              "type": "id",
              "value": "ConvertVisitorRequestVisitor"
            }
          }
        ]
      }
    },
    "CreateArticleRequestState": {
      "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
      "name": "CreateArticleRequestState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "published"
          },
          {
            "value": "draft"
          }
        ]
      }
    },
    "create_article_request": {
      "description": "You can create an Article",
      "name": "create_article_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title of the article.For multilingual articles, this will be the title of the default language's content.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The content of the article. For multilingual articles, this will be the body of the default language's content.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
            "key": "author_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CreateArticleRequestState"
              }
            }
          },
          {
            "description": "The id of the article's parent collection or section. An article without this field stands alone.",
            "key": "parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The type of parent, which can either be a `collection` or `section`.",
            "key": "parent_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "translated_content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_translated_content"
              }
            }
          }
        ]
      }
    },
    "create_collection_request": {
      "description": "You can create a collection",
      "name": "create_collection_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The description of the collection. For multilingual collections, this will be the description of the default language's content.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "translated_content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "group_translated_content"
                }
              }
            }
          },
          {
            "description": "The id of the parent collection. If `null` then it will be created as the first level collection.",
            "key": "parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The id of the help center where the collection will be created. If `null` then it will be created in the default help center.",
            "key": "help_center_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "create_contact_request": {
      "description": "Payload to create a contact",
      "name": "create_contact_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": []
      }
    },
    "CreateConversationRequestFromType": {
      "description": "The role associated to the contact - user or lead.",
      "name": "CreateConversationRequestFromType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "lead"
          },
          {
            "value": "user"
          },
          {
            "value": "contact"
          }
        ]
      }
    },
    "CreateConversationRequestFrom": {
      "name": "CreateConversationRequestFrom",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The role associated to the contact - user or lead.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "CreateConversationRequestFromType"
            }
          },
          {
            "description": "The identifier for the contact which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid",
                "minLength": 24,
                "maxLength": 24
              }
            }
          }
        ]
      }
    },
    "create_conversation_request": {
      "description": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
      "name": "create_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "from",
            "valueType": {
              "type": "id",
              "value": "CreateConversationRequestFrom"
            }
          },
          {
            "description": "The content of the message. HTML is not supported.",
            "key": "body",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CreateDataAttributeRequestModel": {
      "description": "The model that the data attribute belongs to.",
      "name": "CreateDataAttributeRequestModel",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          },
          {
            "value": "company"
          }
        ]
      }
    },
    "CreateDataAttributeRequestDataType": {
      "description": "The type of data stored for this attribute.",
      "name": "CreateDataAttributeRequestDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "string"
          },
          {
            "value": "integer"
          },
          {
            "value": "float"
          },
          {
            "value": "boolean"
          },
          {
            "value": "datetime"
          },
          {
            "value": "date"
          }
        ]
      }
    },
    "create_data_attribute_request": {
      "description": "",
      "name": "create_data_attribute_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the data attribute.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The model that the data attribute belongs to.",
            "key": "model",
            "valueType": {
              "type": "id",
              "value": "CreateDataAttributeRequestModel"
            }
          },
          {
            "description": "The type of data stored for this attribute.",
            "key": "data_type",
            "valueType": {
              "type": "id",
              "value": "CreateDataAttributeRequestDataType"
            }
          },
          {
            "description": "The readable description you see in the UI for the attribute.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`.",
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Can this attribute be updated by the Messenger",
            "key": "messenger_writable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "create_data_event_request": {
      "description": "",
      "name": "create_data_event_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": []
      }
    },
    "CreateDataEventSummariesRequestEventSummaries": {
      "description": "A list of event summaries for the user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
      "name": "CreateDataEventSummariesRequestEventSummaries",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the event that occurred. A good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
            "key": "event_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The number of times the event occurred.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the event was sent",
            "key": "first",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the event was sent",
            "key": "last",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "create_data_event_summaries_request": {
      "description": "You can send a list of event summaries for a user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense \"verb-noun\" combination, to improve readability, for example `updated-plan`.",
      "name": "create_data_event_summaries_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Your identifier for the user.",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A list of event summaries for the user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
            "key": "event_summaries",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CreateDataEventSummariesRequestEventSummaries"
              }
            }
          }
        ]
      }
    },
    "create_data_exports_request": {
      "description": "Request for creating a data export",
      "name": "create_data_exports_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The start date that you request data for. It must be formatted as a unix timestamp.",
            "key": "created_at_after",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The end date that you request data for. It must be formatted as a unix timestamp.",
            "key": "created_at_before",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "create_message_request": {
      "description": "You can create a message",
      "name": "create_message_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": []
      }
    },
    "create_or_update_company_request": {
      "description": "You can create or update a Company",
      "name": "create_or_update_company_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the Company",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The company id you have defined for the company. Can't be updated",
            "key": "company_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the plan you have associated with the company.",
            "key": "plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The number of employees in this company.",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The URL for this company's website. Please note that the value specified here is not validated. Accepts any string.",
            "key": "website",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The industry that this company operates in.",
            "key": "industry",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A hash of key/value pairs containing any other data about the company you want Intercom to store.",
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The time the company was created by you.",
            "key": "remote_created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "How much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..",
            "key": "monthly_spend",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "create_or_update_tag_request": {
      "description": "You can create or update an existing tag.",
      "name": "create_or_update_tag_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The id of tag to updates.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "create_phone_switch_request": {
      "description": "You can create an phone switch",
      "name": "create_phone_switch_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Phone number in E.164 format, that will receive the SMS to continue the conversation in the Messenger.",
            "key": "phone",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "custom_attributes"
              }
            }
          }
        ]
      }
    },
    "create_ticket_reply_with_comment_request": {
      "name": "create_ticket_reply_with_comment_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "contact_reply_ticket_request",
            "type": {
              "type": "id",
              "value": "contact_reply_ticket_request"
            }
          },
          {
            "typeName": "admin_reply_ticket_request",
            "type": {
              "type": "id",
              "value": "admin_reply_ticket_request"
            }
          }
        ]
      }
    },
    "CreateTicketRequestContactsItems0": {
      "name": "CreateTicketRequestContactsItems0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The identifier for the contact as given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CreateTicketRequestContactsItems1": {
      "name": "CreateTicketRequestContactsItems1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The external_id you have defined for the contact who is being added as a participant.",
            "key": "external_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CreateTicketRequestContactsItems2": {
      "name": "CreateTicketRequestContactsItems2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The email you have defined for the contact who is being added as a participant. If a contact with this email does not exist, one will be created.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CreateTicketRequestContactsItems": {
      "name": "CreateTicketRequestContactsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "CreateTicketRequestContactsItems0",
            "type": {
              "type": "id",
              "value": "CreateTicketRequestContactsItems0"
            }
          },
          {
            "typeName": "CreateTicketRequestContactsItems1",
            "type": {
              "type": "id",
              "value": "CreateTicketRequestContactsItems1"
            }
          },
          {
            "typeName": "CreateTicketRequestContactsItems2",
            "type": {
              "type": "id",
              "value": "CreateTicketRequestContactsItems2"
            }
          }
        ]
      }
    },
    "create_ticket_request": {
      "description": "You can create a Ticket",
      "name": "create_ticket_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the type of ticket you want to create",
            "key": "ticket_type_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The list of contacts (users or leads) affected by this ticket. Currently only one is allowed",
            "key": "contacts",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "CreateTicketRequestContactsItems"
              }
            }
          },
          {
            "description": "The ID of the company that the ticket is associated with. The ID that you set upon company creation.",
            "key": "company_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time the ticket was created. If not provided, the current time will be used.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "ticket_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_request_custom_attributes"
              }
            }
          }
        ]
      }
    },
    "CreateTicketTypeAttributeRequestDataType": {
      "description": "The data type of the attribute",
      "name": "CreateTicketTypeAttributeRequestDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "string"
          },
          {
            "value": "list"
          },
          {
            "value": "integer"
          },
          {
            "value": "decimal"
          },
          {
            "value": "boolean"
          },
          {
            "value": "datetime"
          },
          {
            "value": "files"
          }
        ]
      }
    },
    "create_ticket_type_attribute_request": {
      "description": "You can create a Ticket Type Attribute",
      "name": "create_ticket_type_attribute_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the ticket type attribute",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The description of the attribute presented to the teammate or contact",
            "key": "description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The data type of the attribute",
            "key": "data_type",
            "valueType": {
              "type": "id",
              "value": "CreateTicketTypeAttributeRequestDataType"
            }
          },
          {
            "description": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox.",
            "key": "required_to_create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger.",
            "key": "required_to_create_for_contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Whether the attribute is visible to teammates when creating a ticket in Inbox.",
            "key": "visible_on_create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          {
            "description": "Whether the attribute is visible to contacts when creating a ticket in Messenger.",
            "key": "visible_to_contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          {
            "description": "Whether the attribute allows multiple lines of text (only applicable to string attributes)",
            "key": "multiline",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A comma delimited list of items for the attribute value (only applicable to list attributes)",
            "key": "list_items",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)",
            "key": "allow_multiple_values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "CreateTicketTypeRequestCategory": {
      "description": "Category of the Ticket Type.",
      "name": "CreateTicketTypeRequestCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Customer"
          },
          {
            "value": "Back-office"
          },
          {
            "value": "Tracker"
          }
        ]
      }
    },
    "create_ticket_type_request": {
      "description": "The request payload for creating a ticket type.\n  You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
      "name": "create_ticket_type_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the ticket type.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The description of the ticket type.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Category of the Ticket Type.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CreateTicketTypeRequestCategory"
              }
            }
          },
          {
            "description": "The icon of the ticket type.",
            "key": "icon",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "🎟️"
                }
              }
            }
          },
          {
            "description": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute.",
            "key": "is_internal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "CursorPagesType": {
      "description": "the type of object `pages`.",
      "name": "CursorPagesType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pages"
          }
        ]
      }
    },
    "cursor_pages": {
      "description": "Cursor-based pagination is a technique used in the Intercom API to navigate through large amounts of data.\nA \"cursor\" or pointer is used to keep track of the current position in the result set, allowing the API to return the data in small chunks or \"pages\" as needed.\n",
      "name": "cursor_pages",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "the type of object `pages`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CursorPagesType"
              }
            }
          },
          {
            "description": "The current page",
            "key": "page",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "starting_after_paging"
              }
            }
          },
          {
            "description": "Number of results per page",
            "key": "per_page",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Total number of pages",
            "key": "total_pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "CustomAttributes0": {
      "name": "CustomAttributes0",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "CustomAttributes": {
      "name": "CustomAttributes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "CustomAttributes0",
            "type": {
              "type": "id",
              "value": "CustomAttributes0"
            }
          },
          {
            "typeName": "custom_object_instance",
            "type": {
              "type": "id",
              "value": "custom_object_instance"
            }
          }
        ]
      }
    },
    "custom_attributes": {
      "description": "An object containing the different custom attributes associated to the conversation as key-value pairs. For relationship attributes the value will be a list of custom object instance models.",
      "name": "custom_attributes",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "id",
            "value": "CustomAttributes"
          }
        }
      }
    },
    "custom_object_instance": {
      "description": "A Custom Object Instance represents an instance of a custom object type. This allows you to create and set custom attributes to store data about your customers that is not already captured by Intercom. The parent object includes recommended default attributes and you can add your own custom attributes.",
      "name": "custom_object_instance",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Intercom defined id representing the custom object instance.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id you have defined for the custom object instance.",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The identifier of the custom object type that defines the structure of the custom object instance.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The custom attributes you have set on the custom object instance.",
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CustomerRequest0": {
      "name": "CustomerRequest0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The identifier for the contact as given by Intercom.",
            "key": "intercom_user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CustomerRequest1": {
      "name": "CustomerRequest1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The external_id you have defined for the contact who is being added as a participant.",
            "key": "user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "CustomerRequest2": {
      "name": "CustomerRequest2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The email you have defined for the contact who is being added as a participant.",
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "customer_request": {
      "name": "customer_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "CustomerRequest0",
            "type": {
              "type": "id",
              "value": "CustomerRequest0"
            }
          },
          {
            "typeName": "CustomerRequest1",
            "type": {
              "type": "id",
              "value": "CustomerRequest1"
            }
          },
          {
            "typeName": "CustomerRequest2",
            "type": {
              "type": "id",
              "value": "CustomerRequest2"
            }
          }
        ]
      }
    },
    "DataAttributeType": {
      "description": "Value is `data_attribute`.",
      "name": "DataAttributeType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "data_attribute"
          }
        ]
      }
    },
    "DataAttributeModel": {
      "description": "Value is `contact` for user/lead attributes and `company` for company attributes.",
      "name": "DataAttributeModel",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          },
          {
            "value": "company"
          }
        ]
      }
    },
    "DataAttributeDataType": {
      "description": "The data type of the attribute.",
      "name": "DataAttributeDataType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "string"
          },
          {
            "value": "integer"
          },
          {
            "value": "float"
          },
          {
            "value": "boolean"
          },
          {
            "value": "date"
          }
        ]
      }
    },
    "data_attribute": {
      "description": "Data Attributes are metadata used to describe your contact, company and conversation models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes.",
      "name": "data_attribute",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Value is `data_attribute`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataAttributeType"
              }
            }
          },
          {
            "description": "The unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Value is `contact` for user/lead attributes and `company` for company attributes.",
            "key": "model",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataAttributeModel"
              }
            }
          },
          {
            "description": "Name of the attribute.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Full name of the attribute. Should match the name unless it's a nested attribute. We can split full_name on `.` to access nested user object values.",
            "key": "full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Readable name of the attribute (i.e. name you see in the UI)",
            "key": "label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Readable description of the attribute.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The data type of the attribute.",
            "key": "data_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataAttributeDataType"
              }
            }
          },
          {
            "description": "List of predefined options for attribute value.",
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Can this attribute be updated through API",
            "key": "api_writable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Can this attribute be updated by the Messenger",
            "key": "messenger_writable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Can this attribute be updated in the UI",
            "key": "ui_writable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Set to true if this is a CDA",
            "key": "custom",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Is this attribute archived. (Only applicable to CDAs)",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The time the attribute was created as a UTC Unix timestamp",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the attribute was last updated as a UTC Unix timestamp",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Teammate who created the attribute. Only applicable to CDAs",
            "key": "admin_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "DataAttributeListType": {
      "description": "The type of the object",
      "name": "DataAttributeListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "data_attribute_list": {
      "description": "A list of all data attributes belonging to a workspace for contacts, companies or conversations.",
      "name": "data_attribute_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataAttributeListType"
              }
            }
          },
          {
            "description": "A list of data attributes",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "data_attribute"
                }
              }
            }
          }
        ]
      }
    },
    "DataEventType": {
      "description": "The type of the object",
      "name": "DataEventType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "event"
          }
        ]
      }
    },
    "data_event": {
      "description": "Data events are used to notify Intercom of changes to your data.",
      "name": "data_event",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataEventType"
              }
            }
          },
          {
            "description": "The name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
            "key": "event_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time the event occurred as a UTC Unix timestamp",
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "Your identifier for the user.",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Your identifier for a lead or a user.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Intercom identifier for the user.",
            "key": "intercom_user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An email address for your user. An email should only be used where your application uses email to uniquely identify users.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Optional metadata about the event.",
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "DataEventListType": {
      "description": "The type of the object",
      "name": "DataEventListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "event.list"
          }
        ]
      }
    },
    "DataEventListPages": {
      "description": "Pagination",
      "name": "DataEventListPages",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "since",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "data_event_list": {
      "description": "This will return a list of data events for the App.",
      "name": "data_event_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataEventListType"
              }
            }
          },
          {
            "description": "A list of data events",
            "key": "events",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "data_event"
                }
              }
            }
          },
          {
            "description": "Pagination",
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataEventListPages"
              }
            }
          }
        ]
      }
    },
    "DataEventSummaryType": {
      "description": "The type of the object",
      "name": "DataEventSummaryType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "event.summary"
          }
        ]
      }
    },
    "data_event_summary": {
      "description": "This will return a summary of data events for the App.",
      "name": "data_event_summary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataEventSummaryType"
              }
            }
          },
          {
            "description": "The email address of the user",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Intercom user ID of the user",
            "key": "intercom_user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user ID of the user",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A summary of data events",
            "key": "events",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "data_event_summary_item"
                }
              }
            }
          }
        ]
      }
    },
    "data_event_summary_item": {
      "description": "This will return a summary of a data event for the App.",
      "name": "data_event_summary_item",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the event",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first time the event was sent",
            "key": "first",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The last time the event was sent",
            "key": "last",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The number of times the event was sent",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The description of the event",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "DataExportStatus": {
      "description": "The current state of your job.",
      "name": "DataExportStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "in_progress"
          },
          {
            "value": "failed"
          },
          {
            "value": "completed"
          },
          {
            "value": "no_data"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "data_export": {
      "description": "The data export api is used to view all message sent & viewed in a given timeframe.",
      "name": "data_export",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The identifier for your job.",
            "key": "job_identfier",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The current state of your job.",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DataExportStatus"
              }
            }
          },
          {
            "description": "The time after which you will not be able to access the data.",
            "key": "download_expires_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The location where you can download your data.",
            "key": "download_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "data_export_csv": {
      "description": "A CSV output file",
      "name": "data_export_csv",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The user_id of the user who was sent the message.",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The external_user_id of the user who was sent the message",
            "key": "user_external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The company ID of the user in relation to the message that was sent. Will return -1 if no company is present.",
            "key": "company_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The users email who was sent the message.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The full name of the user receiving the message",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the message.",
            "key": "ruleset_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The specific content that was received. In an A/B test each version has its own Content ID.",
            "key": "content_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Email, Chat, Post etc.",
            "key": "content_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The title of the content you see in your Intercom workspace.",
            "key": "content_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "As you edit content we record new versions. This ID can help you determine which version of a piece of content that was received.",
            "key": "ruleset_version_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "ID for this receipt. Will be included with any related stats in other files to identify this specific delivery of a message.",
            "key": "receipt_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Timestamp for when the receipt was recorded.",
            "key": "received_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The id of the series that this content is part of. Will return -1 if not part of a series.",
            "key": "series_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The title of the series that this content is part of.",
            "key": "series_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the series node that this ruleset is associated with. Each block in a series has a corresponding node_id.",
            "key": "node_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first time a user replied to this message if the content was able to receive replies.",
            "key": "first_reply",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time a user completed this message if the content was able to be completed e.g. Tours, Surveys.",
            "key": "first_completion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the series this message was a part of was completed by the user.",
            "key": "first_series_completion",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the series this message was a part of was disengaged by the user.",
            "key": "first_series_disengagement",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the series this message was a part of was exited by the user.",
            "key": "first_series_exit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the user met this messages associated goal if one exists.",
            "key": "first_goal_success",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the user opened this message.",
            "key": "first_open",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the series the user clicked on a link within this message.",
            "key": "first_click",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the series the user dismissed this message.",
            "key": "first_dismisall",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time the user unsubscribed from this message.",
            "key": "first_unsubscribe",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The first time this message hard bounced for this user",
            "key": "first_hard_bounce",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "DeletedArticleObjectObject": {
      "description": "The type of object which was deleted. - article",
      "name": "DeletedArticleObjectObject",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "article"
          }
        ]
      }
    },
    "deleted_article_object": {
      "description": "Response returned when an object is deleted",
      "name": "deleted_article_object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the article which you provided in the URL.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of object which was deleted. - article",
            "key": "object",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DeletedArticleObjectObject"
              }
            }
          },
          {
            "description": "Whether the article was deleted successfully or not.",
            "key": "deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "DeletedCollectionObjectObject": {
      "description": "The type of object which was deleted. - `collection`",
      "name": "DeletedCollectionObjectObject",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "collection"
          }
        ]
      }
    },
    "deleted_collection_object": {
      "description": "Response returned when an object is deleted",
      "name": "deleted_collection_object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the collection which you provided in the URL.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of object which was deleted. - `collection`",
            "key": "object",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DeletedCollectionObjectObject"
              }
            }
          },
          {
            "description": "Whether the collection was deleted successfully or not.",
            "key": "deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "DeletedCompanyObjectObject": {
      "description": "The type of object which was deleted. - `company`",
      "name": "DeletedCompanyObjectObject",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "company"
          }
        ]
      }
    },
    "deleted_company_object": {
      "description": "Response returned when an object is deleted",
      "name": "deleted_company_object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the company which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of object which was deleted. - `company`",
            "key": "object",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DeletedCompanyObjectObject"
              }
            }
          },
          {
            "description": "Whether the company was deleted successfully or not.",
            "key": "deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "DeletedObjectObject": {
      "description": "The type of object which was deleted - news-item.",
      "name": "DeletedObjectObject",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "news-item"
          }
        ]
      }
    },
    "deleted_object": {
      "description": "Response returned when an object is deleted",
      "name": "deleted_object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the news item which you provided in the URL.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of object which was deleted - news-item.",
            "key": "object",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "DeletedObjectObject"
              }
            }
          },
          {
            "description": "Whether the news item was deleted successfully or not.",
            "key": "deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "detach_contact_from_conversation_request": {
      "name": "detach_contact_from_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The `id` of the admin who is performing the action.",
            "key": "admin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ErrorErrorsItems": {
      "name": "ErrorErrorsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A string indicating the kind of error, used to further qualify the HTTP response code",
            "key": "code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Optional. Human readable description of the error.",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Optional. Used to identify a particular field or query parameter that was in error.",
            "key": "field",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "error": {
      "description": "The API will return an Error List for a failed request, which will contain one or more Error objects.",
      "name": "error",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type is error.list",
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "",
            "key": "request_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "An array of one or more error objects",
            "key": "errors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ErrorErrorsItems"
              }
            }
          }
        ]
      }
    },
    "file_attribute": {
      "description": "The value describing a file upload set for a custom attribute",
      "name": "file_attribute",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The url of the file. This is a temporary URL and will expire after 30 minutes.",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of file",
            "key": "content_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The size of the file in bytes",
            "key": "filesize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The width of the file in pixels, if applicable",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The height of the file in pixels, if applicable",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "GroupContentType": {
      "description": "The type of object - `group_content` .",
      "name": "GroupContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "group_content"
          }
        ]
      }
    },
    "group_content": {
      "description": "The Content of a Group.",
      "name": "group_content",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - `group_content` .",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupContentType"
                }
              }
            }
          },
          {
            "description": "The name of the collection or section.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the collection. Only available for collections.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GroupTranslatedContentType": {
      "description": "The type of object - group_translated_content.",
      "name": "GroupTranslatedContentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "group_translated_content"
          }
        ]
      }
    },
    "group_translated_content": {
      "description": "The Translated Content of an Group. The keys are the locale codes and the values are the translated content of the Group.",
      "name": "group_translated_content",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object - group_translated_content.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupTranslatedContentType"
                }
              }
            }
          },
          {
            "description": "The content of the group in Arabic",
            "key": "ar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Bulgarian",
            "key": "bg",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Bosnian",
            "key": "bs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Catalan",
            "key": "ca",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Czech",
            "key": "cs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Danish",
            "key": "da",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in German",
            "key": "de",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Greek",
            "key": "el",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in English",
            "key": "en",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Spanish",
            "key": "es",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Estonian",
            "key": "et",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Finnish",
            "key": "fi",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in French",
            "key": "fr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Hebrew",
            "key": "he",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Croatian",
            "key": "hr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Hungarian",
            "key": "hu",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Indonesian",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Italian",
            "key": "it",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Japanese",
            "key": "ja",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Korean",
            "key": "ko",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Lithuanian",
            "key": "lt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Latvian",
            "key": "lv",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Mongolian",
            "key": "mn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Norwegian",
            "key": "nb",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Dutch",
            "key": "nl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Polish",
            "key": "pl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Portuguese (Portugal)",
            "key": "pt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Romanian",
            "key": "ro",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Russian",
            "key": "ru",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Slovenian",
            "key": "sl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Serbian",
            "key": "sr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Swedish",
            "key": "sv",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Turkish",
            "key": "tr",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Vietnamese",
            "key": "vi",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Portuguese (Brazil)",
            "key": "pt-BR",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Chinese (China)",
            "key": "zh-CN",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          },
          {
            "description": "The content of the group in Chinese (Taiwan)",
            "key": "zh-TW",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "group_content"
              }
            }
          }
        ]
      }
    },
    "help_center": {
      "description": "Help Centers contain collections",
      "name": "help_center",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the Help Center which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the workspace which the Help Center belongs to.",
            "key": "workspace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time when the Help Center was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time when the Help Center was last updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The identifier of the Help Center. This is used in the URL of the Help Center.",
            "key": "identifier",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the Help Center is turned on or not. This is controlled in your Help Center settings.",
            "key": "website_turned_on",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The display name of the Help Center only seen by teammates.",
            "key": "display_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "HelpCenterListType": {
      "description": "The type of the object - `list`.",
      "name": "HelpCenterListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "help_center_list": {
      "description": "A list of Help Centers belonging to the App",
      "name": "help_center_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object - `list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "HelpCenterListType"
              }
            }
          },
          {
            "description": "An array of Help Center objects",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "help_center"
                }
              }
            }
          }
        ]
      }
    },
    "intercom_version": {
      "description": "Intercom API version.</br>By default, it's equal to the version set in the app package.",
      "name": "intercom_version",
      "shape": {
        "type": "enum",
        "default": "2.11",
        "values": [
          {
            "value": "1.0"
          },
          {
            "value": "1.1"
          },
          {
            "value": "1.2"
          },
          {
            "value": "1.3"
          },
          {
            "value": "1.4"
          },
          {
            "value": "2.0"
          },
          {
            "value": "2.1"
          },
          {
            "value": "2.2"
          },
          {
            "value": "2.3"
          },
          {
            "value": "2.4"
          },
          {
            "value": "2.5"
          },
          {
            "value": "2.6"
          },
          {
            "value": "2.7"
          },
          {
            "value": "2.8"
          },
          {
            "value": "2.9"
          },
          {
            "value": "2.10"
          },
          {
            "value": "2.11"
          },
          {
            "value": "Unstable"
          }
        ]
      }
    },
    "LinkedObjectType": {
      "description": "ticket or conversation",
      "name": "LinkedObjectType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ticket"
          },
          {
            "value": "conversation"
          }
        ]
      }
    },
    "LinkedObjectCategory": {
      "description": "Category of the Linked Ticket Object.",
      "name": "LinkedObjectCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Customer"
          },
          {
            "value": "Back-office"
          },
          {
            "value": "Tracker"
          }
        ]
      }
    },
    "linked_object": {
      "description": "A linked conversation or ticket.",
      "name": "linked_object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ticket or conversation",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "LinkedObjectType"
              }
            }
          },
          {
            "description": "The ID of the linked object",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Category of the Linked Ticket Object.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LinkedObjectCategory"
                }
              }
            }
          }
        ]
      }
    },
    "LinkedObjectListType": {
      "description": "Always list.",
      "name": "LinkedObjectListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "linked_object_list": {
      "description": "An object containing metadata about linked conversations and linked tickets. Up to 1000 can be returned.",
      "name": "linked_object_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always list.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "LinkedObjectListType"
              }
            }
          },
          {
            "description": "The total number of linked objects.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether or not there are more linked objects than returned.",
            "key": "has_more",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "An array containing the linked conversations and linked tickets.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "linked_object"
                }
              }
            }
          }
        ]
      }
    },
    "merge_contacts_request": {
      "description": "Merge contact data.",
      "name": "merge_contacts_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the contact to merge away from. Must be a lead.",
            "key": "from",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier for the contact to merge into. Must be a user.",
            "key": "into",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "MessageMessageType": {
      "description": "The type of message that was sent. Can be email, inapp, facebook or twitter.",
      "name": "MessageMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "email"
          },
          {
            "value": "inapp"
          },
          {
            "value": "facebook"
          },
          {
            "value": "twitter"
          }
        ]
      }
    },
    "message": {
      "description": "Message are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact.",
      "name": "message",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the message",
            "key": "type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The id representing the message.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time the conversation was created.",
            "key": "created_at",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "The subject of the message. Only present if message_type: email.",
            "key": "subject",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The message body, which may contain HTML.",
            "key": "body",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The type of message that was sent. Can be email, inapp, facebook or twitter.",
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "MessageMessageType"
            }
          },
          {
            "description": "The associated conversation_id",
            "key": "conversation_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "MultipleFilterSearchRequestOperator": {
      "description": "An operator to allow boolean inspection between multiple fields.",
      "name": "MultipleFilterSearchRequestOperator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "AND"
          },
          {
            "value": "OR"
          }
        ]
      }
    },
    "MultipleFilterSearchRequestValue0": {
      "description": "Add mutiple filters.",
      "name": "MultipleFilterSearchRequestValue0",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "multiple_filter_search_request"
          }
        }
      }
    },
    "MultipleFilterSearchRequestValue1": {
      "description": "Add a single filter field.",
      "name": "MultipleFilterSearchRequestValue1",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "single_filter_search_request"
          }
        }
      }
    },
    "MultipleFilterSearchRequestValue": {
      "name": "MultipleFilterSearchRequestValue",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "MultipleFilterSearchRequestValue0",
            "description": "Add mutiple filters.",
            "type": {
              "type": "id",
              "value": "MultipleFilterSearchRequestValue0"
            }
          },
          {
            "typeName": "MultipleFilterSearchRequestValue1",
            "description": "Add a single filter field.",
            "type": {
              "type": "id",
              "value": "MultipleFilterSearchRequestValue1"
            }
          }
        ]
      }
    },
    "multiple_filter_search_request": {
      "description": "Search using Intercoms Search APIs with more than one filter.",
      "name": "multiple_filter_search_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An operator to allow boolean inspection between multiple fields.",
            "key": "operator",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MultipleFilterSearchRequestOperator"
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MultipleFilterSearchRequestValue"
              }
            }
          }
        ]
      }
    },
    "NewsItemType": {
      "description": "The type of object.",
      "name": "NewsItemType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "news-item"
          }
        ]
      }
    },
    "NewsItemState": {
      "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
      "name": "NewsItemState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "draft"
          },
          {
            "value": "live"
          }
        ]
      }
    },
    "news_item": {
      "description": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers.",
      "name": "news_item",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NewsItemType"
              }
            }
          },
          {
            "description": "The unique identifier for the news item which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the workspace which the news item belongs to.",
            "key": "workspace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The title of the news item.",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The news item body, which may contain HTML.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the sender of the news item. Must be a teammate on the workspace.",
            "key": "sender_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NewsItemState"
              }
            }
          },
          {
            "description": "A list of newsfeed_assignments to assign to the specified newsfeed.",
            "key": "newsfeed_assignments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "newsfeed_assignment"
                }
              }
            }
          },
          {
            "description": "Label names displayed to users to categorize the news item.",
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "URL of the image used as cover. Must have .jpg or .png extension.",
            "key": "cover_image_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled.",
            "key": "reactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "When set to true, the news item will appear in the messenger newsfeed without showing a notification badge.",
            "key": "deliver_silently",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Timestamp for when the news item was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Timestamp for when the news item was last updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "NewsItemRequestState": {
      "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
      "name": "NewsItemRequestState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "draft"
          },
          {
            "value": "live"
          }
        ]
      }
    },
    "news_item_request": {
      "description": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers.",
      "name": "news_item_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title of the news item.",
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The news item body, which may contain HTML.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the sender of the news item. Must be a teammate on the workspace.",
            "key": "sender_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "description": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NewsItemRequestState"
              }
            }
          },
          {
            "description": "When set to `true`, the news item will appear in the messenger newsfeed without showing a notification badge.",
            "key": "deliver_silently",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Label names displayed to users to categorize the news item.",
            "key": "labels",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled.",
            "key": "reactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A list of newsfeed_assignments to assign to the specified newsfeed.",
            "key": "newsfeed_assignments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "newsfeed_assignment"
                }
              }
            }
          }
        ]
      }
    },
    "NewsfeedType": {
      "description": "The type of object.",
      "name": "NewsfeedType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "newsfeed"
          }
        ]
      }
    },
    "newsfeed": {
      "description": "A newsfeed is a collection of news items, targeted to a specific audience.\n\nNewsfeeds currently cannot be edited through the API, please refer to [this article](https://www.intercom.com/help/en/articles/6362267-getting-started-with-news) to set up your newsfeeds in Intercom.\n",
      "name": "newsfeed",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the newsfeed which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of object.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NewsfeedType"
              }
            }
          },
          {
            "description": "The name of the newsfeed. This name will never be visible to your users.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Timestamp for when the newsfeed was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Timestamp for when the newsfeed was last updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "newsfeed_assignment": {
      "description": "Assigns a news item to a newsfeed.",
      "name": "newsfeed_assignment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the newsfeed which is given by Intercom. Publish dates cannot be in the future, to schedule news items use the dedicated feature in app (see this article).",
            "key": "newsfeed_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Publish date of the news item on the newsfeed, use this field if you want to set a publish date in the past (e.g. when importing existing news items). On write, this field will be ignored if the news item state is \"draft\".",
            "key": "published_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "NoteContact": {
      "description": "Represents the contact that the note was created about.",
      "name": "NoteContact",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `contact`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the contact.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "note": {
      "description": "Notes allow you to annotate and comment on your contacts.",
      "name": "note",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `note`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the note.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time the note was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Represents the contact that the note was created about.",
            "key": "contact",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "NoteContact"
                }
              }
            }
          },
          {
            "description": "Optional. Represents the Admin that created the note.",
            "key": "author",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "admin"
              }
            }
          },
          {
            "description": "The body text of the note.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "note_list": {
      "description": "A paginated list of notes associated with a contact.",
      "name": "note_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An array of notes.",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "note"
                }
              }
            }
          },
          {
            "description": "A count of the total number of notes.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          }
        ]
      }
    },
    "OpenConversationRequestMessageType": {
      "name": "OpenConversationRequestMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "open"
          }
        ]
      }
    },
    "open_conversation_request": {
      "description": "Payload of the request to open a conversation",
      "name": "open_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "OpenConversationRequestMessageType"
            }
          },
          {
            "description": "The id of the admin who is performing the action.",
            "key": "admin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "PagesLinkType": {
      "name": "PagesLinkType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pages"
          }
        ]
      }
    },
    "pages_link": {
      "description": "The majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.\n\nTheir responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.\n",
      "name": "pages_link",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesLinkType"
              }
            }
          },
          {
            "key": "page",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "A link to the next page of results. A response that does not contain a next link does not have further data to fetch.",
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "key": "per_page",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "total_pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedResponseType": {
      "description": "The type of object",
      "name": "PaginatedResponseType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          },
          {
            "value": "conversation.list"
          }
        ]
      }
    },
    "PaginatedResponseDataItems": {
      "name": "PaginatedResponseDataItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "news_item",
            "type": {
              "type": "id",
              "value": "news_item"
            }
          },
          {
            "typeName": "newsfeed",
            "type": {
              "type": "id",
              "value": "newsfeed"
            }
          }
        ]
      }
    },
    "paginated_response": {
      "description": "Paginated Response",
      "name": "paginated_response",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PaginatedResponseType"
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          },
          {
            "description": "A count of the total number of objects.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "An array of Objects",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "PaginatedResponseDataItems"
                }
              }
            }
          }
        ]
      }
    },
    "part_attachment": {
      "description": "The file attached to a part",
      "name": "part_attachment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of attachment",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the attachment",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The URL of the attachment",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The content type of the attachment",
            "key": "content_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The size of the attachment",
            "key": "filesize",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The width of the attachment",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The height of the attachment",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "PhoneSwitchType": {
      "description": "",
      "name": "PhoneSwitchType",
      "shape": {
        "type": "enum",
        "default": "phone_call_redirect",
        "values": [
          {
            "value": "phone_call_redirect"
          }
        ]
      }
    },
    "phone_switch": {
      "description": "Phone Switch Response",
      "name": "phone_switch",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PhoneSwitchType"
              }
            }
          },
          {
            "description": "Phone number in E.164 format, that has received the SMS to continue the conversation in the Messenger.",
            "key": "phone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "RedactConversationRequestOneOf0Type": {
      "description": "The type of resource being redacted.",
      "name": "RedactConversationRequestOneOf0Type",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "conversation_part"
          }
        ]
      }
    },
    "RedactConversationRequest0": {
      "description": "Payload of the request to redact a conversation part",
      "name": "RedactConversationRequest0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of resource being redacted.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "RedactConversationRequestOneOf0Type"
            }
          },
          {
            "description": "The id of the conversation.",
            "key": "conversation_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The id of the conversation_part.",
            "key": "conversation_part_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "RedactConversationRequestOneOf1Type": {
      "description": "The type of resource being redacted.",
      "name": "RedactConversationRequestOneOf1Type",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "source"
          }
        ]
      }
    },
    "RedactConversationRequest1": {
      "description": "Payload of the request to redact a conversation source",
      "name": "RedactConversationRequest1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of resource being redacted.",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "RedactConversationRequestOneOf1Type"
            }
          },
          {
            "description": "The id of the conversation.",
            "key": "conversation_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The id of the source.",
            "key": "source_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "redact_conversation_request": {
      "name": "redact_conversation_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "RedactConversationRequest0",
            "description": "Payload of the request to redact a conversation part",
            "type": {
              "type": "id",
              "value": "RedactConversationRequest0"
            }
          },
          {
            "typeName": "RedactConversationRequest1",
            "description": "Payload of the request to redact a conversation source",
            "type": {
              "type": "id",
              "value": "RedactConversationRequest1"
            }
          }
        ]
      }
    },
    "reference": {
      "description": "reference to another object",
      "name": "reference",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "reply_conversation_request": {
      "name": "reply_conversation_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "contact_reply_conversation_request",
            "type": {
              "type": "id",
              "value": "contact_reply_conversation_request"
            }
          },
          {
            "typeName": "admin_reply_conversation_request",
            "type": {
              "type": "id",
              "value": "admin_reply_conversation_request"
            }
          }
        ]
      }
    },
    "SearchRequestQuery": {
      "name": "SearchRequestQuery",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "single_filter_search_request",
            "type": {
              "type": "id",
              "value": "single_filter_search_request"
            }
          },
          {
            "typeName": "multiple_filter_search_request",
            "type": {
              "type": "id",
              "value": "multiple_filter_search_request"
            }
          }
        ]
      }
    },
    "search_request": {
      "description": "Search using Intercoms Search APIs.",
      "name": "search_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "query",
            "valueType": {
              "type": "id",
              "value": "SearchRequestQuery"
            }
          },
          {
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "starting_after_paging"
              }
            }
          }
        ]
      }
    },
    "SegmentType": {
      "description": "The type of object.",
      "name": "SegmentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "segment"
          }
        ]
      }
    },
    "SegmentPersonType": {
      "description": "Type of the contact: contact (lead) or user.",
      "name": "SegmentPersonType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          },
          {
            "value": "user"
          }
        ]
      }
    },
    "segment": {
      "description": "A segment is a group of your contacts defined by the rules that you set.",
      "name": "segment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of object.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SegmentType"
              }
            }
          },
          {
            "description": "The unique identifier representing the segment.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the segment.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time the segment was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the segment was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Type of the contact: contact (lead) or user.",
            "key": "person_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SegmentPersonType"
              }
            }
          },
          {
            "description": "The number of items in the user segment. It's returned when `include_count=true` is included in the request.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SegmentListType": {
      "description": "The type of the object",
      "name": "SegmentListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "segment.list"
          }
        ]
      }
    },
    "SegmentListPages": {
      "description": "A pagination object, which may be empty, indicating no further pages to fetch.",
      "name": "SegmentListPages",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "segment_list": {
      "description": "This will return a list of Segment Objects. The result may also have a pages object if the response is paginated.",
      "name": "segment_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SegmentListType"
              }
            }
          },
          {
            "description": "A list of Segment objects",
            "key": "segments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "segment"
                }
              }
            }
          },
          {
            "description": "A pagination object, which may be empty, indicating no further pages to fetch.",
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SegmentListPages"
              }
            }
          }
        ]
      }
    },
    "SingleFilterSearchRequestOperator": {
      "description": "The accepted operators you can use to define how you want to search for the value.",
      "name": "SingleFilterSearchRequestOperator",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "="
          },
          {
            "value": "!="
          },
          {
            "value": "IN"
          },
          {
            "value": "NIN"
          },
          {
            "value": "<"
          },
          {
            "value": ">"
          },
          {
            "value": "~"
          },
          {
            "value": "!~"
          },
          {
            "value": "^"
          },
          {
            "value": "$"
          }
        ]
      }
    },
    "single_filter_search_request": {
      "description": "Search using Intercoms Search APIs with a single filter.",
      "name": "single_filter_search_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The accepted field that you want to search on.",
            "key": "field",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The accepted operators you can use to define how you want to search for the value.",
            "key": "operator",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SingleFilterSearchRequestOperator"
              }
            }
          },
          {
            "description": "The value that you want to search on.",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SlaAppliedSlaStatus": {
      "description": "SLA statuses:\n            - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.\n            - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.\n            - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.",
      "name": "SlaAppliedSlaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "hit"
          },
          {
            "value": "missed"
          },
          {
            "value": "cancelled"
          },
          {
            "value": "active"
          }
        ]
      }
    },
    "sla_applied": {
      "description": "The SLA Applied object contains the details for which SLA has been applied to this conversation.\nImportant: if there are any canceled sla_events for the conversation - meaning an SLA has been manually removed from a conversation, the sla_status will always be returned as null.\n",
      "name": "sla_applied",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "object type",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the SLA as given by the teammate when it was created.",
            "key": "sla_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "SLA statuses:\n            - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.\n            - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.\n            - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.",
            "key": "sla_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SlaAppliedSlaStatus"
              }
            }
          }
        ]
      }
    },
    "SnoozeConversationRequestMessageType": {
      "name": "SnoozeConversationRequestMessageType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "snoozed"
          }
        ]
      }
    },
    "snooze_conversation_request": {
      "description": "Payload of the request to snooze a conversation",
      "name": "snooze_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message_type",
            "valueType": {
              "type": "id",
              "value": "SnoozeConversationRequestMessageType"
            }
          },
          {
            "description": "The id of the admin who is performing the action.",
            "key": "admin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The time you want the conversation to reopen.",
            "key": "snoozed_until",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "social_profile": {
      "description": "A Social Profile allows you to label your contacts, companies, and conversations and list them using that Social Profile.",
      "name": "social_profile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "value is \"social_profile\"",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the Social media profile",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the Social media profile",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "starting_after_paging": {
      "name": "starting_after_paging",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The number of results to fetch per page.",
            "key": "per_page",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The cursor to use in the next request to get the next page of results.",
            "key": "starting_after",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SubscriptionTypeState": {
      "description": "The state of the subscription type.",
      "name": "SubscriptionTypeState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "live"
          },
          {
            "value": "draft"
          },
          {
            "value": "archived"
          }
        ]
      }
    },
    "SubscriptionTypeConsentType": {
      "description": "Describes the type of consent.",
      "name": "SubscriptionTypeConsentType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "opt_out"
          },
          {
            "value": "opt_in"
          }
        ]
      }
    },
    "SubscriptionTypeContentTypesItems": {
      "name": "SubscriptionTypeContentTypesItems",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "email"
          },
          {
            "value": "sms_message"
          }
        ]
      }
    },
    "subscription_type": {
      "description": "A subscription type lets customers easily opt out of non-essential communications without missing what's important to them.",
      "name": "subscription_type",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object - subscription",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique identifier representing the subscription type.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state of the subscription type.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SubscriptionTypeState"
              }
            }
          },
          {
            "key": "default_translation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "translation"
              }
            }
          },
          {
            "description": "An array of translations objects with the localised version of the subscription type in each available locale within your translation settings.",
            "key": "translations",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "translation"
                }
              }
            }
          },
          {
            "description": "Describes the type of consent.",
            "key": "consent_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SubscriptionTypeConsentType"
              }
            }
          },
          {
            "description": "The message types that this subscription supports - can contain `email` or `sms_message`.",
            "key": "content_types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SubscriptionTypeContentTypesItems"
                }
              }
            }
          }
        ]
      }
    },
    "SubscriptionTypeListType": {
      "description": "The type of the object",
      "name": "SubscriptionTypeListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "subscription_type_list": {
      "description": "A list of subscription type objects.",
      "name": "subscription_type_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SubscriptionTypeListType"
              }
            }
          },
          {
            "description": "A list of subscription type objects associated with the workspace .",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "subscription_type"
                }
              }
            }
          }
        ]
      }
    },
    "tag": {
      "description": "A tag allows you to label your contacts, companies, and conversations and list them using that tag.",
      "name": "tag",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "value is \"tag\"",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the tag",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the tag",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time when the tag was applied to the object",
            "key": "applied_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "applied_by",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "reference"
              }
            }
          }
        ]
      }
    },
    "TagCompanyRequestCompaniesItems": {
      "name": "TagCompanyRequestCompaniesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Intercom defined id representing the company.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The company id you have defined for the company.",
            "key": "company_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "tag_company_request": {
      "description": "You can tag a single company or a list of companies.",
      "name": "tag_company_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the tag, which will be created if not found.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The id or company_id of the company can be passed as input parameters.",
            "key": "companies",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "TagCompanyRequestCompaniesItems"
              }
            }
          }
        ]
      }
    },
    "TagListType": {
      "description": "The type of the object",
      "name": "TagListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "list"
          }
        ]
      }
    },
    "tag_list": {
      "description": "A list of tags objects in the workspace.",
      "name": "tag_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TagListType"
              }
            }
          },
          {
            "description": "A list of tags objects associated with the workspace .",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "tag"
                }
              }
            }
          }
        ]
      }
    },
    "TagMultipleUsersRequestUsersItems": {
      "name": "TagMultipleUsersRequestUsersItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Intercom defined id representing the user.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "tag_multiple_users_request": {
      "description": "You can tag a list of users.",
      "name": "tag_multiple_users_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the tag, which will be created if not found.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "users",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "TagMultipleUsersRequestUsersItems"
              }
            }
          }
        ]
      }
    },
    "TagsType": {
      "description": "The type of the object",
      "name": "TagsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "tag.list"
          }
        ]
      }
    },
    "tags": {
      "description": "A list of tags objects associated with a conversation",
      "name": "tags",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TagsType"
              }
            }
          },
          {
            "description": "A list of tags objects associated with the conversation.",
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "tag"
                }
              }
            }
          }
        ]
      }
    },
    "team": {
      "description": "Teams are groups of admins in Intercom.",
      "name": "team",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Value is always \"team\"",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the team",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the team",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The list of admin IDs that are a part of the team.",
            "key": "admin_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "key": "admin_priority_level",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "admin_priority_level"
              }
            }
          }
        ]
      }
    },
    "TeamListType": {
      "description": "The type of the object",
      "name": "TeamListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "team.list"
          }
        ]
      }
    },
    "team_list": {
      "description": "This will return a list of team objects for the App.",
      "name": "team_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TeamListType"
              }
            }
          },
          {
            "description": "A list of team objects",
            "key": "teams",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "team"
                }
              }
            }
          }
        ]
      }
    },
    "team_priority_level": {
      "description": "Admin priority levels for teams",
      "name": "team_priority_level",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The primary team ids for the team",
            "key": "primary_team_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "The secondary team ids for the team",
            "key": "secondary_team_ids",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TicketType": {
      "description": "Always ticket",
      "name": "TicketType",
      "shape": {
        "type": "enum",
        "default": "ticket",
        "values": [
          {
            "value": "ticket"
          }
        ]
      }
    },
    "TicketCategory": {
      "description": "Category of the Ticket.",
      "name": "TicketCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Customer"
          },
          {
            "value": "Back-office"
          },
          {
            "value": "Tracker"
          }
        ]
      }
    },
    "TicketTicketState": {
      "description": "The state the ticket is currently in",
      "name": "TicketTicketState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "submitted"
          },
          {
            "value": "in_progress"
          },
          {
            "value": "waiting_on_customer"
          },
          {
            "value": "resolved"
          }
        ]
      }
    },
    "ticket": {
      "description": "Tickets are how you track requests from your users.",
      "name": "ticket",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always ticket",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketType"
              }
            }
          },
          {
            "description": "The unique identifier for the ticket which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the Ticket used in the Intercom Inbox and Messenger. Do not use ticket_id for API queries.",
            "key": "ticket_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Category of the Ticket.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketCategory"
              }
            }
          },
          {
            "key": "ticket_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_custom_attributes"
              }
            }
          },
          {
            "description": "The state the ticket is currently in",
            "key": "ticket_state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketTicketState"
              }
            }
          },
          {
            "key": "ticket_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_type"
              }
            }
          },
          {
            "key": "contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_contacts"
              }
            }
          },
          {
            "description": "The id representing the admin assigned to the ticket.",
            "key": "admin_assignee_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the team assigned to the ticket.",
            "key": "team_assignee_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The time the ticket was created as a UTC Unix timestamp.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the ticket was updated as a UTC Unix timestamp.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether or not the ticket is open. If false, the ticket is closed.",
            "key": "open",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The time the ticket will be snoozed until as a UTC Unix timestamp. If null, the ticket is not currently snoozed.",
            "key": "snoozed_until",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "linked_objects",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "linked_object_list"
              }
            }
          },
          {
            "key": "ticket_parts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_parts"
              }
            }
          },
          {
            "description": "Whether or not the ticket is shared with the customer.",
            "key": "is_shared",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The state the ticket is currently in, in a human readable form - visible in Intercom",
            "key": "ticket_state_internal_label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state the ticket is currently in, in a human readable form - visible to customers, in the messenger, email and tickets portal.",
            "key": "ticket_state_external_label",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "TicketContactsType": {
      "description": "always contact.list",
      "name": "TicketContactsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact.list"
          }
        ]
      }
    },
    "ticket_contacts": {
      "description": "The list of contacts affected by a ticket.",
      "name": "ticket_contacts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "always contact.list",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketContactsType"
              }
            }
          },
          {
            "description": "The list of contacts affected by this ticket.",
            "key": "contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "contact_reference"
                }
              }
            }
          }
        ]
      }
    },
    "TicketCustomAttributes0": {
      "name": "TicketCustomAttributes0",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "TicketCustomAttributes1": {
      "name": "TicketCustomAttributes1",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "TicketCustomAttributes2": {
      "name": "TicketCustomAttributes2",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "TicketCustomAttributes3": {
      "name": "TicketCustomAttributes3",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "unknown"
          }
        }
      }
    },
    "TicketCustomAttributes": {
      "name": "TicketCustomAttributes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "TicketCustomAttributes0",
            "type": {
              "type": "id",
              "value": "TicketCustomAttributes0"
            }
          },
          {
            "typeName": "TicketCustomAttributes1",
            "type": {
              "type": "id",
              "value": "TicketCustomAttributes1"
            }
          },
          {
            "typeName": "TicketCustomAttributes2",
            "type": {
              "type": "id",
              "value": "TicketCustomAttributes2"
            }
          },
          {
            "typeName": "TicketCustomAttributes3",
            "type": {
              "type": "id",
              "value": "TicketCustomAttributes3"
            }
          },
          {
            "typeName": "file_attribute",
            "type": {
              "type": "id",
              "value": "file_attribute"
            }
          }
        ]
      }
    },
    "ticket_custom_attributes": {
      "description": "An object containing the different attributes associated to the ticket as key-value pairs. For the default title and description attributes, the keys are `_default_title_` and `_default_description_`.",
      "name": "ticket_custom_attributes",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "id",
            "value": "TicketCustomAttributes"
          }
        }
      }
    },
    "TicketListType": {
      "description": "Always ticket.list",
      "name": "TicketListType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ticket.list"
          }
        ]
      }
    },
    "ticket_list": {
      "description": "Tickets are how you track requests from your users.",
      "name": "ticket_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always ticket.list",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketListType"
              }
            }
          },
          {
            "description": "The list of ticket objects",
            "key": "tickets",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ticket"
                }
              }
            }
          },
          {
            "description": "A count of the total number of objects.",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "cursor_pages"
              }
            }
          }
        ]
      }
    },
    "TicketPartPreviousTicketState": {
      "description": "The previous state of the ticket.",
      "name": "TicketPartPreviousTicketState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "submitted"
          },
          {
            "value": "in_progress"
          },
          {
            "value": "waiting_on_customer"
          },
          {
            "value": "resolved"
          }
        ]
      }
    },
    "TicketPartTicketState": {
      "description": "The state of the ticket.",
      "name": "TicketPartTicketState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "submitted"
          },
          {
            "value": "in_progress"
          },
          {
            "value": "waiting_on_customer"
          },
          {
            "value": "resolved"
          }
        ]
      }
    },
    "ticket_part": {
      "description": "A Ticket Part represents a message in the ticket.",
      "name": "ticket_part",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always ticket_part",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the ticket part.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of ticket part.",
            "key": "part_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The message body, which may contain HTML.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The previous state of the ticket.",
            "key": "previous_ticket_state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketPartPreviousTicketState"
              }
            }
          },
          {
            "description": "The state of the ticket.",
            "key": "ticket_state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketPartTicketState"
              }
            }
          },
          {
            "description": "The time the ticket part was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the ticket part was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The id of the admin that was assigned the ticket by this ticket_part (null if there has been no change in assignment.)",
            "key": "assigned_to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "reference"
                }
              }
            }
          },
          {
            "key": "author",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_part_author"
              }
            }
          },
          {
            "description": "A list of attachments for the part.",
            "key": "attachments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "part_attachment"
                }
              }
            }
          },
          {
            "description": "The external id of the ticket part",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether or not the ticket part has been redacted.",
            "key": "redacted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "TicketPartAuthorType": {
      "description": "The type of the author",
      "name": "TicketPartAuthorType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "bot"
          },
          {
            "value": "team"
          },
          {
            "value": "user"
          }
        ]
      }
    },
    "ticket_part_author": {
      "description": "The author that wrote or triggered the part. Can be a bot, admin, team or user.",
      "name": "ticket_part_author",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the author",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketPartAuthorType"
              }
            }
          },
          {
            "description": "The id of the author",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the author",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The email of the author",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "TicketPartsType": {
      "description": "",
      "name": "TicketPartsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ticket_part.list"
          }
        ]
      }
    },
    "ticket_parts": {
      "description": "A list of Ticket Part objects for each note and event in the ticket. There is a limit of 500 parts.",
      "name": "ticket_parts",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketPartsType"
              }
            }
          },
          {
            "description": "A list of Ticket Part objects for each ticket. There is a limit of 500 parts.",
            "key": "ticket_parts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ticket_part"
                }
              }
            }
          },
          {
            "description": "",
            "key": "total_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "TicketReplyType": {
      "description": "Always ticket_part",
      "name": "TicketReplyType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ticket_part"
          }
        ]
      }
    },
    "TicketReplyPartType": {
      "description": "Type of the part",
      "name": "TicketReplyPartType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "note"
          },
          {
            "value": "comment"
          },
          {
            "value": "quick_reply"
          }
        ]
      }
    },
    "ticket_reply": {
      "description": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
      "name": "ticket_reply",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Always ticket_part",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketReplyType"
              }
            }
          },
          {
            "description": "The id representing the part.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Type of the part",
            "key": "part_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketReplyPartType"
              }
            }
          },
          {
            "description": "The message body, which may contain HTML.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The time the note was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the note was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "author",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_part_author"
              }
            }
          },
          {
            "description": "A list of attachments for the part.",
            "key": "attachments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "part_attachment"
                }
              }
            }
          },
          {
            "description": "Whether or not the ticket part has been redacted.",
            "key": "redacted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "TicketRequestCustomAttributes0": {
      "name": "TicketRequestCustomAttributes0",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "TicketRequestCustomAttributes1": {
      "name": "TicketRequestCustomAttributes1",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "integer"
          }
        }
      }
    },
    "TicketRequestCustomAttributes2": {
      "name": "TicketRequestCustomAttributes2",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "TicketRequestCustomAttributes3": {
      "name": "TicketRequestCustomAttributes3",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "unknown"
          }
        }
      }
    },
    "TicketRequestCustomAttributes": {
      "name": "TicketRequestCustomAttributes",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "TicketRequestCustomAttributes0",
            "type": {
              "type": "id",
              "value": "TicketRequestCustomAttributes0"
            }
          },
          {
            "typeName": "TicketRequestCustomAttributes1",
            "type": {
              "type": "id",
              "value": "TicketRequestCustomAttributes1"
            }
          },
          {
            "typeName": "TicketRequestCustomAttributes2",
            "type": {
              "type": "id",
              "value": "TicketRequestCustomAttributes2"
            }
          },
          {
            "typeName": "TicketRequestCustomAttributes3",
            "type": {
              "type": "id",
              "value": "TicketRequestCustomAttributes3"
            }
          }
        ]
      }
    },
    "ticket_request_custom_attributes": {
      "description": "The attributes set on the ticket. When setting the default title and description attributes, the attribute keys that should be used are `_default_title_` and `_default_description_`. When setting ticket type attributes of the list attribute type, the key should be the attribute name and the value of the attribute should be the list item id, obtainable by [listing the ticket type](ref:get_ticket-types). For example, if the ticket type has an attribute called `priority` of type `list`, the key should be `priority` and the value of the attribute should be the guid of the list item (e.g. `de1825a0-0164-4070-8ca6-13e22462fa7e`).",
      "name": "ticket_request_custom_attributes",
      "shape": {
        "type": "alias",
        "value": {
          "type": "map",
          "keyType": {
            "type": "primitive",
            "value": {
              "type": "string"
            }
          },
          "valueType": {
            "type": "id",
            "value": "TicketRequestCustomAttributes"
          }
        }
      }
    },
    "TicketTypeCategory": {
      "description": "Category of the Ticket Type.",
      "name": "TicketTypeCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Customer"
          },
          {
            "value": "Back-office"
          },
          {
            "value": "Tracker"
          }
        ]
      }
    },
    "ticket_type": {
      "description": "A ticket type, used to define the data fields to be captured in a ticket.",
      "name": "ticket_type",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `ticket_type`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the ticket type.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Category of the Ticket Type.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketTypeCategory"
              }
            }
          },
          {
            "description": "The name of the ticket type",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the ticket type",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The icon of the ticket type",
            "key": "icon",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the workspace that the ticket type belongs to.",
            "key": "workspace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "ticket_type_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ticket_type_attribute_list"
              }
            }
          },
          {
            "description": "Whether the ticket type is archived or not.",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The date and time the ticket type was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The date and time the ticket type was last updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "TicketTypeAttributeInputOptions": {
      "description": "Input options for the attribute",
      "name": "TicketTypeAttributeInputOptions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "ticket_type_attribute": {
      "description": "Ticket type attribute, used to define each data field to be captured in a ticket.",
      "name": "ticket_type_attribute",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `ticket_type_attribute`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id representing the ticket type attribute.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the workspace that the ticket type attribute belongs to.",
            "key": "workspace_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the ticket type attribute",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the ticket type attribute",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of the data attribute (allowed values: \"string list integer decimal boolean datetime files\")",
            "key": "data_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Input options for the attribute",
            "key": "input_options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TicketTypeAttributeInputOptions"
              }
            }
          },
          {
            "description": "The order of the attribute against other attributes",
            "key": "order",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether the attribute is required or not for teammates.",
            "key": "required_to_create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Whether the attribute is required or not for contacts.",
            "key": "required_to_create_for_contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Whether the attribute is visible or not to teammates.",
            "key": "visible_on_create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          {
            "description": "Whether the attribute is visible or not to contacts.",
            "key": "visible_to_contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          {
            "description": "Whether the attribute is built in or not.",
            "key": "default",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The id of the ticket type that the attribute belongs to.",
            "key": "ticket_type_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether the ticket type attribute is archived or not.",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The date and time the ticket type attribute was created.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The date and time the ticket type attribute was last updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "ticket_type_attribute_list": {
      "description": "A list of attributes associated with a given ticket type.",
      "name": "ticket_type_attribute_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `ticket_type_attributes.list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A list of ticket type attributes associated with a given ticket type.",
            "key": "ticket_type_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ticket_type_attribute"
                }
              }
            }
          }
        ]
      }
    },
    "ticket_type_list": {
      "description": "A list of ticket types associated with a given workspace.",
      "name": "ticket_type_list",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "String representing the object's type. Always has the value `ticket_type.list`.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A list of ticket_types associated with a given workspace.",
            "key": "ticket_types",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ticket_type"
                }
              }
            }
          }
        ]
      }
    },
    "translation": {
      "description": "A translation object contains the localised details of a subscription type.",
      "name": "translation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The localised name of the subscription type.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The localised description of the subscription type.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The two character identifier for the language of the translation object.",
            "key": "locale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "UntagCompanyRequestCompaniesItems": {
      "name": "UntagCompanyRequestCompaniesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Intercom defined id representing the company.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The company id you have defined for the company.",
            "key": "company_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Always set to true",
            "key": "untag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "untag_company_request": {
      "description": "You can tag a single company or a list of companies.",
      "name": "untag_company_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the tag which will be untagged from the company",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The id or company_id of the company can be passed as input parameters.",
            "key": "companies",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "UntagCompanyRequestCompaniesItems"
              }
            }
          }
        ]
      }
    },
    "UpdateArticleRequestState": {
      "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
      "name": "UpdateArticleRequestState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "published"
          },
          {
            "value": "draft"
          }
        ]
      }
    },
    "update_article_request": {
      "description": "You can Update an Article",
      "name": "update_article_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title of the article.For multilingual articles, this will be the title of the default language's content.",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The content of the article. For multilingual articles, this will be the body of the default language's content.",
            "key": "body",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
            "key": "author_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "UpdateArticleRequestState"
              }
            }
          },
          {
            "description": "The id of the article's parent collection or section. An article without this field stands alone.",
            "key": "parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of parent, which can either be a `collection` or `section`.",
            "key": "parent_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "translated_content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "article_translated_content"
              }
            }
          }
        ]
      }
    },
    "update_collection_request": {
      "description": "You can update a collection",
      "name": "update_collection_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the collection. For multilingual collections, this will be the description of the default language's content.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "translated_content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "group_translated_content"
                }
              }
            }
          },
          {
            "description": "The id of the parent collection. If `null` then it will be updated as the first level collection.",
            "key": "parent_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "UpdateContactRequestCustomAttributes": {
      "description": "The custom attributes which are set for the contact",
      "name": "UpdateContactRequestCustomAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "update_contact_request": {
      "description": "You can update a contact",
      "name": "update_contact_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The role of the contact.",
            "key": "role",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A unique identifier for the contact which is given to Intercom",
            "key": "external_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The contacts email",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The contacts phone",
            "key": "phone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The contacts name",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "An image URL containing the avatar of a contact",
            "key": "avatar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The time specified for when a contact signed up",
            "key": "signed_up_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)",
            "key": "last_seen_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The id of an admin that has been assigned account ownership of the contact",
            "key": "owner_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the contact is unsubscribed from emails",
            "key": "unsubscribed_from_emails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "The custom attributes which are set for the contact",
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "UpdateContactRequestCustomAttributes"
                }
              }
            }
          }
        ]
      }
    },
    "update_conversation_request": {
      "description": "Payload of the request to update a conversation",
      "name": "update_conversation_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Mark a conversation as read within Intercom.",
            "key": "read",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "custom_attributes"
              }
            }
          }
        ]
      }
    },
    "update_data_attribute_request": {
      "description": "",
      "name": "update_data_attribute_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Whether the attribute is to be archived or not.",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The readable description you see in the UI for the attribute.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`.",
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Can this attribute be updated by the Messenger",
            "key": "messenger_writable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "UpdateTicketRequestTicketAttributes": {
      "description": "The attributes set on the ticket.",
      "name": "UpdateTicketRequestTicketAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "UpdateTicketRequestState": {
      "description": "The state of the ticket.",
      "name": "UpdateTicketRequestState",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "in_progress"
          },
          {
            "value": "waiting_on_customer"
          },
          {
            "value": "resolved"
          }
        ]
      }
    },
    "UpdateTicketRequestAssignment": {
      "name": "UpdateTicketRequestAssignment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the admin performing the action.",
            "key": "admin_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the admin or team to which the ticket is assigned. Set this 0 to unassign it.",
            "key": "assignee_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "update_ticket_request": {
      "description": "You can update a Ticket",
      "name": "update_ticket_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The attributes set on the ticket.",
            "key": "ticket_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "UpdateTicketRequestTicketAttributes"
              }
            }
          },
          {
            "description": "The state of the ticket.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "UpdateTicketRequestState"
              }
            }
          },
          {
            "description": "Specify if a ticket is open. Set to false to close a ticket. Closing a ticket will also unsnooze it.",
            "key": "open",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Specify whether the ticket is visible to users.",
            "key": "is_shared",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The time you want the ticket to reopen.",
            "key": "snoozed_until",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "assignment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "UpdateTicketRequestAssignment"
              }
            }
          }
        ]
      }
    },
    "update_ticket_type_attribute_request": {
      "description": "You can update a Ticket Type Attribute",
      "name": "update_ticket_type_attribute_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the ticket type attribute",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the attribute presented to the teammate or contact",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox.",
            "key": "required_to_create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger.",
            "key": "required_to_create_for_contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Whether the attribute is visible to teammates when creating a ticket in Inbox.",
            "key": "visible_on_create",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          {
            "description": "Whether the attribute is visible to contacts when creating a ticket in Messenger.",
            "key": "visible_to_contacts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          },
          {
            "description": "Whether the attribute allows multiple lines of text (only applicable to string attributes)",
            "key": "multiline",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A comma delimited list of items for the attribute value (only applicable to list attributes)",
            "key": "list_items",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)",
            "key": "allow_multiple_values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Whether the attribute should be archived and not shown during creation of the ticket (it will still be present on previously created tickets)",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "UpdateTicketTypeRequestCategory": {
      "description": "Category of the Ticket Type.",
      "name": "UpdateTicketTypeRequestCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Customer"
          },
          {
            "value": "Back-office"
          },
          {
            "value": "Tracker"
          }
        ]
      }
    },
    "update_ticket_type_request": {
      "description": "The request payload for updating a ticket type.\nYou can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
      "name": "update_ticket_type_request",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the ticket type.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The description of the ticket type.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Category of the Ticket Type.",
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "UpdateTicketTypeRequestCategory"
              }
            }
          },
          {
            "description": "The icon of the ticket type.",
            "key": "icon",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "🎟️"
                }
              }
            }
          },
          {
            "description": "The archived status of the ticket type.",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute.",
            "key": "is_internal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "update_visitor_request": {
      "description": "Update an existing visitor.",
      "name": "update_visitor_request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": []
      }
    },
    "VisitorAvatar": {
      "name": "VisitorAvatar",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "avatar"
                }
              }
            }
          },
          {
            "description": "This object represents the avatar associated with the visitor.",
            "key": "image_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "VisitorCompaniesType": {
      "description": "The type of the object",
      "name": "VisitorCompaniesType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "company.list"
          }
        ]
      }
    },
    "VisitorCompanies": {
      "name": "VisitorCompanies",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorCompaniesType"
              }
            }
          },
          {
            "key": "companies",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "company"
                }
              }
            }
          }
        ]
      }
    },
    "VisitorLocationData": {
      "name": "VisitorLocationData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "location_data"
                }
              }
            }
          },
          {
            "description": "The city name of the visitor.",
            "key": "city_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The continent code of the visitor.",
            "key": "continent_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country code of the visitor.",
            "key": "country_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country name of the visitor.",
            "key": "country_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the visitor.",
            "key": "postal_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The region name of the visitor.",
            "key": "region_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The timezone of the visitor.",
            "key": "timezone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "VisitorSocialProfilesType": {
      "description": "The type of the object",
      "name": "VisitorSocialProfilesType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "social_profile.list"
          }
        ]
      }
    },
    "VisitorSocialProfiles": {
      "name": "VisitorSocialProfiles",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorSocialProfilesType"
              }
            }
          },
          {
            "key": "social_profiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "VisitorTagsType": {
      "description": "The type of the object",
      "name": "VisitorTagsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "tag.list"
          }
        ]
      }
    },
    "VisitorTagsTagsItemsType": {
      "description": "The type of the object",
      "name": "VisitorTagsTagsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "tag"
          }
        ]
      }
    },
    "VisitorTagsTagsItems": {
      "name": "VisitorTagsTagsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorTagsTagsItemsType"
              }
            }
          },
          {
            "description": "The id of the tag.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the tag.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "VisitorTags": {
      "name": "VisitorTags",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorTagsType"
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "VisitorTagsTagsItems"
                }
              }
            }
          }
        ]
      }
    },
    "VisitorSegmentsType": {
      "description": "The type of the object",
      "name": "VisitorSegmentsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "segment.list"
          }
        ]
      }
    },
    "VisitorSegments": {
      "name": "VisitorSegments",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the object",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorSegmentsType"
              }
            }
          },
          {
            "key": "segments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "visitor": {
      "description": "Visitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform. The Visitors resource provides methods to fetch, update, convert and delete.",
      "name": "visitor",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Value is 'visitor'",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "default": "visitor"
                }
              }
            }
          },
          {
            "description": "The Intercom defined id representing the Visitor.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Automatically generated identifier for the Visitor.",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifies if this visitor is anonymous.",
            "key": "anonymous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The email of the visitor.",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          {
            "description": "The phone number of the visitor.",
            "key": "phone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the visitor.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The pseudonym of the visitor.",
            "key": "pseudonym",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "avatar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorAvatar"
              }
            }
          },
          {
            "description": "The id of the app the visitor is associated with.",
            "key": "app_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "companies",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorCompanies"
              }
            }
          },
          {
            "key": "location_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorLocationData"
              }
            }
          },
          {
            "description": "The time the Lead last recorded making a request.",
            "key": "las_request_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the Visitor was added to Intercom.",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the Visitor was added to Intercom.",
            "key": "remote_created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The time the Visitor signed up for your product.",
            "key": "signed_up_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The last time the Visitor was updated.",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The number of sessions the Visitor has had.",
            "key": "session_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "social_profiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorSocialProfiles"
              }
            }
          },
          {
            "description": "The id of the admin that owns the Visitor.",
            "key": "owner_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the Visitor is unsubscribed from emails.",
            "key": "unsubscribed_from_emails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Identifies if this visitor has marked an email as spam.",
            "key": "marked_email_as_spam",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Identifies if this visitor has had a hard bounce.",
            "key": "has_hard_bounced",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorTags"
              }
            }
          },
          {
            "key": "segments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorSegments"
              }
            }
          },
          {
            "description": "The custom attributes you have set on the Visitor.",
            "key": "custom_attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The referer of the visitor.",
            "key": "referrer",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The utm_campaign of the visitor.",
            "key": "utm_campaign",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The utm_content of the visitor.",
            "key": "utm_content",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The utm_medium of the visitor.",
            "key": "utm_medium",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The utm_source of the visitor.",
            "key": "utm_source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The utm_term of the visitor.",
            "key": "utm_term",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Identifies if this visitor has do not track enabled.",
            "key": "do_not_track",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "VisitorDeletedObjectType": {
      "description": "The type of object which was deleted",
      "name": "VisitorDeletedObjectType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "visitor"
          }
        ]
      }
    },
    "visitor_deleted_object": {
      "description": "Response returned when an object is deleted",
      "name": "visitor_deleted_object",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the visitor which is given by Intercom.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of object which was deleted",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "VisitorDeletedObjectType"
              }
            }
          },
          {
            "description": "Automatically generated identifier for the Visitor.",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Contacts_UpdateContact_Request": {
      "name": "Contacts_UpdateContact_Request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "update_contact_request",
            "type": {
              "type": "id",
              "value": "update_contact_request"
            }
          }
        ]
      }
    },
    "Contacts_CreateContact_Request": {
      "name": "Contacts_CreateContact_Request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "create_contact_request",
            "type": {
              "type": "id",
              "value": "create_contact_request"
            }
          }
        ]
      }
    },
    "Conversations_manageConversation_Request": {
      "name": "Conversations_manageConversation_Request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "close_conversation_request",
            "type": {
              "type": "id",
              "value": "close_conversation_request"
            }
          },
          {
            "typeName": "snooze_conversation_request",
            "type": {
              "type": "id",
              "value": "snooze_conversation_request"
            }
          },
          {
            "typeName": "open_conversation_request",
            "type": {
              "type": "id",
              "value": "open_conversation_request"
            }
          },
          {
            "typeName": "assign_conversation_request",
            "type": {
              "type": "id",
              "value": "assign_conversation_request"
            }
          }
        ]
      }
    },
    "DataAttributesGetParametersSchema": {
      "name": "DataAttributesGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "contact"
          },
          {
            "value": "company"
          },
          {
            "value": "conversation"
          }
        ]
      }
    },
    "EventsGetParametersSchema0": {
      "name": "EventsGetParametersSchema0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "EventsGetParametersSchema1": {
      "name": "EventsGetParametersSchema1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "intercom_user_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "EventsGetParametersSchema2": {
      "name": "EventsGetParametersSchema2",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "email",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "EventsGetParametersSchema": {
      "name": "EventsGetParametersSchema",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "EventsGetParametersSchema0",
            "type": {
              "type": "id",
              "value": "EventsGetParametersSchema0"
            }
          },
          {
            "typeName": "EventsGetParametersSchema1",
            "type": {
              "type": "id",
              "value": "EventsGetParametersSchema1"
            }
          },
          {
            "typeName": "EventsGetParametersSchema2",
            "type": {
              "type": "id",
              "value": "EventsGetParametersSchema2"
            }
          }
        ]
      }
    },
    "Tags_createTag_Request": {
      "name": "Tags_createTag_Request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "create_or_update_tag_request",
            "type": {
              "type": "id",
              "value": "create_or_update_tag_request"
            }
          },
          {
            "typeName": "tag_company_request",
            "type": {
              "type": "id",
              "value": "tag_company_request"
            }
          },
          {
            "typeName": "untag_company_request",
            "type": {
              "type": "id",
              "value": "untag_company_request"
            }
          },
          {
            "typeName": "tag_multiple_users_request",
            "type": {
              "type": "id",
              "value": "tag_multiple_users_request"
            }
          }
        ]
      }
    },
    "Tickets_replyTicket_Request": {
      "name": "Tickets_replyTicket_Request",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "contact_reply_ticket_request",
            "type": {
              "type": "id",
              "value": "contact_reply_ticket_request"
            }
          },
          {
            "typeName": "admin_reply_ticket_request",
            "type": {
              "type": "id",
              "value": "admin_reply_ticket_request"
            }
          }
        ]
      }
    }
  },
  "subpackages": {
    "Admins": {
      "subpackageId": "Admins",
      "name": "Admins",
      "endpoints": [
        {
          "auth": true,
          "description": "\nYou can view the currently authorised admin along with the embedded app object (a \"workspace\" in legacy terminology).\n\n> 🚧 Single Sign On\n>\n> If you are building a custom \"Log in with Intercom\" flow for your site, and you call the `/me` endpoint to identify the logged-in user, you should not accept any sign-ins from users with unverified email addresses as it poses a potential impersonation security risk.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "identifyAdmin",
          "originalEndpointId": "Admins.identifyAdmin",
          "name": "Identify an admin",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/me"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "admin_with_app"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/me",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "admin",
                  "id": "991267390",
                  "name": "Ciaran1 Lee",
                  "email": "admin1@email.com",
                  "has_inbox_seat": true,
                  "avatar": {
                    "type": "avatar",
                    "image_url": "https://static.intercomassets.com/assets/default-avatars/admins/128.png"
                  },
                  "email_verified": true,
                  "app": {
                    "type": "app",
                    "id_code": "this_is_an_id1_that_should_be_at_least_40",
                    "name": "MyApp 1",
                    "region": "US",
                    "timezone": "America/Los_Angeles",
                    "created_at": 1719492696,
                    "identity_verification": false
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "admin",
                  "id": "991267390",
                  "name": "Ciaran1 Lee",
                  "email": "admin1@email.com",
                  "has_inbox_seat": true,
                  "avatar": {
                    "type": "avatar",
                    "image_url": "https://static.intercomassets.com/assets/default-avatars/admins/128.png"
                  },
                  "email_verified": true,
                  "app": {
                    "type": "app",
                    "id_code": "this_is_an_id1_that_should_be_at_least_40",
                    "name": "MyApp 1",
                    "region": "US",
                    "timezone": "America/Los_Angeles",
                    "created_at": 1719492696,
                    "identity_verification": false
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can set an Admin as away for the Inbox.",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "setAwayAdmin",
          "originalEndpointId": "Admins.setAwayAdmin",
          "name": "Set an admin to away",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a given admin",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/admins/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/away"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Set to \"true\" to change the status of the admin to away.",
                    "key": "away_mode_enabled",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                        "default": true
                      }
                    }
                  },
                  {
                    "description": "Set to \"true\" to assign any new conversation replies to your default inbox.",
                    "key": "away_mode_reassign",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "admin"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/admins/",
              "pathParameters": {
                "id": 42
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "away_mode_enabled": true,
                "away_mode_reassign": true
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "away_mode_enabled": true,
                  "away_mode_reassign": true
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "admin",
                  "id": "991267391",
                  "name": "Ciaran2 Lee",
                  "email": "admin2@email.com",
                  "away_mode_enabled": true,
                  "away_mode_reassign": true,
                  "has_inbox_seat": true,
                  "team_ids": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "admin",
                  "id": "991267391",
                  "name": "Ciaran2 Lee",
                  "email": "admin2@email.com",
                  "away_mode_enabled": true,
                  "away_mode_reassign": true,
                  "has_inbox_seat": true,
                  "team_ids": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can get a log of activities by all admins in an app.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listActivityLogs",
          "originalEndpointId": "Admins.listActivityLogs",
          "name": "List all activity logs",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/admins/activity_logs"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The start date that you request data for. It must be formatted as a UNIX timestamp.",
              "key": "created_at_after",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            {
              "description": "The end date that you request data for. It must be formatted as a UNIX timestamp.",
              "key": "created_at_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "activity_log_list"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/admins/activity_logs",
              "pathParameters": {},
              "queryParameters": {
                "created_at_after": "1677253093",
                "created_at_before": "1677861493"
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "activity_log.list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 1
                  },
                  "activity_logs": [
                    {
                      "id": "ddee3a18-0032-4061-b9b9-26230c3dd5f7",
                      "performed_by": {
                        "type": "admin",
                        "id": "991267395",
                        "email": "admin5@email.com",
                        "ip": "127.0.0.1"
                      },
                      "metadata": {},
                      "created_at": 1719492702,
                      "activity_type": "message_state_change",
                      "activity_description": "Ciaran5 Lee changed your Initial message title message from Initial message title to Eventual message title."
                    },
                    {
                      "id": "5eec951b-db7a-4b5b-add5-95ffc90969b6",
                      "performed_by": {
                        "type": "admin",
                        "id": "991267395",
                        "email": "admin5@email.com",
                        "ip": "127.0.0.1"
                      },
                      "metadata": {},
                      "created_at": 1719492702,
                      "activity_type": "app_name_change",
                      "activity_description": "Ciaran5 Lee changed your app name from before to after."
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "activity_log.list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 1
                  },
                  "activity_logs": [
                    {
                      "id": "ddee3a18-0032-4061-b9b9-26230c3dd5f7",
                      "performed_by": {
                        "type": "admin",
                        "id": "991267395",
                        "email": "admin5@email.com",
                        "ip": "127.0.0.1"
                      },
                      "metadata": {},
                      "created_at": 1719492702,
                      "activity_type": "message_state_change",
                      "activity_description": "Ciaran5 Lee changed your Initial message title message from Initial message title to Eventual message title."
                    },
                    {
                      "id": "5eec951b-db7a-4b5b-add5-95ffc90969b6",
                      "performed_by": {
                        "type": "admin",
                        "id": "991267395",
                        "email": "admin5@email.com",
                        "ip": "127.0.0.1"
                      },
                      "metadata": {},
                      "created_at": 1719492702,
                      "activity_type": "app_name_change",
                      "activity_description": "Ciaran5 Lee changed your app name from before to after."
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of admins for a given workspace.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listAdmins",
          "originalEndpointId": "Admins.listAdmins",
          "name": "List all admins",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/admins"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "admin_list"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/admins",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "admin.list",
                  "admins": [
                    {
                      "type": "admin",
                      "id": "991267397",
                      "name": "Ciaran7 Lee",
                      "email": "admin7@email.com",
                      "away_mode_enabled": false,
                      "away_mode_reassign": false,
                      "has_inbox_seat": true,
                      "team_ids": []
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "admin.list",
                  "admins": [
                    {
                      "type": "admin",
                      "id": "991267397",
                      "name": "Ciaran7 Lee",
                      "email": "admin7@email.com",
                      "away_mode_enabled": false,
                      "away_mode_reassign": false,
                      "has_inbox_seat": true,
                      "team_ids": []
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can retrieve the details of a single admin.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveAdmin",
          "originalEndpointId": "Admins.retrieveAdmin",
          "name": "Retrieve an admin",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a given admin",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/admins/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "admin"
              }
            },
            "statusCode": 200,
            "description": "Admin found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/admins/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "admin",
                  "id": "991267399",
                  "name": "Ciaran9 Lee",
                  "email": "admin9@email.com",
                  "away_mode_enabled": false,
                  "away_mode_reassign": false,
                  "has_inbox_seat": true,
                  "team_ids": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "admin",
                  "id": "991267399",
                  "name": "Ciaran9 Lee",
                  "email": "admin9@email.com",
                  "away_mode_enabled": false,
                  "away_mode_reassign": false,
                  "has_inbox_seat": true,
                  "team_ids": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Articles": {
      "subpackageId": "Articles",
      "name": "Articles",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of all articles by making a GET request to `https://api.intercom.io/articles`.\n\n> 📘 How are the articles sorted and ordered?\n>\n> Articles will be returned in descending order on the `updated_at` attribute. This means if you need to iterate through results then we'll show the most recently updated articles first.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listArticles",
          "originalEndpointId": "Articles.listArticles",
          "name": "List all articles",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/articles"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "article_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/articles",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 25,
                    "total_pages": 1
                  },
                  "total_count": 1,
                  "data": [
                    {
                      "type": "article",
                      "id": "39",
                      "workspace_id": "this_is_an_id33_that_should_be_at_least_4",
                      "title": "This is the article title",
                      "description": "",
                      "body": "",
                      "author_id": 991267402,
                      "state": "published",
                      "created_at": 1719492707,
                      "updated_at": 1719492707,
                      "url": "http://help-center.test/myapp-33/en/articles/39-this-is-the-article-title",
                      "parent_id": 143,
                      "parent_ids": [],
                      "parent_type": "collection"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 25,
                    "total_pages": 1
                  },
                  "total_count": 1,
                  "data": [
                    {
                      "type": "article",
                      "id": "39",
                      "workspace_id": "this_is_an_id33_that_should_be_at_least_4",
                      "title": "This is the article title",
                      "description": "",
                      "body": "",
                      "author_id": 991267402,
                      "state": "published",
                      "created_at": 1719492707,
                      "updated_at": 1719492707,
                      "url": "http://help-center.test/myapp-33/en/articles/39-this-is-the-article-title",
                      "parent_id": 143,
                      "parent_ids": [],
                      "parent_type": "collection"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a new article by making a POST request to `https://api.intercom.io/articles`.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createArticle",
          "originalEndpointId": "Articles.createArticle",
          "name": "Create an article",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/articles"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_article_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "article"
              }
            },
            "statusCode": 200,
            "description": "article created"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/articles",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "title": "Thanks for everything",
                "author_id": 1295
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "Thanks for everything",
                  "author_id": 1295
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "statistics": {
                    "type": "article_statistics",
                    "views": 0,
                    "reactions": 0,
                    "happy_reaction_percentage": 0,
                    "neutral_reaction_percentage": 0,
                    "sad_reaction_percentage": 0
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "statistics": {
                    "type": "article_statistics",
                    "views": 0,
                    "reactions": 0,
                    "happy_reaction_percentage": 0,
                    "neutral_reaction_percentage": 0,
                    "sad_reaction_percentage": 0
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single article by making a GET request to `https://api.intercom.io/articles/<id>`.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveArticle",
          "originalEndpointId": "Articles.retrieveArticle",
          "name": "Retrieve an article",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the article which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/articles/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "article"
              }
            },
            "statusCode": 200,
            "description": "Article found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/articles/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "statistics": {
                    "type": "article_statistics",
                    "views": 0,
                    "reactions": 0,
                    "happy_reaction_percentage": 0,
                    "neutral_reaction_percentage": 0,
                    "sad_reaction_percentage": 0
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "statistics": {
                    "type": "article_statistics",
                    "views": 0,
                    "reactions": 0,
                    "happy_reaction_percentage": 0,
                    "neutral_reaction_percentage": 0,
                    "sad_reaction_percentage": 0
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can update the details of a single article by making a PUT request to `https://api.intercom.io/articles/<id>`.",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateArticle",
          "originalEndpointId": "Articles.updateArticle",
          "name": "Update an article",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the article which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/articles/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_article_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "article"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/articles/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "statistics": {
                    "type": "article_statistics",
                    "views": 0,
                    "reactions": 0,
                    "happy_reaction_percentage": 0,
                    "neutral_reaction_percentage": 0,
                    "sad_reaction_percentage": 0
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "statistics": {
                    "type": "article_statistics",
                    "views": 0,
                    "reactions": 0,
                    "happy_reaction_percentage": 0,
                    "neutral_reaction_percentage": 0,
                    "sad_reaction_percentage": 0
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can delete a single article by making a DELETE request to `https://api.intercom.io/articles/<id>`.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "deleteArticle",
          "originalEndpointId": "Articles.deleteArticle",
          "name": "Delete an article",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the article which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/articles/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "deleted_article_object"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/articles/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "51",
                  "object": "article",
                  "deleted": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "51",
                  "object": "article",
                  "deleted": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can search for articles by making a GET request to `https://api.intercom.io/articles/search`.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "searchArticles",
          "originalEndpointId": "Articles.searchArticles",
          "name": "Search for articles",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/articles/search"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The phrase within your articles to search for.",
              "key": "phrase",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The state of the Articles returned. One of `published`, `draft` or `all`.",
              "key": "state",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The ID of the Help Center to search in.",
              "key": "help_center_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Return a highlighted version of the matching content within your articles. Refer to the response schema for more details.",
              "key": "highlight",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "article_search_response"
              }
            },
            "statusCode": 200,
            "description": "Search successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/articles/search",
              "pathParameters": {},
              "queryParameters": {
                "phrase": "Getting started",
                "state": "published",
                "help_center_id": 123,
                "highlight": false
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "total_count": 1,
                  "data": {
                    "articles": [
                      {}
                    ],
                    "highlights": []
                  },
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "total_count": 1,
                  "data": {
                    "articles": [
                      {}
                    ],
                    "highlights": []
                  },
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Help Center": {
      "subpackageId": "Help Center",
      "name": "Help Center",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of all collections by making a GET request to `https://api.intercom.io/help_center/collections`.\n\nCollections will be returned in descending order on the `updated_at` attribute. This means if you need to iterate through results then we'll show the most recently updated collections first.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listAllCollections",
          "originalEndpointId": "Help Center.listAllCollections",
          "name": "List all collections",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/help_center/collections"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collection_list"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/help_center/collections",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 1
                  },
                  "total_count": 2,
                  "data": [
                    {
                      "id": "159",
                      "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                      "name": "English collection title",
                      "description": "english collection description",
                      "created_at": 1719492720,
                      "updated_at": 1719492720,
                      "url": "http://help-center.test/myapp-65/collection-17",
                      "icon": "bookmark",
                      "order": 17,
                      "parent_id": null,
                      "help_center_id": 79
                    },
                    {
                      "id": "160",
                      "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                      "name": "English section title",
                      "description": null,
                      "created_at": 1719492720,
                      "updated_at": 1719492720,
                      "url": "http://help-center.test/myapp-65/section-1",
                      "icon": "bookmark",
                      "order": 1,
                      "parent_id": "159",
                      "help_center_id": null
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 1
                  },
                  "total_count": 2,
                  "data": [
                    {
                      "id": "159",
                      "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                      "name": "English collection title",
                      "description": "english collection description",
                      "created_at": 1719492720,
                      "updated_at": 1719492720,
                      "url": "http://help-center.test/myapp-65/collection-17",
                      "icon": "bookmark",
                      "order": 17,
                      "parent_id": null,
                      "help_center_id": 79
                    },
                    {
                      "id": "160",
                      "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                      "name": "English section title",
                      "description": null,
                      "created_at": 1719492720,
                      "updated_at": 1719492720,
                      "url": "http://help-center.test/myapp-65/section-1",
                      "icon": "bookmark",
                      "order": 1,
                      "parent_id": "159",
                      "help_center_id": null
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a new collection by making a POST request to `https://api.intercom.io/help_center/collections.`",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createCollection",
          "originalEndpointId": "Help Center.createCollection",
          "name": "Create a collection",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/help_center/collections"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_collection_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collection"
              }
            },
            "statusCode": 200,
            "description": "collection created"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/help_center/collections",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "name": "collection 51"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "collection 51"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "165",
                  "workspace_id": "this_is_an_id69_that_should_be_at_least_4",
                  "name": "Thanks for everything",
                  "description": "",
                  "created_at": 1719492721,
                  "updated_at": 1719492721,
                  "url": "http://help-center.test/myapp-69/",
                  "icon": "book-bookmark",
                  "order": 1,
                  "parent_id": null,
                  "help_center_id": 81
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "165",
                  "workspace_id": "this_is_an_id69_that_should_be_at_least_4",
                  "name": "Thanks for everything",
                  "description": "",
                  "created_at": 1719492721,
                  "updated_at": 1719492721,
                  "url": "http://help-center.test/myapp-69/",
                  "icon": "book-bookmark",
                  "order": 1,
                  "parent_id": null,
                  "help_center_id": 81
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single collection by making a GET request to `https://api.intercom.io/help_center/collections/<id>`.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveCollection",
          "originalEndpointId": "Help Center.retrieveCollection",
          "name": "Retrieve a collection",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the collection which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/help_center/collections/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collection"
              }
            },
            "statusCode": 200,
            "description": "Collection found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/help_center/collections/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "170",
                  "workspace_id": "this_is_an_id75_that_should_be_at_least_4",
                  "name": "English collection title",
                  "description": "english collection description",
                  "created_at": 1719492723,
                  "updated_at": 1719492723,
                  "url": "http://help-center.test/myapp-75/collection-22",
                  "icon": "bookmark",
                  "order": 22,
                  "parent_id": null,
                  "help_center_id": 84
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "170",
                  "workspace_id": "this_is_an_id75_that_should_be_at_least_4",
                  "name": "English collection title",
                  "description": "english collection description",
                  "created_at": 1719492723,
                  "updated_at": 1719492723,
                  "url": "http://help-center.test/myapp-75/collection-22",
                  "icon": "bookmark",
                  "order": 22,
                  "parent_id": null,
                  "help_center_id": 84
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can update the details of a single collection by making a PUT request to `https://api.intercom.io/collections/<id>`.",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateCollection",
          "originalEndpointId": "Help Center.updateCollection",
          "name": "Update a collection",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the collection which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/help_center/collections/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_collection_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collection"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/help_center/collections/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "176",
                  "workspace_id": "this_is_an_id81_that_should_be_at_least_4",
                  "name": "Update collection name",
                  "description": "english collection description",
                  "created_at": 1719492724,
                  "updated_at": 1719492724,
                  "url": "http://help-center.test/myapp-81/collection-25",
                  "icon": "folder",
                  "order": 25,
                  "parent_id": null,
                  "help_center_id": 87
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "176",
                  "workspace_id": "this_is_an_id81_that_should_be_at_least_4",
                  "name": "Update collection name",
                  "description": "english collection description",
                  "created_at": 1719492724,
                  "updated_at": 1719492724,
                  "url": "http://help-center.test/myapp-81/collection-25",
                  "icon": "folder",
                  "order": 25,
                  "parent_id": null,
                  "help_center_id": 87
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can delete a single collection by making a DELETE request to `https://api.intercom.io/collections/<id>`.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "deleteCollection",
          "originalEndpointId": "Help Center.deleteCollection",
          "name": "Delete a collection",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the collection which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/help_center/collections/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "deleted_collection_object"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/help_center/collections/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "182",
                  "object": "collection",
                  "deleted": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "182",
                  "object": "collection",
                  "deleted": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single Help Center by making a GET request to `https://api.intercom.io/help_center/help_center/<id>`.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveHelpCenter",
          "originalEndpointId": "Help Center.retrieveHelpCenter",
          "name": "Retrieve a Help Center",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the collection which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/help_center/help_centers/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "help_center"
              }
            },
            "statusCode": 200,
            "description": "Collection found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/help_center/help_centers/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "93",
                  "workspace_id": "this_is_an_id93_that_should_be_at_least_4",
                  "created_at": 1719492727,
                  "updated_at": 1719492727,
                  "identifier": "help-center-1",
                  "website_turned_on": false,
                  "display_name": "Intercom Help Center"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "93",
                  "workspace_id": "this_is_an_id93_that_should_be_at_least_4",
                  "created_at": 1719492727,
                  "updated_at": 1719492727,
                  "identifier": "help-center-1",
                  "website_turned_on": false,
                  "display_name": "Intercom Help Center"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can list all Help Centers by making a GET request to `https://api.intercom.io/help_center/help_centers`.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listHelpCenters",
          "originalEndpointId": "Help Center.listHelpCenters",
          "name": "List all Help Centers",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/help_center/help_centers"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "help_center_list"
              }
            },
            "statusCode": 200,
            "description": "Help Centers found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/help_center/help_centers",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Companies": {
      "subpackageId": "Companies",
      "name": "Companies",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a single company by passing in `company_id` or `name`.\n\n  `https://api.intercom.io/companies?name={name}`\n\n  `https://api.intercom.io/companies?company_id={company_id}`\n\nYou can fetch all companies and filter by `segment_id` or `tag_id` as a query parameter.\n\n  `https://api.intercom.io/companies?tag_id={tag_id}`\n\n  `https://api.intercom.io/companies?segment_id={segment_id}`\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveCompany",
          "originalEndpointId": "Companies.retrieveCompany",
          "name": "Retrieve companies",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The `name` of the company to filter by.",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The `company_id` of the company to filter by.",
              "key": "company_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The `tag_id` of the company to filter by.",
              "key": "tag_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The `segment_id` of the company to filter by.",
              "key": "segment_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The page of results to fetch. Defaults to first page",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "How many results to display per page. Defaults to 15",
              "key": "per_page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company_list"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies",
              "pathParameters": {},
              "queryParameters": {
                "name": "my company",
                "company_id": "12345",
                "tag_id": "678910",
                "segment_id": "98765",
                "page": 1,
                "per_page": 15
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 15,
                    "total_pages": 1
                  },
                  "total_count": 1,
                  "data": [
                    {
                      "type": "company",
                      "id": "667d607e8a68186f43bafd26",
                      "name": "IntercomQATest1",
                      "app_id": "this_is_an_id122_that_should_be_at_least_",
                      "plan": {},
                      "company_id": "remote_companies_scroll_2",
                      "remote_created_at": 1719492734,
                      "created_at": 1719492734,
                      "updated_at": 1719492734,
                      "monthly_spend": 0,
                      "session_count": 0,
                      "user_count": 4,
                      "custom_attributes": {},
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "segments": {
                        "type": "segment.list",
                        "segments": []
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 15,
                    "total_pages": 1
                  },
                  "total_count": 1,
                  "data": [
                    {
                      "type": "company",
                      "id": "667d607e8a68186f43bafd26",
                      "name": "IntercomQATest1",
                      "app_id": "this_is_an_id122_that_should_be_at_least_",
                      "plan": {},
                      "company_id": "remote_companies_scroll_2",
                      "remote_created_at": 1719492734,
                      "created_at": 1719492734,
                      "updated_at": 1719492734,
                      "monthly_spend": 0,
                      "session_count": 0,
                      "user_count": 4,
                      "custom_attributes": {},
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "segments": {
                        "type": "segment.list",
                        "segments": []
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create or update a company.\n\nCompanies will be only visible in Intercom when there is at least one associated user.\n\nCompanies are looked up via `company_id` in a `POST` request, if not found via `company_id`, the new company will be created, if found, that company will be updated.\n\n{% admonition type=\"attention\" name=\"Using `company_id`\" %}\n  You can set a unique `company_id` value when creating a company. However, it is not possible to update `company_id`. Be sure to set a unique value once upon creation of the company.\n{% /admonition %}\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createOrUpdateCompany",
          "originalEndpointId": "Companies.createOrUpdateCompany",
          "name": "Create or Update a company",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_or_update_company_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d607c8a68186f43bafd1e",
                  "name": "my company",
                  "app_id": "this_is_an_id116_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "company_remote_id",
                  "remote_created_at": 1374138000,
                  "created_at": 1719492732,
                  "updated_at": 1719492732,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 0,
                  "custom_attributes": {
                    "creation_source": "api"
                  },
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d607c8a68186f43bafd1e",
                  "name": "my company",
                  "app_id": "this_is_an_id116_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "company_remote_id",
                  "remote_created_at": 1374138000,
                  "created_at": 1719492732,
                  "updated_at": 1719492732,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 0,
                  "custom_attributes": {
                    "creation_source": "api"
                  },
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a single company.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "RetrieveACompanyById",
          "originalEndpointId": "Companies.RetrieveACompanyById",
          "name": "Retrieve a company by ID",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the company which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/",
              "pathParameters": {
                "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d60808a68186f43bafd31",
                  "name": "company1",
                  "app_id": "this_is_an_id128_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492736,
                  "created_at": 1719492736,
                  "updated_at": 1719492736,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 1,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d60808a68186f43bafd31",
                  "name": "company1",
                  "app_id": "this_is_an_id128_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492736,
                  "created_at": 1719492736,
                  "updated_at": 1719492736,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 1,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can update a single company using the Intercom provisioned `id`.\n\n{% admonition type=\"attention\" name=\"Using `company_id`\" %}\n  When updating a company it is not possible to update `company_id`. This can only be set once upon creation of the company.\n{% /admonition %}\n",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "UpdateCompany",
          "originalEndpointId": "Companies.UpdateCompany",
          "name": "Update a company",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the company which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/",
              "pathParameters": {
                "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d60828a68186f43bafd3b",
                  "name": "company2",
                  "app_id": "this_is_an_id134_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492738,
                  "created_at": 1719492738,
                  "updated_at": 1719492738,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 1,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d60828a68186f43bafd3b",
                  "name": "company2",
                  "app_id": "this_is_an_id134_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492738,
                  "created_at": 1719492738,
                  "updated_at": 1719492738,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 1,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can delete a single company.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "deleteCompany",
          "originalEndpointId": "Companies.deleteCompany",
          "name": "Delete a company",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the company which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "deleted_company_object"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/",
              "pathParameters": {
                "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "667d60848a68186f43bafd45",
                  "object": "company",
                  "deleted": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "667d60848a68186f43bafd45",
                  "object": "company",
                  "deleted": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of all contacts that belong to a company.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "ListAttachedContacts",
          "originalEndpointId": "Companies.ListAttachedContacts",
          "name": "List attached contacts",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the company which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/contacts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company_attached_contacts"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/",
              "pathParameters": {
                "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [],
                  "total_count": 0,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 50,
                    "total_pages": 0
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [],
                  "total_count": 0,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 50,
                    "total_pages": 0
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of all segments that belong to a company.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "ListAttachedSegmentsForCompanies",
          "originalEndpointId": "Companies.ListAttachedSegmentsForCompanies",
          "name": "List attached segments for companies",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the company which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/segments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company_attached_segments"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/",
              "pathParameters": {
                "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can list companies. The company list is sorted by the `last_request_at` field and by default is ordered descending, most recently requested first.\n\nNote that the API does not include companies who have no associated users in list responses.\n\nWhen using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the [Scroll API](https://developers.intercom.com/reference#iterating-over-all-companies).\n{% admonition type=\"warning\" name=\"Pagination\" %}\n  You can use pagination to limit the number of results returned. The default is `20` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.\n{% /admonition %}\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listAllCompanies",
          "originalEndpointId": "Companies.listAllCompanies",
          "name": "List all companies",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/list"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The page of results to fetch. Defaults to first page",
              "key": "page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "How many results to return per page. Defaults to 15",
              "key": "per_page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "`asc` or `desc`. Return the companies in ascending or descending order. Defaults to desc",
              "key": "order",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company_list"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/list",
              "pathParameters": {},
              "queryParameters": {
                "page": 1,
                "per_page": 15,
                "order": "desc"
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 15,
                    "total_pages": 1
                  },
                  "total_count": 1,
                  "data": [
                    {
                      "type": "company",
                      "id": "667d608a8a68186f43bafd61",
                      "name": "IntercomQATest1",
                      "app_id": "this_is_an_id158_that_should_be_at_least_",
                      "plan": {},
                      "company_id": "remote_companies_scroll_2",
                      "remote_created_at": 1719492746,
                      "created_at": 1719492746,
                      "updated_at": 1719492746,
                      "monthly_spend": 0,
                      "session_count": 0,
                      "user_count": 4,
                      "custom_attributes": {},
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "segments": {
                        "type": "segment.list",
                        "segments": []
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 15,
                    "total_pages": 1
                  },
                  "total_count": 1,
                  "data": [
                    {
                      "type": "company",
                      "id": "667d608a8a68186f43bafd61",
                      "name": "IntercomQATest1",
                      "app_id": "this_is_an_id158_that_should_be_at_least_",
                      "plan": {},
                      "company_id": "remote_companies_scroll_2",
                      "remote_created_at": 1719492746,
                      "created_at": 1719492746,
                      "updated_at": 1719492746,
                      "monthly_spend": 0,
                      "session_count": 0,
                      "user_count": 4,
                      "custom_attributes": {},
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "segments": {
                        "type": "segment.list",
                        "segments": []
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "      The `list all companies` functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.\n\n- Each app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.\n- If the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail\n- If the end of the scroll is reached, \"companies\" will be empty and the scroll parameter will expire\n\n{% admonition type=\"info\" name=\"Scroll Parameter\" %}\n  You can get the first page of companies by simply sending a GET request to the scroll endpoint.\n  For subsequent requests you will need to use the scroll parameter from the response.\n{% /admonition %}\n{% admonition type=\"danger\" name=\"Scroll network timeouts\" %}\n  Since scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will see a HTTP 500 error with the following message:\n  \"Request failed due to an internal network error. Please restart the scroll operation.\"\n  If this happens, you will need to restart your scroll query: It is not possible to continue from a specific point when using scroll.\n{% /admonition %}\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "scrollOverAllCompanies",
          "originalEndpointId": "Companies.scrollOverAllCompanies",
          "name": "Scroll over all companies",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/scroll"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "",
              "key": "scroll_param",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company_scroll"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/scroll",
              "pathParameters": {},
              "queryParameters": {
                "scroll_param": "foo"
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "company",
                      "id": "667d608b8a68186f43bafd67",
                      "name": "IntercomQATest1",
                      "app_id": "this_is_an_id162_that_should_be_at_least_",
                      "plan": {},
                      "company_id": "remote_companies_scroll_2",
                      "remote_created_at": 1719492747,
                      "created_at": 1719492747,
                      "updated_at": 1719492747,
                      "monthly_spend": 0,
                      "session_count": 0,
                      "user_count": 4,
                      "custom_attributes": {},
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "segments": {
                        "type": "segment.list",
                        "segments": []
                      }
                    }
                  ],
                  "total_count": null,
                  "scroll_param": "12d403b5-dc79-47b5-8ea1-01a5ac8cb6cc"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "company",
                      "id": "667d608b8a68186f43bafd67",
                      "name": "IntercomQATest1",
                      "app_id": "this_is_an_id162_that_should_be_at_least_",
                      "plan": {},
                      "company_id": "remote_companies_scroll_2",
                      "remote_created_at": 1719492747,
                      "created_at": 1719492747,
                      "updated_at": 1719492747,
                      "monthly_spend": 0,
                      "session_count": 0,
                      "user_count": 4,
                      "custom_attributes": {},
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "segments": {
                        "type": "segment.list",
                        "segments": []
                      }
                    }
                  ],
                  "total_count": null,
                  "scroll_param": "12d403b5-dc79-47b5-8ea1-01a5ac8cb6cc"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can attach a company to a single contact.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "attachContactToACompany",
          "originalEndpointId": "Companies.attachContactToACompany",
          "name": "Attach a Contact to a Company",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/companies"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The unique identifier for the company which is given by Intercom",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "id": "667d608d8a68186f43bafd70"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "667d608d8a68186f43bafd70"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d608d8a68186f43bafd70",
                  "name": "company6",
                  "app_id": "this_is_an_id166_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492749,
                  "created_at": 1719492749,
                  "updated_at": 1719492749,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 1,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d608d8a68186f43bafd70",
                  "name": "company6",
                  "app_id": "this_is_an_id166_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492749,
                  "created_at": 1719492749,
                  "updated_at": 1719492749,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 1,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can detach a company from a single contact.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "detachContactFromACompany",
          "originalEndpointId": "Companies.detachContactFromACompany",
          "name": "Detach a contact from a company",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The unique identifier for the company which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/companies/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "company"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "58a430d35458202d41b1e65b",
                "id": "58a430d35458202d41b1e65b"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d60918a68186f43bafd80",
                  "name": "company8",
                  "app_id": "this_is_an_id174_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492753,
                  "created_at": 1719492753,
                  "updated_at": 1719492753,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 0,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "company",
                  "id": "667d60918a68186f43bafd80",
                  "name": "company8",
                  "app_id": "this_is_an_id174_that_should_be_at_least_",
                  "plan": {},
                  "company_id": "1",
                  "remote_created_at": 1719492753,
                  "created_at": 1719492753,
                  "updated_at": 1719492753,
                  "monthly_spend": 0,
                  "session_count": 0,
                  "user_count": 0,
                  "custom_attributes": {},
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Contacts": {
      "subpackageId": "Contacts",
      "name": "Contacts",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of companies that are associated to a contact.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listCompaniesForAContact",
          "originalEndpointId": "Contacts.listCompaniesForAContact",
          "name": "List attached companies for contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/companies"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact_attached_companies"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "total_count": 1,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "next": null,
                    "per_page": 50,
                    "total_pages": 1
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "total_count": 1,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "next": null,
                    "per_page": 50,
                    "total_pages": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of segments that are associated to a contact.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listSegmentsForAContact",
          "originalEndpointId": "Contacts.listSegmentsForAContact",
          "name": "List attached segments for contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/segments"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact_segments"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "segment",
                      "id": "667d60998a68186f43bafda1",
                      "name": "segment",
                      "created_at": 1719492761,
                      "updated_at": 1719492761,
                      "person_type": "user"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "segment",
                      "id": "667d60998a68186f43bafda1",
                      "name": "segment",
                      "created_at": 1719492761,
                      "updated_at": 1719492761,
                      "person_type": "user"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of subscription types that are attached to a contact. These can be subscriptions that a user has 'opted-in' to or has 'opted-out' from, depending on the subscription type.\nThis will return a list of Subscription Type objects that the contact is associated with.\n\nThe data property will show a combined list of:\n\n  1.Opt-out subscription types that the user has opted-out from.\n  2.Opt-in subscription types that the user has opted-in to receiving.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listSubscriptionsForAContact",
          "originalEndpointId": "Contacts.listSubscriptionsForAContact",
          "name": "List subscriptions for a contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/subscriptions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "subscription_type_list"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "subscription",
                      "id": "93",
                      "state": "live",
                      "default_translation": {
                        "name": "Newsletters",
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en"
                      },
                      "translations": [
                        {
                          "name": "Newsletters",
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en"
                        }
                      ],
                      "consent_type": "opt_out",
                      "content_types": [
                        "email"
                      ]
                    },
                    {
                      "type": "subscription",
                      "id": "95",
                      "state": "live",
                      "default_translation": {
                        "name": "Newsletters",
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en"
                      },
                      "translations": [
                        {
                          "name": "Newsletters",
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en"
                        }
                      ],
                      "consent_type": "opt_in",
                      "content_types": [
                        "sms_message"
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "subscription",
                      "id": "93",
                      "state": "live",
                      "default_translation": {
                        "name": "Newsletters",
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en"
                      },
                      "translations": [
                        {
                          "name": "Newsletters",
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en"
                        }
                      ],
                      "consent_type": "opt_out",
                      "content_types": [
                        "email"
                      ]
                    },
                    {
                      "type": "subscription",
                      "id": "95",
                      "state": "live",
                      "default_translation": {
                        "name": "Newsletters",
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en"
                      },
                      "translations": [
                        {
                          "name": "Newsletters",
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en"
                        }
                      ],
                      "consent_type": "opt_in",
                      "content_types": [
                        "sms_message"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of all tags that are attached to a specific contact.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listTagsForAContact",
          "originalEndpointId": "Contacts.listTagsForAContact",
          "name": "List tags attached to a contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "tag",
                      "id": "93",
                      "name": "Manual tag"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "tag",
                      "id": "93",
                      "name": "Manual tag"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single contact.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "ShowContact",
          "originalEndpointId": "Contacts.ShowContact",
          "name": "Get a contact",
          "path": {
            "pathParameters": [
              {
                "description": "id",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60a98a68186f43bafdb9",
                  "external_id": "70",
                  "workspace_id": "this_is_an_id252_that_should_be_at_least_",
                  "role": "user",
                  "email": "joe@bloggs.com",
                  "phone": null,
                  "name": "Joe Bloggs",
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492777,
                  "updated_at": 1719492777,
                  "signed_up_at": 1719492777,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60a98a68186f43bafdb9/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60a98a68186f43bafdb9/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60a98a68186f43bafdb9/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60a98a68186f43bafdb9",
                  "external_id": "70",
                  "workspace_id": "this_is_an_id252_that_should_be_at_least_",
                  "role": "user",
                  "email": "joe@bloggs.com",
                  "phone": null,
                  "name": "Joe Bloggs",
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492777,
                  "updated_at": 1719492777,
                  "signed_up_at": 1719492777,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60a98a68186f43bafdb9/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60a98a68186f43bafdb9/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60a98a68186f43bafdb9/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can update an existing contact (ie. user or lead).",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "UpdateContact",
          "originalEndpointId": "Contacts.UpdateContact",
          "name": "Update a contact",
          "path": {
            "pathParameters": [
              {
                "description": "id",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Contacts_UpdateContact_Request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60a88a68186f43bafdb8",
                  "external_id": "70",
                  "workspace_id": "this_is_an_id248_that_should_be_at_least_",
                  "role": "user",
                  "email": "joebloggs@intercom.io",
                  "phone": null,
                  "name": "joe bloggs",
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492776,
                  "updated_at": 1719492776,
                  "signed_up_at": 1719492776,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60a88a68186f43bafdb8/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60a88a68186f43bafdb8/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60a88a68186f43bafdb8/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60a88a68186f43bafdb8",
                  "external_id": "70",
                  "workspace_id": "this_is_an_id248_that_should_be_at_least_",
                  "role": "user",
                  "email": "joebloggs@intercom.io",
                  "phone": null,
                  "name": "joe bloggs",
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492776,
                  "updated_at": 1719492776,
                  "signed_up_at": 1719492776,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60a88a68186f43bafdb8/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60a88a68186f43bafdb8/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60a88a68186f43bafdb8/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can delete a single contact.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "DeleteContact",
          "originalEndpointId": "Contacts.DeleteContact",
          "name": "Delete a contact",
          "path": {
            "pathParameters": [
              {
                "description": "id",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact_deleted"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60aa8a68186f43bafdba",
                  "external_id": "70",
                  "deleted": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60aa8a68186f43bafdba",
                  "external_id": "70",
                  "deleted": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can merge a contact with a `role` of `lead` into a contact with a `role` of `user`.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "MergeContact",
          "originalEndpointId": "Contacts.MergeContact",
          "name": "Merge a lead and a user",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/merge"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "merge_contacts_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/merge",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60ac8a68186f43bafdbc",
                  "external_id": "70",
                  "workspace_id": "this_is_an_id260_that_should_be_at_least_",
                  "role": "user",
                  "email": "joe@bloggs.com",
                  "phone": null,
                  "name": "Joe Bloggs",
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492780,
                  "updated_at": 1719492780,
                  "signed_up_at": 1719492780,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60ac8a68186f43bafdbc/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60ac8a68186f43bafdbc/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60ac8a68186f43bafdbc/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60ac8a68186f43bafdbc",
                  "external_id": "70",
                  "workspace_id": "this_is_an_id260_that_should_be_at_least_",
                  "role": "user",
                  "email": "joe@bloggs.com",
                  "phone": null,
                  "name": "Joe Bloggs",
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492780,
                  "updated_at": 1719492780,
                  "signed_up_at": 1719492780,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60ac8a68186f43bafdbc/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60ac8a68186f43bafdbc/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60ac8a68186f43bafdbc/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.\n\nTo search for contacts, you need to send a `POST` request to `https://api.intercom.io/contacts/search`.\n\nThis will accept a query object in the body which will define your filters in order to search for contacts.\n\n{% admonition type=\"warning\" name=\"Optimizing search queries\" %}\n  Search queries can be complex, so optimizing them can help the performance of your search.\n  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize\n  pagination to limit the number of results returned. The default is `50` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.\n{% /admonition %}\n### Contact Creation Delay\n\nIf a contact has recently been created, there is a possibility that it will not yet be available when searching. This means that it may not appear in the response. This delay can take a few minutes. If you need to be instantly notified it is recommended to use webhooks and iterate to see if they match your search filters.\n\n### Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\nThere are some limitations to the amount of multiple's there can be:\n* There's a limit of max 2 nested filters\n* There's a limit of max 15 filters for each AND or OR group\n\n### Searching for Timestamp Fields\n\nAll timestamp fields (created_at, updated_at etc.) are indexed as Dates for Contact Search queries; Datetime queries are not currently supported. This means you can only query for timestamp fields by day - not hour, minute or second.\nFor example, if you search for all Contacts with a created_at value greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020 12:00 AM). The search results will then include Contacts created from January 2nd, 2020 12:00 AM onwards.\nIf you'd like to get contacts created on January 1st, 2020 you should search with a created_at value equal (=) to 1577836800 (January 1st, 2020 12:00 AM).\nThis behaviour applies only to timestamps used in search queries. The search results will still contain the full UNIX timestamp and be sorted accordingly.\n\n### Accepted Fields\n\nMost key listed as part of the Contacts Model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `\"foorbar\"`).\n\n| Field                              | Type                           |\n| ---------------------------------- | ------------------------------ |\n| id                                 | String                         |\n| role                               | String<br>Accepts user or lead |\n| name                               | String                         |\n| avatar                             | String                         |\n| owner_id                           | Integer                        |\n| email                              | String                         |\n| email_domain                       | String                         |\n| phone                              | String                         |\n| formatted_phone                    | String                         |\n| external_id                        | String                         |\n| created_at                         | Date (UNIX Timestamp)          |\n| signed_up_at                       | Date (UNIX Timestamp)          |\n| updated_at                         | Date (UNIX Timestamp)          |\n| last_seen_at                       | Date (UNIX Timestamp)          |\n| last_contacted_at                  | Date (UNIX Timestamp)          |\n| last_replied_at                    | Date (UNIX Timestamp)          |\n| last_email_opened_at               | Date (UNIX Timestamp)          |\n| last_email_clicked_at              | Date (UNIX Timestamp)          |\n| language_override                  | String                         |\n| browser                            | String                         |\n| browser_language                   | String                         |\n| os                                 | String                         |\n| location.country                   | String                         |\n| location.region                    | String                         |\n| location.city                      | String                         |\n| unsubscribed_from_emails           | Boolean                        |\n| marked_email_as_spam               | Boolean                        |\n| has_hard_bounced                   | Boolean                        |\n| ios_last_seen_at                   | Date (UNIX Timestamp)          |\n| ios_app_version                    | String                         |\n| ios_device                         | String                         |\n| ios_app_device                     | String                         |\n| ios_os_version                     | String                         |\n| ios_app_name                       | String                         |\n| ios_sdk_version                    | String                         |\n| android_last_seen_at               | Date (UNIX Timestamp)          |\n| android_app_version                | String                         |\n| android_device                     | String                         |\n| android_app_name                   | String                         |\n| andoid_sdk_version                 | String                         |\n| segment_id                         | String                         |\n| tag_id                             | String                         |\n| custom_attributes.{attribute_name} | String                         |\n\n### Accepted Operators\n\n{% admonition type=\"attention\" name=\"Searching based on `created_at`\" %}\n  You cannot use the `<=` or `>=` operators to search by `created_at`.\n{% /admonition %}\n\nThe table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`\"=\"`). The operator has to be compatible with the field's type (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).\n\n| Operator | Valid Types                      | Description                                                      |\n| :------- | :------------------------------- | :--------------------------------------------------------------- |\n| =        | All                              | Equals                                                           |\n| !=       | All                              | Doesn't Equal                                                    |\n| IN       | All                              | In<br>Shortcut for `OR` queries<br>Values must be in Array       |\n| NIN      | All                              | Not In<br>Shortcut for `OR !` queries<br>Values must be in Array |\n| >        | Integer<br>Date (UNIX Timestamp) | Greater than                                                     |\n| <       | Integer<br>Date (UNIX Timestamp) | Lower than                                                       |\n| ~        | String                           | Contains                                                         |\n| !~       | String                           | Doesn't Contain                                                  |\n| ^        | String                           | Starts With                                                      |\n| $        | String                           | Ends With                                                        |\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "SearchContacts",
          "originalEndpointId": "Contacts.SearchContacts",
          "name": "Search contacts",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "search_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "query": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {}
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [],
                  "total_count": 0,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 5,
                    "total_pages": 0
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [],
                  "total_count": 0,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 5,
                    "total_pages": 0
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of all contacts (ie. users or leads) in your workspace.\n{% admonition type=\"warning\" name=\"Pagination\" %}\n  You can use pagination to limit the number of results returned. The default is `50` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.\n{% /admonition %}\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "ListContacts",
          "originalEndpointId": "Contacts.ListContacts",
          "name": "List all contacts",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [],
                  "total_count": 0,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 0
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [],
                  "total_count": 0,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 0
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a new contact (ie. user or lead).",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "CreateContact",
          "originalEndpointId": "Contacts.CreateContact",
          "name": "Create contact",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Contacts_CreateContact_Request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60b08a68186f43bafdbf",
                  "external_id": null,
                  "workspace_id": "this_is_an_id272_that_should_be_at_least_",
                  "role": "user",
                  "email": "joebloggs@intercom.io",
                  "phone": null,
                  "name": null,
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492784,
                  "updated_at": 1719492784,
                  "signed_up_at": null,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60b08a68186f43bafdbf/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60b08a68186f43bafdbf/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60b08a68186f43bafdbf/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60b08a68186f43bafdbf",
                  "external_id": null,
                  "workspace_id": "this_is_an_id272_that_should_be_at_least_",
                  "role": "user",
                  "email": "joebloggs@intercom.io",
                  "phone": null,
                  "name": null,
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719492784,
                  "updated_at": 1719492784,
                  "signed_up_at": null,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d60b08a68186f43bafdbf/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d60b08a68186f43bafdbf/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d60b08a68186f43bafdbf/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can archive a single contact.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "ArchiveContact",
          "originalEndpointId": "Contacts.ArchiveContact",
          "name": "Archive contact",
          "path": {
            "pathParameters": [
              {
                "description": "id",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/archive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact_archived"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60b18a68186f43bafdc0",
                  "external_id": "70",
                  "archived": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60b18a68186f43bafdc0",
                  "external_id": "70",
                  "archived": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can unarchive a single contact.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "UnarchiveContact",
          "originalEndpointId": "Contacts.UnarchiveContact",
          "name": "Unarchive contact",
          "path": {
            "pathParameters": [
              {
                "description": "id",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/unarchive"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact_unarchived"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60b28a68186f43bafdc1",
                  "external_id": "70",
                  "archived": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d60b28a68186f43bafdc1",
                  "external_id": "70",
                  "archived": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Notes": {
      "subpackageId": "Notes",
      "name": "Notes",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of notes that are associated to a contact.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listNotes",
          "originalEndpointId": "Notes.listNotes",
          "name": "List all notes",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a contact.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/notes"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "note_list"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": 42
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "note",
                      "id": "29",
                      "created_at": 1718887958,
                      "contact": {
                        "type": "contact",
                        "id": "667d60968a68186f43bafd9c"
                      },
                      "author": {
                        "type": "admin",
                        "id": "991267491",
                        "name": "Ciaran101 Lee",
                        "email": "admin101@email.com",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false
                      },
                      "body": "<p>This is a note.</p>"
                    },
                    {
                      "type": "note",
                      "id": "28",
                      "created_at": 1718801558,
                      "contact": {
                        "type": "contact",
                        "id": "667d60968a68186f43bafd9c"
                      },
                      "author": {
                        "type": "admin",
                        "id": "991267491",
                        "name": "Ciaran101 Lee",
                        "email": "admin101@email.com",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false
                      },
                      "body": "<p>This is a note.</p>"
                    },
                    {
                      "type": "note",
                      "id": "27",
                      "created_at": 1718801558,
                      "contact": {
                        "type": "contact",
                        "id": "667d60968a68186f43bafd9c"
                      },
                      "author": {
                        "type": "admin",
                        "id": "991267491",
                        "name": "Ciaran101 Lee",
                        "email": "admin101@email.com",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false
                      },
                      "body": "<p>This is a note.</p>"
                    }
                  ],
                  "total_count": 3,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 50,
                    "total_pages": 1
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "note",
                      "id": "29",
                      "created_at": 1718887958,
                      "contact": {
                        "type": "contact",
                        "id": "667d60968a68186f43bafd9c"
                      },
                      "author": {
                        "type": "admin",
                        "id": "991267491",
                        "name": "Ciaran101 Lee",
                        "email": "admin101@email.com",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false
                      },
                      "body": "<p>This is a note.</p>"
                    },
                    {
                      "type": "note",
                      "id": "28",
                      "created_at": 1718801558,
                      "contact": {
                        "type": "contact",
                        "id": "667d60968a68186f43bafd9c"
                      },
                      "author": {
                        "type": "admin",
                        "id": "991267491",
                        "name": "Ciaran101 Lee",
                        "email": "admin101@email.com",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false
                      },
                      "body": "<p>This is a note.</p>"
                    },
                    {
                      "type": "note",
                      "id": "27",
                      "created_at": 1718801558,
                      "contact": {
                        "type": "contact",
                        "id": "667d60968a68186f43bafd9c"
                      },
                      "author": {
                        "type": "admin",
                        "id": "991267491",
                        "name": "Ciaran101 Lee",
                        "email": "admin101@email.com",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false
                      },
                      "body": "<p>This is a note.</p>"
                    }
                  ],
                  "total_count": 3,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 50,
                    "total_pages": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can add a note to a single contact.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createNote",
          "originalEndpointId": "Notes.createNote",
          "name": "Create a note",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a given contact.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/notes"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The text of the note.",
                    "key": "body",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "The unique identifier of a given contact.",
                    "key": "contact_id",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The unique identifier of a given admin.",
                    "key": "admin_id",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "note"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "body": "Hello",
                "contact_id": "667d60978a68186f43bafd9e",
                "admin_id": "991267493"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "body": "Hello",
                  "contact_id": "667d60978a68186f43bafd9e",
                  "admin_id": "991267493"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "note",
                  "id": "34",
                  "created_at": 1719492759,
                  "contact": {
                    "type": "contact",
                    "id": "667d60978a68186f43bafd9e"
                  },
                  "author": {
                    "type": "admin",
                    "id": "991267493",
                    "name": "Ciaran103 Lee",
                    "email": "admin103@email.com",
                    "away_mode_enabled": false,
                    "away_mode_reassign": false
                  },
                  "body": "<p>Hello</p>"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "note",
                  "id": "34",
                  "created_at": 1719492759,
                  "contact": {
                    "type": "contact",
                    "id": "667d60978a68186f43bafd9e"
                  },
                  "author": {
                    "type": "admin",
                    "id": "991267493",
                    "name": "Ciaran103 Lee",
                    "email": "admin103@email.com",
                    "away_mode_enabled": false,
                    "away_mode_reassign": false
                  },
                  "body": "<p>Hello</p>"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single note.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveNote",
          "originalEndpointId": "Notes.retrieveNote",
          "name": "Retrieve a note",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a given note",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/notes/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "note"
              }
            },
            "statusCode": 200,
            "description": "Note found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/notes/",
              "pathParameters": {
                "id": 1
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "note",
                  "id": "37",
                  "created_at": 1718801789,
                  "contact": {
                    "type": "contact",
                    "id": "667d617d8a68186f43bafe58"
                  },
                  "author": {
                    "type": "admin",
                    "id": "991267764",
                    "name": "Ciaran316 Lee",
                    "email": "admin316@email.com",
                    "away_mode_enabled": false,
                    "away_mode_reassign": false
                  },
                  "body": "<p>This is a note.</p>"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "note",
                  "id": "37",
                  "created_at": 1718801789,
                  "contact": {
                    "type": "contact",
                    "id": "667d617d8a68186f43bafe58"
                  },
                  "author": {
                    "type": "admin",
                    "id": "991267764",
                    "name": "Ciaran316 Lee",
                    "email": "admin316@email.com",
                    "away_mode_enabled": false,
                    "away_mode_reassign": false
                  },
                  "body": "<p>This is a note.</p>"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Subscription Types": {
      "subpackageId": "Subscription Types",
      "name": "Subscription Types",
      "endpoints": [
        {
          "auth": true,
          "description": "You can add a specific subscription to a contact. In Intercom, we have two different subscription types based on user consent - opt-out and opt-in:\n\n  1.Attaching a contact to an opt-out subscription type will opt that user out from receiving messages related to that subscription type.\n\n  2.Attaching a contact to an opt-in subscription type will opt that user in to receiving messages related to that subscription type.\n\nThis will return a subscription type model for the subscription type that was added to the contact.\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "attachSubscriptionTypeToContact",
          "originalEndpointId": "Subscription Types.attachSubscriptionTypeToContact",
          "name": "Add subscription to a contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/subscriptions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The unique identifier for the subscription which is given by Intercom",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "The consent_type of a subscription, opt_out or opt_in.",
                    "key": "consent_type",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "subscription_type"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "id": "108",
                "consent_type": "opt_in"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "108",
                  "consent_type": "opt_in"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "subscription",
                  "id": "108",
                  "state": "live",
                  "default_translation": {
                    "name": "Newsletters",
                    "description": "Lorem ipsum dolor sit amet",
                    "locale": "en"
                  },
                  "translations": [
                    {
                      "name": "Newsletters",
                      "description": "Lorem ipsum dolor sit amet",
                      "locale": "en"
                    }
                  ],
                  "consent_type": "opt_in",
                  "content_types": [
                    "sms_message"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "subscription",
                  "id": "108",
                  "state": "live",
                  "default_translation": {
                    "name": "Newsletters",
                    "description": "Lorem ipsum dolor sit amet",
                    "locale": "en"
                  },
                  "translations": [
                    {
                      "name": "Newsletters",
                      "description": "Lorem ipsum dolor sit amet",
                      "locale": "en"
                    }
                  ],
                  "consent_type": "opt_in",
                  "content_types": [
                    "sms_message"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can remove a specific subscription from a contact. This will return a subscription type model for the subscription type that was removed from the contact.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "detachSubscriptionTypeToContact",
          "originalEndpointId": "Subscription Types.detachSubscriptionTypeToContact",
          "name": "Remove subscription from a contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The unique identifier for the subscription type which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/subscriptions/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "subscription_type"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "63a07ddf05a32042dffac965",
                "id": "37846"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "subscription",
                  "id": "124",
                  "state": "live",
                  "default_translation": {
                    "name": "Newsletters",
                    "description": "Lorem ipsum dolor sit amet",
                    "locale": "en"
                  },
                  "translations": [
                    {
                      "name": "Newsletters",
                      "description": "Lorem ipsum dolor sit amet",
                      "locale": "en"
                    }
                  ],
                  "consent_type": "opt_in",
                  "content_types": [
                    "sms_message"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "subscription",
                  "id": "124",
                  "state": "live",
                  "default_translation": {
                    "name": "Newsletters",
                    "description": "Lorem ipsum dolor sit amet",
                    "locale": "en"
                  },
                  "translations": [
                    {
                      "name": "Newsletters",
                      "description": "Lorem ipsum dolor sit amet",
                      "locale": "en"
                    }
                  ],
                  "consent_type": "opt_in",
                  "content_types": [
                    "sms_message"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can list all subscription types. A list of subscription type objects will be returned.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listSubscriptionTypes",
          "originalEndpointId": "Subscription Types.listSubscriptionTypes",
          "name": "List subscription types",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/subscription_types"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "subscription_type_list"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/subscription_types",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "subscription",
                      "id": "137",
                      "state": "live",
                      "default_translation": {
                        "name": "Newsletters",
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en"
                      },
                      "translations": [
                        {
                          "name": "Newsletters",
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en"
                        }
                      ],
                      "consent_type": "opt_out",
                      "content_types": [
                        "email"
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "subscription",
                      "id": "137",
                      "state": "live",
                      "default_translation": {
                        "name": "Newsletters",
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en"
                      },
                      "translations": [
                        {
                          "name": "Newsletters",
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en"
                        }
                      ],
                      "consent_type": "opt_out",
                      "content_types": [
                        "email"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Tags": {
      "subpackageId": "Tags",
      "name": "Tags",
      "endpoints": [
        {
          "auth": true,
          "description": "You can tag a specific contact. This will return a tag object for the tag that was added to the contact.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "attachTagToContact",
          "originalEndpointId": "Tags.attachTagToContact",
          "name": "Add tag to a contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The unique identifier for the tag which is given by Intercom",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "63a07ddf05a32042dffac965"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "id": "94"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "94"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "94",
                  "name": "Manual tag"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "94",
                  "name": "Manual tag"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can remove tag from a specific contact. This will return a tag object for the tag that was removed from the contact.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "detachTagFromContact",
          "originalEndpointId": "Tags.detachTagFromContact",
          "name": "Remove tag from a contact",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the contact which is given by Intercom",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The unique identifier for the tag which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/contacts/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": "/tags/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/contacts/",
              "pathParameters": {
                "contact_id": "63a07ddf05a32042dffac965",
                "id": "7522907"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "97",
                  "name": "Manual tag"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "97",
                  "name": "Manual tag"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can tag a specific conversation. This will return a tag object for the tag that was added to the conversation.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "attachTagToConversation",
          "originalEndpointId": "Tags.attachTagToConversation",
          "name": "Add tag to a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "conversation_id",
                "key": "conversation_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "conversation_id"
              },
              {
                "type": "literal",
                "value": "/tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The unique identifier for the tag which is given by Intercom",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "The unique identifier for the admin which is given by Intercom.",
                    "key": "admin_id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "conversation_id": "64619700005694"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "id": "99",
                "admin_id": "991267526"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "99",
                  "admin_id": "991267526"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "99",
                  "name": "Manual tag"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "99",
                  "name": "Manual tag"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can remove tag from a specific conversation. This will return a tag object for the tag that was removed from the conversation.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "detachTagFromConversation",
          "originalEndpointId": "Tags.detachTagFromConversation",
          "name": "Remove tag from a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "conversation_id",
                "key": "conversation_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "id",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "conversation_id"
              },
              {
                "type": "literal",
                "value": "/tags/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The unique identifier for the admin which is given by Intercom.",
                    "key": "admin_id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "conversation_id": "64619700005694",
                "id": "7522907"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "admin_id": "991267530"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "admin_id": "991267530"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "102",
                  "name": "Manual tag"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "102",
                  "name": "Manual tag"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of all tags for a given workspace.\n\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listTags",
          "originalEndpointId": "Tags.listTags",
          "name": "List all tags",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tags",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "tag",
                      "id": "115",
                      "name": "Manual tag 1"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "tag",
                      "id": "115",
                      "name": "Manual tag 1"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can use this endpoint to perform the following operations:\n\n  **1. Create a new tag:** You can create a new tag by passing in the tag name as specified in \"Create or Update Tag Request Payload\" described below.\n\n  **2. Update an existing tag:** You can update an existing tag by passing the id of the tag as specified in \"Create or Update Tag Request Payload\" described below.\n\n  **3. Tag Companies:** You can tag single company or a list of companies. You can tag a company by passing in the tag name and the company details as specified in \"Tag Company Request Payload\" described below. Also, if the tag doesn't exist then a new one will be created automatically.\n\n  **4. Untag Companies:** You can untag a single company or a list of companies. You can untag a company by passing in the tag id and the company details as specified in \"Untag Company Request Payload\" described below.\n\n  **5. Tag Multiple Users:** You can tag a list of users. You can tag the users by passing in the tag name and the user details as specified in \"Tag Users Request Payload\" described below.\n\nEach operation will return a tag object.\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createTag",
          "originalEndpointId": "Tags.createTag",
          "name": "Create or update a tag, Tag or untag companies, Tag contacts",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Tags_createTag_Request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "Action successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tags",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "name": "Independent"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "Independent"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "118",
                  "name": "test"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "118",
                  "name": "test"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of tags that are on the workspace by their id.\nThis will return a tag object.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "findTag",
          "originalEndpointId": "Tags.findTag",
          "name": "Find a specific tag",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a given tag",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tags/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "Tag found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tags/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "126",
                  "name": "Manual tag"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "126",
                  "name": "Manual tag"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can delete the details of tags that are on the workspace by passing in the id.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "deleteTag",
          "originalEndpointId": "Tags.deleteTag",
          "name": "Delete tag",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a given tag",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tags/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tags/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can tag a specific ticket. This will return a tag object for the tag that was added to the ticket.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "attachTagToTicket",
          "originalEndpointId": "Tags.attachTagToTicket",
          "name": "Add tag to a ticket",
          "path": {
            "pathParameters": [
              {
                "description": "ticket_id",
                "key": "ticket_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tickets/"
              },
              {
                "type": "pathParameter",
                "value": "ticket_id"
              },
              {
                "type": "literal",
                "value": "/tags"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The unique identifier for the tag which is given by Intercom",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "The unique identifier for the admin which is given by Intercom.",
                    "key": "admin_id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tickets/",
              "pathParameters": {
                "ticket_id": "64619700005694"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "id": "134",
                "admin_id": "991267844"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "134",
                  "admin_id": "991267844"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "134",
                  "name": "Manual tag"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "134",
                  "name": "Manual tag"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can remove tag from a specific ticket. This will return a tag object for the tag that was removed from the ticket.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "detachTagFromTicket",
          "originalEndpointId": "Tags.detachTagFromTicket",
          "name": "Remove tag from a ticket",
          "path": {
            "pathParameters": [
              {
                "description": "ticket_id",
                "key": "ticket_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The unique identifier for the tag which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tickets/"
              },
              {
                "type": "pathParameter",
                "value": "ticket_id"
              },
              {
                "type": "literal",
                "value": "/tags/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The unique identifier for the admin which is given by Intercom.",
                    "key": "admin_id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "tag"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tickets/",
              "pathParameters": {
                "ticket_id": "64619700005694",
                "id": "7522907"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "admin_id": "991267853"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "admin_id": "991267853"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "137",
                  "name": "Manual tag"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "tag",
                  "id": "137",
                  "name": "Manual tag"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Conversations": {
      "subpackageId": "Conversations",
      "name": "Conversations",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of all conversations.\n\nYou can optionally request the result page size and the cursor to start after to fetch the result.\n{% admonition type=\"warning\" name=\"Pagination\" %}\n  You can use pagination to limit the number of results returned. The default is `20` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.\n{% /admonition %}\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listConversations",
          "originalEndpointId": "Conversations.listConversations",
          "name": "List all conversations",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "How many results per page",
              "key": "per_page",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer",
                    "maximum": 150,
                    "default": 20
                  }
                }
              }
            },
            {
              "description": "String used to get the next page of conversations.",
              "key": "starting_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "paginated_response"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations",
              "pathParameters": {},
              "queryParameters": {
                "per_page": 20,
                "starting_after": "foo"
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation.list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 1
                  },
                  "total_count": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation.list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 1
                  },
                  "total_count": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a conversation that has been initiated by a contact (ie. user or lead).\nThe conversation can be an in-app message only.\n\n{% admonition type=\"info\" name=\"Sending for visitors\" %}\nYou can also send a message from a visitor by specifying their `user_id` or `id` value in the `from` field, along with a `type` field value of `contact`.\nThis visitor will be automatically converted to a contact with a lead role once the conversation is created.\n{% /admonition %}\n\nThis will return the Message model that has been created.\n\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createConversation",
          "originalEndpointId": "Conversations.createConversation",
          "name": "Creates a conversation",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_conversation_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "message"
              }
            },
            "statusCode": 200,
            "description": "conversation created"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "from": {
                  "type": "lead",
                  "id": "536e564f316c83104c000020"
                },
                "body": "Hello"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "from": {
                    "type": "lead",
                    "id": "536e564f316c83104c000020"
                  },
                  "body": "Hello"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "user_message",
                  "id": "403918251",
                  "created_at": 1719492819,
                  "body": "Hello there",
                  "message_type": "inapp",
                  "conversation_id": "363"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "user_message",
                  "id": "403918251",
                  "created_at": 1719492819,
                  "body": "Hello there",
                  "message_type": "inapp",
                  "conversation_id": "363"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "\nYou can fetch the details of a single conversation.\n\nThis will return a single Conversation model with all its conversation parts.\n\n{% admonition type=\"warning\" name=\"Hard limit of 500 parts\" %}\nThe maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts.\n{% /admonition %}\n\nFor AI agent conversation metadata, please note that you need to have the agent enabled in your workspace, which is a [paid feature](https://www.intercom.com/help/en/articles/8205718-fin-resolutions#h_97f8c2e671).\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveConversation",
          "originalEndpointId": "Conversations.retrieveConversation",
          "name": "Retrieve a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "The id of the conversation to target",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Set to plaintext to retrieve conversation messages in plain text.",
              "key": "display_as",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "conversation found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {
                "display_as": "plaintext"
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "367",
                  "title": null,
                  "created_at": 1719492825,
                  "updated_at": 1719492825,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918255",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267553",
                      "name": "Ciaran153 Lee",
                      "email": "admin153@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60d88a68186f43bafde1",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [],
                    "total_count": 0
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "367",
                  "title": null,
                  "created_at": 1719492825,
                  "updated_at": 1719492825,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918255",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267553",
                      "name": "Ciaran153 Lee",
                      "email": "admin153@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60d88a68186f43bafde1",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [],
                    "total_count": 0
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "\nYou can update an existing conversation.\n\n{% admonition type=\"info\" name=\"Replying and other actions\" %}\nIf you want to reply to a coveration or take an action such as assign, unassign, open, close or snooze, take a look at the reply and manage endpoints.\n{% /admonition %}\n\n",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateConversation",
          "originalEndpointId": "Conversations.updateConversation",
          "name": "Update a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "The id of the conversation to target",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Set to plaintext to retrieve conversation messages in plain text.",
              "key": "display_as",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_conversation_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "conversation found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {
                "display_as": "plaintext"
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "371",
                  "title": null,
                  "created_at": 1719492832,
                  "updated_at": 1719492834,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": true,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918259",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267561",
                      "name": "Ciaran157 Lee",
                      "email": "admin157@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60e08a68186f43bafde5",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {
                    "issue_type": "Billing",
                    "priority": "High"
                  },
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "96",
                        "part_type": "conversation_attribute_updated_by_admin",
                        "body": null,
                        "created_at": 1719492834,
                        "updated_at": 1719492834,
                        "notified_at": 1719492834,
                        "assigned_to": {},
                        "author": {
                          "type": "bot",
                          "id": "991267562",
                          "name": "Operator",
                          "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      },
                      {
                        "type": "conversation_part",
                        "id": "97",
                        "part_type": "conversation_attribute_updated_by_admin",
                        "body": null,
                        "created_at": 1719492834,
                        "updated_at": 1719492834,
                        "notified_at": 1719492834,
                        "assigned_to": {},
                        "author": {
                          "type": "bot",
                          "id": "991267562",
                          "name": "Operator",
                          "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 2
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "371",
                  "title": null,
                  "created_at": 1719492832,
                  "updated_at": 1719492834,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": true,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918259",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267561",
                      "name": "Ciaran157 Lee",
                      "email": "admin157@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60e08a68186f43bafde5",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {
                    "issue_type": "Billing",
                    "priority": "High"
                  },
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "96",
                        "part_type": "conversation_attribute_updated_by_admin",
                        "body": null,
                        "created_at": 1719492834,
                        "updated_at": 1719492834,
                        "notified_at": 1719492834,
                        "assigned_to": {},
                        "author": {
                          "type": "bot",
                          "id": "991267562",
                          "name": "Operator",
                          "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      },
                      {
                        "type": "conversation_part",
                        "id": "97",
                        "part_type": "conversation_attribute_updated_by_admin",
                        "body": null,
                        "created_at": 1719492834,
                        "updated_at": 1719492834,
                        "notified_at": 1719492834,
                        "assigned_to": {},
                        "author": {
                          "type": "bot",
                          "id": "991267562",
                          "name": "Operator",
                          "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 2
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for conversations, you need to send a `POST` request to `https://api.intercom.io/conversations/search`.\n\nThis will accept a query object in the body which will define your filters in order to search for conversations.\n{% admonition type=\"warning\" name=\"Optimizing search queries\" %}\n  Search queries can be complex, so optimizing them can help the performance of your search.\n  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize\n  pagination to limit the number of results returned. The default is `20` results per page and maximum is `150`.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.\n{% /admonition %}\n\n### Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\nThere are some limitations to the amount of multiple's there can be:\n- There's a limit of max 2 nested filters\n- There's a limit of max 15 filters for each AND or OR group\n\n### Accepted Fields\n\nMost keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `\"foorbar\"`).\n\n| Field                                     | Type                                                                                                                                                   |\n| :---------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id                                        | String                                                                                                                                                 |\n| created_at                                | Date (UNIX timestamp)                                                                                                                                  |\n| updated_at                                | Date (UNIX timestamp)                                                                                                                                  |\n| source.type                               | String<br>Accepted fields are `conversation`, `email`, `facebook`, `instagram`, `phone_call`, `phone_switch`, `push`, `sms`, `twitter` and `whatsapp`. |\n| source.id                                 | String                                                                                                                                                 |\n| source.delivered_as                       | String                                                                                                                                                 |\n| source.subject                            | String                                                                                                                                                 |\n| source.body                               | String                                                                                                                                                 |\n| source.author.id                          | String                                                                                                                                                 |\n| source.author.type                        | String                                                                                                                                                 |\n| source.author.name                        | String                                                                                                                                                 |\n| source.author.email                       | String                                                                                                                                                 |\n| source.url                                | String                                                                                                                                                 |\n| contact_ids                               | String                                                                                                                                                 |\n| teammate_ids                              | String                                                                                                                                                 |\n| admin_assignee_id                         | String                                                                                                                                                 |\n| team_assignee_id                          | String                                                                                                                                                 |\n| channel_initiated                         | String                                                                                                                                                 |\n| open                                      | Boolean                                                                                                                                                |\n| read                                      | Boolean                                                                                                                                                |\n| state                                     | String                                                                                                                                                 |\n| waiting_since                             | Date (UNIX timestamp)                                                                                                                                  |\n| snoozed_until                             | Date (UNIX timestamp)                                                                                                                                  |\n| tag_ids                                   | String                                                                                                                                                 |\n| priority                                  | String                                                                                                                                                 |\n| statistics.time_to_assignment             | Integer                                                                                                                                                |\n| statistics.time_to_admin_reply            | Integer                                                                                                                                                |\n| statistics.time_to_first_close            | Integer                                                                                                                                                |\n| statistics.time_to_last_close             | Integer                                                                                                                                                |\n| statistics.median_time_to_reply           | Integer                                                                                                                                                |\n| statistics.first_contact_reply_at         | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.first_assignment_at            | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.first_admin_reply_at           | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.first_close_at                 | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_assignment_at             | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_assignment_admin_reply_at | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_contact_reply_at          | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_admin_reply_at            | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_close_at                  | Date (UNIX timestamp)                                                                                                                                  |\n| statistics.last_closed_by_id              | String                                                                                                                                                 |\n| statistics.count_reopens                  | Integer                                                                                                                                                |\n| statistics.count_assignments              | Integer                                                                                                                                                |\n| statistics.count_conversation_parts       | Integer                                                                                                                                                |\n| conversation_rating.requested_at          | Date (UNIX timestamp)                                                                                                                                  |\n| conversation_rating.replied_at            | Date (UNIX timestamp)                                                                                                                                  |\n| conversation_rating.score                 | Integer                                                                                                                                                |\n| conversation_rating.remark                | String                                                                                                                                                 |\n| conversation_rating.contact_id            | String                                                                                                                                                 |\n| conversation_rating.admin_d               | String                                                                                                                                                 |\n| ai_agent_participated                     | Boolean                                                                                                                                                |\n| ai_agent.resolution_state                 | String                                                                                                                                                 |\n| ai_agent.last_answer_type                 | String                                                                                                                                                 |\n| ai_agent.rating                           | Integer                                                                                                                                                |\n| ai_agent.rating_remark                    | String                                                                                                                                                 |\n| ai_agent.source_type                      | String                                                                                                                                                 |\n| ai_agent.source_title                     | String                                                                                                                                                 |\n\n### Accepted Operators\n\nThe table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`\"=\"`). The operator has to be compatible with the field's type  (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).\n\n| Operator | Valid Types                    | Description                                                  |\n| :------- | :----------------------------- | :----------------------------------------------------------- |\n| =        | All                            | Equals                                                       |\n| !=       | All                            | Doesn't Equal                                                |\n| IN       | All                            | In  Shortcut for `OR` queries  Values most be in Array       |\n| NIN      | All                            | Not In  Shortcut for `OR !` queries  Values must be in Array |\n| >        | Integer  Date (UNIX Timestamp) | Greater (or equal) than                                      |\n| <       | Integer  Date (UNIX Timestamp) | Lower (or equal) than                                        |\n| ~        | String                         | Contains                                                     |\n| !~       | String                         | Doesn't Contain                                              |\n| ^        | String                         | Starts With                                                  |\n| $        | String                         | Ends With                                                    |\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "searchConversations",
          "originalEndpointId": "Conversations.searchConversations",
          "name": "Search conversations",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "search_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "query": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {}
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation.list",
                  "conversations": [
                    {
                      "type": "conversation",
                      "id": "378",
                      "title": null,
                      "created_at": 1719492843,
                      "updated_at": 1719492843,
                      "waiting_since": null,
                      "snoozed_until": null,
                      "open": false,
                      "state": "closed",
                      "read": false,
                      "priority": "not_priority",
                      "admin_assignee_id": null,
                      "team_assignee_id": null,
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "source": {
                        "type": "conversation",
                        "id": "403918266",
                        "delivered_as": "admin_initiated",
                        "subject": "",
                        "body": "<p>this is the message body</p>",
                        "author": {
                          "type": "admin",
                          "id": "991267591",
                          "name": "Ciaran180 Lee",
                          "email": "admin180@email.com"
                        },
                        "attachments": [],
                        "url": null,
                        "redacted": false
                      },
                      "contacts": {
                        "type": "contact.list",
                        "contacts": [
                          {
                            "type": "contact",
                            "id": "667d60ea8a68186f43bafdec",
                            "external_id": "70"
                          }
                        ]
                      },
                      "custom_attributes": {},
                      "linked_objects": {
                        "type": "list",
                        "total_count": 0,
                        "has_more": false,
                        "data": []
                      },
                      "ai_agent_participated": false,
                      "ai_agent": {}
                    }
                  ],
                  "total_count": 1,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 5,
                    "total_pages": 1
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation.list",
                  "conversations": [
                    {
                      "type": "conversation",
                      "id": "378",
                      "title": null,
                      "created_at": 1719492843,
                      "updated_at": 1719492843,
                      "waiting_since": null,
                      "snoozed_until": null,
                      "open": false,
                      "state": "closed",
                      "read": false,
                      "priority": "not_priority",
                      "admin_assignee_id": null,
                      "team_assignee_id": null,
                      "tags": {
                        "type": "tag.list",
                        "tags": []
                      },
                      "source": {
                        "type": "conversation",
                        "id": "403918266",
                        "delivered_as": "admin_initiated",
                        "subject": "",
                        "body": "<p>this is the message body</p>",
                        "author": {
                          "type": "admin",
                          "id": "991267591",
                          "name": "Ciaran180 Lee",
                          "email": "admin180@email.com"
                        },
                        "attachments": [],
                        "url": null,
                        "redacted": false
                      },
                      "contacts": {
                        "type": "contact.list",
                        "contacts": [
                          {
                            "type": "contact",
                            "id": "667d60ea8a68186f43bafdec",
                            "external_id": "70"
                          }
                        ]
                      },
                      "custom_attributes": {},
                      "linked_objects": {
                        "type": "list",
                        "total_count": 0,
                        "has_more": false,
                        "data": []
                      },
                      "ai_agent_participated": false,
                      "ai_agent": {}
                    }
                  ],
                  "total_count": 1,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 5,
                    "total_pages": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "replyConversation",
          "originalEndpointId": "Conversations.replyConversation",
          "name": "Reply to a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "The Intercom provisioned identifier for the conversation or the string \"last\" to reply to the last part of the conversation",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/reply"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "reply_conversation_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "User last conversation reply"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "id": "123 or \"last\""
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "intercom_user_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "intercom_user_id": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "387",
                  "title": null,
                  "created_at": 1719492849,
                  "updated_at": 1719492850,
                  "waiting_since": 1719492850,
                  "snoozed_until": null,
                  "open": true,
                  "state": "open",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918269",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267594",
                      "name": "Ciaran182 Lee",
                      "email": "admin182@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60f18a68186f43bafdf4",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "first_contact_reply": {
                    "created_at": 1719492850,
                    "type": "conversation",
                    "url": null
                  },
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "99",
                        "part_type": "open",
                        "body": "<p>Thanks again :)</p>",
                        "created_at": 1719492850,
                        "updated_at": 1719492850,
                        "notified_at": 1719492850,
                        "assigned_to": {},
                        "author": {
                          "type": "user",
                          "id": "667d60f18a68186f43bafdf4",
                          "name": "Joe Bloggs",
                          "email": "joe@bloggs.com"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "387",
                  "title": null,
                  "created_at": 1719492849,
                  "updated_at": 1719492850,
                  "waiting_since": 1719492850,
                  "snoozed_until": null,
                  "open": true,
                  "state": "open",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918269",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267594",
                      "name": "Ciaran182 Lee",
                      "email": "admin182@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60f18a68186f43bafdf4",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "first_contact_reply": {
                    "created_at": 1719492850,
                    "type": "conversation",
                    "url": null
                  },
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "99",
                        "part_type": "open",
                        "body": "<p>Thanks again :)</p>",
                        "created_at": 1719492850,
                        "updated_at": 1719492850,
                        "notified_at": 1719492850,
                        "assigned_to": {},
                        "author": {
                          "type": "user",
                          "id": "667d60f18a68186f43bafdf4",
                          "name": "Joe Bloggs",
                          "email": "joe@bloggs.com"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "For managing conversations you can:\n- Close a conversation\n- Snooze a conversation to reopen on a future date\n- Open a conversation which is `snoozed` or `closed`\n- Assign a conversation to an admin and/or team.\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "manageConversation",
          "originalEndpointId": "Conversations.manageConversation",
          "name": "Manage a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "The identifier for the conversation as given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/parts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Conversations_manageConversation_Request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "Assign a conversation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "message_type": "close",
                "type": "admin",
                "admin_id": "12345"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "message_type": "close",
                  "type": "admin",
                  "admin_id": "12345"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "394",
                  "title": null,
                  "created_at": 1719492862,
                  "updated_at": 1719492862,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918276",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267608",
                      "name": "Ciaran189 Lee",
                      "email": "admin189@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60fd8a68186f43bafdfb",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "102",
                        "part_type": "close",
                        "body": "<p>Goodbye :)</p>",
                        "created_at": 1719492862,
                        "updated_at": 1719492862,
                        "notified_at": 1719492862,
                        "assigned_to": {},
                        "author": {
                          "type": "admin",
                          "id": "991267608",
                          "name": "Ciaran189 Lee",
                          "email": "admin189@email.com"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "394",
                  "title": null,
                  "created_at": 1719492862,
                  "updated_at": 1719492862,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918276",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267608",
                      "name": "Ciaran189 Lee",
                      "email": "admin189@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d60fd8a68186f43bafdfb",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "102",
                        "part_type": "close",
                        "body": "<p>Goodbye :)</p>",
                        "created_at": 1719492862,
                        "updated_at": 1719492862,
                        "notified_at": 1719492862,
                        "assigned_to": {},
                        "author": {
                          "type": "admin",
                          "id": "991267608",
                          "name": "Ciaran189 Lee",
                          "email": "admin189@email.com"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can let a conversation be automatically assigned following assignment rules.\n{% admonition type=\"attention\" name=\"When using workflows\" %}\nIt is not possible to use this endpoint with Workflows.\n{% /admonition %}\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "autoAssignConversation",
          "originalEndpointId": "Conversations.autoAssignConversation",
          "name": "Run Assignment Rules on a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "The identifier for the conversation as given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/run_assignment_rules"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "Assign a conversation using assignment rules"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "409",
                  "title": null,
                  "created_at": 1719492880,
                  "updated_at": 1719492881,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918285",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267623",
                      "name": "Ciaran197 Lee",
                      "email": "admin197@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61108a68186f43bafe09",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "107",
                        "part_type": "default_assignment",
                        "body": null,
                        "created_at": 1719492881,
                        "updated_at": 1719492881,
                        "notified_at": 1719492881,
                        "assigned_to": {
                          "type": "nobody_admin",
                          "id": null
                        },
                        "author": {
                          "type": "bot",
                          "id": "991267624",
                          "name": "Operator",
                          "email": "operator+this_is_an_id364_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "409",
                  "title": null,
                  "created_at": 1719492880,
                  "updated_at": 1719492881,
                  "waiting_since": null,
                  "snoozed_until": null,
                  "open": false,
                  "state": "closed",
                  "read": false,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918285",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267623",
                      "name": "Ciaran197 Lee",
                      "email": "admin197@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61108a68186f43bafe09",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "107",
                        "part_type": "default_assignment",
                        "body": null,
                        "created_at": 1719492881,
                        "updated_at": 1719492881,
                        "notified_at": 1719492881,
                        "assigned_to": {
                          "type": "nobody_admin",
                          "id": null
                        },
                        "author": {
                          "type": "bot",
                          "id": "991267624",
                          "name": "Operator",
                          "email": "operator+this_is_an_id364_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\n{% admonition type=\"attention\" name=\"Contacts without an email\" %}\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with `role` set to `lead`.\n{% /admonition %}\n\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "attachContactToConversation",
          "originalEndpointId": "Conversations.attachContactToConversation",
          "name": "Attach a contact to a conversation",
          "path": {
            "pathParameters": [
              {
                "description": "The identifier for the conversation as given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/customers"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "attach_contact_to_conversation_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "Attach a contact to a conversation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.\n\n{% admonition type=\"attention\" name=\"Contacts without an email\" %}\nIf you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with `role` set to `lead`.\n{% /admonition %}\n\n",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "detachContactFromConversation",
          "originalEndpointId": "Conversations.detachContactFromConversation",
          "name": "Detach a contact from a group conversation",
          "path": {
            "pathParameters": [
              {
                "description": "The identifier for the conversation as given by Intercom.",
                "key": "conversation_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The identifier for the contact as given by Intercom.",
                "key": "contact_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "conversation_id"
              },
              {
                "type": "literal",
                "value": "/customers/"
              },
              {
                "type": "pathParameter",
                "value": "contact_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "detach_contact_from_conversation_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "Detach a contact from a group conversation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "conversation_id": "123",
                "contact_id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "admin_id": "5017690"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "admin_id": "5017690"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can redact a conversation part or the source message of a conversation (as seen in the source object).\n\n{% admonition type=\"info\" name=\"Redacting parts and messages\" %}\nIf you are redacting a conversation part, it must have a `body`. If you are redacting a source message, it must have been created by a contact. We will return a `conversation_part_not_redactable` error if these criteria are not met.\n{% /admonition %}\n\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "redactConversation",
          "originalEndpointId": "Conversations.redactConversation",
          "name": "Redact a conversation part",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/redact"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "redact_conversation_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "conversation"
              }
            },
            "statusCode": 200,
            "description": "Redact a conversation part"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/redact",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "type": "conversation_part",
                "conversation_id": "19894788788",
                "conversation_part_id": "19381789428"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation_part",
                  "conversation_id": "19894788788",
                  "conversation_part_id": "19381789428"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "471",
                  "title": null,
                  "created_at": 1719492938,
                  "updated_at": 1719492940,
                  "waiting_since": 1719492939,
                  "snoozed_until": null,
                  "open": true,
                  "state": "open",
                  "read": true,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918311",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267657",
                      "name": "Ciaran217 Lee",
                      "email": "admin217@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d614a8a68186f43bafe42",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "first_contact_reply": {
                    "created_at": 1719492939,
                    "type": "conversation",
                    "url": null
                  },
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "115",
                        "part_type": "open",
                        "body": "<p><i>This message was deleted</i></p>",
                        "created_at": 1719492939,
                        "updated_at": 1719492940,
                        "notified_at": 1719492939,
                        "assigned_to": {},
                        "author": {
                          "type": "user",
                          "id": "667d614a8a68186f43bafe42",
                          "name": "Joe Bloggs",
                          "email": "joe@bloggs.com"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": true
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "conversation",
                  "id": "471",
                  "title": null,
                  "created_at": 1719492938,
                  "updated_at": 1719492940,
                  "waiting_since": 1719492939,
                  "snoozed_until": null,
                  "open": true,
                  "state": "open",
                  "read": true,
                  "priority": "not_priority",
                  "admin_assignee_id": null,
                  "team_assignee_id": null,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "source": {
                    "type": "conversation",
                    "id": "403918311",
                    "delivered_as": "admin_initiated",
                    "subject": "",
                    "body": "<p>this is the message body</p>",
                    "author": {
                      "type": "admin",
                      "id": "991267657",
                      "name": "Ciaran217 Lee",
                      "email": "admin217@email.com"
                    },
                    "attachments": [],
                    "url": null,
                    "redacted": false
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d614a8a68186f43bafe42",
                        "external_id": "70"
                      }
                    ]
                  },
                  "custom_attributes": {},
                  "first_contact_reply": {
                    "created_at": 1719492939,
                    "type": "conversation",
                    "url": null
                  },
                  "conversation_parts": {
                    "type": "conversation_part.list",
                    "conversation_parts": [
                      {
                        "type": "conversation_part",
                        "id": "115",
                        "part_type": "open",
                        "body": "<p><i>This message was deleted</i></p>",
                        "created_at": 1719492939,
                        "updated_at": 1719492940,
                        "notified_at": 1719492939,
                        "assigned_to": {},
                        "author": {
                          "type": "user",
                          "id": "667d614a8a68186f43bafe42",
                          "name": "Joe Bloggs",
                          "email": "joe@bloggs.com"
                        },
                        "attachments": [],
                        "external_id": null,
                        "redacted": true
                      }
                    ],
                    "total_count": 1
                  },
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ai_agent_participated": false,
                  "ai_agent": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can convert a conversation to a ticket.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "convertConversationToTicket",
          "originalEndpointId": "Conversations.convertConversationToTicket",
          "name": "Convert a conversation to a ticket",
          "path": {
            "pathParameters": [
              {
                "description": "The id of the conversation to target",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/conversations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/convert"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "convert_conversation_to_ticket_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/conversations/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "ticket_type_id": "1234"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "ticket_type_id": "1234"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "474",
                  "ticket_id": "37",
                  "category": "Customer",
                  "ticket_attributes": {},
                  "ticket_state": "submitted",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "79",
                    "category": "Customer",
                    "name": "my-ticket-type-1",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id404_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719492947,
                    "updated_at": 1719492947
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61518a68186f43bafe45",
                        "external_id": "70"
                      }
                    ]
                  },
                  "admin_assignee_id": "0",
                  "team_assignee_id": "0",
                  "created_at": 1719492945,
                  "updated_at": 1719492947,
                  "open": true,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "117",
                        "part_type": "comment",
                        "body": "<p>Comment for message</p>",
                        "created_at": 1719492945,
                        "updated_at": 1719492945,
                        "author": {
                          "type": "user",
                          "id": "667d61518a68186f43bafe45",
                          "name": "Joe Bloggs",
                          "email": "joe@bloggs.com"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "118",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719492947,
                        "updated_at": 1719492947,
                        "author": {
                          "type": "bot",
                          "id": "991267667",
                          "name": "Operator",
                          "email": "operator+this_is_an_id404_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 2
                  },
                  "is_shared": true,
                  "ticket_state_internal_label": "Submitted",
                  "ticket_state_external_label": "Submitted"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "474",
                  "ticket_id": "37",
                  "category": "Customer",
                  "ticket_attributes": {},
                  "ticket_state": "submitted",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "79",
                    "category": "Customer",
                    "name": "my-ticket-type-1",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id404_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719492947,
                    "updated_at": 1719492947
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61518a68186f43bafe45",
                        "external_id": "70"
                      }
                    ]
                  },
                  "admin_assignee_id": "0",
                  "team_assignee_id": "0",
                  "created_at": 1719492945,
                  "updated_at": 1719492947,
                  "open": true,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "117",
                        "part_type": "comment",
                        "body": "<p>Comment for message</p>",
                        "created_at": 1719492945,
                        "updated_at": 1719492945,
                        "author": {
                          "type": "user",
                          "id": "667d61518a68186f43bafe45",
                          "name": "Joe Bloggs",
                          "email": "joe@bloggs.com"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "118",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719492947,
                        "updated_at": 1719492947,
                        "author": {
                          "type": "bot",
                          "id": "991267667",
                          "name": "Operator",
                          "email": "operator+this_is_an_id404_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 2
                  },
                  "is_shared": true,
                  "ticket_state_internal_label": "Submitted",
                  "ticket_state_external_label": "Submitted"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Data Attributes": {
      "subpackageId": "Data Attributes",
      "name": "Data Attributes",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of all data attributes belonging to a workspace for contacts, companies or conversations.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "lisDataAttributes",
          "originalEndpointId": "Data Attributes.lisDataAttributes",
          "name": "List all data attributes",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/data_attributes"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Specify the data attribute model to return.",
              "key": "model",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DataAttributesGetParametersSchema"
                }
              }
            },
            {
              "description": "Include archived attributes in the list. By default we return only non archived data attributes.",
              "key": "include_archived",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "data_attribute_list"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/data_attributes",
              "pathParameters": {},
              "queryParameters": {
                "model": "company",
                "include_archived": false
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "name",
                      "full_name": "name",
                      "label": "Company name",
                      "description": "The name of a company",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "company_id",
                      "full_name": "company_id",
                      "label": "Company ID",
                      "description": "A number identifying a company",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "last_request_at",
                      "full_name": "last_request_at",
                      "label": "Company last seen",
                      "description": "The last day anyone from a company visited your site or app",
                      "data_type": "date",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "remote_created_at",
                      "full_name": "remote_created_at",
                      "label": "Company created at",
                      "description": "The day a company was added to Intercom",
                      "data_type": "date",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "user_count",
                      "full_name": "user_count",
                      "label": "People",
                      "description": "The number of people in a company",
                      "data_type": "integer",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "session_count",
                      "full_name": "session_count",
                      "label": "Company web sessions",
                      "description": "All visits from anyone in a company to your product's site or app",
                      "data_type": "integer",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "name",
                      "full_name": "plan.name",
                      "label": "Plan",
                      "description": "A specific plan or level within your product that companies have signed up to",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "monthly_spend",
                      "full_name": "monthly_spend",
                      "label": "Monthly Spend",
                      "description": "The monthly revenue you receive from a company",
                      "data_type": "float",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "size",
                      "full_name": "size",
                      "label": "Company size",
                      "description": "The number of people employed in this company, expressed as a single number",
                      "data_type": "integer",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "industry",
                      "full_name": "industry",
                      "label": "Company industry",
                      "description": "The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "website",
                      "full_name": "website",
                      "label": "Company website",
                      "description": "The web address for the company's primary marketing site",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "id": 34,
                      "model": "company",
                      "name": "The One Ring",
                      "full_name": "custom_attributes.The One Ring",
                      "label": "The One Ring",
                      "description": "One ring to rule them all, one ring to find them, One ring to bring them all and in the darkness bind them.",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": true,
                      "archived": false,
                      "created_at": 1719492954,
                      "updated_at": 1719492954,
                      "admin_id": "991267684"
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "id",
                      "full_name": "id",
                      "label": "ID",
                      "description": "The Intercom defined id representing the company",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "created_at",
                      "full_name": "created_at",
                      "label": "Created at",
                      "description": "The time the company was added to Intercom",
                      "data_type": "date",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "updated_at",
                      "full_name": "updated_at",
                      "label": "Updated at",
                      "description": "The last time the company was updated",
                      "data_type": "date",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "id",
                      "full_name": "plan.id",
                      "label": "Plan ID",
                      "description": "The Intercom defined id representing the plan",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "app_id",
                      "full_name": "app_id",
                      "label": "App ID",
                      "description": "The Intercom defined id representing the app",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "data": [
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "name",
                      "full_name": "name",
                      "label": "Company name",
                      "description": "The name of a company",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "company_id",
                      "full_name": "company_id",
                      "label": "Company ID",
                      "description": "A number identifying a company",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "last_request_at",
                      "full_name": "last_request_at",
                      "label": "Company last seen",
                      "description": "The last day anyone from a company visited your site or app",
                      "data_type": "date",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "remote_created_at",
                      "full_name": "remote_created_at",
                      "label": "Company created at",
                      "description": "The day a company was added to Intercom",
                      "data_type": "date",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "user_count",
                      "full_name": "user_count",
                      "label": "People",
                      "description": "The number of people in a company",
                      "data_type": "integer",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "session_count",
                      "full_name": "session_count",
                      "label": "Company web sessions",
                      "description": "All visits from anyone in a company to your product's site or app",
                      "data_type": "integer",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "name",
                      "full_name": "plan.name",
                      "label": "Plan",
                      "description": "A specific plan or level within your product that companies have signed up to",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "monthly_spend",
                      "full_name": "monthly_spend",
                      "label": "Monthly Spend",
                      "description": "The monthly revenue you receive from a company",
                      "data_type": "float",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "size",
                      "full_name": "size",
                      "label": "Company size",
                      "description": "The number of people employed in this company, expressed as a single number",
                      "data_type": "integer",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "industry",
                      "full_name": "industry",
                      "label": "Company industry",
                      "description": "The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "website",
                      "full_name": "website",
                      "label": "Company website",
                      "description": "The web address for the company's primary marketing site",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "id": 34,
                      "model": "company",
                      "name": "The One Ring",
                      "full_name": "custom_attributes.The One Ring",
                      "label": "The One Ring",
                      "description": "One ring to rule them all, one ring to find them, One ring to bring them all and in the darkness bind them.",
                      "data_type": "string",
                      "api_writable": true,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": true,
                      "archived": false,
                      "created_at": 1719492954,
                      "updated_at": 1719492954,
                      "admin_id": "991267684"
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "id",
                      "full_name": "id",
                      "label": "ID",
                      "description": "The Intercom defined id representing the company",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "created_at",
                      "full_name": "created_at",
                      "label": "Created at",
                      "description": "The time the company was added to Intercom",
                      "data_type": "date",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "updated_at",
                      "full_name": "updated_at",
                      "label": "Updated at",
                      "description": "The last time the company was updated",
                      "data_type": "date",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "id",
                      "full_name": "plan.id",
                      "label": "Plan ID",
                      "description": "The Intercom defined id representing the plan",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    },
                    {
                      "type": "data_attribute",
                      "model": "company",
                      "name": "app_id",
                      "full_name": "app_id",
                      "label": "App ID",
                      "description": "The Intercom defined id representing the app",
                      "data_type": "string",
                      "api_writable": false,
                      "messenger_writable": true,
                      "ui_writable": false,
                      "custom": false,
                      "archived": false
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a data attributes for a `contact` or a `company`.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createDataAttribute",
          "originalEndpointId": "Data Attributes.createDataAttribute",
          "name": "Create a data attribute",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/data_attributes"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_data_attribute_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "data_attribute"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/data_attributes",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "name": "My Data Attribute",
                "model": "contact",
                "data_type": "string"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "My Data Attribute",
                  "model": "contact",
                  "data_type": "string"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "data_attribute",
                  "id": 37,
                  "model": "company",
                  "name": "Mithril Shirt",
                  "full_name": "custom_attributes.Mithril Shirt",
                  "label": "Mithril Shirt",
                  "data_type": "string",
                  "api_writable": true,
                  "messenger_writable": false,
                  "ui_writable": false,
                  "custom": true,
                  "archived": false,
                  "created_at": 1719492955,
                  "updated_at": 1719492955,
                  "admin_id": "991267686"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "data_attribute",
                  "id": 37,
                  "model": "company",
                  "name": "Mithril Shirt",
                  "full_name": "custom_attributes.Mithril Shirt",
                  "label": "Mithril Shirt",
                  "data_type": "string",
                  "api_writable": true,
                  "messenger_writable": false,
                  "ui_writable": false,
                  "custom": true,
                  "archived": false,
                  "created_at": 1719492955,
                  "updated_at": 1719492955,
                  "admin_id": "991267686"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "\nYou can update a data attribute.\n\n> 🚧 Updating the data type is not possible\n>\n> It is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.\n",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateDataAttribute",
          "originalEndpointId": "Data Attributes.updateDataAttribute",
          "name": "Update a data attribute",
          "path": {
            "pathParameters": [
              {
                "description": "The data attribute id",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/data_attributes/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_data_attribute_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "data_attribute"
              }
            },
            "statusCode": 200,
            "description": "Successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/data_attributes/",
              "pathParameters": {
                "id": 1
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "data_attribute",
                  "id": 44,
                  "model": "company",
                  "name": "The One Ring",
                  "full_name": "custom_attributes.The One Ring",
                  "label": "The One Ring",
                  "description": "Just a plain old ring",
                  "data_type": "string",
                  "options": [
                    "1-10",
                    "11-20"
                  ],
                  "api_writable": true,
                  "messenger_writable": true,
                  "ui_writable": false,
                  "custom": true,
                  "archived": false,
                  "created_at": 1719492958,
                  "updated_at": 1719492959,
                  "admin_id": "991267693"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "data_attribute",
                  "id": 44,
                  "model": "company",
                  "name": "The One Ring",
                  "full_name": "custom_attributes.The One Ring",
                  "label": "The One Ring",
                  "description": "Just a plain old ring",
                  "data_type": "string",
                  "options": [
                    "1-10",
                    "11-20"
                  ],
                  "api_writable": true,
                  "messenger_writable": true,
                  "ui_writable": false,
                  "custom": true,
                  "archived": false,
                  "created_at": 1719492958,
                  "updated_at": 1719492959,
                  "admin_id": "991267693"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Data Events": {
      "subpackageId": "Data Events",
      "name": "Data Events",
      "endpoints": [
        {
          "auth": true,
          "description": "\n> 🚧\n>\n> Please note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days\n\nThe events belonging to a customer can be listed by sending a GET request to `https://api.intercom.io/events` with a user or lead identifier along with a `type` parameter. The identifier parameter can be one of `user_id`, `email` or `intercom_user_id`. The `type` parameter value must be `user`.\n\n- `https://api.intercom.io/events?type=user&user_id={user_id}`\n- `https://api.intercom.io/events?type=user&email={email}`\n- `https://api.intercom.io/events?type=user&intercom_user_id={id}` (this call can be used to list leads)\n\nThe `email` parameter value should be [url encoded](http://en.wikipedia.org/wiki/Percent-encoding) when sending.\n\nYou can optionally define the result page size as well with the `per_page` parameter.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "lisDataEvents",
          "originalEndpointId": "Data Events.lisDataEvents",
          "name": "List all data events",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/events"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "filter",
              "type": {
                "type": "id",
                "value": "EventsGetParametersSchema"
              }
            },
            {
              "description": "The value must be user",
              "key": "type",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            {
              "description": "summary flag",
              "key": "summary",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "data_event_summary"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/events",
              "pathParameters": {},
              "queryParameters": {
                "filter": {},
                "type": "foo",
                "summary": true
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "event.summary",
                  "email": "user26@email.com",
                  "intercom_user_id": "667d61648a68186f43bafe4b",
                  "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                  "events": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "event.summary",
                  "email": "user26@email.com",
                  "intercom_user_id": "667d61648a68186f43bafe4b",
                  "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                  "events": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "\nYou will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a `Content-Type` of `application/json`.\n\nWhen using the JavaScript API, [adding the code to your app](http://docs.intercom.io/configuring-Intercom/tracking-user-events-in-your-app) makes the Events API available. Once added, you can submit an event using the `trackEvent` method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.\n\nWith the Ruby client you pass a hash describing the event to `Intercom::Event.create`, or call the `track_user` method directly on the current user object (e.g. `user.track_event`).\n\n**NB: For the JSON object types, please note that we do not currently support nested JSON structure.**\n\n| Type            | Description                                                                                                                                                                                                     | Example                                                                           |\n| :-------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------- |\n| String          | The value is a JSON String                                                                                                                                                                                      | `\"source\":\"desktop\"`                                                              |\n| Number          | The value is a JSON Number                                                                                                                                                                                      | `\"load\": 3.67`                                                                    |\n| Date            | The key ends with the String `_date` and the value is a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time), assumed to be in the [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time) timezone. | `\"contact_date\": 1392036272`                                                      |\n| Link            | The value is a HTTP or HTTPS URI.                                                                                                                                                                               | `\"article\": \"https://example.org/ab1de.html\"`                                     |\n| Rich Link       | The value is a JSON object that contains `url` and `value` keys.                                                                                                                                                | `\"article\": {\"url\": \"https://example.org/ab1de.html\", \"value\":\"the dude abides\"}` |\n| Monetary Amount | The value is a JSON object that contains `amount` and `currency` keys. The `amount` key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.          | `\"price\": {\"amount\": 34999, \"currency\": \"eur\"}`                                   |\n\n**Lead Events**\n\nWhen submitting events for Leads, you will need to specify the Lead's `id`.\n\n**Metadata behaviour**\n\n- We currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.\n- It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.\n- There might be up to 24 hrs delay when you send a new metadata for an existing event.\n\n**Event de-duplication**\n\nThe API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is **strongly recommended** to send a second granularity Unix timestamp in the `created_at` field.\n\nDuplicated events are responded to using the normal `202 Accepted` code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.\n\n### HTTP API Responses\n\n- Successful responses to submitted events return `202 Accepted` with an empty body.\n- Unauthorised access will be rejected with a `401 Unauthorized` or `403 Forbidden` response code.\n- Events sent about users that cannot be found will return a `404 Not Found`.\n- Event lists containing duplicate events will have those duplicates ignored.\n- Server errors will return a `500` response code and may contain an error message in the body.\n\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createDataEvent",
          "originalEndpointId": "Data Events.createDataEvent",
          "name": "Submit a data event",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/events"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_data_event_request"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/events",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create event summaries for a user. Event summaries are used to track the number of times an event has occurred, the first time it occurred and the last time it occurred.\n\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "dataEventSummaries",
          "originalEndpointId": "Data Events.dataEventSummaries",
          "name": "Create event summaries",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/events/summaries"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_data_event_summaries_request"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/events/summaries",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Data Export": {
      "subpackageId": "Data Export",
      "name": "Data Export",
      "endpoints": [
        {
          "auth": true,
          "description": "To create your export job, you need to send a `POST` request to the export endpoint `https://api.intercom.io/export/content/data`.\n\nThe only parameters you need to provide are the range of dates that you want exported.\n\n>🚧 Limit of one active job\n>\n> You can only have one active job per workspace. You will receive a HTTP status code of 429 with the message Exceeded rate limit of 1 pending message data export jobs if you attempt to create a second concurrent job.\n\n>❗️ Updated_at not included\n>\n> It should be noted that the timeframe only includes messages sent during the time period and not messages that were only updated during this period. For example, if a message was updated yesterday but sent two days ago, you would need to set the created_at_after date before the message was sent to include that in your retrieval job.\n\n>📘 Date ranges are inclusive\n>\n> Requesting data for 2018-06-01 until 2018-06-30 will get all data for those days including those specified - e.g. 2018-06-01 00:00:00 until 2018-06-30 23:59:99.\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createDataExport",
          "originalEndpointId": "Data Export.createDataExport",
          "name": "Create content data export",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/export/content/data"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_data_exports_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "data_export"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/export/content/data",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "created_at_after": 1527811200,
                "created_at_before": 1527811200
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "created_at_after": 1527811200,
                  "created_at_before": 1527811200
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "status": "pending",
                  "download_expires_at": "",
                  "download_url": ""
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "status": "pending",
                  "download_expires_at": "",
                  "download_url": ""
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can view the status of your job by sending a `GET` request to the URL\n`https://api.intercom.io/export/content/data/{job_identifier}` - the `{job_identifier}` is the value returned in the response when you first created the export job. More on it can be seen in the Export Job Model.\n\n> 🚧 Jobs expire after two days\n> All jobs that have completed processing (and are thus available to download from the provided URL) will have an expiry limit of two days from when the export ob completed. After this, the data will no longer be available.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "getDataExport",
          "originalEndpointId": "Data Export.getDataExport",
          "name": "Show content data export",
          "path": {
            "pathParameters": [
              {
                "description": "job_identifier",
                "key": "job_identifier",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/export/content/data/"
              },
              {
                "type": "pathParameter",
                "value": "job_identifier"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "data_export"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/export/content/data/",
              "pathParameters": {
                "job_identifier": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "status": "pending",
                  "download_expires_at": "",
                  "download_url": ""
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "status": "pending",
                  "download_expires_at": "",
                  "download_url": ""
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can cancel your job",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "cancelDataExport",
          "originalEndpointId": "Data Export.cancelDataExport",
          "name": "Cancel content data export",
          "path": {
            "pathParameters": [
              {
                "description": "job_identifier",
                "key": "job_identifier",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/export/cancel/"
              },
              {
                "type": "pathParameter",
                "value": "job_identifier"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "data_export"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/export/cancel/",
              "pathParameters": {
                "job_identifier": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "status": "canceled",
                  "download_expires_at": "",
                  "download_url": ""
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "status": "canceled",
                  "download_expires_at": "",
                  "download_url": ""
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "When a job has a status of complete, and thus a filled download_url, you can download your data by hitting that provided URL, formatted like so: https://api.intercom.io/download/content/data/xyz1234.\n\nYour exported message data will be streamed continuously back down to you in a gzipped CSV format.\n\n> 📘 Octet header required\n>\n> You will have to specify the header Accept: `application/octet-stream` when hitting this endpoint.\n",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "downloadDataExport",
          "originalEndpointId": "Data Export.downloadDataExport",
          "name": "Download content data export",
          "path": {
            "pathParameters": [
              {
                "description": "job_identifier",
                "key": "job_identifier",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/download/content/data/"
              },
              {
                "type": "pathParameter",
                "value": "job_identifier"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/download/content/data/",
              "pathParameters": {
                "job_identifier": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Messages": {
      "subpackageId": "Messages",
      "name": "Messages",
      "endpoints": [
        {
          "auth": true,
          "description": "You can create a message that has been initiated by an admin. The conversation can be either an in-app message or an email.\n\n> 🚧 Sending for visitors\n>\n> There can be a short delay between when a contact is created and when a contact becomes available to be messaged through the API. A 404 Not Found error will be returned in this case.\n\nThis will return the Message model that has been created.\n\n> 🚧 Retrieving Associated Conversations\n>\n> As this is a message, there will be no conversation present until the contact responds. Once they do, you will have to search for a contact's conversations with the id of the message.\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createMessage",
          "originalEndpointId": "Messages.createMessage",
          "name": "Create a message",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/messages"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_message_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "message"
              }
            },
            "statusCode": 200,
            "description": "admin message created"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/messages",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "user_message",
                  "id": "403918316",
                  "created_at": 1719492969,
                  "body": "heyy",
                  "message_type": "inapp",
                  "conversation_id": "476"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "user_message",
                  "id": "403918316",
                  "created_at": 1719492969,
                  "body": "heyy",
                  "message_type": "inapp",
                  "conversation_id": "476"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "News": {
      "subpackageId": "News",
      "name": "News",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of all news items",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listNewsItems",
          "originalEndpointId": "News.listNewsItems",
          "name": "List all news items",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/news_items"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "paginated_response"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/news_items",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1
                  },
                  "total_count": 2,
                  "data": [
                    {
                      "type": "news-item",
                      "id": "29",
                      "workspace_id": "this_is_an_id494_that_should_be_at_least_",
                      "title": "We have news",
                      "body": "<p>Hello there,</p>",
                      "sender_id": 991267725,
                      "state": "draft",
                      "newsfeed_assignments": [],
                      "labels": [],
                      "cover_image_url": null,
                      "reactions": [
                        null,
                        null,
                        null,
                        null
                      ],
                      "deliver_silently": false,
                      "created_at": 1719492976,
                      "updated_at": 1719492976
                    },
                    {
                      "type": "news-item",
                      "id": "30",
                      "workspace_id": "this_is_an_id494_that_should_be_at_least_",
                      "title": "We have news",
                      "body": "<p>Hello there,</p>",
                      "sender_id": 991267727,
                      "state": "draft",
                      "newsfeed_assignments": [],
                      "labels": [],
                      "cover_image_url": null,
                      "reactions": [
                        null,
                        null,
                        null,
                        null
                      ],
                      "deliver_silently": false,
                      "created_at": 1719492976,
                      "updated_at": 1719492976
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1
                  },
                  "total_count": 2,
                  "data": [
                    {
                      "type": "news-item",
                      "id": "29",
                      "workspace_id": "this_is_an_id494_that_should_be_at_least_",
                      "title": "We have news",
                      "body": "<p>Hello there,</p>",
                      "sender_id": 991267725,
                      "state": "draft",
                      "newsfeed_assignments": [],
                      "labels": [],
                      "cover_image_url": null,
                      "reactions": [
                        null,
                        null,
                        null,
                        null
                      ],
                      "deliver_silently": false,
                      "created_at": 1719492976,
                      "updated_at": 1719492976
                    },
                    {
                      "type": "news-item",
                      "id": "30",
                      "workspace_id": "this_is_an_id494_that_should_be_at_least_",
                      "title": "We have news",
                      "body": "<p>Hello there,</p>",
                      "sender_id": 991267727,
                      "state": "draft",
                      "newsfeed_assignments": [],
                      "labels": [],
                      "cover_image_url": null,
                      "reactions": [
                        null,
                        null,
                        null,
                        null
                      ],
                      "deliver_silently": false,
                      "created_at": 1719492976,
                      "updated_at": 1719492976
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a news item",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createNewsItem",
          "originalEndpointId": "News.createNewsItem",
          "name": "Create a news item",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/news_items"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "news_item_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "news_item"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/news_items",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "title": "Halloween is here!",
                "sender_id": 123
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "Halloween is here!",
                  "sender_id": 123
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "news-item",
                  "id": "33",
                  "workspace_id": "this_is_an_id498_that_should_be_at_least_",
                  "title": "Halloween is here!",
                  "body": "<p>New costumes in store for this spooky season</p>",
                  "sender_id": 991267734,
                  "state": "live",
                  "newsfeed_assignments": [
                    {
                      "newsfeed_id": 53,
                      "published_at": 1664638214
                    }
                  ],
                  "labels": [
                    "New",
                    "Product",
                    "Update"
                  ],
                  "cover_image_url": null,
                  "reactions": [
                    "😆",
                    "😅"
                  ],
                  "deliver_silently": true,
                  "created_at": 1719492978,
                  "updated_at": 1719492978
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "news-item",
                  "id": "33",
                  "workspace_id": "this_is_an_id498_that_should_be_at_least_",
                  "title": "Halloween is here!",
                  "body": "<p>New costumes in store for this spooky season</p>",
                  "sender_id": 991267734,
                  "state": "live",
                  "newsfeed_assignments": [
                    {
                      "newsfeed_id": 53,
                      "published_at": 1664638214
                    }
                  ],
                  "labels": [
                    "New",
                    "Product",
                    "Update"
                  ],
                  "cover_image_url": null,
                  "reactions": [
                    "😆",
                    "😅"
                  ],
                  "deliver_silently": true,
                  "created_at": 1719492978,
                  "updated_at": 1719492978
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single news item.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveNewsItem",
          "originalEndpointId": "News.retrieveNewsItem",
          "name": "Retrieve a news item",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the news item which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/news_items/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "news_item"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/news_items/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "news-item",
                  "id": "34",
                  "workspace_id": "this_is_an_id502_that_should_be_at_least_",
                  "title": "We have news",
                  "body": "<p>Hello there,</p>",
                  "sender_id": 991267737,
                  "state": "live",
                  "newsfeed_assignments": [
                    {
                      "newsfeed_id": 55,
                      "published_at": 1719492980
                    }
                  ],
                  "labels": [],
                  "cover_image_url": null,
                  "reactions": [
                    null,
                    null,
                    null,
                    null
                  ],
                  "deliver_silently": false,
                  "created_at": 1719492979,
                  "updated_at": 1719492979
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "news-item",
                  "id": "34",
                  "workspace_id": "this_is_an_id502_that_should_be_at_least_",
                  "title": "We have news",
                  "body": "<p>Hello there,</p>",
                  "sender_id": 991267737,
                  "state": "live",
                  "newsfeed_assignments": [
                    {
                      "newsfeed_id": 55,
                      "published_at": 1719492980
                    }
                  ],
                  "labels": [],
                  "cover_image_url": null,
                  "reactions": [
                    null,
                    null,
                    null,
                    null
                  ],
                  "deliver_silently": false,
                  "created_at": 1719492979,
                  "updated_at": 1719492979
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateNewsItem",
          "originalEndpointId": "News.updateNewsItem",
          "name": "Update a news item",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the news item which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/news_items/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "news_item_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "news_item"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/news_items/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "title": "Halloween is here!",
                "sender_id": 123
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "Halloween is here!",
                  "sender_id": 123
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "news-item",
                  "id": "37",
                  "workspace_id": "this_is_an_id508_that_should_be_at_least_",
                  "title": "Christmas is here!",
                  "body": "<p>New gifts in store for the jolly season</p>",
                  "sender_id": 991267745,
                  "state": "live",
                  "newsfeed_assignments": [],
                  "labels": [],
                  "cover_image_url": null,
                  "reactions": [
                    "😝",
                    "😂"
                  ],
                  "deliver_silently": false,
                  "created_at": 1719492982,
                  "updated_at": 1719492982
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "news-item",
                  "id": "37",
                  "workspace_id": "this_is_an_id508_that_should_be_at_least_",
                  "title": "Christmas is here!",
                  "body": "<p>New gifts in store for the jolly season</p>",
                  "sender_id": 991267745,
                  "state": "live",
                  "newsfeed_assignments": [],
                  "labels": [],
                  "cover_image_url": null,
                  "reactions": [
                    "😝",
                    "😂"
                  ],
                  "deliver_silently": false,
                  "created_at": 1719492982,
                  "updated_at": 1719492982
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can delete a single news item.",
          "method": "DELETE",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "deleteNewsItem",
          "originalEndpointId": "News.deleteNewsItem",
          "name": "Delete a news item",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the news item which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/news_items/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "deleted_object"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/news_items/",
              "pathParameters": {
                "id": 123
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "40",
                  "object": "news-item",
                  "deleted": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "40",
                  "object": "news-item",
                  "deleted": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of all news items that are live on a given newsfeed",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listLiveNewsfeedItems",
          "originalEndpointId": "News.listLiveNewsfeedItems",
          "name": "List all live newsfeed items",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the news feed item which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/newsfeeds/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/items"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "paginated_response"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/newsfeeds/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 0
                  },
                  "total_count": 0,
                  "data": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 20,
                    "total_pages": 0
                  },
                  "total_count": 0,
                  "data": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch a list of all newsfeeds",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listNewsfeeds",
          "originalEndpointId": "News.listNewsfeeds",
          "name": "List all newsfeeds",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/newsfeeds"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "paginated_response"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/newsfeeds",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1
                  },
                  "total_count": 2,
                  "data": [
                    {
                      "id": "68",
                      "type": "newsfeed",
                      "name": "Visitor Feed",
                      "created_at": 1719492987,
                      "updated_at": 1719492987
                    },
                    {
                      "id": "69",
                      "type": "newsfeed",
                      "name": "Visitor Feed",
                      "created_at": 1719492987,
                      "updated_at": 1719492987
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list",
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 10,
                    "total_pages": 1
                  },
                  "total_count": 2,
                  "data": [
                    {
                      "id": "68",
                      "type": "newsfeed",
                      "name": "Visitor Feed",
                      "created_at": 1719492987,
                      "updated_at": 1719492987
                    },
                    {
                      "id": "69",
                      "type": "newsfeed",
                      "name": "Visitor Feed",
                      "created_at": 1719492987,
                      "updated_at": 1719492987
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single newsfeed",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveNewsfeed",
          "originalEndpointId": "News.retrieveNewsfeed",
          "name": "Retrieve a newsfeed",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the news feed item which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/news/newsfeeds/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "newsfeed"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/news/newsfeeds/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "72",
                  "type": "newsfeed",
                  "name": "Visitor Feed",
                  "created_at": 1719492988,
                  "updated_at": 1719492988
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "72",
                  "type": "newsfeed",
                  "name": "Visitor Feed",
                  "created_at": 1719492988,
                  "updated_at": 1719492988
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Segments": {
      "subpackageId": "Segments",
      "name": "Segments",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch a list of all segments.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listSegments",
          "originalEndpointId": "Segments.listSegments",
          "name": "List all segments",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/segments"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "It includes the count of contacts that belong to each segment.",
              "key": "include_count",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "segment_list"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/segments",
              "pathParameters": {},
              "queryParameters": {
                "include_count": true
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "segment.list",
                  "segments": [
                    {
                      "type": "segment",
                      "id": "667d617f8a68186f43bafe5b",
                      "name": "John segment",
                      "created_at": 1719492991,
                      "updated_at": 1719492991,
                      "person_type": "user"
                    },
                    {
                      "type": "segment",
                      "id": "667d617f8a68186f43bafe5c",
                      "name": "Jane segment",
                      "created_at": 1719492991,
                      "updated_at": 1719492991,
                      "person_type": "user"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "segment.list",
                  "segments": [
                    {
                      "type": "segment",
                      "id": "667d617f8a68186f43bafe5b",
                      "name": "John segment",
                      "created_at": 1719492991,
                      "updated_at": 1719492991,
                      "person_type": "user"
                    },
                    {
                      "type": "segment",
                      "id": "667d617f8a68186f43bafe5c",
                      "name": "Jane segment",
                      "created_at": 1719492991,
                      "updated_at": 1719492991,
                      "person_type": "user"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single segment.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveSegment",
          "originalEndpointId": "Segments.retrieveSegment",
          "name": "Retrieve a segment",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identified of a given segment.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/segments/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "segment"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/segments/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "segment",
                  "id": "667d61808a68186f43bafe5f",
                  "name": "John segment",
                  "created_at": 1719492992,
                  "updated_at": 1719492992,
                  "person_type": "user"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "segment",
                  "id": "667d61808a68186f43bafe5f",
                  "name": "John segment",
                  "created_at": 1719492992,
                  "updated_at": 1719492992,
                  "person_type": "user"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Switch": {
      "subpackageId": "Switch",
      "name": "Switch",
      "endpoints": [
        {
          "auth": true,
          "description": "You can use the API to deflect phone calls to the Intercom Messenger.\nCalling this endpoint will send an SMS with a link to the Messenger to the phone number specified.\n\nIf custom attributes are specified, they will be added to the user or lead's custom data attributes.\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createPhoneSwitch",
          "originalEndpointId": "Switch.createPhoneSwitch",
          "name": "Create a phone Switch",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/phone_call_redirects"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_phone_switch_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "phone_switch"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/phone_call_redirects",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "phone": "+1 1234567890"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "phone": "+1 1234567890"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "phone_call_redirect"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "phone_call_redirect"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Teams": {
      "subpackageId": "Teams",
      "name": "Teams",
      "endpoints": [
        {
          "auth": true,
          "description": "This will return a list of team objects for the App.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listTeams",
          "originalEndpointId": "Teams.listTeams",
          "name": "List all teams",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/teams"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "team_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/teams",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "team.list",
                  "teams": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "team.list",
                  "teams": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single team, containing an array of admins that belong to this team.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveTeam",
          "originalEndpointId": "Teams.retrieveTeam",
          "name": "Retrieve a team",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier of a given team.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/teams/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "team"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/teams/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "team",
                  "id": "991267802",
                  "name": "team 1",
                  "admin_ids": []
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "team",
                  "id": "991267802",
                  "name": "team 1",
                  "admin_ids": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Ticket Type Attributes": {
      "subpackageId": "Ticket Type Attributes",
      "name": "Ticket Type Attributes",
      "endpoints": [
        {
          "auth": true,
          "description": "You can create a new attribute for a ticket type.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createTicketTypeAttribute",
          "originalEndpointId": "Ticket Type Attributes.createTicketTypeAttribute",
          "name": "Create a new attribute for a ticket type",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the ticket type which is given by Intercom.",
                "key": "ticket_type_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/ticket_types/"
              },
              {
                "type": "pathParameter",
                "value": "ticket_type_id"
              },
              {
                "type": "literal",
                "value": "/attributes"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_ticket_type_attribute_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_type_attribute"
              }
            },
            "statusCode": 200,
            "description": "Ticket Type Attribute created"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/ticket_types/",
              "pathParameters": {
                "ticket_type_id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "name": "Bug Priority",
                "description": "Priority level of the bug",
                "data_type": "string"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "Bug Priority",
                  "description": "Priority level of the bug",
                  "data_type": "string"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket_type_attribute",
                  "id": "210",
                  "workspace_id": "this_is_an_id600_that_should_be_at_least_",
                  "name": "Attribute Title",
                  "description": "Attribute Description",
                  "data_type": "string",
                  "input_options": {
                    "multiline": false
                  },
                  "order": 2,
                  "required_to_create": false,
                  "required_to_create_for_contacts": false,
                  "visible_on_create": true,
                  "visible_to_contacts": true,
                  "default": false,
                  "ticket_type_id": 81,
                  "archived": false,
                  "created_at": 1719493013,
                  "updated_at": 1719493013
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket_type_attribute",
                  "id": "210",
                  "workspace_id": "this_is_an_id600_that_should_be_at_least_",
                  "name": "Attribute Title",
                  "description": "Attribute Description",
                  "data_type": "string",
                  "input_options": {
                    "multiline": false
                  },
                  "order": 2,
                  "required_to_create": false,
                  "required_to_create_for_contacts": false,
                  "visible_on_create": true,
                  "visible_to_contacts": true,
                  "default": false,
                  "ticket_type_id": 81,
                  "archived": false,
                  "created_at": 1719493013,
                  "updated_at": 1719493013
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can update an existing attribute for a ticket type.",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateTicketTypeAttribute",
          "originalEndpointId": "Ticket Type Attributes.updateTicketTypeAttribute",
          "name": "Update an existing attribute for a ticket type",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the ticket type which is given by Intercom.",
                "key": "ticket_type_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              },
              {
                "description": "The unique identifier for the ticket type attribute which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/ticket_types/"
              },
              {
                "type": "pathParameter",
                "value": "ticket_type_id"
              },
              {
                "type": "literal",
                "value": "/attributes/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_ticket_type_attribute_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_type_attribute"
              }
            },
            "statusCode": 200,
            "description": "Ticket Type Attribute updated"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/ticket_types/",
              "pathParameters": {
                "ticket_type_id": "foo",
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket_type_attribute",
                  "id": "215",
                  "workspace_id": "this_is_an_id604_that_should_be_at_least_",
                  "name": "name",
                  "description": "New Attribute Description",
                  "data_type": "string",
                  "order": 0,
                  "required_to_create": false,
                  "required_to_create_for_contacts": false,
                  "visible_on_create": false,
                  "visible_to_contacts": false,
                  "default": false,
                  "ticket_type_id": 83,
                  "archived": false,
                  "created_at": 1719493013,
                  "updated_at": 1719493014
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket_type_attribute",
                  "id": "215",
                  "workspace_id": "this_is_an_id604_that_should_be_at_least_",
                  "name": "name",
                  "description": "New Attribute Description",
                  "data_type": "string",
                  "order": 0,
                  "required_to_create": false,
                  "required_to_create_for_contacts": false,
                  "visible_on_create": false,
                  "visible_to_contacts": false,
                  "default": false,
                  "ticket_type_id": 83,
                  "archived": false,
                  "created_at": 1719493013,
                  "updated_at": 1719493014
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Ticket Types": {
      "subpackageId": "Ticket Types",
      "name": "Ticket Types",
      "endpoints": [
        {
          "auth": true,
          "description": "You can get a list of all ticket types for a workspace.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "listTicketTypes",
          "originalEndpointId": "Ticket Types.listTicketTypes",
          "name": "List all ticket types",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/ticket_types"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_type_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/ticket_types",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "list"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "list"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a new ticket type.\n> 📘 Creating ticket types.\n>\n> Every ticket type will be created with two default attributes: _default_title_ and _default_description_.\n> For the `icon` propery, use an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createTicketType",
          "originalEndpointId": "Ticket Types.createTicketType",
          "name": "Create a ticket type",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/ticket_types"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_ticket_type_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_type"
              }
            },
            "statusCode": 200,
            "description": "Ticket type created"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/ticket_types",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "name": "Bug"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "Bug"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket_type",
                  "id": "88",
                  "category": "Customer",
                  "name": "Customer Issue",
                  "description": "Customer Report Template",
                  "icon": "🎟️",
                  "workspace_id": "this_is_an_id612_that_should_be_at_least_",
                  "ticket_type_attributes": {
                    "type": "list"
                  },
                  "archived": false,
                  "created_at": 1719493016,
                  "updated_at": 1719493016
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket_type",
                  "id": "88",
                  "category": "Customer",
                  "name": "Customer Issue",
                  "description": "Customer Report Template",
                  "icon": "🎟️",
                  "workspace_id": "this_is_an_id612_that_should_be_at_least_",
                  "ticket_type_attributes": {
                    "type": "list"
                  },
                  "archived": false,
                  "created_at": 1719493016,
                  "updated_at": 1719493016
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single ticket type.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "getTicketType",
          "originalEndpointId": "Ticket Types.getTicketType",
          "name": "Retrieve a ticket type",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the ticket type which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/ticket_types/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_type"
              }
            },
            "statusCode": 200,
            "description": "Ticket type found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/ticket_types/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket_type",
                  "id": "90",
                  "category": "Customer",
                  "name": "Bug Report",
                  "description": "Bug Report Template",
                  "icon": "🎟️",
                  "workspace_id": "this_is_an_id616_that_should_be_at_least_",
                  "ticket_type_attributes": {
                    "type": "list"
                  },
                  "archived": false,
                  "created_at": 1719493017,
                  "updated_at": 1719493017
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket_type",
                  "id": "90",
                  "category": "Customer",
                  "name": "Bug Report",
                  "description": "Bug Report Template",
                  "icon": "🎟️",
                  "workspace_id": "this_is_an_id616_that_should_be_at_least_",
                  "ticket_type_attributes": {
                    "type": "list"
                  },
                  "archived": false,
                  "created_at": 1719493017,
                  "updated_at": 1719493017
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "\nYou can update a ticket type.\n\n> 📘 Updating a ticket type.\n>\n> For the `icon` propery, use an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)\n",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateTicketType",
          "originalEndpointId": "Ticket Types.updateTicketType",
          "name": "Update a ticket type",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the ticket type which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/ticket_types/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_ticket_type_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_type"
              }
            },
            "statusCode": 200,
            "description": "Ticket type updated"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/ticket_types/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket_type",
                  "id": "92",
                  "category": "Customer",
                  "name": "Bug Report 2",
                  "description": "Bug Report Template",
                  "icon": "🎟️",
                  "workspace_id": "this_is_an_id620_that_should_be_at_least_",
                  "ticket_type_attributes": {
                    "type": "list"
                  },
                  "archived": false,
                  "created_at": 1719493018,
                  "updated_at": 1719493018
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket_type",
                  "id": "92",
                  "category": "Customer",
                  "name": "Bug Report 2",
                  "description": "Bug Report Template",
                  "icon": "🎟️",
                  "workspace_id": "this_is_an_id620_that_should_be_at_least_",
                  "ticket_type_attributes": {
                    "type": "list"
                  },
                  "archived": false,
                  "created_at": 1719493018,
                  "updated_at": 1719493018
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Tickets": {
      "subpackageId": "Tickets",
      "name": "Tickets",
      "endpoints": [
        {
          "auth": true,
          "description": "You can reply to a ticket with a message from an admin or on behalf of a contact, or with a note for admins.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "replyTicket",
          "originalEndpointId": "Tickets.replyTicket",
          "name": "Reply to a ticket",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tickets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": "/reply"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Tickets_replyTicket_Request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_reply"
              }
            },
            "statusCode": 200,
            "description": "Admin quick_reply reply"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tickets/",
              "pathParameters": {
                "id": "123"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "intercom_user_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "intercom_user_id": "foo"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket_part",
                  "id": "122",
                  "part_type": "note",
                  "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
                  "created_at": 1719493024,
                  "updated_at": 1719493024,
                  "author": {
                    "type": "admin",
                    "id": "991267829",
                    "name": "Ciaran375 Lee",
                    "email": "admin375@email.com"
                  },
                  "attachments": [],
                  "redacted": false
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket_part",
                  "id": "122",
                  "part_type": "note",
                  "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>",
                  "created_at": 1719493024,
                  "updated_at": 1719493024,
                  "author": {
                    "type": "admin",
                    "id": "991267829",
                    "name": "Ciaran375 Lee",
                    "email": "admin375@email.com"
                  },
                  "attachments": [],
                  "redacted": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can create a new ticket.",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "createTicket",
          "originalEndpointId": "Tickets.createTicket",
          "name": "Create a ticket",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tickets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "create_ticket_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tickets",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "ticket_type_id": "1234",
                "contacts": [
                  {}
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "ticket_type_id": "1234",
                  "contacts": [
                    {}
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "489",
                  "ticket_id": "48",
                  "category": "Back-office",
                  "ticket_attributes": {
                    "_default_title_": "example",
                    "_default_description_": "there is a problem"
                  },
                  "ticket_state": "submitted",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "106",
                    "category": "Back-office",
                    "name": "my-ticket-type-15",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id648_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719493047,
                    "updated_at": 1719493047
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61b78a68186f43bafe8d",
                        "external_id": "70"
                      }
                    ]
                  },
                  "admin_assignee_id": "0",
                  "team_assignee_id": "0",
                  "created_at": 1719493048,
                  "updated_at": 1719493048,
                  "open": true,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "125",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719493048,
                        "updated_at": 1719493048,
                        "author": {
                          "type": "bot",
                          "id": "991267871",
                          "name": "Operator",
                          "email": "operator+this_is_an_id648_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "is_shared": false,
                  "ticket_state_internal_label": "Submitted",
                  "ticket_state_external_label": "Submitted"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "489",
                  "ticket_id": "48",
                  "category": "Back-office",
                  "ticket_attributes": {
                    "_default_title_": "example",
                    "_default_description_": "there is a problem"
                  },
                  "ticket_state": "submitted",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "106",
                    "category": "Back-office",
                    "name": "my-ticket-type-15",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id648_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719493047,
                    "updated_at": 1719493047
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61b78a68186f43bafe8d",
                        "external_id": "70"
                      }
                    ]
                  },
                  "admin_assignee_id": "0",
                  "team_assignee_id": "0",
                  "created_at": 1719493048,
                  "updated_at": 1719493048,
                  "open": true,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "125",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719493048,
                        "updated_at": 1719493048,
                        "author": {
                          "type": "bot",
                          "id": "991267871",
                          "name": "Operator",
                          "email": "operator+this_is_an_id648_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "is_shared": false,
                  "ticket_state_internal_label": "Submitted",
                  "ticket_state_external_label": "Submitted"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can fetch the details of a single ticket.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "getTicket",
          "originalEndpointId": "Tickets.getTicket",
          "name": "Retrieve a ticket",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the ticket which is given by Intercom.",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tickets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket"
              }
            },
            "statusCode": 200,
            "description": "Ticket found"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tickets/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "493",
                  "ticket_id": "52",
                  "category": "Back-office",
                  "ticket_attributes": {
                    "_default_title_": "attribute_value",
                    "_default_description_": null
                  },
                  "ticket_state": "submitted",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "112",
                    "category": "Back-office",
                    "name": "my-ticket-type-21",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id660_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719493060,
                    "updated_at": 1719493060
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61c48a68186f43bafe91",
                        "external_id": "038050f6-d917-4b9d-89cb-539b1d371172"
                      }
                    ]
                  },
                  "admin_assignee_id": "0",
                  "team_assignee_id": "0",
                  "created_at": 1719493061,
                  "updated_at": 1719493061,
                  "open": true,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "134",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719493061,
                        "updated_at": 1719493061,
                        "author": {
                          "type": "admin",
                          "id": "991267912",
                          "name": "Ciaran445 Lee",
                          "email": "admin445@email.com"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "is_shared": false,
                  "ticket_state_internal_label": "Submitted",
                  "ticket_state_external_label": "Submitted"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "493",
                  "ticket_id": "52",
                  "category": "Back-office",
                  "ticket_attributes": {
                    "_default_title_": "attribute_value",
                    "_default_description_": null
                  },
                  "ticket_state": "submitted",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "112",
                    "category": "Back-office",
                    "name": "my-ticket-type-21",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id660_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719493060,
                    "updated_at": 1719493060
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61c48a68186f43bafe91",
                        "external_id": "038050f6-d917-4b9d-89cb-539b1d371172"
                      }
                    ]
                  },
                  "admin_assignee_id": "0",
                  "team_assignee_id": "0",
                  "created_at": 1719493061,
                  "updated_at": 1719493061,
                  "open": true,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "134",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719493061,
                        "updated_at": 1719493061,
                        "author": {
                          "type": "admin",
                          "id": "991267912",
                          "name": "Ciaran445 Lee",
                          "email": "admin445@email.com"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 1
                  },
                  "is_shared": false,
                  "ticket_state_internal_label": "Submitted",
                  "ticket_state_external_label": "Submitted"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can update a ticket.",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateTicket",
          "originalEndpointId": "Tickets.updateTicket",
          "name": "Update a ticket",
          "path": {
            "pathParameters": [
              {
                "description": "The unique identifier for the ticket which is given by Intercom",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tickets/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_ticket_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket"
              }
            },
            "statusCode": 200,
            "description": "Successful response"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tickets/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "490",
                  "ticket_id": "49",
                  "category": "Back-office",
                  "ticket_attributes": {
                    "_default_title_": "example",
                    "_default_description_": "there is a problem"
                  },
                  "ticket_state": "in_progress",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "108",
                    "category": "Back-office",
                    "name": "my-ticket-type-17",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719493050,
                    "updated_at": 1719493050
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61bb8a68186f43bafe8e",
                        "external_id": "cd63b6b5-ea75-4ad9-b72c-9d7a647baf08"
                      }
                    ]
                  },
                  "admin_assignee_id": "991267885",
                  "team_assignee_id": "0",
                  "created_at": 1719493051,
                  "updated_at": 1719493054,
                  "open": true,
                  "snoozed_until": 1719590400,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "126",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719493051,
                        "updated_at": 1719493051,
                        "author": {
                          "type": "admin",
                          "id": "991267883",
                          "name": "Ciaran419 Lee",
                          "email": "admin419@email.com"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "127",
                        "part_type": "ticket_attribute_updated_by_admin",
                        "created_at": 1719493053,
                        "updated_at": 1719493053,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "128",
                        "part_type": "ticket_attribute_updated_by_admin",
                        "created_at": 1719493053,
                        "updated_at": 1719493053,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "129",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "in_progress",
                        "created_at": 1719493053,
                        "updated_at": 1719493053,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "130",
                        "part_type": "assignment",
                        "created_at": 1719493054,
                        "updated_at": 1719493054,
                        "assigned_to": {
                          "type": "admin",
                          "id": "991267885"
                        },
                        "author": {
                          "type": "admin",
                          "id": "991267883",
                          "name": "Ciaran419 Lee",
                          "email": "admin419@email.com"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "131",
                        "part_type": "snoozed",
                        "created_at": 1719493054,
                        "updated_at": 1719493054,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 6
                  },
                  "is_shared": false,
                  "ticket_state_internal_label": "In progress",
                  "ticket_state_external_label": "In progress"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket",
                  "id": "490",
                  "ticket_id": "49",
                  "category": "Back-office",
                  "ticket_attributes": {
                    "_default_title_": "example",
                    "_default_description_": "there is a problem"
                  },
                  "ticket_state": "in_progress",
                  "ticket_type": {
                    "type": "ticket_type",
                    "id": "108",
                    "category": "Back-office",
                    "name": "my-ticket-type-17",
                    "description": "my ticket type description is awesome.",
                    "icon": "🦁",
                    "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                    "ticket_type_attributes": {
                      "type": "list"
                    },
                    "archived": false,
                    "created_at": 1719493050,
                    "updated_at": 1719493050
                  },
                  "contacts": {
                    "type": "contact.list",
                    "contacts": [
                      {
                        "type": "contact",
                        "id": "667d61bb8a68186f43bafe8e",
                        "external_id": "cd63b6b5-ea75-4ad9-b72c-9d7a647baf08"
                      }
                    ]
                  },
                  "admin_assignee_id": "991267885",
                  "team_assignee_id": "0",
                  "created_at": 1719493051,
                  "updated_at": 1719493054,
                  "open": true,
                  "snoozed_until": 1719590400,
                  "linked_objects": {
                    "type": "list",
                    "total_count": 0,
                    "has_more": false,
                    "data": []
                  },
                  "ticket_parts": {
                    "type": "ticket_part.list",
                    "ticket_parts": [
                      {
                        "type": "ticket_part",
                        "id": "126",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "submitted",
                        "created_at": 1719493051,
                        "updated_at": 1719493051,
                        "author": {
                          "type": "admin",
                          "id": "991267883",
                          "name": "Ciaran419 Lee",
                          "email": "admin419@email.com"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "127",
                        "part_type": "ticket_attribute_updated_by_admin",
                        "created_at": 1719493053,
                        "updated_at": 1719493053,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "128",
                        "part_type": "ticket_attribute_updated_by_admin",
                        "created_at": 1719493053,
                        "updated_at": 1719493053,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "129",
                        "part_type": "ticket_state_updated_by_admin",
                        "previous_ticket_state": "submitted",
                        "ticket_state": "in_progress",
                        "created_at": 1719493053,
                        "updated_at": 1719493053,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "130",
                        "part_type": "assignment",
                        "created_at": 1719493054,
                        "updated_at": 1719493054,
                        "assigned_to": {
                          "type": "admin",
                          "id": "991267885"
                        },
                        "author": {
                          "type": "admin",
                          "id": "991267883",
                          "name": "Ciaran419 Lee",
                          "email": "admin419@email.com"
                        },
                        "attachments": [],
                        "redacted": false
                      },
                      {
                        "type": "ticket_part",
                        "id": "131",
                        "part_type": "snoozed",
                        "created_at": 1719493054,
                        "updated_at": 1719493054,
                        "author": {
                          "type": "bot",
                          "id": "991267884",
                          "name": "Operator",
                          "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"
                        },
                        "attachments": [],
                        "redacted": false
                      }
                    ],
                    "total_count": 6
                  },
                  "is_shared": false,
                  "ticket_state_internal_label": "In progress",
                  "ticket_state_external_label": "In progress"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can search for multiple tickets by the value of their attributes in order to fetch exactly which ones you want.\n\nTo search for tickets, you send a `POST` request to `https://api.intercom.io/tickets/search`.\n\nThis will accept a query object in the body which will define your filters.\n{% admonition type=\"warning\" name=\"Optimizing search queries\" %}\n  Search queries can be complex, so optimizing them can help the performance of your search.\n  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize\n  pagination to limit the number of results returned. The default is `20` results per page.\n  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.\n{% /admonition %}\n\n### Nesting & Limitations\n\nYou can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).\nThere are some limitations to the amount of multiples there can be:\n- There's a limit of max 2 nested filters\n- There's a limit of max 15 filters for each AND or OR group\n\n### Accepted Fields\n\nMost keys listed as part of the Ticket model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `\"foobar\"`).\n\n| Field                                     | Type                                                                                     |\n| :---------------------------------------- | :--------------------------------------------------------------------------------------- |\n| id                                        | String                                                                                   |\n| created_at                                | Date (UNIX timestamp)                                                                    |\n| updated_at                                | Date (UNIX timestamp)                                                                    |\n| _default_title_                           | String                                                                                   |\n| _default_description_                     | String                                                                                   |\n| category                                  | String                                                                                   |\n| ticket_type_id                            | String                                                                                   |\n| contact_ids                               | String                                                                                   |\n| teammate_ids                              | String                                                                                   |\n| admin_assignee_id                         | String                                                                                   |\n| team_assignee_id                          | String                                                                                   |\n| open                                      | Boolean                                                                                  |\n| state                                     | String                                                                                   |\n| snoozed_until                             | Date (UNIX timestamp)                                                                    |\n| ticket_attribute.{id}                     | String or Boolean or Date (UNIX timestamp) or Float or Integer                           |\n\n### Accepted Operators\n\n{% admonition type=\"info\" name=\"Searching based on `created_at`\" %}\n  You may use the `<=` or `>=` operators to search by `created_at`.\n{% /admonition %}\n\nThe table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`\"=\"`). The operator has to be compatible with the field's type  (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).\n\n| Operator | Valid Types                    | Description                                                  |\n| :------- | :----------------------------- | :----------------------------------------------------------- |\n| =        | All                            | Equals                                                       |\n| !=       | All                            | Doesn't Equal                                                |\n| IN       | All                            | In  Shortcut for `OR` queries  Values most be in Array       |\n| NIN      | All                            | Not In  Shortcut for `OR !` queries  Values must be in Array |\n| >        | Integer  Date (UNIX Timestamp) | Greater (or equal) than                                      |\n| <       | Integer  Date (UNIX Timestamp) | Lower (or equal) than                                        |\n| ~        | String                         | Contains                                                     |\n| !~       | String                         | Doesn't Contain                                              |\n| ^        | String                         | Starts With                                                  |\n| $        | String                         | Ends With                                                    |\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "searchTickets",
          "originalEndpointId": "Tickets.searchTickets",
          "name": "Search tickets",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/tickets/search"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "search_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ticket_list"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/tickets/search",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "query": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "query": {}
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "ticket.list",
                  "tickets": [
                    {
                      "type": "ticket",
                      "id": "494",
                      "ticket_id": "53",
                      "category": "Back-office",
                      "ticket_attributes": {
                        "_default_title_": "attribute_value",
                        "_default_description_": null
                      },
                      "ticket_state": "submitted",
                      "ticket_type": {
                        "type": "ticket_type",
                        "id": "117",
                        "category": "Back-office",
                        "name": "my-ticket-type-26",
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "workspace_id": "this_is_an_id667_that_should_be_at_least_",
                        "ticket_type_attributes": {
                          "type": "list"
                        },
                        "archived": false,
                        "created_at": 1719493065,
                        "updated_at": 1719493065
                      },
                      "contacts": {
                        "type": "contact.list",
                        "contacts": [
                          {
                            "type": "contact",
                            "id": "667d61c98a68186f43bafe92",
                            "external_id": "6895b33e-2768-4611-908e-da6632dfc8ea"
                          }
                        ]
                      },
                      "admin_assignee_id": "0",
                      "team_assignee_id": "0",
                      "created_at": 1719493065,
                      "updated_at": 1719493066,
                      "open": true,
                      "linked_objects": {
                        "type": "list",
                        "total_count": 0,
                        "has_more": false,
                        "data": []
                      },
                      "ticket_parts": {
                        "type": "ticket_part.list",
                        "ticket_parts": [
                          {
                            "type": "ticket_part",
                            "id": "135",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "ticket_state": "submitted",
                            "created_at": 1719493066,
                            "updated_at": 1719493066,
                            "author": {
                              "type": "admin",
                              "id": "991267940",
                              "name": "Ciaran472 Lee",
                              "email": "admin472@email.com"
                            },
                            "attachments": [],
                            "redacted": false
                          }
                        ],
                        "total_count": 1
                      },
                      "is_shared": false,
                      "ticket_state_internal_label": "Submitted",
                      "ticket_state_external_label": "Submitted"
                    }
                  ],
                  "total_count": 1,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 5,
                    "total_pages": 1
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "ticket.list",
                  "tickets": [
                    {
                      "type": "ticket",
                      "id": "494",
                      "ticket_id": "53",
                      "category": "Back-office",
                      "ticket_attributes": {
                        "_default_title_": "attribute_value",
                        "_default_description_": null
                      },
                      "ticket_state": "submitted",
                      "ticket_type": {
                        "type": "ticket_type",
                        "id": "117",
                        "category": "Back-office",
                        "name": "my-ticket-type-26",
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "workspace_id": "this_is_an_id667_that_should_be_at_least_",
                        "ticket_type_attributes": {
                          "type": "list"
                        },
                        "archived": false,
                        "created_at": 1719493065,
                        "updated_at": 1719493065
                      },
                      "contacts": {
                        "type": "contact.list",
                        "contacts": [
                          {
                            "type": "contact",
                            "id": "667d61c98a68186f43bafe92",
                            "external_id": "6895b33e-2768-4611-908e-da6632dfc8ea"
                          }
                        ]
                      },
                      "admin_assignee_id": "0",
                      "team_assignee_id": "0",
                      "created_at": 1719493065,
                      "updated_at": 1719493066,
                      "open": true,
                      "linked_objects": {
                        "type": "list",
                        "total_count": 0,
                        "has_more": false,
                        "data": []
                      },
                      "ticket_parts": {
                        "type": "ticket_part.list",
                        "ticket_parts": [
                          {
                            "type": "ticket_part",
                            "id": "135",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "ticket_state": "submitted",
                            "created_at": 1719493066,
                            "updated_at": 1719493066,
                            "author": {
                              "type": "admin",
                              "id": "991267940",
                              "name": "Ciaran472 Lee",
                              "email": "admin472@email.com"
                            },
                            "attachments": [],
                            "redacted": false
                          }
                        ],
                        "total_count": 1
                      },
                      "is_shared": false,
                      "ticket_state_internal_label": "Submitted",
                      "ticket_state_external_label": "Submitted"
                    }
                  ],
                  "total_count": 1,
                  "pages": {
                    "type": "pages",
                    "page": 1,
                    "per_page": 5,
                    "total_pages": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "Visitors": {
      "subpackageId": "Visitors",
      "name": "Visitors",
      "endpoints": [
        {
          "auth": true,
          "description": "You can fetch the details of a single visitor.",
          "method": "GET",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "retrieveVisitorWithUserId",
          "originalEndpointId": "Visitors.retrieveVisitorWithUserId",
          "name": "Retrieve a visitor with User ID",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/visitors"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The user_id of the Visitor you want to retrieve.",
              "key": "user_id",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "visitor"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/visitors",
              "pathParameters": {},
              "queryParameters": {
                "user_id": "foo"
              },
              "headers": {
                "Intercom-Version": "2.11"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "visitor",
                  "id": "667d61ce8a68186f43bafe9b",
                  "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                  "anonymous": true,
                  "email": "",
                  "phone": null,
                  "name": null,
                  "pseudonym": null,
                  "avatar": {
                    "type": "avatar",
                    "image_url": null
                  },
                  "app_id": "this_is_an_id677_that_should_be_at_least_",
                  "companies": {
                    "type": "company.list",
                    "companies": []
                  },
                  "location_data": {},
                  "created_at": 1719493070,
                  "remote_created_at": 1719493070,
                  "signed_up_at": 1719493070,
                  "updated_at": 1719493070,
                  "session_count": 0,
                  "social_profiles": {
                    "type": "social_profile.list",
                    "social_profiles": []
                  },
                  "owner_id": null,
                  "unsubscribed_from_emails": false,
                  "marked_email_as_spam": false,
                  "has_hard_bounced": false,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "custom_attributes": {},
                  "referrer": null,
                  "utm_campaign": null,
                  "utm_content": null,
                  "utm_medium": null,
                  "utm_source": null,
                  "utm_term": null,
                  "do_not_track": null
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "visitor",
                  "id": "667d61ce8a68186f43bafe9b",
                  "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                  "anonymous": true,
                  "email": "",
                  "phone": null,
                  "name": null,
                  "pseudonym": null,
                  "avatar": {
                    "type": "avatar",
                    "image_url": null
                  },
                  "app_id": "this_is_an_id677_that_should_be_at_least_",
                  "companies": {
                    "type": "company.list",
                    "companies": []
                  },
                  "location_data": {},
                  "created_at": 1719493070,
                  "remote_created_at": 1719493070,
                  "signed_up_at": 1719493070,
                  "updated_at": 1719493070,
                  "session_count": 0,
                  "social_profiles": {
                    "type": "social_profile.list",
                    "social_profiles": []
                  },
                  "owner_id": null,
                  "unsubscribed_from_emails": false,
                  "marked_email_as_spam": false,
                  "has_hard_bounced": false,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "custom_attributes": {},
                  "referrer": null,
                  "utm_campaign": null,
                  "utm_content": null,
                  "utm_medium": null,
                  "utm_source": null,
                  "utm_term": null,
                  "do_not_track": null
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Sending a PUT request to `/visitors` will result in an update of an existing Visitor.\n\n**Option 1.** You can update a visitor by passing in the `user_id` of the visitor in the Request body.\n\n**Option 2.** You can update a visitor by passing in the `id` of the visitor in the Request body.\n",
          "method": "PUT",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "updateVisitor",
          "originalEndpointId": "Visitors.updateVisitor",
          "name": "Update a visitor",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/visitors"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "update_visitor_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "visitor"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/visitors",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "visitor",
                  "id": "667d61cc8a68186f43bafe95",
                  "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                  "anonymous": true,
                  "email": "",
                  "phone": null,
                  "name": "Gareth Bale",
                  "pseudonym": "Indigo Ghost",
                  "avatar": {
                    "type": "avatar",
                    "image_url": "https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png"
                  },
                  "app_id": "this_is_an_id671_that_should_be_at_least_",
                  "companies": {
                    "type": "company.list",
                    "companies": []
                  },
                  "location_data": {},
                  "created_at": 1719493068,
                  "remote_created_at": 1719493068,
                  "signed_up_at": 1719493068,
                  "updated_at": 1719493068,
                  "session_count": 0,
                  "social_profiles": {
                    "type": "social_profile.list",
                    "social_profiles": []
                  },
                  "owner_id": null,
                  "unsubscribed_from_emails": false,
                  "marked_email_as_spam": false,
                  "has_hard_bounced": false,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "custom_attributes": {},
                  "referrer": null,
                  "utm_campaign": null,
                  "utm_content": null,
                  "utm_medium": null,
                  "utm_source": null,
                  "utm_term": null,
                  "do_not_track": null
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "visitor",
                  "id": "667d61cc8a68186f43bafe95",
                  "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                  "anonymous": true,
                  "email": "",
                  "phone": null,
                  "name": "Gareth Bale",
                  "pseudonym": "Indigo Ghost",
                  "avatar": {
                    "type": "avatar",
                    "image_url": "https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png"
                  },
                  "app_id": "this_is_an_id671_that_should_be_at_least_",
                  "companies": {
                    "type": "company.list",
                    "companies": []
                  },
                  "location_data": {},
                  "created_at": 1719493068,
                  "remote_created_at": 1719493068,
                  "signed_up_at": 1719493068,
                  "updated_at": 1719493068,
                  "session_count": 0,
                  "social_profiles": {
                    "type": "social_profile.list",
                    "social_profiles": []
                  },
                  "owner_id": null,
                  "unsubscribed_from_emails": false,
                  "marked_email_as_spam": false,
                  "has_hard_bounced": false,
                  "tags": {
                    "type": "tag.list",
                    "tags": []
                  },
                  "segments": {
                    "type": "segment.list",
                    "segments": []
                  },
                  "custom_attributes": {},
                  "referrer": null,
                  "utm_campaign": null,
                  "utm_content": null,
                  "utm_medium": null,
                  "utm_source": null,
                  "utm_term": null,
                  "do_not_track": null
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "You can merge a Visitor to a Contact of role type `lead` or `user`.\n\n> 📘 What happens upon a visitor being converted?\n>\n> If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.\n",
          "method": "POST",
          "defaultEnvironment": "The production API server",
          "environments": [
            {
              "id": "The production API server",
              "baseUrl": "https://api.intercom.io"
            },
            {
              "id": "The european API server",
              "baseUrl": "https://api.eu.intercom.io"
            },
            {
              "id": "The australian API server",
              "baseUrl": "https://api.au.intercom.io"
            }
          ],
          "id": "convertVisitor",
          "originalEndpointId": "Visitors.convertVisitor",
          "name": "Convert a visitor",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/visitors/convert"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Intercom-Version",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "intercom_version"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "convert_visitor_request"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "contact"
              }
            },
            "statusCode": 200,
            "description": "successful"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/visitors/convert",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Intercom-Version": "2.11"
              },
              "requestBody": {
                "type": "user",
                "user": {},
                "visitor": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "type": "user",
                  "user": {},
                  "visitor": {}
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d61d08a68186f43bafea2",
                  "external_id": null,
                  "workspace_id": "this_is_an_id683_that_should_be_at_least_",
                  "role": "user",
                  "email": "foo@bar.com",
                  "phone": null,
                  "name": null,
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719493072,
                  "updated_at": 1719493072,
                  "signed_up_at": 1719493072,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d61d08a68186f43bafea2/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d61d08a68186f43bafea2/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d61d08a68186f43bafea2/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "type": "contact",
                  "id": "667d61d08a68186f43bafea2",
                  "external_id": null,
                  "workspace_id": "this_is_an_id683_that_should_be_at_least_",
                  "role": "user",
                  "email": "foo@bar.com",
                  "phone": null,
                  "name": null,
                  "owner_id": null,
                  "has_hard_bounced": false,
                  "marked_email_as_spam": false,
                  "unsubscribed_from_emails": false,
                  "created_at": 1719493072,
                  "updated_at": 1719493072,
                  "signed_up_at": 1719493072,
                  "last_seen_at": null,
                  "last_replied_at": null,
                  "last_contacted_at": null,
                  "last_email_opened_at": null,
                  "last_email_clicked_at": null,
                  "language_override": null,
                  "browser": null,
                  "browser_version": null,
                  "browser_language": null,
                  "os": null,
                  "android_app_name": null,
                  "android_app_version": null,
                  "android_device": null,
                  "android_os_version": null,
                  "android_sdk_version": null,
                  "android_last_seen_at": null,
                  "ios_app_name": null,
                  "ios_app_version": null,
                  "ios_device": null,
                  "ios_os_version": null,
                  "ios_sdk_version": null,
                  "ios_last_seen_at": null,
                  "custom_attributes": {},
                  "avatar": null,
                  "tags": {
                    "data": [],
                    "url": "/contacts/667d61d08a68186f43bafea2/tags",
                    "total_count": 0,
                    "has_more": false
                  },
                  "notes": {
                    "data": [],
                    "url": "/contacts/667d61d08a68186f43bafea2/notes",
                    "total_count": 0,
                    "has_more": false
                  },
                  "companies": {
                    "url": "/contacts/667d61d08a68186f43bafea2/companies",
                    "total_count": 0,
                    "has_more": false
                  },
                  "location": {
                    "type": "location",
                    "country": null,
                    "region": null,
                    "city": null
                  },
                  "social_profiles": {
                    "data": []
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "websockets": [],
    "types": [
      "activity_log",
      "activity_log_list",
      "activity_log_metadata",
      "addressable_list",
      "admin",
      "admin_list",
      "admin_priority_level",
      "admin_reply_conversation_request",
      "admin_reply_ticket_request",
      "admin_with_app",
      "ai_agent",
      "app",
      "article",
      "article_content",
      "article_list",
      "article_list_item",
      "article_search_highlights",
      "article_search_response",
      "article_statistics",
      "article_translated_content",
      "assign_conversation_request",
      "attach_contact_to_conversation_request",
      "close_conversation_request",
      "collection",
      "collection_list",
      "company",
      "company_attached_contacts",
      "company_attached_segments",
      "company_list",
      "company_scroll",
      "contact",
      "contact_archived",
      "contact_attached_companies",
      "contact_companies",
      "contact_deleted",
      "contact_list",
      "contact_location",
      "contact_notes",
      "contact_reference",
      "contact_reply_base_request",
      "contact_reply_conversation_request",
      "contact_reply_email_request",
      "contact_reply_intercom_user_id_request",
      "contact_reply_ticket_email_request",
      "contact_reply_ticket_intercom_user_id_request",
      "contact_reply_ticket_request",
      "contact_reply_ticket_user_id_request",
      "contact_reply_user_id_request",
      "contact_segments",
      "contact_social_profiles",
      "contact_subscription_types",
      "contact_tags",
      "contact_unarchived",
      "content_source",
      "content_sources_list",
      "conversation",
      "conversation_attachment_files",
      "conversation_contacts",
      "conversation_first_contact_reply",
      "conversation_list",
      "conversation_part",
      "conversation_part_author",
      "conversation_parts",
      "conversation_rating",
      "conversation_source",
      "conversation_statistics",
      "conversation_teammates",
      "convert_conversation_to_ticket_request",
      "convert_visitor_request",
      "create_article_request",
      "create_collection_request",
      "create_contact_request",
      "create_conversation_request",
      "create_data_attribute_request",
      "create_data_event_request",
      "create_data_event_summaries_request",
      "create_data_exports_request",
      "create_message_request",
      "create_or_update_company_request",
      "create_or_update_tag_request",
      "create_phone_switch_request",
      "create_ticket_reply_with_comment_request",
      "create_ticket_request",
      "create_ticket_type_attribute_request",
      "create_ticket_type_request",
      "cursor_pages",
      "custom_attributes",
      "custom_object_instance",
      "customer_request",
      "data_attribute",
      "data_attribute_list",
      "data_event",
      "data_event_list",
      "data_event_summary",
      "data_event_summary_item",
      "data_export",
      "data_export_csv",
      "deleted_article_object",
      "deleted_collection_object",
      "deleted_company_object",
      "deleted_object",
      "detach_contact_from_conversation_request",
      "error",
      "file_attribute",
      "group_content",
      "group_translated_content",
      "help_center",
      "help_center_list",
      "intercom_version",
      "linked_object",
      "linked_object_list",
      "merge_contacts_request",
      "message",
      "multiple_filter_search_request",
      "news_item",
      "news_item_request",
      "newsfeed",
      "newsfeed_assignment",
      "note",
      "note_list",
      "open_conversation_request",
      "pages_link",
      "paginated_response",
      "part_attachment",
      "phone_switch",
      "redact_conversation_request",
      "reference",
      "reply_conversation_request",
      "search_request",
      "segment",
      "segment_list",
      "single_filter_search_request",
      "sla_applied",
      "snooze_conversation_request",
      "social_profile",
      "starting_after_paging",
      "subscription_type",
      "subscription_type_list",
      "tag",
      "tag_company_request",
      "tag_list",
      "tag_multiple_users_request",
      "tags",
      "team",
      "team_list",
      "team_priority_level",
      "ticket",
      "ticket_contacts",
      "ticket_custom_attributes",
      "ticket_list",
      "ticket_part",
      "ticket_part_author",
      "ticket_parts",
      "ticket_reply",
      "ticket_request_custom_attributes",
      "ticket_type",
      "ticket_type_attribute",
      "ticket_type_attribute_list",
      "ticket_type_list",
      "translation",
      "untag_company_request",
      "update_article_request",
      "update_collection_request",
      "update_contact_request",
      "update_conversation_request",
      "update_data_attribute_request",
      "update_ticket_request",
      "update_ticket_type_attribute_request",
      "update_ticket_type_request",
      "update_visitor_request",
      "visitor",
      "visitor_deleted_object"
    ],
    "subpackages": [
      "Admins",
      "Articles",
      "Help Center",
      "Companies",
      "Contacts",
      "Notes",
      "Subscription Types",
      "Tags",
      "Conversations",
      "Data Attributes",
      "Data Events",
      "Data Export",
      "Messages",
      "News",
      "Segments",
      "Switch",
      "Teams",
      "Ticket Type Attributes",
      "Ticket Types",
      "Tickets",
      "Visitors"
    ]
  },
  "auth": {
    "type": "bearerAuth",
    "tokenName": "token"
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}