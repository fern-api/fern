{
  "types": {
    "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayloadData": {
      "description": "The data submitted in the form",
      "name": "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayloadData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayloadSchemaItems": {
      "name": "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayloadSchemaItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "unknown"
            }
          }
        ]
      }
    },
    "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayload": {
      "description": "The payload of data sent from Webflow",
      "name": "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the form",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The id of the site that the form was submitted from",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The data submitted in the form",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayloadData"
              }
            }
          },
          {
            "description": "A list of fields from the submitted form",
            "key": "schema",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayloadSchemaItems"
                }
              }
            }
          },
          {
            "description": "The timestamp the form was submitted",
            "key": "submittedAt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "the ID of the event",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the form submission",
            "key": "formId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id of the Form element",
            "key": "formElementId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksSitePublishPayloadContentApplicationJsonSchemaPayloadPublishedBy": {
      "description": "The name and id of the user who published the site",
      "name": "WebhooksSitePublishPayloadContentApplicationJsonSchemaPayloadPublishedBy",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "WebhooksSitePublishPayloadContentApplicationJsonSchemaPayload": {
      "description": "The payload of data sent from Webflow",
      "name": "WebhooksSitePublishPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the site that was published",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The timestamp of the publish event",
            "key": "publishedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The domains that were published",
            "key": "domains",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The name and id of the user who published the site",
            "key": "publishedBy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksSitePublishPayloadContentApplicationJsonSchemaPayloadPublishedBy"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStatus": {
      "description": "The status of the Order\n",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaNetAmount": {
      "description": "The net amount after application fees",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItems": {
      "description": "A customer address",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddress": {
      "description": "The shipping address",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddress": {
      "description": "The billing address",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile": {
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImage": {
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPaypalDetails": {
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomDataItems": {
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaMetadata": {
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsTotal": {
      "description": "The total price",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotals": {
      "description": "An object describing various pricing totals",
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaDownloadFilesItems": {
      "name": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStatus": {
      "description": "The status of the Order\n",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaNetAmount": {
      "description": "The net amount after application fees",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItems": {
      "description": "A customer address",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddress": {
      "description": "The shipping address",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddress": {
      "description": "The billing address",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile": {
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImage": {
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPaypalDetails": {
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomDataItems": {
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaMetadata": {
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsTotal": {
      "description": "The total price",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotals": {
      "description": "An object describing various pricing totals",
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaDownloadFilesItems": {
      "name": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksEcommInventoryChangedPayloadContentApplicationJsonSchemaInventoryType": {
      "description": "infinite or finite",
      "name": "WebhooksEcommInventoryChangedPayloadContentApplicationJsonSchemaInventoryType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "infinite"
          },
          {
            "value": "finite"
          }
        ]
      }
    },
    "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaTriggerType": {
      "description": "The type of event that triggered the request",
      "name": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaTriggerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user_account_added"
          },
          {
            "value": "user_account_updated"
          },
          {
            "value": "user_account_deleted"
          }
        ]
      }
    },
    "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadStatus": {
      "description": "The status of the user",
      "name": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invited"
          },
          {
            "value": "verified"
          },
          {
            "value": "unverified"
          }
        ]
      }
    },
    "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType": {
      "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
      "name": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "ecommerce"
          }
        ]
      }
    },
    "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems": {
      "description": "Access group slugs and types",
      "name": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Access group identifier for APIs",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadDataData": {
      "name": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email address of the user\n",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom user attributes",
            "key": "additionalProperties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadData": {
      "description": "An object containing the User's basic info and custom fields",
      "name": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadDataData"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the User",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Shows whether the user has verified their email address",
            "key": "isEmailVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was invited",
            "key": "invitedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was logged in",
            "key": "lastLogin",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the user",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadStatus"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Access groups the user belongs to",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems"
                }
              }
            }
          },
          {
            "description": "An object containing the User's basic info and custom fields",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayloadData"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaTriggerType": {
      "description": "The type of event that triggered the request",
      "name": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaTriggerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user_account_added"
          },
          {
            "value": "user_account_updated"
          },
          {
            "value": "user_account_deleted"
          }
        ]
      }
    },
    "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadStatus": {
      "description": "The status of the user",
      "name": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invited"
          },
          {
            "value": "verified"
          },
          {
            "value": "unverified"
          }
        ]
      }
    },
    "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType": {
      "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
      "name": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "ecommerce"
          }
        ]
      }
    },
    "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems": {
      "description": "Access group slugs and types",
      "name": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Access group identifier for APIs",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadDataData": {
      "name": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email address of the user\n",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom user attributes",
            "key": "additionalProperties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadData": {
      "description": "An object containing the User's basic info and custom fields",
      "name": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadDataData"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the User",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Shows whether the user has verified their email address",
            "key": "isEmailVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was invited",
            "key": "invitedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was logged in",
            "key": "lastLogin",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the user",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadStatus"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Access groups the user belongs to",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems"
                }
              }
            }
          },
          {
            "description": "An object containing the User's basic info and custom fields",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayloadData"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaTriggerType": {
      "description": "The type of event that triggered the request",
      "name": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaTriggerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user_account_added"
          },
          {
            "value": "user_account_updated"
          },
          {
            "value": "user_account_deleted"
          }
        ]
      }
    },
    "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadStatus": {
      "description": "The status of the user",
      "name": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invited"
          },
          {
            "value": "verified"
          },
          {
            "value": "unverified"
          }
        ]
      }
    },
    "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType": {
      "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
      "name": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "ecommerce"
          }
        ]
      }
    },
    "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems": {
      "description": "Access group slugs and types",
      "name": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Access group identifier for APIs",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItemsType"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadDataData": {
      "name": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email address of the user\n",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom user attributes",
            "key": "additionalProperties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadData": {
      "description": "An object containing the User's basic info and custom fields",
      "name": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadDataData"
              }
            }
          }
        ]
      }
    },
    "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the User",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Shows whether the user has verified their email address",
            "key": "isEmailVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was invited",
            "key": "invitedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was logged in",
            "key": "lastLogin",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the user",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadStatus"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Access groups the user belongs to",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadAccessGroupsItems"
                }
              }
            }
          },
          {
            "description": "An object containing the User's basic info and custom fields",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayloadData"
              }
            }
          }
        ]
      }
    },
    "WebhooksCollectionItemCreatedPayloadContentApplicationJsonSchemaFieldData": {
      "name": "WebhooksCollectionItemCreatedPayloadContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "WebhooksCollectionItemChangedPayloadContentApplicationJsonSchemaFieldData": {
      "name": "WebhooksCollectionItemChangedPayloadContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "WebhooksCollectionItemDeletedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The payload of data sent from Webflow",
      "name": "WebhooksCollectionItemDeletedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the collection item that was deleted",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The ID of the site",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The ID of the workspace",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The ID of the collection",
            "key": "collectionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksCollectionItemUnpublishedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The payload of data sent from Webflow",
      "name": "WebhooksCollectionItemUnpublishedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the collection item that was deleted",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The ID of the site",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The ID of the workspace",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The ID of the collection",
            "key": "collectionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksPageCreatedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The payload of data sent from Webflow",
      "name": "WebhooksPageCreatedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "key": "pageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "key": "pageTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksPageMetadataUpdatedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The payload of data sent from Webflow",
      "name": "WebhooksPageMetadataUpdatedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "key": "pageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "key": "pageTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksPageDeletedPayloadContentApplicationJsonSchemaPayload": {
      "description": "The payload of data sent from Webflow",
      "name": "WebhooksPageDeletedPayloadContentApplicationJsonSchemaPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "key": "pageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "key": "pageTitle",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "deletedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "token_authorized-by_Response_200": {
      "name": "token_authorized-by_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique id of the user",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The user's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          {
            "description": "The user's first name",
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user's last name",
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Authorized_byRequestForbiddenError": {
      "name": "Authorized_byRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TokenIntrospectGetResponsesContentApplicationJsonSchemaAuthorizationAuthorizedTo": {
      "name": "TokenIntrospectGetResponsesContentApplicationJsonSchemaAuthorizationAuthorizedTo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Array of Sites this app is authorized to",
            "key": "siteIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Array of Workspaces this app is authorized to",
            "key": "workspaceIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          },
          {
            "description": "Array of Users this app is authorized to",
            "key": "userIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "TokenIntrospectGetResponsesContentApplicationJsonSchemaAuthorization": {
      "description": "The Authorization object",
      "name": "TokenIntrospectGetResponsesContentApplicationJsonSchemaAuthorization",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique id of the Authorization instance",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The date the Authorization was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The date the Authorization was last used",
            "key": "lastUsed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The grant type of the Authorization",
            "key": "grantType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The default rate limit for the Authorization (requests/min)",
            "key": "rateLimit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Comma separted list of OAuth scopes corresponding to the Authorization",
            "key": "scope",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "authorizedTo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TokenIntrospectGetResponsesContentApplicationJsonSchemaAuthorizationAuthorizedTo"
              }
            }
          }
        ]
      }
    },
    "token_introspect_Response_200": {
      "name": "token_introspect_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Authorization object",
            "key": "authorization",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TokenIntrospectGetResponsesContentApplicationJsonSchemaAuthorization"
              }
            }
          },
          {
            "key": "application",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "SitesGetResponsesContentApplicationJsonSchemaSitesItemsCustomDomainsItems": {
      "name": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsCustomDomainsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Domain",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The registered Domain name",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocalesPrimary": {
      "description": "The primary locale for the site or application.",
      "name": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocalesPrimary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the locale.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A CMS-specific identifier for the locale.",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates if the locale is enabled.",
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The display name of the locale, typically in English.",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An optional ID for an image associated with the locale, nullable.",
            "key": "displayImageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Determines if requests should redirect to the locale's subdirectory.",
            "key": "redirect",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The subdirectory path for the locale, used in URLs.",
            "key": "subdirectory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A tag or code representing the locale, often following a standard format like 'en-US'.",
            "key": "tag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocalesSecondaryItems": {
      "name": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocalesSecondaryItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the locale.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A CMS-specific identifier for the locale.",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates if the locale is enabled.",
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The display name of the locale, typically in English.",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An optional ID for an image associated with the locale, nullable.",
            "key": "displayImageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Determines if requests should redirect to the locale's subdirectory.",
            "key": "redirect",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The subdirectory path for the locale, used in URLs.",
            "key": "subdirectory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A tag or code representing the locale, often following a standard format like 'en-US'.",
            "key": "tag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocales": {
      "name": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocales",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The primary locale for the site or application.",
            "key": "primary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocalesPrimary"
              }
            }
          },
          {
            "description": "A list of secondary locales available for the site or application.",
            "key": "secondary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocalesSecondaryItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesGetResponsesContentApplicationJsonSchemaSitesItems": {
      "name": "SitesGetResponsesContentApplicationJsonSchemaSitesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Site",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            }
          },
          {
            "description": "Unique identifier for the Workspace",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date the Site was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Name given to Site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slugified version of name",
            "key": "shortName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date the Site was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date the Site was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "URL of a generated image for the given Site",
            "key": "previewUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Site timezone set under Site Settings",
            "key": "timeZone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the parent folder the Site exists in",
            "key": "parentFolderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "key": "customDomains",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsCustomDomainsItems"
                }
              }
            }
          },
          {
            "key": "locales",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesGetResponsesContentApplicationJsonSchemaSitesItemsLocales"
              }
            }
          }
        ]
      }
    },
    "sites_list_Response_200": {
      "name": "sites_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "sites",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesGetResponsesContentApplicationJsonSchemaSitesItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-sitesRequestTooManyRequestsError": {
      "name": "List-sitesRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdGetResponsesContentApplicationJsonSchemaCustomDomainsItems": {
      "name": "SitesSiteIdGetResponsesContentApplicationJsonSchemaCustomDomainsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Domain",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The registered Domain name",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocalesPrimary": {
      "description": "The primary locale for the site or application.",
      "name": "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocalesPrimary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the locale.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A CMS-specific identifier for the locale.",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates if the locale is enabled.",
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The display name of the locale, typically in English.",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An optional ID for an image associated with the locale, nullable.",
            "key": "displayImageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Determines if requests should redirect to the locale's subdirectory.",
            "key": "redirect",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The subdirectory path for the locale, used in URLs.",
            "key": "subdirectory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A tag or code representing the locale, often following a standard format like 'en-US'.",
            "key": "tag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocalesSecondaryItems": {
      "name": "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocalesSecondaryItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the locale.",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A CMS-specific identifier for the locale.",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates if the locale is enabled.",
            "key": "enabled",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The display name of the locale, typically in English.",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An optional ID for an image associated with the locale, nullable.",
            "key": "displayImageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Determines if requests should redirect to the locale's subdirectory.",
            "key": "redirect",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The subdirectory path for the locale, used in URLs.",
            "key": "subdirectory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A tag or code representing the locale, often following a standard format like 'en-US'.",
            "key": "tag",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocales": {
      "name": "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocales",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The primary locale for the site or application.",
            "key": "primary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocalesPrimary"
              }
            }
          },
          {
            "description": "A list of secondary locales available for the site or application.",
            "key": "secondary",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocalesSecondaryItems"
                }
              }
            }
          }
        ]
      }
    },
    "sites_get_Response_200": {
      "name": "sites_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Site",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            }
          },
          {
            "description": "Unique identifier for the Workspace",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date the Site was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Name given to Site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slugified version of name",
            "key": "shortName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date the Site was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date the Site was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "URL of a generated image for the given Site",
            "key": "previewUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Site timezone set under Site Settings",
            "key": "timeZone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ID of the parent folder the Site exists in",
            "key": "parentFolderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "key": "customDomains",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdGetResponsesContentApplicationJsonSchemaCustomDomainsItems"
                }
              }
            }
          },
          {
            "key": "locales",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdGetResponsesContentApplicationJsonSchemaLocales"
              }
            }
          }
        ]
      }
    },
    "Get-siteRequestTooManyRequestsError": {
      "name": "Get-siteRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCustomDomainsGetResponsesContentApplicationJsonSchemaCustomDomainsItems": {
      "name": "SitesSiteIdCustomDomainsGetResponsesContentApplicationJsonSchemaCustomDomainsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Domain",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The registered Domain name",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "sites_get-custom-domain_Response_200": {
      "name": "sites_get-custom-domain_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "customDomains",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdCustomDomainsGetResponsesContentApplicationJsonSchemaCustomDomainsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-custom-domainsRequestTooManyRequestsError": {
      "name": "Get-custom-domainsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdPublishPostResponsesContentApplicationJsonSchemaCustomDomainsItems": {
      "name": "SitesSiteIdPublishPostResponsesContentApplicationJsonSchemaCustomDomainsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Domain",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The registered Domain name",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "sites_publish_Response_202": {
      "name": "sites_publish_Response_202",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Array of domains objects",
            "key": "customDomains",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdPublishPostResponsesContentApplicationJsonSchemaCustomDomainsItems"
                }
              }
            }
          },
          {
            "description": "Flag for publishing to webflow.io subdomain",
            "key": "publishToWebflowSubdomain",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          }
        ]
      }
    },
    "Site-publishRequestBadRequestError": {
      "name": "Site-publishRequestBadRequestError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "description": "Requested an invalid Domain. Please send a valid custom domain URI",
            "type": {
              "type": "unknown"
            }
          },
          {
            "description": "You must pass at least one domain id to the publish endpoint",
            "type": {
              "type": "unknown"
            }
          }
        ]
      }
    },
    "Site-publishRequestTooManyRequestsError": {
      "name": "Site-publishRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsResourceOperation": {
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsResourceOperation",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "CREATED"
          },
          {
            "value": "MODIFIED"
          },
          {
            "value": "PUBLISHED"
          },
          {
            "value": "UNPUBLISHED"
          },
          {
            "value": "DELETED"
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsUser": {
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsUser",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsPayload": {
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsPayload",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItems": {
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "event",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "resourceOperation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsResourceOperation"
              }
            }
          },
          {
            "key": "user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsUser"
                }
              }
            }
          },
          {
            "key": "resourceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "resourceName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "newValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previousValue",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "payload",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItemsPayload"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "sites_activity-logs_list_Response_200": {
      "name": "sites_activity-logs_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "items",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaItemsItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf0Code": {
      "description": "Error code",
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf0Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "missing_scopes"
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems": {
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "GetSiteActivityLogsRequestForbiddenError0": {
      "description": "The request is missing the required scopes.",
      "name": "GetSiteActivityLogsRequestForbiddenError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf1Code": {
      "description": "Error code",
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf1Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "missing_scopes"
          }
        ]
      }
    },
    "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems": {
      "name": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "GetSiteActivityLogsRequestForbiddenError1": {
      "description": "Error response for non-enterprise plan sites.",
      "name": "GetSiteActivityLogsRequestForbiddenError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdActivityLogsGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-site-activity-logsRequestForbiddenError": {
      "name": "Get-site-activity-logsRequestForbiddenError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "GetSiteActivityLogsRequestForbiddenError0",
            "type": {
              "type": "id",
              "value": "GetSiteActivityLogsRequestForbiddenError0"
            }
          },
          {
            "typeName": "GetSiteActivityLogsRequestForbiddenError1",
            "type": {
              "type": "id",
              "value": "GetSiteActivityLogsRequestForbiddenError1"
            }
          }
        ]
      }
    },
    "Get-site-activity-logsRequestTooManyRequestsError": {
      "name": "Get-site-activity-logsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCollectionsGetResponsesContentApplicationJsonSchemaCollectionsItems": {
      "description": "A collection object",
      "name": "SitesSiteIdCollectionsGetResponsesContentApplicationJsonSchemaCollectionsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Collection",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Name given to the Collection",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
            "key": "singularName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug of Collection in Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the collection was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the collection was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "collections_list_Response_200": {
      "name": "collections_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "An array of Collections",
            "key": "collections",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdCollectionsGetResponsesContentApplicationJsonSchemaCollectionsItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-collectionsRequestTooManyRequestsError": {
      "name": "List-collectionsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCollectionsPostResponsesContentApplicationJsonSchemaFieldsItemsType": {
      "description": "Choose these appropriate field type for your collection data",
      "name": "SitesSiteIdCollectionsPostResponsesContentApplicationJsonSchemaFieldsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PlainText"
          },
          {
            "value": "RichText"
          },
          {
            "value": "Image"
          },
          {
            "value": "MultiImage"
          },
          {
            "value": "Video"
          },
          {
            "value": "Link"
          },
          {
            "value": "Email"
          },
          {
            "value": "Phone"
          },
          {
            "value": "Number"
          },
          {
            "value": "DateTime"
          },
          {
            "value": "Switch"
          },
          {
            "value": "Color"
          },
          {
            "value": "ExtFileRef"
          }
        ]
      }
    },
    "SitesSiteIdCollectionsPostResponsesContentApplicationJsonSchemaFieldsItems": {
      "description": "The details of a field in a collection",
      "name": "SitesSiteIdCollectionsPostResponsesContentApplicationJsonSchemaFieldsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Field",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "define whether a field is required in a collection",
            "key": "isRequired",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Define whether the field is editable",
            "key": "isEditable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Choose these appropriate field type for your collection data",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdCollectionsPostResponsesContentApplicationJsonSchemaFieldsItemsType"
            }
          },
          {
            "description": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to \"-.\"",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of a field",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional text to help anyone filling out this field",
            "key": "helpText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "collections_create_Response_200": {
      "description": "A collection object",
      "name": "collections_create_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Collection",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Name given to the Collection",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
            "key": "singularName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug of Collection in Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the collection was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the collection was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The list of fields in the Collection",
            "key": "fields",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdCollectionsPostResponsesContentApplicationJsonSchemaFieldsItems"
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Create-collectionRequestTooManyRequestsError": {
      "name": "Create-collectionRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdGetResponsesContentApplicationJsonSchemaFieldsItemsType": {
      "description": "Choose these appropriate field type for your collection data",
      "name": "CollectionsCollectionIdGetResponsesContentApplicationJsonSchemaFieldsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PlainText"
          },
          {
            "value": "RichText"
          },
          {
            "value": "Image"
          },
          {
            "value": "MultiImage"
          },
          {
            "value": "Video"
          },
          {
            "value": "Link"
          },
          {
            "value": "Email"
          },
          {
            "value": "Phone"
          },
          {
            "value": "Number"
          },
          {
            "value": "DateTime"
          },
          {
            "value": "Switch"
          },
          {
            "value": "Color"
          },
          {
            "value": "ExtFileRef"
          }
        ]
      }
    },
    "CollectionsCollectionIdGetResponsesContentApplicationJsonSchemaFieldsItems": {
      "description": "The details of a field in a collection",
      "name": "CollectionsCollectionIdGetResponsesContentApplicationJsonSchemaFieldsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Field",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "define whether a field is required in a collection",
            "key": "isRequired",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Define whether the field is editable",
            "key": "isEditable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Choose these appropriate field type for your collection data",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "CollectionsCollectionIdGetResponsesContentApplicationJsonSchemaFieldsItemsType"
            }
          },
          {
            "description": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to \"-.\"",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of a field",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional text to help anyone filling out this field",
            "key": "helpText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "collections_get_Response_200": {
      "description": "A collection object",
      "name": "collections_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Collection",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Name given to the Collection",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of one Item in Collection (e.g. ”Blog Post” if the Collection is called “Blog Posts”)",
            "key": "singularName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug of Collection in Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the collection was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the collection was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The list of fields in the Collection",
            "key": "fields",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdGetResponsesContentApplicationJsonSchemaFieldsItems"
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Collection-detailsRequestTooManyRequestsError": {
      "name": "Collection-detailsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-collectionRequestTooManyRequestsError": {
      "name": "Delete-collectionRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdFieldsPostRequestBodyContentApplicationJsonSchemaType": {
      "description": "Choose these appropriate field type for your collection data",
      "name": "CollectionsCollectionIdFieldsPostRequestBodyContentApplicationJsonSchemaType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PlainText"
          },
          {
            "value": "RichText"
          },
          {
            "value": "Image"
          },
          {
            "value": "MultiImage"
          },
          {
            "value": "Video"
          },
          {
            "value": "Link"
          },
          {
            "value": "Email"
          },
          {
            "value": "Phone"
          },
          {
            "value": "Number"
          },
          {
            "value": "DateTime"
          },
          {
            "value": "Switch"
          },
          {
            "value": "Color"
          },
          {
            "value": "File"
          }
        ]
      }
    },
    "CollectionsCollectionIdFieldsPostResponsesContentApplicationJsonSchemaType": {
      "description": "Choose these appropriate field type for your collection data",
      "name": "CollectionsCollectionIdFieldsPostResponsesContentApplicationJsonSchemaType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PlainText"
          },
          {
            "value": "RichText"
          },
          {
            "value": "Image"
          },
          {
            "value": "MultiImage"
          },
          {
            "value": "Video"
          },
          {
            "value": "Link"
          },
          {
            "value": "Email"
          },
          {
            "value": "Phone"
          },
          {
            "value": "Number"
          },
          {
            "value": "DateTime"
          },
          {
            "value": "Switch"
          },
          {
            "value": "Color"
          },
          {
            "value": "ExtFileRef"
          }
        ]
      }
    },
    "collections_fields_create_Response_200": {
      "description": "The details of a field in a collection",
      "name": "collections_fields_create_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Field",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "define whether a field is required in a collection",
            "key": "isRequired",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Define whether the field is editable",
            "key": "isEditable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Choose these appropriate field type for your collection data",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "CollectionsCollectionIdFieldsPostResponsesContentApplicationJsonSchemaType"
            }
          },
          {
            "description": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to \"-.\"",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of a field",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional text to help anyone filling out this field",
            "key": "helpText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Create-fieldRequestTooManyRequestsError": {
      "name": "Create-fieldRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-fieldRequestTooManyRequestsError": {
      "name": "Delete-fieldRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdFieldsFieldIdPatchResponsesContentApplicationJsonSchemaType": {
      "description": "Choose these appropriate field type for your collection data",
      "name": "CollectionsCollectionIdFieldsFieldIdPatchResponsesContentApplicationJsonSchemaType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PlainText"
          },
          {
            "value": "RichText"
          },
          {
            "value": "Image"
          },
          {
            "value": "MultiImage"
          },
          {
            "value": "Video"
          },
          {
            "value": "Link"
          },
          {
            "value": "Email"
          },
          {
            "value": "Phone"
          },
          {
            "value": "Number"
          },
          {
            "value": "DateTime"
          },
          {
            "value": "Switch"
          },
          {
            "value": "Color"
          },
          {
            "value": "ExtFileRef"
          }
        ]
      }
    },
    "collections_fields_update_Response_200": {
      "description": "The details of a field in a collection",
      "name": "collections_fields_update_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Field",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "define whether a field is required in a collection",
            "key": "isRequired",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "description": "Define whether the field is editable",
            "key": "isEditable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Choose these appropriate field type for your collection data",
            "key": "type",
            "valueType": {
              "type": "id",
              "value": "CollectionsCollectionIdFieldsFieldIdPatchResponsesContentApplicationJsonSchemaType"
            }
          },
          {
            "description": "Slug of Field in Site URL structure. Slugs should be all lowercase with no spaces. Any spaces will be converted to \"-.\"",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of a field",
            "key": "displayName",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional text to help anyone filling out this field",
            "key": "helpText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Update-fieldRequestTooManyRequestsError": {
      "name": "Update-fieldRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsGetParametersLastPublished": {
      "name": "CollectionsCollectionIdItemsGetParametersLastPublished",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "lte",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "gte",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsGetParametersSortBy": {
      "name": "CollectionsCollectionIdItemsGetParametersSortBy",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "lastPublished"
          },
          {
            "value": "name"
          },
          {
            "value": "slug"
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsGetParametersSortOrder": {
      "name": "CollectionsCollectionIdItemsGetParametersSortOrder",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "asc"
          },
          {
            "value": "desc"
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaItemsItemsFieldData": {
      "name": "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaItemsItemsFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaItemsItems": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaItemsItemsFieldData"
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaPagination": {
      "name": "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit specified in the request",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 100
                }
              }
            }
          },
          {
            "description": "The offset specified for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Total number of items in the collection",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "collections_items_list-items_Response_200": {
      "description": "Results from collection items list",
      "name": "collections_items_list-items_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of Items within the collection",
            "key": "items",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaItemsItems"
                }
              }
            }
          },
          {
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-collection-itemsRequestTooManyRequestsError": {
      "name": "List-collection-itemsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsPostRequestBodyContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsPostRequestBodyContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "CollectionsCollectionIdItemsPostResponsesContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsPostResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "collections_items_create-item_Response_202": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "collections_items_create-item_Response_202",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsPostResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Create-itemRequestTooManyRequestsError": {
      "name": "Create-itemRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsLiveGetParametersLastPublished": {
      "name": "CollectionsCollectionIdItemsLiveGetParametersLastPublished",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "lte",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "gte",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsLiveGetParametersSortBy": {
      "name": "CollectionsCollectionIdItemsLiveGetParametersSortBy",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "lastPublished"
          },
          {
            "value": "name"
          },
          {
            "value": "slug"
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsLiveGetParametersSortOrder": {
      "name": "CollectionsCollectionIdItemsLiveGetParametersSortOrder",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "asc"
          },
          {
            "value": "desc"
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaItemsItemsFieldData": {
      "name": "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaItemsItemsFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaItemsItems": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaItemsItemsFieldData"
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaPagination": {
      "name": "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit specified in the request",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 100
                }
              }
            }
          },
          {
            "description": "The offset specified for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Total number of items in the collection",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "collections_items_list-items-live_Response_200": {
      "description": "Results from collection items list",
      "name": "collections_items_list-items-live_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of Items within the collection",
            "key": "items",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaItemsItems"
                }
              }
            }
          },
          {
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsLiveGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-collection-items-liveRequestTooManyRequestsError": {
      "name": "List-collection-items-liveRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsLivePostRequestBodyContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsLivePostRequestBodyContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "CollectionsCollectionIdItemsLivePostResponsesContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsLivePostResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "collections_items_create-item-live_Response_202": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "collections_items_create-item-live_Response_202",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsLivePostResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Create-item-liveRequestTooManyRequestsError": {
      "name": "Create-item-liveRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsBulkPostRequestBodyContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsBulkPostRequestBodyContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "CollectionsCollectionIdItemsBulkPostResponsesContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsBulkPostResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "collections_items_create-item-for-multiple-locales_Response_202": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "collections_items_create-item-for-multiple-locales_Response_202",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Array of identifiers for the locales where the item will be created",
            "key": "cmsLocaleIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-string"
                  }
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsBulkPostResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Create-item-for-multiple-localesRequestTooManyRequestsError": {
      "name": "Create-item-for-multiple-localesRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdGetResponsesContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsItemIdGetResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "collections_items_get-item_Response_200": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "collections_items_get-item_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdGetResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Get-ItemRequestTooManyRequestsError": {
      "name": "Get-ItemRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-itemRequestTooManyRequestsError": {
      "name": "Delete-itemRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdPatchRequestBodyContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsItemIdPatchRequestBodyContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "CollectionsCollectionIdItemsItemIdPatchResponsesContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsItemIdPatchResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "collections_items_update-item_Response_200": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "collections_items_update-item_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdPatchResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Update-itemRequestTooManyRequestsError": {
      "name": "Update-itemRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdLiveGetResponsesContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsItemIdLiveGetResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "collections_items_get-item-live_Response_200": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "collections_items_get-item-live_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdLiveGetResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Get-item-liveRequestTooManyRequestsError": {
      "name": "Get-item-liveRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-item-liveRequestTooManyRequestsError": {
      "name": "Delete-item-liveRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdLivePatchRequestBodyContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsItemIdLivePatchRequestBodyContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "CollectionsCollectionIdItemsItemIdLivePatchResponsesContentApplicationJsonSchemaFieldData": {
      "name": "CollectionsCollectionIdItemsItemIdLivePatchResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Item",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Item in your site. Note: Updates to an item slug will break all links referencing the old slug.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "extraProperties": {
          "type": "unknown"
        }
      }
    },
    "collections_items_update-item-live_Response_200": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "collections_items_update-item-live_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Item",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the item was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the item was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Item is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Item is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdLivePatchResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Update-item-liveRequestTooManyRequestsError": {
      "name": "Update-item-liveRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "collections_items_publish-item_Response_202": {
      "name": "collections_items_publish-item_Response_202",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "publishedItemIds",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "errors",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "Publish-itemRequestTooManyRequestsError": {
      "name": "Publish-itemRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItemsSeo": {
      "description": "SEO-related fields for the Page",
      "name": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItemsSeo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Page title shown in search engine results",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Page description shown in search engine results",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItemsOpenGraph": {
      "description": "Open Graph fields for the Page",
      "name": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItemsOpenGraph",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title supplied to Open Graph annotations",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph title was copied from the SEO title",
            "key": "titleCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The description supplied to Open Graph annotations",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph description was copied from the SEO description",
            "key": "descriptionCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItems": {
      "description": "The Page object",
      "name": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Page",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for the Site",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Title of the Page",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "slug of the Page (derived from title)",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier of the parent folder",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
            "key": "collectionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Page was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Page was most recently updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Whether the Page has been archived",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Whether the Page is a draft",
            "key": "draft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
            "key": "canBranch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
            "key": "isMembersOnly",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "SEO-related fields for the Page",
            "key": "seo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItemsSeo"
              }
            }
          },
          {
            "description": "Open Graph fields for the Page",
            "key": "openGraph",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItemsOpenGraph"
              }
            }
          },
          {
            "description": "Unique ID of the page locale",
            "key": "localeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Relative path of the published page URL",
            "key": "publishedPath",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "pages_list_Response_200": {
      "description": "The Page object",
      "name": "pages_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "pages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagesItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdPagesGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-pagesRequestTooManyRequestsError": {
      "name": "List-pagesRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdGetResponsesContentApplicationJsonSchemaSeo": {
      "description": "SEO-related fields for the Page",
      "name": "PagesPageIdGetResponsesContentApplicationJsonSchemaSeo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Page title shown in search engine results",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Page description shown in search engine results",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdGetResponsesContentApplicationJsonSchemaOpenGraph": {
      "description": "Open Graph fields for the Page",
      "name": "PagesPageIdGetResponsesContentApplicationJsonSchemaOpenGraph",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title supplied to Open Graph annotations",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph title was copied from the SEO title",
            "key": "titleCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The description supplied to Open Graph annotations",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph description was copied from the SEO description",
            "key": "descriptionCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "pages_get-metadata_Response_200": {
      "description": "The Page object",
      "name": "pages_get-metadata_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Page",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for the Site",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Title of the Page",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "slug of the Page (derived from title)",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier of the parent folder",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
            "key": "collectionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Page was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Page was most recently updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Whether the Page has been archived",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Whether the Page is a draft",
            "key": "draft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
            "key": "canBranch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
            "key": "isMembersOnly",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "SEO-related fields for the Page",
            "key": "seo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdGetResponsesContentApplicationJsonSchemaSeo"
              }
            }
          },
          {
            "description": "Open Graph fields for the Page",
            "key": "openGraph",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdGetResponsesContentApplicationJsonSchemaOpenGraph"
              }
            }
          },
          {
            "description": "Unique ID of the page locale",
            "key": "localeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Relative path of the published page URL",
            "key": "publishedPath",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Get-page-metadataRequestTooManyRequestsError": {
      "name": "Get-page-metadataRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdPutRequestBodyContentApplicationJsonSchemaSeo": {
      "description": "SEO-related fields for the Page",
      "name": "PagesPageIdPutRequestBodyContentApplicationJsonSchemaSeo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Page title shown in search engine results",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Page description shown in search engine results",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdPutRequestBodyContentApplicationJsonSchemaOpenGraph": {
      "description": "Open Graph fields for the Page",
      "name": "PagesPageIdPutRequestBodyContentApplicationJsonSchemaOpenGraph",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title supplied to Open Graph annotations",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph title was copied from the SEO title",
            "key": "titleCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The description supplied to Open Graph annotations",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph description was copied from the SEO description",
            "key": "descriptionCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "PagesPageIdPutResponsesContentApplicationJsonSchemaSeo": {
      "description": "SEO-related fields for the Page",
      "name": "PagesPageIdPutResponsesContentApplicationJsonSchemaSeo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Page title shown in search engine results",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Page description shown in search engine results",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdPutResponsesContentApplicationJsonSchemaOpenGraph": {
      "description": "Open Graph fields for the Page",
      "name": "PagesPageIdPutResponsesContentApplicationJsonSchemaOpenGraph",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The title supplied to Open Graph annotations",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph title was copied from the SEO title",
            "key": "titleCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The description supplied to Open Graph annotations",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Indicates the Open Graph description was copied from the SEO description",
            "key": "descriptionCopied",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Pages_update-page-settings_Response_200": {
      "description": "The Page object",
      "name": "Pages_update-page-settings_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Page",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectid"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for the Site",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Title of the Page",
            "key": "title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "slug of the Page (derived from title)",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier of the parent folder",
            "key": "parentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
            "key": "collectionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Page was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Page was most recently updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Whether the Page has been archived",
            "key": "archived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Whether the Page is a draft",
            "key": "draft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
            "key": "canBranch",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
            "key": "isMembersOnly",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "SEO-related fields for the Page",
            "key": "seo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdPutResponsesContentApplicationJsonSchemaSeo"
              }
            }
          },
          {
            "description": "Open Graph fields for the Page",
            "key": "openGraph",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdPutResponsesContentApplicationJsonSchemaOpenGraph"
              }
            }
          },
          {
            "description": "Unique ID of the page locale",
            "key": "localeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Relative path of the published page URL",
            "key": "publishedPath",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Update-page-settingsRequestTooManyRequestsError": {
      "name": "Update-page-settingsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsType": {
      "name": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "text"
          },
          {
            "value": "image"
          }
        ]
      }
    },
    "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsText": {
      "description": "Represents textual content within the DOM. It contains both the raw text and its HTML representation, allowing for flexibility in rendering and processing. Additional attributes can be associated with the text for styling or other purposes.\n",
      "name": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsText",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "html",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "text",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsImage": {
      "description": "Represents an image within the DOM. It contains details about the image, such as its alternative text (alt) for accessibility and an asset identifier for fetching the actual image resource. Additional attributes can be associated with the image for styling or other purposes.\n",
      "name": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "alt",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "assetId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItems": {
      "description": "A generic representation of a content element within the Document Object Model (DOM). Each node has a unique identifier and a specific type that determines its content structure and attributes.\n",
      "name": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Node UUID",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsType"
              }
            }
          },
          {
            "description": "Represents textual content within the DOM. It contains both the raw text and its HTML representation, allowing for flexibility in rendering and processing. Additional attributes can be associated with the text for styling or other purposes.\n",
            "key": "text",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsText"
              }
            }
          },
          {
            "description": "Represents an image within the DOM. It contains details about the image, such as its alternative text (alt) for accessibility and an asset identifier for fetching the actual image resource. Additional attributes can be associated with the image for styling or other purposes.\n",
            "key": "image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItemsImage"
              }
            }
          },
          {
            "description": "The custom attributes of the node",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdDomGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "pages_get-content_Response_200": {
      "description": "The DOM (Document Object Model) schema represents the content structure of a web page. It captures various content nodes, such as text and images, along with their associated attributes. Each node has a unique identifier and can be of different types like text or image. The schema also provides pagination details for scenarios where the content nodes are too many to be fetched in a single request.\n",
      "name": "pages_get-content_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Page ID",
            "key": "pageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "nodes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaNodesItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdDomGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "Get-static-contentRequestTooManyRequestsError": {
      "name": "Get-static-contentRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdDomPostRequestBodyContentApplicationJsonSchemaNodesItems": {
      "name": "PagesPageIdDomPostRequestBodyContentApplicationJsonSchemaNodesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Node UUID",
            "key": "nodeId",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "HTML content of the node, including the HTML tag. The HTML tags must be the same as what's returned from the Get Content endpoint.",
            "key": "text",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "Pages_update-static-content_Response_200": {
      "name": "Pages_update-static-content_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of error messages, if any.",
            "key": "errors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Update-static-contentRequestTooManyRequestsError": {
      "name": "Update-static-contentRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsLocation": {
      "description": "Location of the script, either in the header or footer of the published site",
      "name": "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsLocation",
      "shape": {
        "type": "enum",
        "default": "header",
        "values": [
          {
            "value": "header"
          },
          {
            "value": "footer"
          }
        ]
      }
    },
    "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsAttributes": {
      "description": "Developer-specified key/value pairs to be applied as attributes to the script",
      "name": "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItems": {
      "name": "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the registered custom code script",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectId"
              }
            }
          },
          {
            "description": "Location of the script, either in the header or footer of the published site",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsLocation"
            }
          },
          {
            "description": "Semantic Version String for the registered script *e.g. 0.0.1*",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Developer-specified key/value pairs to be applied as attributes to the script",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsAttributes"
              }
            }
          }
        ]
      }
    },
    "pages_scripts_get-custom-code_Response_200": {
      "name": "pages_scripts_get-custom-code_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of scripts applied to a Site or a Page",
            "key": "scripts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "PagesPageIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItems"
                }
              }
            }
          },
          {
            "description": "Date when the Site's scripts were last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date when the Site's scripts were created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Get-page-custom-codeRequestTooManyRequestsError": {
      "name": "Get-page-custom-codeRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsLocation": {
      "description": "Location of the script, either in the header or footer of the published site",
      "name": "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsLocation",
      "shape": {
        "type": "enum",
        "default": "header",
        "values": [
          {
            "value": "header"
          },
          {
            "value": "footer"
          }
        ]
      }
    },
    "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsAttributes": {
      "description": "Developer-specified key/value pairs to be applied as attributes to the script",
      "name": "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItems": {
      "name": "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the registered custom code script",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectId"
              }
            }
          },
          {
            "description": "Location of the script, either in the header or footer of the published site",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsLocation"
            }
          },
          {
            "description": "Semantic Version String for the registered script *e.g. 0.0.1*",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Developer-specified key/value pairs to be applied as attributes to the script",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsAttributes"
              }
            }
          }
        ]
      }
    },
    "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsLocation": {
      "description": "Location of the script, either in the header or footer of the published site",
      "name": "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsLocation",
      "shape": {
        "type": "enum",
        "default": "header",
        "values": [
          {
            "value": "header"
          },
          {
            "value": "footer"
          }
        ]
      }
    },
    "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsAttributes": {
      "description": "Developer-specified key/value pairs to be applied as attributes to the script",
      "name": "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItems": {
      "name": "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the registered custom code script",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectId"
              }
            }
          },
          {
            "description": "Location of the script, either in the header or footer of the published site",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsLocation"
            }
          },
          {
            "description": "Semantic Version String for the registered script *e.g. 0.0.1*",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Developer-specified key/value pairs to be applied as attributes to the script",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsAttributes"
              }
            }
          }
        ]
      }
    },
    "pages_scripts_upsert-custom-code_Response_200": {
      "name": "pages_scripts_upsert-custom-code_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of scripts applied to a Site or a Page",
            "key": "scripts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "PagesPageIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItems"
                }
              }
            }
          },
          {
            "description": "Date when the Site's scripts were last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date when the Site's scripts were created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Add-custom-code-to-pageRequestTooManyRequestsError": {
      "name": "Add-custom-code-to-pageRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-page-custom-codeRequestTooManyRequestsError": {
      "name": "Delete-page-custom-codeRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsLocation": {
      "description": "Location of the script, either in the header or footer of the published site",
      "name": "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsLocation",
      "shape": {
        "type": "enum",
        "default": "header",
        "values": [
          {
            "value": "header"
          },
          {
            "value": "footer"
          }
        ]
      }
    },
    "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsAttributes": {
      "description": "Developer-specified key/value pairs to be applied as attributes to the script",
      "name": "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItems": {
      "name": "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the registered custom code script",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectId"
              }
            }
          },
          {
            "description": "Location of the script, either in the header or footer of the published site",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsLocation"
            }
          },
          {
            "description": "Semantic Version String for the registered script *e.g. 0.0.1*",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Developer-specified key/value pairs to be applied as attributes to the script",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItemsAttributes"
              }
            }
          }
        ]
      }
    },
    "sites_scripts_get-custom-code_Response_200": {
      "name": "sites_scripts_get-custom-code_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of scripts applied to a Site or a Page",
            "key": "scripts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdCustomCodeGetResponsesContentApplicationJsonSchemaScriptsItems"
                }
              }
            }
          },
          {
            "description": "Date when the Site's scripts were last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date when the Site's scripts were created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Get-site-custom-codeRequestTooManyRequestsError": {
      "name": "Get-site-custom-codeRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsLocation": {
      "description": "Location of the script, either in the header or footer of the published site",
      "name": "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsLocation",
      "shape": {
        "type": "enum",
        "default": "header",
        "values": [
          {
            "value": "header"
          },
          {
            "value": "footer"
          }
        ]
      }
    },
    "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsAttributes": {
      "description": "Developer-specified key/value pairs to be applied as attributes to the script",
      "name": "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItems": {
      "name": "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the registered custom code script",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectId"
              }
            }
          },
          {
            "description": "Location of the script, either in the header or footer of the published site",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsLocation"
            }
          },
          {
            "description": "Semantic Version String for the registered script *e.g. 0.0.1*",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Developer-specified key/value pairs to be applied as attributes to the script",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItemsAttributes"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsLocation": {
      "description": "Location of the script, either in the header or footer of the published site",
      "name": "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsLocation",
      "shape": {
        "type": "enum",
        "default": "header",
        "values": [
          {
            "value": "header"
          },
          {
            "value": "footer"
          }
        ]
      }
    },
    "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsAttributes": {
      "description": "Developer-specified key/value pairs to be applied as attributes to the script",
      "name": "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItems": {
      "name": "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the registered custom code script",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectId"
              }
            }
          },
          {
            "description": "Location of the script, either in the header or footer of the published site",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsLocation"
            }
          },
          {
            "description": "Semantic Version String for the registered script *e.g. 0.0.1*",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Developer-specified key/value pairs to be applied as attributes to the script",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItemsAttributes"
              }
            }
          }
        ]
      }
    },
    "sites_scripts_upsert-custom-code_Response_200": {
      "name": "sites_scripts_upsert-custom-code_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of scripts applied to a Site or a Page",
            "key": "scripts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdCustomCodePutResponsesContentApplicationJsonSchemaScriptsItems"
                }
              }
            }
          },
          {
            "description": "Date when the Site's scripts were last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date when the Site's scripts were created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Add-custom-code-tositeRequestTooManyRequestsError": {
      "name": "Add-custom-code-tositeRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-site-custom-codeRequestTooManyRequestsError": {
      "name": "Delete-site-custom-codeRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdRegisteredScriptsGetResponsesContentApplicationJsonSchemaRegisteredScriptsItems": {
      "description": "Registered custom code for application",
      "name": "SitesSiteIdRegisteredScriptsGetResponsesContentApplicationJsonSchemaRegisteredScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable id, derived from the user-specified display name",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Define whether the script can be copied on site duplication and transfer",
            "key": "canCopy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URI for an externally hosted script location",
            "key": "hostedLocation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
            "key": "integrityHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "hash"
                }
              }
            }
          },
          {
            "description": "Timestamp when the script version was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Timestamp when the script version was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "A Semantic Version (SemVer) string, denoting the version of the script",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "scripts_list_Response_200": {
      "description": "A list of scripts registered to the site",
      "name": "scripts_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "registeredScripts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdRegisteredScriptsGetResponsesContentApplicationJsonSchemaRegisteredScriptsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-scriptsRequestTooManyRequestsError": {
      "name": "Get-scriptsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "scripts_register-hosted_Response_201": {
      "description": "Registered custom code for application",
      "name": "scripts_register-hosted_Response_201",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable id, derived from the user-specified display name",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Define whether the script can be copied on site duplication and transfer",
            "key": "canCopy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URI for an externally hosted script location",
            "key": "hostedLocation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
            "key": "integrityHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "hash"
                }
              }
            }
          },
          {
            "description": "Timestamp when the script version was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Timestamp when the script version was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "A Semantic Version (SemVer) string, denoting the version of the script",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Post-hosted-scriptRequestTooManyRequestsError": {
      "name": "Post-hosted-scriptRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "scripts_register-inline_Response_201": {
      "description": "Registered custom code for application",
      "name": "scripts_register-inline_Response_201",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Human readable id, derived from the user-specified display name",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Define whether the script can be copied on site duplication and transfer",
            "key": "canCopy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URI for an externally hosted script location",
            "key": "hostedLocation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
            "key": "integrityHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "hash"
                }
              }
            }
          },
          {
            "description": "Timestamp when the script version was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Timestamp when the script version was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "A Semantic Version (SemVer) string, denoting the version of the script",
            "key": "version",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Post-inline-scriptsRequestTooManyRequestsError": {
      "name": "Post-inline-scriptsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsType": {
      "description": "Whether the Custom Code script is applied at the Site-level or Page-level",
      "name": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "page"
          },
          {
            "value": "site"
          }
        ]
      }
    },
    "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItemsLocation": {
      "description": "Location of the script, either in the header or footer of the published site",
      "name": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItemsLocation",
      "shape": {
        "type": "enum",
        "default": "header",
        "values": [
          {
            "value": "header"
          },
          {
            "value": "footer"
          }
        ]
      }
    },
    "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItemsAttributes": {
      "description": "Developer-specified key/value pairs to be applied as attributes to the script",
      "name": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItemsAttributes",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItems": {
      "name": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "ID of the registered custom code script",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "objectId"
              }
            }
          },
          {
            "description": "Location of the script, either in the header or footer of the published site",
            "key": "location",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItemsLocation"
            }
          },
          {
            "description": "Semantic Version String for the registered script *e.g. 0.0.1*",
            "key": "version",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Developer-specified key/value pairs to be applied as attributes to the script",
            "key": "attributes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItemsAttributes"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItems": {
      "description": "A specific instance of Custom Code applied to a Site or Page",
      "name": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Site id where the custom code was applied",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Page id (if applied at Page-level)",
            "key": "pageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the Custom Code script is applied at the Site-level or Page-level",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsType"
                }
              }
            }
          },
          {
            "description": "A list of scripts applied to a Site or a Page",
            "key": "scripts",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItemsScriptsItems"
                }
              }
            }
          },
          {
            "description": "The date the Block was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Block was most recently updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "sites_scripts_list-custom-code-blocks_Response_200": {
      "description": "Custom Code Blocks corresponding to where scripts were applied",
      "name": "sites_scripts_list-custom-code-blocks_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "blocks",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaBlocksItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdCustomCodeBlocksGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "Get-site-custom-code-blocksRequestTooManyRequestsError": {
      "name": "Get-site-custom-code-blocksRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAssetsGetResponsesContentApplicationJsonSchemaAssetsItemsVariantsItems": {
      "name": "SitesSiteIdAssetsGetResponsesContentApplicationJsonSchemaAssetsItemsVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "URL of where the asset variant is hosted",
            "key": "hostedUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Original file name of the variant",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Display name of the variant",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "format of the variant",
            "key": "format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Value between 0 and 100 representing the image quality",
            "key": "quality",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Any associated validation errors",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAssetsGetResponsesContentApplicationJsonSchemaAssetsItems": {
      "name": "SitesSiteIdAssetsGetResponsesContentApplicationJsonSchemaAssetsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for this asset",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "File format type",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the site that hosts this asset",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Link to the asset",
            "key": "hostedUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Original file name at the time of upload",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Display name of the asset",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdAssetsGetResponsesContentApplicationJsonSchemaAssetsItemsVariantsItems"
                }
              }
            }
          },
          {
            "description": "The visual description of the asset",
            "key": "altText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "assets_list_Response_200": {
      "description": "A list of assets",
      "name": "assets_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "assets",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdAssetsGetResponsesContentApplicationJsonSchemaAssetsItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-assetsRequestTooManyRequestsError": {
      "name": "List-assetsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAssetsPostResponsesContentApplicationJsonSchemaUploadDetails": {
      "description": "Metadata for uploading the asset binary",
      "name": "SitesSiteIdAssetsPostResponsesContentApplicationJsonSchemaUploadDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "acl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "bucket",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "X-Amz-Algorithm",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "X-Amz-Credential",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "X-Amz-Date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "Policy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "X-Amz-Signature",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "success_action_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "content-type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "key": "Cache-Control",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "assets_create_Response_200": {
      "name": "assets_create_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Metadata for uploading the asset binary",
            "key": "uploadDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdAssetsPostResponsesContentApplicationJsonSchemaUploadDetails"
              }
            }
          },
          {
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Parent folder for the asset",
            "key": "parentFolder",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "key": "uploadUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "S3 link to the asset",
            "key": "assetUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Represents the link to the asset",
            "key": "hostedUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Original file name when uploaded. If not specified at time of upload, it may be extracted from the raw file name",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "Create-assetRequestTooManyRequestsError": {
      "name": "Create-assetRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "AssetsAssetIdGetResponsesContentApplicationJsonSchemaVariantsItems": {
      "name": "AssetsAssetIdGetResponsesContentApplicationJsonSchemaVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "URL of where the asset variant is hosted",
            "key": "hostedUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Original file name of the variant",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Display name of the variant",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "format of the variant",
            "key": "format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Value between 0 and 100 representing the image quality",
            "key": "quality",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Any associated validation errors",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "assets_get_Response_200": {
      "name": "assets_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for this asset",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "File format type",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the site that hosts this asset",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Link to the asset",
            "key": "hostedUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Original file name at the time of upload",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Display name of the asset",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "AssetsAssetIdGetResponsesContentApplicationJsonSchemaVariantsItems"
                }
              }
            }
          },
          {
            "description": "The visual description of the asset",
            "key": "altText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Get-assetRequestTooManyRequestsError": {
      "name": "Get-assetRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-assetRequestTooManyRequestsError": {
      "name": "Delete-assetRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "AssetsAssetIdPatchResponsesContentApplicationJsonSchemaVariantsItems": {
      "name": "AssetsAssetIdPatchResponsesContentApplicationJsonSchemaVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "URL of where the asset variant is hosted",
            "key": "hostedUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Original file name of the variant",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Display name of the variant",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "format of the variant",
            "key": "format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Value between 0 and 100 representing the image quality",
            "key": "quality",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Any associated validation errors",
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "assets_update_Response_200": {
      "name": "assets_update_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for this asset",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "File format type",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the site that hosts this asset",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Link to the asset",
            "key": "hostedUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Original file name at the time of upload",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Display name of the asset",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date the asset metadata was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "AssetsAssetIdPatchResponsesContentApplicationJsonSchemaVariantsItems"
                }
              }
            }
          },
          {
            "description": "The visual description of the asset",
            "key": "altText",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Patch-assetRequestTooManyRequestsError": {
      "name": "Patch-assetRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAssetFoldersGetResponsesContentApplicationJsonSchemaAssetFoldersItems": {
      "description": "Asset Folder details",
      "name": "SitesSiteIdAssetFoldersGetResponsesContentApplicationJsonSchemaAssetFoldersItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Asset Folder",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "User visible name for the Asset Folder",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Pointer to parent Asset Folder (or null if root)",
            "key": "parentFolder",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of Asset instances in the folder",
            "key": "assets",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "The unique id of the site the Asset Folder belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date that the Asset Folder was created on",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date that the Asset Folder was last updated on",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAssetFoldersGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdAssetFoldersGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "assets_list-folders_Response_200": {
      "description": "The Asset Folders object",
      "name": "assets_list-folders_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A list of Asset folders",
            "key": "assetFolders",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdAssetFoldersGetResponsesContentApplicationJsonSchemaAssetFoldersItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdAssetFoldersGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-asset-foldersRequestTooManyRequestsError": {
      "name": "List-asset-foldersRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "assets_create-folder_Response_200": {
      "description": "Asset Folder details",
      "name": "assets_create-folder_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Asset Folder",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "User visible name for the Asset Folder",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Pointer to parent Asset Folder (or null if root)",
            "key": "parentFolder",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of Asset instances in the folder",
            "key": "assets",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "The unique id of the site the Asset Folder belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date that the Asset Folder was created on",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date that the Asset Folder was last updated on",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "Create-asset-folderRequestTooManyRequestsError": {
      "name": "Create-asset-folderRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "assets_get-folder_Response_200": {
      "description": "Asset Folder details",
      "name": "assets_get-folder_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Asset Folder",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "User visible name for the Asset Folder",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Pointer to parent Asset Folder (or null if root)",
            "key": "parentFolder",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of Asset instances in the folder",
            "key": "assets",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "The unique id of the site the Asset Folder belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date that the Asset Folder was created on",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date that the Asset Folder was last updated on",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "Get-asset-folderRequestTooManyRequestsError": {
      "name": "Get-asset-folderRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItemsTriggerType": {
      "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
      "name": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItemsTriggerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "form_submission"
          },
          {
            "value": "site_publish"
          },
          {
            "value": "page_created"
          },
          {
            "value": "page_metadata_updated"
          },
          {
            "value": "page_deleted"
          },
          {
            "value": "ecomm_new_order"
          },
          {
            "value": "ecomm_order_changed"
          },
          {
            "value": "ecomm_inventory_changed"
          },
          {
            "value": "user_account_added"
          },
          {
            "value": "user_account_updated"
          },
          {
            "value": "user_account_deleted"
          },
          {
            "value": "collection_item_created"
          },
          {
            "value": "collection_item_changed"
          },
          {
            "value": "collection_item_deleted"
          },
          {
            "value": "collection_item_unpublished"
          }
        ]
      }
    },
    "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItemsFilter": {
      "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
      "name": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItemsFilter",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the form you'd like to recieve notifications for.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItems": {
      "name": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Webhook registration",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
            "key": "triggerType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItemsTriggerType"
              }
            }
          },
          {
            "description": "URL to send the Webhook payload to",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Workspace the Webhook is registered in",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for the Site the Webhook is registered in",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "key": "filter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItemsFilter"
              }
            }
          },
          {
            "description": "Date the Webhook instance was last triggered",
            "key": "lastTriggered",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date the Webhook registration was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "webhooks_list_Response_200": {
      "name": "webhooks_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          },
          {
            "key": "webhooks",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdWebhooksGetResponsesContentApplicationJsonSchemaWebhooksItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-webhooksRequestTooManyRequestsError": {
      "name": "List-webhooksRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdWebhooksPostRequestBodyContentApplicationJsonSchemaTriggerType": {
      "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
      "name": "SitesSiteIdWebhooksPostRequestBodyContentApplicationJsonSchemaTriggerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "form_submission"
          },
          {
            "value": "site_publish"
          },
          {
            "value": "page_created"
          },
          {
            "value": "page_metadata_updated"
          },
          {
            "value": "page_deleted"
          },
          {
            "value": "ecomm_new_order"
          },
          {
            "value": "ecomm_order_changed"
          },
          {
            "value": "ecomm_inventory_changed"
          },
          {
            "value": "user_account_added"
          },
          {
            "value": "user_account_updated"
          },
          {
            "value": "user_account_deleted"
          },
          {
            "value": "collection_item_created"
          },
          {
            "value": "collection_item_changed"
          },
          {
            "value": "collection_item_deleted"
          },
          {
            "value": "collection_item_unpublished"
          }
        ]
      }
    },
    "SitesSiteIdWebhooksPostRequestBodyContentApplicationJsonSchemaFilter": {
      "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
      "name": "SitesSiteIdWebhooksPostRequestBodyContentApplicationJsonSchemaFilter",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the form you'd like to recieve notifications for.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdWebhooksPostResponsesContentApplicationJsonSchemaTriggerType": {
      "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
      "name": "SitesSiteIdWebhooksPostResponsesContentApplicationJsonSchemaTriggerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "form_submission"
          },
          {
            "value": "site_publish"
          },
          {
            "value": "page_created"
          },
          {
            "value": "page_metadata_updated"
          },
          {
            "value": "page_deleted"
          },
          {
            "value": "ecomm_new_order"
          },
          {
            "value": "ecomm_order_changed"
          },
          {
            "value": "ecomm_inventory_changed"
          },
          {
            "value": "user_account_added"
          },
          {
            "value": "user_account_updated"
          },
          {
            "value": "user_account_deleted"
          },
          {
            "value": "collection_item_created"
          },
          {
            "value": "collection_item_changed"
          },
          {
            "value": "collection_item_deleted"
          },
          {
            "value": "collection_item_unpublished"
          }
        ]
      }
    },
    "SitesSiteIdWebhooksPostResponsesContentApplicationJsonSchemaFilter": {
      "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
      "name": "SitesSiteIdWebhooksPostResponsesContentApplicationJsonSchemaFilter",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the form you'd like to recieve notifications for.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "webhooks_create_Response_201": {
      "name": "webhooks_create_Response_201",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Webhook registration",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
            "key": "triggerType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdWebhooksPostResponsesContentApplicationJsonSchemaTriggerType"
              }
            }
          },
          {
            "description": "URL to send the Webhook payload to",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Workspace the Webhook is registered in",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for the Site the Webhook is registered in",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "key": "filter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdWebhooksPostResponsesContentApplicationJsonSchemaFilter"
              }
            }
          },
          {
            "description": "Date the Webhook instance was last triggered",
            "key": "lastTriggered",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date the Webhook registration was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Create-webhookRequestTooManyRequestsError": {
      "name": "Create-webhookRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "WebhooksWebhookIdGetResponsesContentApplicationJsonSchemaTriggerType": {
      "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
      "name": "WebhooksWebhookIdGetResponsesContentApplicationJsonSchemaTriggerType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "form_submission"
          },
          {
            "value": "site_publish"
          },
          {
            "value": "page_created"
          },
          {
            "value": "page_metadata_updated"
          },
          {
            "value": "page_deleted"
          },
          {
            "value": "ecomm_new_order"
          },
          {
            "value": "ecomm_order_changed"
          },
          {
            "value": "ecomm_inventory_changed"
          },
          {
            "value": "user_account_added"
          },
          {
            "value": "user_account_updated"
          },
          {
            "value": "user_account_deleted"
          },
          {
            "value": "collection_item_created"
          },
          {
            "value": "collection_item_changed"
          },
          {
            "value": "collection_item_deleted"
          },
          {
            "value": "collection_item_unpublished"
          }
        ]
      }
    },
    "WebhooksWebhookIdGetResponsesContentApplicationJsonSchemaFilter": {
      "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
      "name": "WebhooksWebhookIdGetResponsesContentApplicationJsonSchemaFilter",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the form you'd like to recieve notifications for.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "webhooks_get_Response_200": {
      "name": "webhooks_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Webhook registration",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
            "key": "triggerType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksWebhookIdGetResponsesContentApplicationJsonSchemaTriggerType"
              }
            }
          },
          {
            "description": "URL to send the Webhook payload to",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Unique identifier for the Workspace the Webhook is registered in",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Unique identifier for the Site the Webhook is registered in",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
            "key": "filter",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "WebhooksWebhookIdGetResponsesContentApplicationJsonSchemaFilter"
              }
            }
          },
          {
            "description": "Date the Webhook instance was last triggered",
            "key": "lastTriggered",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date the Webhook registration was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "Get-webhookRequestTooManyRequestsError": {
      "name": "Get-webhookRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "Remove-webhookRequestTooManyRequestsError": {
      "name": "Remove-webhookRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsFieldsType": {
      "description": "The field type",
      "name": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsFieldsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Plain"
          },
          {
            "value": "Email"
          },
          {
            "value": "Password"
          },
          {
            "value": "Phone"
          },
          {
            "value": "Number"
          }
        ]
      }
    },
    "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsFields": {
      "description": "An object containing field info for a specific fieldID.",
      "name": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsFields",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The field name displayed on the site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The field type",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsFieldsType"
              }
            }
          },
          {
            "description": "The placeholder text for the field",
            "key": "placeholder",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the field is visible to the user",
            "key": "userVisible",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsResponseSettings": {
      "description": "Settings for form responses",
      "name": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsResponseSettings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The url or path to redirect the user to after form submission",
            "key": "redirectUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The HTTP request method to use for the redirectUrl (eg. POST or GET)",
            "key": "redirectMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The action to take after form submission",
            "key": "redirectAction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether to send an email confirmation to the user",
            "key": "sendEmailConfirmation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItems": {
      "description": "A Webflow form",
      "name": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Form name displayed on the site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date that the Form was created on",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date that the Form was last updated on",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "A collection of form field objects",
            "key": "fields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsFields"
                }
              }
            }
          },
          {
            "description": "Settings for form responses",
            "key": "responseSettings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItemsResponseSettings"
              }
            }
          },
          {
            "description": "The unique id for the Form",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id of the Site the Form belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id corresponding to the site's Domain name",
            "key": "siteDomainId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id for the Page on which the Form is placed",
            "key": "pageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The user-visible name of the Page where the Form is placed",
            "key": "pageName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique id of the Form element",
            "key": "formElementId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The unique id of the Workspace the Site belongs to",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "forms_list_Response_200": {
      "description": "A list of forms",
      "name": "forms_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "forms",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaFormsItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdFormsGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-formsRequestTooManyRequestsError": {
      "name": "List-formsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "FormsFormIdGetResponsesContentApplicationJsonSchemaFieldsType": {
      "description": "The field type",
      "name": "FormsFormIdGetResponsesContentApplicationJsonSchemaFieldsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Plain"
          },
          {
            "value": "Email"
          },
          {
            "value": "Password"
          },
          {
            "value": "Phone"
          },
          {
            "value": "Number"
          }
        ]
      }
    },
    "FormsFormIdGetResponsesContentApplicationJsonSchemaFields": {
      "description": "An object containing field info for a specific fieldID.",
      "name": "FormsFormIdGetResponsesContentApplicationJsonSchemaFields",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The field name displayed on the site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The field type",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FormsFormIdGetResponsesContentApplicationJsonSchemaFieldsType"
              }
            }
          },
          {
            "description": "The placeholder text for the field",
            "key": "placeholder",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether the field is visible to the user",
            "key": "userVisible",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "FormsFormIdGetResponsesContentApplicationJsonSchemaResponseSettings": {
      "description": "Settings for form responses",
      "name": "FormsFormIdGetResponsesContentApplicationJsonSchemaResponseSettings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The url or path to redirect the user to after form submission",
            "key": "redirectUrl",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The HTTP request method to use for the redirectUrl (eg. POST or GET)",
            "key": "redirectMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The action to take after form submission",
            "key": "redirectAction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Whether to send an email confirmation to the user",
            "key": "sendEmailConfirmation",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "forms_get_Response_200": {
      "description": "A form and its corresponding metadata",
      "name": "forms_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Form name displayed on the site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Date that the Form was created on",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Date that the Form was last updated on",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "A collection of form field objects",
            "key": "fields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "id",
                  "value": "FormsFormIdGetResponsesContentApplicationJsonSchemaFields"
                }
              }
            }
          },
          {
            "description": "Settings for form responses",
            "key": "responseSettings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FormsFormIdGetResponsesContentApplicationJsonSchemaResponseSettings"
              }
            }
          },
          {
            "description": "The unique id for the Form",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id of the Site the Form belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id corresponding to the site's Domain name",
            "key": "siteDomainId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id for the Page on which the Form is placed",
            "key": "pageId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The user-visible name of the Page where the Form is placed",
            "key": "pageName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique id of the Form element",
            "key": "formElementId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The unique id of the Workspace the Site belongs to",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          }
        ]
      }
    },
    "Get-form-schemaRequestTooManyRequestsError": {
      "name": "Get-form-schemaRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaFormSubmissionsItemsFormResponse": {
      "description": "The data submitted in the Form",
      "name": "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaFormSubmissionsItemsFormResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaFormSubmissionsItems": {
      "name": "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaFormSubmissionsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique id of the Form submission",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The Form name displayed on the site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique id of the Site the Form belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id of the Workspace the Site belongs to",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date that the Form was submitted on",
            "key": "dateSubmitted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The data submitted in the Form",
            "key": "formResponse",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaFormSubmissionsItemsFormResponse"
              }
            }
          }
        ]
      }
    },
    "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "forms_list-submissions_Response_200": {
      "description": "A list of form submissions",
      "name": "forms_list-submissions_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "formSubmissions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaFormSubmissionsItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FormsFormIdSubmissionsGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-submissionsRequestTooManyRequestsError": {
      "name": "List-submissionsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "FormSubmissionsFormSubmissionIdGetResponsesContentApplicationJsonSchemaFormResponse": {
      "description": "The data submitted in the Form",
      "name": "FormSubmissionsFormSubmissionIdGetResponsesContentApplicationJsonSchemaFormResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "forms_get-submission_Response_200": {
      "description": "A form submission",
      "name": "forms_get-submission_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique id of the Form submission",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The Form name displayed on the site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique id of the Site the Form belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id of the Workspace the Site belongs to",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date that the Form was submitted on",
            "key": "dateSubmitted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The data submitted in the Form",
            "key": "formResponse",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FormSubmissionsFormSubmissionIdGetResponsesContentApplicationJsonSchemaFormResponse"
              }
            }
          }
        ]
      }
    },
    "Get-form-submissionRequestTooManyRequestsError": {
      "name": "Get-form-submissionRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "FormSubmissionsFormSubmissionIdPatchRequestBodyContentApplicationJsonSchemaFormSubmissionData": {
      "description": "An existing **hidden field** defined on the form schema, and the corresponding value to set",
      "name": "FormSubmissionsFormSubmissionIdPatchRequestBodyContentApplicationJsonSchemaFormSubmissionData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "FormSubmissionsFormSubmissionIdPatchResponsesContentApplicationJsonSchemaFormResponse": {
      "description": "The data submitted in the Form",
      "name": "FormSubmissionsFormSubmissionIdPatchResponsesContentApplicationJsonSchemaFormResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "forms_update-submission_Response_200": {
      "description": "A form submission",
      "name": "forms_update-submission_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique id of the Form submission",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The Form name displayed on the site",
            "key": "displayName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unique id of the Site the Form belongs to",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "The unique id of the Workspace the Site belongs to",
            "key": "workspaceId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Date that the Form was submitted on",
            "key": "dateSubmitted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The data submitted in the Form",
            "key": "formResponse",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "FormSubmissionsFormSubmissionIdPatchResponsesContentApplicationJsonSchemaFormResponse"
              }
            }
          }
        ]
      }
    },
    "Modify-form-submissionRequestTooManyRequestsError": {
      "name": "Modify-form-submissionRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersGetParametersSort": {
      "name": "SitesSiteIdUsersGetParametersSort",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Sorts users in ascending order based on their created date",
            "value": "CreatedOn"
          },
          {
            "description": "Sorts users in descending order based on their created date",
            "value": "-CreatedOn"
          },
          {
            "description": "Sorts users in ascending order based on their email",
            "value": "Email"
          },
          {
            "description": "Sorts users in descending order based on their email",
            "value": "-Email"
          },
          {
            "description": "Sorts users in ascending order based on their status",
            "value": "Status"
          },
          {
            "description": "Sorts users in descending order based on their status",
            "value": "-Status"
          },
          {
            "description": "Sorts users in ascending order based on their last login date",
            "value": "LastLogin"
          },
          {
            "description": "Sorts users in descending order based on their last login date",
            "value": "-LastLogin"
          },
          {
            "description": "Sorts users in ascending order based on their update date",
            "value": "UpdatedOn"
          },
          {
            "description": "Sorts users in descending order based on their update date",
            "value": "-UpdatedOn"
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsStatus": {
      "description": "The status of the user",
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invited"
          },
          {
            "value": "verified"
          },
          {
            "value": "unverified"
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsAccessGroupsItemsType": {
      "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsAccessGroupsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "ecommerce"
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsAccessGroupsItems": {
      "description": "Access group slugs and types",
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Access group identifier for APIs",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsAccessGroupsItemsType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsDataData": {
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email address of the user\n",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom user attributes",
            "key": "additionalProperties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsData": {
      "description": "An object containing the User's basic info and custom fields",
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsDataData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItems": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the User",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Shows whether the user has verified their email address",
            "key": "isEmailVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was invited",
            "key": "invitedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was logged in",
            "key": "lastLogin",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the user",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsStatus"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Access groups the user belongs to",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsAccessGroupsItems"
                }
              }
            }
          },
          {
            "description": "An object containing the User's basic info and custom fields",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItemsData"
              }
            }
          }
        ]
      }
    },
    "users_list_Response_200": {
      "description": "The list users results",
      "name": "users_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of users returned",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The limit specified in the request",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 10
                }
              }
            }
          },
          {
            "description": "The offset specified for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Total number of users in the collection",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "List of Users for a Site",
            "key": "users",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaUsersItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf0Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf0Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "missing_scopes"
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems": {
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "ListUsersRequestForbiddenError0": {
      "description": "The request is missing the required scopes.",
      "name": "ListUsersRequestForbiddenError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf1Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf1Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "users_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems": {
      "name": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "ListUsersRequestForbiddenError1": {
      "description": "The site does not have Users enabled.",
      "name": "ListUsersRequestForbiddenError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-usersRequestForbiddenError": {
      "name": "List-usersRequestForbiddenError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ListUsersRequestForbiddenError0",
            "type": {
              "type": "id",
              "value": "ListUsersRequestForbiddenError0"
            }
          },
          {
            "typeName": "ListUsersRequestForbiddenError1",
            "type": {
              "type": "id",
              "value": "ListUsersRequestForbiddenError1"
            }
          }
        ]
      }
    },
    "List-usersRequestTooManyRequestsError": {
      "name": "List-usersRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the user",
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invited"
          },
          {
            "value": "verified"
          },
          {
            "value": "unverified"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaAccessGroupsItemsType": {
      "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaAccessGroupsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "ecommerce"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaAccessGroupsItems": {
      "description": "Access group slugs and types",
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Access group identifier for APIs",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaAccessGroupsItemsType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaDataData": {
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email address of the user\n",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom user attributes",
            "key": "additionalProperties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaData": {
      "description": "An object containing the User's basic info and custom fields",
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaDataData"
              }
            }
          }
        ]
      }
    },
    "users_get_Response_200": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "users_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the User",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Shows whether the user has verified their email address",
            "key": "isEmailVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was invited",
            "key": "invitedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was logged in",
            "key": "lastLogin",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the user",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaStatus"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Access groups the user belongs to",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaAccessGroupsItems"
                }
              }
            }
          },
          {
            "description": "An object containing the User's basic info and custom fields",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf0Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf0Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "missing_scopes"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems": {
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "GetUserRequestForbiddenError0": {
      "description": "The request is missing the required scopes.",
      "name": "GetUserRequestForbiddenError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf1Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf1Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "users_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems": {
      "name": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "GetUserRequestForbiddenError1": {
      "description": "The site does not have Users enabled.",
      "name": "GetUserRequestForbiddenError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-userRequestForbiddenError": {
      "name": "Get-userRequestForbiddenError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "GetUserRequestForbiddenError0",
            "type": {
              "type": "id",
              "value": "GetUserRequestForbiddenError0"
            }
          },
          {
            "typeName": "GetUserRequestForbiddenError1",
            "type": {
              "type": "id",
              "value": "GetUserRequestForbiddenError1"
            }
          }
        ]
      }
    },
    "Get-userRequestTooManyRequestsError": {
      "name": "Get-userRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf0Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf0Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "missing_scopes"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf0DetailsItems": {
      "name": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf0DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "DeleteUserRequestForbiddenError0": {
      "description": "The request is missing the required scopes.",
      "name": "DeleteUserRequestForbiddenError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf1Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf1Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "users_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf1DetailsItems": {
      "name": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf1DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "DeleteUserRequestForbiddenError1": {
      "description": "The site does not have Users enabled.",
      "name": "DeleteUserRequestForbiddenError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdDeleteResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Delete-userRequestForbiddenError": {
      "name": "Delete-userRequestForbiddenError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "DeleteUserRequestForbiddenError0",
            "type": {
              "type": "id",
              "value": "DeleteUserRequestForbiddenError0"
            }
          },
          {
            "typeName": "DeleteUserRequestForbiddenError1",
            "type": {
              "type": "id",
              "value": "DeleteUserRequestForbiddenError1"
            }
          }
        ]
      }
    },
    "Delete-userRequestTooManyRequestsError": {
      "name": "Delete-userRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchRequestBodyContentApplicationJsonSchemaData": {
      "name": "SitesSiteIdUsersUserIdPatchRequestBodyContentApplicationJsonSchemaData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the user",
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invited"
          },
          {
            "value": "verified"
          },
          {
            "value": "unverified"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaAccessGroupsItemsType": {
      "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaAccessGroupsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "ecommerce"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaAccessGroupsItems": {
      "description": "Access group slugs and types",
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Access group identifier for APIs",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaAccessGroupsItemsType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaDataData": {
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email address of the user\n",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom user attributes",
            "key": "additionalProperties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaData": {
      "description": "An object containing the User's basic info and custom fields",
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaDataData"
              }
            }
          }
        ]
      }
    },
    "users_update_Response_200": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "users_update_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the User",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Shows whether the user has verified their email address",
            "key": "isEmailVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was invited",
            "key": "invitedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was logged in",
            "key": "lastLogin",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the user",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaStatus"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Access groups the user belongs to",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaAccessGroupsItems"
                }
              }
            }
          },
          {
            "description": "An object containing the User's basic info and custom fields",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf0Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf0Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "missing_scopes"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf0DetailsItems": {
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf0DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "UpdateUserRequestForbiddenError0": {
      "description": "The request is missing the required scopes.",
      "name": "UpdateUserRequestForbiddenError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf1Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf1Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "users_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf1DetailsItems": {
      "name": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf1DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "UpdateUserRequestForbiddenError1": {
      "description": "The site does not have Users enabled.",
      "name": "UpdateUserRequestForbiddenError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersUserIdPatchResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Update-userRequestForbiddenError": {
      "name": "Update-userRequestForbiddenError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "UpdateUserRequestForbiddenError0",
            "type": {
              "type": "id",
              "value": "UpdateUserRequestForbiddenError0"
            }
          },
          {
            "typeName": "UpdateUserRequestForbiddenError1",
            "type": {
              "type": "id",
              "value": "UpdateUserRequestForbiddenError1"
            }
          }
        ]
      }
    },
    "Update-userRequestTooManyRequestsError": {
      "name": "Update-userRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the user",
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invited"
          },
          {
            "value": "verified"
          },
          {
            "value": "unverified"
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaAccessGroupsItemsType": {
      "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaAccessGroupsItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "admin"
          },
          {
            "value": "ecommerce"
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaAccessGroupsItems": {
      "description": "Access group slugs and types",
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Access group identifier for APIs",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The type of access group based on how it was assigned to the user.\n* `admin` - Assigned to the user via API or in the designer\n* `ecommerce` - Assigned to the user via an ecommerce purchase\n",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaAccessGroupsItemsType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaDataData": {
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the user\n",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The email address of the user\n",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted the privacy policy\n",
            "key": "accept-privacy",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Boolean indicating if the user has accepted to receive communications\n",
            "key": "accept-communications",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Custom user attributes",
            "key": "additionalProperties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaData": {
      "description": "An object containing the User's basic info and custom fields",
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaDataData"
              }
            }
          }
        ]
      }
    },
    "users_invite_Response_200": {
      "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
      "name": "users_invite_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the User",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Shows whether the user has verified their email address",
            "key": "isEmailVerified",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was invited",
            "key": "invitedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The timestamp the user was logged in",
            "key": "lastLogin",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the user",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaStatus"
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Access groups the user belongs to",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaAccessGroupsItems"
                }
              }
            }
          },
          {
            "description": "An object containing the User's basic info and custom fields",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "duplicate_user_email"
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0DetailsItems": {
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "InviteUserRequestForbiddenError0": {
      "description": "The request is missing the required scopes.",
      "name": "InviteUserRequestForbiddenError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1Code": {
      "description": "Error code",
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "user_limit_reached"
          }
        ]
      }
    },
    "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1DetailsItems": {
      "name": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "InviteUserRequestForbiddenError1": {
      "description": "The site does not have Users enabled.",
      "name": "InviteUserRequestForbiddenError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Invite-userRequestForbiddenError": {
      "name": "Invite-userRequestForbiddenError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InviteUserRequestForbiddenError0",
            "type": {
              "type": "id",
              "value": "InviteUserRequestForbiddenError0"
            }
          },
          {
            "typeName": "InviteUserRequestForbiddenError1",
            "type": {
              "type": "id",
              "value": "InviteUserRequestForbiddenError1"
            }
          }
        ]
      }
    },
    "InviteUserRequestConflictError0": {
      "description": "The email address provided is already in use by another user.",
      "name": "InviteUserRequestConflictError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "InviteUserRequestConflictError1": {
      "description": "The site has reached the maximum number of users allowed.",
      "name": "InviteUserRequestConflictError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersInvitePostResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Invite-userRequestConflictError": {
      "name": "Invite-userRequestConflictError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "InviteUserRequestConflictError0",
            "type": {
              "type": "id",
              "value": "InviteUserRequestConflictError0"
            }
          },
          {
            "typeName": "InviteUserRequestConflictError1",
            "type": {
              "type": "id",
              "value": "InviteUserRequestConflictError1"
            }
          }
        ]
      }
    },
    "Invite-userRequestTooManyRequestsError": {
      "name": "Invite-userRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAccessgroupsGetParametersSort": {
      "name": "SitesSiteIdAccessgroupsGetParametersSort",
      "shape": {
        "type": "enum",
        "values": [
          {
            "description": "Sorts users in ascending order based on their created date",
            "value": "CreatedOn"
          },
          {
            "description": "Sorts users in descending order based on their created date",
            "value": "-CreatedOn"
          }
        ]
      }
    },
    "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaAccessGroupsItems": {
      "name": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaAccessGroupsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Access Group",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "Name of the the Access Group",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Shortened unique identifier based on name, optimized for its use in the user’s JWT",
            "key": "shortId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Shortened unique identifier based on name, optimized for human readability and public API use",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The date the Access Group was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ]
      }
    },
    "access-groups_list_Response_200": {
      "description": "The list access groups results",
      "name": "access-groups_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of access groups returned",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The limit specified in the request",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 10
                }
              }
            }
          },
          {
            "description": "The offset specified for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double",
                  "default": 0
                }
              }
            }
          },
          {
            "description": "Total number of access groups in the collection",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "List of Site Access Groups",
            "key": "accessGroups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaAccessGroupsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf0Code": {
      "description": "Error code",
      "name": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf0Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "missing_scopes"
          }
        ]
      }
    },
    "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems": {
      "name": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "ListAccessGroupsRequestForbiddenError0": {
      "description": "The request is missing the required scopes.",
      "name": "ListAccessGroupsRequestForbiddenError0",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf0Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf0DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf1Code": {
      "description": "Error code",
      "name": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf1Code",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "users_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems": {
      "name": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "ListAccessGroupsRequestForbiddenError1": {
      "description": "The site does not have Users enabled.",
      "name": "ListAccessGroupsRequestForbiddenError1",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf1Code"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdAccessgroupsGetResponsesContentApplicationJsonSchemaOneOf1DetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-access-groupsRequestForbiddenError": {
      "name": "List-access-groupsRequestForbiddenError",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "ListAccessGroupsRequestForbiddenError0",
            "type": {
              "type": "id",
              "value": "ListAccessGroupsRequestForbiddenError0"
            }
          },
          {
            "typeName": "ListAccessGroupsRequestForbiddenError1",
            "type": {
              "type": "id",
              "value": "ListAccessGroupsRequestForbiddenError1"
            }
          }
        ]
      }
    },
    "List-access-groupsRequestTooManyRequestsError": {
      "name": "List-access-groupsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataSkuPropertiesItemsEnumItems": {
      "description": "Enumerated Product variants/Options for the SKU",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataSkuPropertiesItemsEnumItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Product variant/Option",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the Product variant/Option",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Slug for the Product variant/Option in the Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataSkuPropertiesItems": {
      "description": "A variant/option type for a SKU",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataSkuPropertiesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a collection of Product Variants",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the collection of Product Variants",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The individual Product variants that are contained within the collection",
            "key": "enum",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataSkuPropertiesItemsEnumItems"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataTaxCategory": {
      "description": "Product tax class",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataTaxCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "standard-taxable"
          },
          {
            "value": "standard-exempt"
          },
          {
            "value": "books-religious"
          },
          {
            "value": "books-textbook"
          },
          {
            "value": "clothing"
          },
          {
            "value": "clothing-swimwear"
          },
          {
            "value": "digital-goods"
          },
          {
            "value": "digital-service"
          },
          {
            "value": "drugs-non-prescription"
          },
          {
            "value": "drugs-prescription"
          },
          {
            "value": "food-bottled-water"
          },
          {
            "value": "food-candy"
          },
          {
            "value": "food-groceries"
          },
          {
            "value": "food-prepared"
          },
          {
            "value": "food-soda"
          },
          {
            "value": "food-supplements"
          },
          {
            "value": "magazine-individual"
          },
          {
            "value": "magazine-subscription"
          },
          {
            "value": "service-admission"
          },
          {
            "value": "service-advertising"
          },
          {
            "value": "service-dry-cleaning"
          },
          {
            "value": "service-hairdressing"
          },
          {
            "value": "service-installation"
          },
          {
            "value": "service-miscellaneous"
          },
          {
            "value": "service-parking"
          },
          {
            "value": "service-printing"
          },
          {
            "value": "service-professional"
          },
          {
            "value": "service-repair"
          },
          {
            "value": "service-training"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataEcProductType": {
      "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataEcProductType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ff42fee0113744f693a764e3431a9cc2"
          },
          {
            "value": "f22027db68002190aef89a4a2b7ac8a1"
          },
          {
            "value": "c599e43b1a1c34d5a323aedf75d3adf6"
          },
          {
            "value": "b6ccc1830db4b1babeb06a9ac5f6dd76"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldData": {
      "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A description of your product",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is shippable",
            "key": "shippable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Variant types to include in SKUs",
            "key": "sku-properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataSkuPropertiesItems"
                }
              }
            }
          },
          {
            "description": "The categories your product belongs to.",
            "key": "categories",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Product tax class",
            "key": "tax-category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataTaxCategory"
              }
            }
          },
          {
            "description": "The default SKU associated with this product.",
            "key": "default-sku",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
            "key": "ec-product-type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldDataEcProductType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProduct": {
      "description": "The Product object",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProduct",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Product is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProductFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItems": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItemsFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItems": {
      "description": "A product and its SKUs.",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Product object",
            "key": "product",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsProduct"
              }
            }
          },
          {
            "description": "A list of SKU Objects",
            "key": "skus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItemsSkusItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "products_list_Response_200": {
      "description": "Results from product list",
      "name": "products_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of Item objects within the Collection. Contains product and skus keys for each Item",
            "key": "items",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaItemsItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-productsRequestForbiddenError": {
      "name": "List-productsRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "List-productsRequestConflictError": {
      "name": "List-productsRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsGetResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-productsRequestTooManyRequestsError": {
      "name": "List-productsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaPublishStatus": {
      "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaPublishStatus",
      "shape": {
        "type": "enum",
        "default": "staging",
        "values": [
          {
            "value": "staging"
          },
          {
            "value": "live"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems": {
      "description": "Enumerated Product variants/Options for the SKU",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Product variant/Option",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the Product variant/Option",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Slug for the Product variant/Option in the Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems": {
      "description": "A variant/option type for a SKU",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a collection of Product Variants",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the collection of Product Variants",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The individual Product variants that are contained within the collection",
            "key": "enum",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataTaxCategory": {
      "description": "Product tax class",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataTaxCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "standard-taxable"
          },
          {
            "value": "standard-exempt"
          },
          {
            "value": "books-religious"
          },
          {
            "value": "books-textbook"
          },
          {
            "value": "clothing"
          },
          {
            "value": "clothing-swimwear"
          },
          {
            "value": "digital-goods"
          },
          {
            "value": "digital-service"
          },
          {
            "value": "drugs-non-prescription"
          },
          {
            "value": "drugs-prescription"
          },
          {
            "value": "food-bottled-water"
          },
          {
            "value": "food-candy"
          },
          {
            "value": "food-groceries"
          },
          {
            "value": "food-prepared"
          },
          {
            "value": "food-soda"
          },
          {
            "value": "food-supplements"
          },
          {
            "value": "magazine-individual"
          },
          {
            "value": "magazine-subscription"
          },
          {
            "value": "service-admission"
          },
          {
            "value": "service-advertising"
          },
          {
            "value": "service-dry-cleaning"
          },
          {
            "value": "service-hairdressing"
          },
          {
            "value": "service-installation"
          },
          {
            "value": "service-miscellaneous"
          },
          {
            "value": "service-parking"
          },
          {
            "value": "service-printing"
          },
          {
            "value": "service-professional"
          },
          {
            "value": "service-repair"
          },
          {
            "value": "service-training"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataEcProductType": {
      "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataEcProductType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ff42fee0113744f693a764e3431a9cc2"
          },
          {
            "value": "f22027db68002190aef89a4a2b7ac8a1"
          },
          {
            "value": "c599e43b1a1c34d5a323aedf75d3adf6"
          },
          {
            "value": "b6ccc1830db4b1babeb06a9ac5f6dd76"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldData": {
      "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "A description of your product",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is shippable",
            "key": "shippable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Variant types to include in SKUs",
            "key": "sku-properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems"
                }
              }
            }
          },
          {
            "description": "The categories your product belongs to.",
            "key": "categories",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Product tax class",
            "key": "tax-category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataTaxCategory"
              }
            }
          },
          {
            "description": "The default SKU associated with this product.",
            "key": "default-sku",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
            "key": "ec-product-type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldDataEcProductType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProduct": {
      "description": "The Product object",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProduct",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProductFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSku": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSku",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSkuFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems": {
      "description": "Enumerated Product variants/Options for the SKU",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Product variant/Option",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the Product variant/Option",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Slug for the Product variant/Option in the Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems": {
      "description": "A variant/option type for a SKU",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a collection of Product Variants",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the collection of Product Variants",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The individual Product variants that are contained within the collection",
            "key": "enum",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataTaxCategory": {
      "description": "Product tax class",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataTaxCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "standard-taxable"
          },
          {
            "value": "standard-exempt"
          },
          {
            "value": "books-religious"
          },
          {
            "value": "books-textbook"
          },
          {
            "value": "clothing"
          },
          {
            "value": "clothing-swimwear"
          },
          {
            "value": "digital-goods"
          },
          {
            "value": "digital-service"
          },
          {
            "value": "drugs-non-prescription"
          },
          {
            "value": "drugs-prescription"
          },
          {
            "value": "food-bottled-water"
          },
          {
            "value": "food-candy"
          },
          {
            "value": "food-groceries"
          },
          {
            "value": "food-prepared"
          },
          {
            "value": "food-soda"
          },
          {
            "value": "food-supplements"
          },
          {
            "value": "magazine-individual"
          },
          {
            "value": "magazine-subscription"
          },
          {
            "value": "service-admission"
          },
          {
            "value": "service-advertising"
          },
          {
            "value": "service-dry-cleaning"
          },
          {
            "value": "service-hairdressing"
          },
          {
            "value": "service-installation"
          },
          {
            "value": "service-miscellaneous"
          },
          {
            "value": "service-parking"
          },
          {
            "value": "service-printing"
          },
          {
            "value": "service-professional"
          },
          {
            "value": "service-repair"
          },
          {
            "value": "service-training"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataEcProductType": {
      "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataEcProductType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ff42fee0113744f693a764e3431a9cc2"
          },
          {
            "value": "f22027db68002190aef89a4a2b7ac8a1"
          },
          {
            "value": "c599e43b1a1c34d5a323aedf75d3adf6"
          },
          {
            "value": "b6ccc1830db4b1babeb06a9ac5f6dd76"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldData": {
      "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A description of your product",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is shippable",
            "key": "shippable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Variant types to include in SKUs",
            "key": "sku-properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems"
                }
              }
            }
          },
          {
            "description": "The categories your product belongs to.",
            "key": "categories",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Product tax class",
            "key": "tax-category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataTaxCategory"
              }
            }
          },
          {
            "description": "The default SKU associated with this product.",
            "key": "default-sku",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
            "key": "ec-product-type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldDataEcProductType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProduct": {
      "description": "The Product object",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProduct",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Product is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProductFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItems": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItemsFieldData"
              }
            }
          }
        ]
      }
    },
    "products_create_Response_200": {
      "description": "A product and its SKUs.",
      "name": "products_create_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Product object",
            "key": "product",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaProduct"
              }
            }
          },
          {
            "description": "A list of SKU Objects",
            "key": "skus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaSkusItems"
                }
              }
            }
          }
        ]
      }
    },
    "Create-productRequestForbiddenError": {
      "name": "Create-productRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Create-productRequestConflictError": {
      "name": "Create-productRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsPostResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Create-productRequestTooManyRequestsError": {
      "name": "Create-productRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems": {
      "description": "Enumerated Product variants/Options for the SKU",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Product variant/Option",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the Product variant/Option",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Slug for the Product variant/Option in the Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems": {
      "description": "A variant/option type for a SKU",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a collection of Product Variants",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the collection of Product Variants",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The individual Product variants that are contained within the collection",
            "key": "enum",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataTaxCategory": {
      "description": "Product tax class",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataTaxCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "standard-taxable"
          },
          {
            "value": "standard-exempt"
          },
          {
            "value": "books-religious"
          },
          {
            "value": "books-textbook"
          },
          {
            "value": "clothing"
          },
          {
            "value": "clothing-swimwear"
          },
          {
            "value": "digital-goods"
          },
          {
            "value": "digital-service"
          },
          {
            "value": "drugs-non-prescription"
          },
          {
            "value": "drugs-prescription"
          },
          {
            "value": "food-bottled-water"
          },
          {
            "value": "food-candy"
          },
          {
            "value": "food-groceries"
          },
          {
            "value": "food-prepared"
          },
          {
            "value": "food-soda"
          },
          {
            "value": "food-supplements"
          },
          {
            "value": "magazine-individual"
          },
          {
            "value": "magazine-subscription"
          },
          {
            "value": "service-admission"
          },
          {
            "value": "service-advertising"
          },
          {
            "value": "service-dry-cleaning"
          },
          {
            "value": "service-hairdressing"
          },
          {
            "value": "service-installation"
          },
          {
            "value": "service-miscellaneous"
          },
          {
            "value": "service-parking"
          },
          {
            "value": "service-printing"
          },
          {
            "value": "service-professional"
          },
          {
            "value": "service-repair"
          },
          {
            "value": "service-training"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataEcProductType": {
      "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataEcProductType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ff42fee0113744f693a764e3431a9cc2"
          },
          {
            "value": "f22027db68002190aef89a4a2b7ac8a1"
          },
          {
            "value": "c599e43b1a1c34d5a323aedf75d3adf6"
          },
          {
            "value": "b6ccc1830db4b1babeb06a9ac5f6dd76"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldData": {
      "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A description of your product",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is shippable",
            "key": "shippable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Variant types to include in SKUs",
            "key": "sku-properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems"
                }
              }
            }
          },
          {
            "description": "The categories your product belongs to.",
            "key": "categories",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Product tax class",
            "key": "tax-category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataTaxCategory"
              }
            }
          },
          {
            "description": "The default SKU associated with this product.",
            "key": "default-sku",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
            "key": "ec-product-type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldDataEcProductType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProduct": {
      "description": "The Product object",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProduct",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Product is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProductFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItems": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItemsFieldData"
              }
            }
          }
        ]
      }
    },
    "products_get_Response_200": {
      "description": "A product and its SKUs.",
      "name": "products_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The Product object",
            "key": "product",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaProduct"
              }
            }
          },
          {
            "description": "A list of SKU Objects",
            "key": "skus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaSkusItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-productRequestForbiddenError": {
      "name": "Get-productRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Get-productRequestConflictError": {
      "name": "Get-productRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdGetResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-productRequestTooManyRequestsError": {
      "name": "Get-productRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaPublishStatus": {
      "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaPublishStatus",
      "shape": {
        "type": "enum",
        "default": "staging",
        "values": [
          {
            "value": "staging"
          },
          {
            "value": "live"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems": {
      "description": "Enumerated Product variants/Options for the SKU",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Product variant/Option",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the Product variant/Option",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Slug for the Product variant/Option in the Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems": {
      "description": "A variant/option type for a SKU",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a collection of Product Variants",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the collection of Product Variants",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The individual Product variants that are contained within the collection",
            "key": "enum",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItemsEnumItems"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataTaxCategory": {
      "description": "Product tax class",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataTaxCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "standard-taxable"
          },
          {
            "value": "standard-exempt"
          },
          {
            "value": "books-religious"
          },
          {
            "value": "books-textbook"
          },
          {
            "value": "clothing"
          },
          {
            "value": "clothing-swimwear"
          },
          {
            "value": "digital-goods"
          },
          {
            "value": "digital-service"
          },
          {
            "value": "drugs-non-prescription"
          },
          {
            "value": "drugs-prescription"
          },
          {
            "value": "food-bottled-water"
          },
          {
            "value": "food-candy"
          },
          {
            "value": "food-groceries"
          },
          {
            "value": "food-prepared"
          },
          {
            "value": "food-soda"
          },
          {
            "value": "food-supplements"
          },
          {
            "value": "magazine-individual"
          },
          {
            "value": "magazine-subscription"
          },
          {
            "value": "service-admission"
          },
          {
            "value": "service-advertising"
          },
          {
            "value": "service-dry-cleaning"
          },
          {
            "value": "service-hairdressing"
          },
          {
            "value": "service-installation"
          },
          {
            "value": "service-miscellaneous"
          },
          {
            "value": "service-parking"
          },
          {
            "value": "service-printing"
          },
          {
            "value": "service-professional"
          },
          {
            "value": "service-repair"
          },
          {
            "value": "service-training"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataEcProductType": {
      "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataEcProductType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ff42fee0113744f693a764e3431a9cc2"
          },
          {
            "value": "f22027db68002190aef89a4a2b7ac8a1"
          },
          {
            "value": "c599e43b1a1c34d5a323aedf75d3adf6"
          },
          {
            "value": "b6ccc1830db4b1babeb06a9ac5f6dd76"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldData": {
      "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A description of your product",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is shippable",
            "key": "shippable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Variant types to include in SKUs",
            "key": "sku-properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataSkuPropertiesItems"
                }
              }
            }
          },
          {
            "description": "The categories your product belongs to.",
            "key": "categories",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Product tax class",
            "key": "tax-category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataTaxCategory"
              }
            }
          },
          {
            "description": "The default SKU associated with this product.",
            "key": "default-sku",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
            "key": "ec-product-type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldDataEcProductType"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProduct": {
      "description": "The Product object",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProduct",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Product is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProductFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSku": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSku",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataSkuPropertiesItemsEnumItems": {
      "description": "Enumerated Product variants/Options for the SKU",
      "name": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataSkuPropertiesItemsEnumItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a Product variant/Option",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the Product variant/Option",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Slug for the Product variant/Option in the Site URL structure",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataSkuPropertiesItems": {
      "description": "A variant/option type for a SKU",
      "name": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataSkuPropertiesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a collection of Product Variants",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Name of the collection of Product Variants",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The individual Product variants that are contained within the collection",
            "key": "enum",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataSkuPropertiesItemsEnumItems"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataTaxCategory": {
      "description": "Product tax class",
      "name": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataTaxCategory",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "standard-taxable"
          },
          {
            "value": "standard-exempt"
          },
          {
            "value": "books-religious"
          },
          {
            "value": "books-textbook"
          },
          {
            "value": "clothing"
          },
          {
            "value": "clothing-swimwear"
          },
          {
            "value": "digital-goods"
          },
          {
            "value": "digital-service"
          },
          {
            "value": "drugs-non-prescription"
          },
          {
            "value": "drugs-prescription"
          },
          {
            "value": "food-bottled-water"
          },
          {
            "value": "food-candy"
          },
          {
            "value": "food-groceries"
          },
          {
            "value": "food-prepared"
          },
          {
            "value": "food-soda"
          },
          {
            "value": "food-supplements"
          },
          {
            "value": "magazine-individual"
          },
          {
            "value": "magazine-subscription"
          },
          {
            "value": "service-admission"
          },
          {
            "value": "service-advertising"
          },
          {
            "value": "service-dry-cleaning"
          },
          {
            "value": "service-hairdressing"
          },
          {
            "value": "service-installation"
          },
          {
            "value": "service-miscellaneous"
          },
          {
            "value": "service-parking"
          },
          {
            "value": "service-printing"
          },
          {
            "value": "service-professional"
          },
          {
            "value": "service-repair"
          },
          {
            "value": "service-training"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataEcProductType": {
      "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
      "name": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataEcProductType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ff42fee0113744f693a764e3431a9cc2"
          },
          {
            "value": "f22027db68002190aef89a4a2b7ac8a1"
          },
          {
            "value": "c599e43b1a1c34d5a323aedf75d3adf6"
          },
          {
            "value": "b6ccc1830db4b1babeb06a9ac5f6dd76"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldData": {
      "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
      "name": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A description of your product",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is shippable",
            "key": "shippable",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Variant types to include in SKUs",
            "key": "sku-properties",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataSkuPropertiesItems"
                }
              }
            }
          },
          {
            "description": "The categories your product belongs to.",
            "key": "categories",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Product tax class",
            "key": "tax-category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataTaxCategory"
              }
            }
          },
          {
            "description": "The default SKU associated with this product.",
            "key": "default-sku",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            }
          },
          {
            "description": "<a href=\"https://university.webflow.com/lesson/add-and-manage-products-and-categories?topics=ecommerce#how-to-understand-product-types\">Product types.</a> Enums reflect the following values in order: Physical, Digital, Service, Advanced\"",
            "key": "ec-product-type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldDataEcProductType"
              }
            }
          }
        ]
      }
    },
    "products_update_Response_200": {
      "description": "The Product object",
      "name": "products_update_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Boolean determining if the Product is set to archived",
            "key": "isArchived",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Boolean determining if the Product is set to draft",
            "key": "isDraft",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Contains content-specific details for a product, covering both standard (e.g., title, description)  and custom fields tailored to the product setup.",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Update-productRequestForbiddenError": {
      "name": "Update-productRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Update-productRequestConflictError": {
      "name": "Update-productRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdPatchResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Update-productRequestTooManyRequestsError": {
      "name": "Update-productRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaPublishStatus": {
      "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaPublishStatus",
      "shape": {
        "type": "enum",
        "default": "staging",
        "values": [
          {
            "value": "staging"
          },
          {
            "value": "live"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItems": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItemsFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItems": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItemsFieldData"
              }
            }
          }
        ]
      }
    },
    "products_create-sku_Response_200": {
      "name": "products_create-sku_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "skus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaSkusItems"
                }
              }
            }
          }
        ]
      }
    },
    "Create-skusRequestForbiddenError": {
      "name": "Create-skusRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Create-skusRequestConflictError": {
      "name": "Create-skusRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdSkusPostResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Create-skusRequestTooManyRequestsError": {
      "name": "Create-skusRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaPublishStatus": {
      "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaPublishStatus",
      "shape": {
        "type": "enum",
        "default": "staging",
        "values": [
          {
            "value": "staging"
          },
          {
            "value": "live"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSku": {
      "description": "The SKU object",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSku",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSkuFieldData"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataPrice": {
      "description": "price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataCompareAtPrice": {
      "description": "comparison price of SKU",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataCompareAtPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Price of SKU",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Currency of Item",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuBillingMethod": {
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuBillingMethod",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "one-time"
          },
          {
            "value": "subscription"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanInterval": {
      "description": "Interval of subscription renewal",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanInterval",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "day"
          },
          {
            "value": "week"
          },
          {
            "value": "month"
          },
          {
            "value": "year"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItemsPlatform": {
      "description": "The platform of the subscription plan",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItemsPlatform",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "stripe"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItemsStatus": {
      "description": "The status of the plan",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "active"
          },
          {
            "value": "inactive"
          },
          {
            "value": "canceled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItems": {
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The platform of the subscription plan",
            "key": "platform",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItemsPlatform"
              }
            }
          },
          {
            "description": "The unique identifier of the plan",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The status of the plan",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItemsStatus"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlan": {
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlan",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Interval of subscription renewal",
            "key": "interval",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanInterval"
              }
            }
          },
          {
            "description": "Frequncy of billing within interval",
            "key": "frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Number of days of a trial",
            "key": "trial",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "plans",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlanPlansItems"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldData": {
      "description": "Standard and Custom fields for a SKU",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "A dictionary that maps a SKU property to a SKU value. The key of the dictionary is the SKU property ID, and the value is the SKU value ID.\n",
            "key": "sku-values",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Name of the Product",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "URL structure of the Product in your site.",
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "price of SKU",
            "key": "price",
            "valueType": {
              "type": "id",
              "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataPrice"
            }
          },
          {
            "description": "comparison price of SKU",
            "key": "compare-at-price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataCompareAtPrice"
              }
            }
          },
          {
            "key": "ec-sku-billing-method",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuBillingMethod"
              }
            }
          },
          {
            "key": "ec-sku-subscription-plan",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldDataEcSkuSubscriptionPlan"
              }
            }
          },
          {
            "description": "A boolean indicating whether inventory for this product should be tracked.",
            "key": "track-inventory",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          },
          {
            "description": "Quantity of SKU that will be tracked as items are ordered.",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "products_update-sku_Response_200": {
      "description": "The SKU object",
      "name": "products_update-sku_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for the Product",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Identifier for the locale of the CMS item",
            "key": "cmsLocaleId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last published",
            "key": "lastPublished",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was last updated",
            "key": "lastUpdated",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The date the Product was created",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Standard and Custom fields for a SKU",
            "key": "fieldData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaFieldData"
              }
            }
          }
        ]
      }
    },
    "Update-skuRequestForbiddenError": {
      "name": "Update-skuRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Update-skuRequestConflictError": {
      "name": "Update-skuRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Update-skuRequestTooManyRequestsError": {
      "name": "Update-skuRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetParametersStatus": {
      "name": "SitesSiteIdOrdersGetParametersStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "refunded"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "unfulfilled"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStatus": {
      "description": "The status of the Order\n",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsNetAmount": {
      "description": "The net amount after application fees",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItems": {
      "description": "A customer address",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddress": {
      "description": "The shipping address",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddress": {
      "description": "The billing address",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImageFile": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImage": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPaypalDetails": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomDataItems": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsMetadata": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsTotal": {
      "description": "The total price",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotals": {
      "description": "An object describing various pricing totals",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsDownloadFilesItems": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItems": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the Order\n",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStatus"
              }
            }
          },
          {
            "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
            "key": "comment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A comment that the customer left when making their Order",
            "key": "orderComment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ISO8601 timestamp that an Order was placed.",
            "key": "acceptedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "fulfilledOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
            "key": "refundedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "disputedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
            "key": "disputeUpdatedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
            "key": "disputeLastStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsDisputeLastStatus"
                }
              }
            }
          },
          {
            "description": "The total paid by the customer",
            "key": "customerPaid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomerPaid"
              }
            }
          },
          {
            "description": "The net amount after application fees",
            "key": "netAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsNetAmount"
              }
            }
          },
          {
            "description": "The application fee assessed by the platform",
            "key": "applicationFee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsApplicationFee"
              }
            }
          },
          {
            "description": "All addresses provided by the customer during the ordering flow.",
            "key": "allAddresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsAllAddressesItems"
                }
              }
            }
          },
          {
            "description": "The shipping address",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsShippingAddress"
              }
            }
          },
          {
            "description": "The billing address",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsBillingAddress"
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
            "key": "shippingProvider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
            "key": "shippingTracking",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "shippingTrackingURL",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "An object with the keys `fullName` and `email`.",
            "key": "customerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomerInfo"
              }
            }
          },
          {
            "description": "An array of all things that the Customer purchased.",
            "key": "purchasedItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPurchasedItemsItems"
                }
              }
            }
          },
          {
            "description": "The sum of all 'count' fields in 'purchasedItems'.",
            "key": "purchasedItemsCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "key": "stripeDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeDetails"
              }
            }
          },
          {
            "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
            "key": "stripeCard",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsStripeCard"
              }
            }
          },
          {
            "key": "paypalDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsPaypalDetails"
              }
            }
          },
          {
            "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
            "key": "customData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsCustomDataItems"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsMetadata"
              }
            }
          },
          {
            "description": "A boolean indicating whether the customer has been deleted from the site.\n",
            "key": "isCustomerDeleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
            "key": "isShippingRequired",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
            "key": "hasDownloads",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A string indicating the payment processor used for this order.\n",
            "key": "paymentProcessor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An object describing various pricing totals",
            "key": "totals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsTotals"
              }
            }
          },
          {
            "description": "An array of downloadable file objects.",
            "key": "downloadFiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItemsDownloadFilesItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaPagination": {
      "description": "Pagination object",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaPagination",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The limit used for pagination",
            "key": "limit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The offset used for pagination",
            "key": "offset",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total number of records",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "orders_list_Response_200": {
      "description": "Results from order list",
      "name": "orders_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "List of orders",
            "key": "orders",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaOrdersItems"
                }
              }
            }
          },
          {
            "description": "Pagination object",
            "key": "pagination",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaPagination"
              }
            }
          }
        ]
      }
    },
    "List-ordersRequestForbiddenError": {
      "name": "List-ordersRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "List-ordersRequestConflictError": {
      "name": "List-ordersRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-ordersRequestTooManyRequestsError": {
      "name": "List-ordersRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the Order\n",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaNetAmount": {
      "description": "The net amount after application fees",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItems": {
      "description": "A customer address",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddress": {
      "description": "The shipping address",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddress": {
      "description": "The billing address",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPaypalDetails": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomDataItems": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaMetadata": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsTotal": {
      "description": "The total price",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotals": {
      "description": "An object describing various pricing totals",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDownloadFilesItems": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "orders_get_Response_200": {
      "name": "orders_get_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the Order\n",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStatus"
              }
            }
          },
          {
            "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
            "key": "comment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A comment that the customer left when making their Order",
            "key": "orderComment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ISO8601 timestamp that an Order was placed.",
            "key": "acceptedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "fulfilledOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
            "key": "refundedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "disputedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
            "key": "disputeUpdatedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
            "key": "disputeLastStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDisputeLastStatus"
                }
              }
            }
          },
          {
            "description": "The total paid by the customer",
            "key": "customerPaid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomerPaid"
              }
            }
          },
          {
            "description": "The net amount after application fees",
            "key": "netAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaNetAmount"
              }
            }
          },
          {
            "description": "The application fee assessed by the platform",
            "key": "applicationFee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaApplicationFee"
              }
            }
          },
          {
            "description": "All addresses provided by the customer during the ordering flow.",
            "key": "allAddresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaAllAddressesItems"
                }
              }
            }
          },
          {
            "description": "The shipping address",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaShippingAddress"
              }
            }
          },
          {
            "description": "The billing address",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaBillingAddress"
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
            "key": "shippingProvider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
            "key": "shippingTracking",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "shippingTrackingURL",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "An object with the keys `fullName` and `email`.",
            "key": "customerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomerInfo"
              }
            }
          },
          {
            "description": "An array of all things that the Customer purchased.",
            "key": "purchasedItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPurchasedItemsItems"
                }
              }
            }
          },
          {
            "description": "The sum of all 'count' fields in 'purchasedItems'.",
            "key": "purchasedItemsCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "key": "stripeDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeDetails"
              }
            }
          },
          {
            "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
            "key": "stripeCard",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaStripeCard"
              }
            }
          },
          {
            "key": "paypalDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaPaypalDetails"
              }
            }
          },
          {
            "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
            "key": "customData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCustomDataItems"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaMetadata"
              }
            }
          },
          {
            "description": "A boolean indicating whether the customer has been deleted from the site.\n",
            "key": "isCustomerDeleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
            "key": "isShippingRequired",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
            "key": "hasDownloads",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A string indicating the payment processor used for this order.\n",
            "key": "paymentProcessor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An object describing various pricing totals",
            "key": "totals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaTotals"
              }
            }
          },
          {
            "description": "An array of downloadable file objects.",
            "key": "downloadFiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDownloadFilesItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-orderRequestForbiddenError": {
      "name": "Get-orderRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Get-orderRequestConflictError": {
      "name": "Get-orderRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdGetResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Get-orderRequestTooManyRequestsError": {
      "name": "Get-orderRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the Order\n",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaNetAmount": {
      "description": "The net amount after application fees",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItems": {
      "description": "A customer address",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddress": {
      "description": "The shipping address",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddress": {
      "description": "The billing address",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPaypalDetails": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomDataItems": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaMetadata": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsTotal": {
      "description": "The total price",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotals": {
      "description": "An object describing various pricing totals",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDownloadFilesItems": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "orders_update_Response_200": {
      "name": "orders_update_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the Order\n",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStatus"
              }
            }
          },
          {
            "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
            "key": "comment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A comment that the customer left when making their Order",
            "key": "orderComment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ISO8601 timestamp that an Order was placed.",
            "key": "acceptedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "fulfilledOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
            "key": "refundedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "disputedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
            "key": "disputeUpdatedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
            "key": "disputeLastStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDisputeLastStatus"
                }
              }
            }
          },
          {
            "description": "The total paid by the customer",
            "key": "customerPaid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomerPaid"
              }
            }
          },
          {
            "description": "The net amount after application fees",
            "key": "netAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaNetAmount"
              }
            }
          },
          {
            "description": "The application fee assessed by the platform",
            "key": "applicationFee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaApplicationFee"
              }
            }
          },
          {
            "description": "All addresses provided by the customer during the ordering flow.",
            "key": "allAddresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaAllAddressesItems"
                }
              }
            }
          },
          {
            "description": "The shipping address",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaShippingAddress"
              }
            }
          },
          {
            "description": "The billing address",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaBillingAddress"
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
            "key": "shippingProvider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
            "key": "shippingTracking",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "shippingTrackingURL",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "An object with the keys `fullName` and `email`.",
            "key": "customerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomerInfo"
              }
            }
          },
          {
            "description": "An array of all things that the Customer purchased.",
            "key": "purchasedItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPurchasedItemsItems"
                }
              }
            }
          },
          {
            "description": "The sum of all 'count' fields in 'purchasedItems'.",
            "key": "purchasedItemsCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "key": "stripeDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeDetails"
              }
            }
          },
          {
            "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
            "key": "stripeCard",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaStripeCard"
              }
            }
          },
          {
            "key": "paypalDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaPaypalDetails"
              }
            }
          },
          {
            "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
            "key": "customData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCustomDataItems"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaMetadata"
              }
            }
          },
          {
            "description": "A boolean indicating whether the customer has been deleted from the site.\n",
            "key": "isCustomerDeleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
            "key": "isShippingRequired",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
            "key": "hasDownloads",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A string indicating the payment processor used for this order.\n",
            "key": "paymentProcessor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An object describing various pricing totals",
            "key": "totals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaTotals"
              }
            }
          },
          {
            "description": "An array of downloadable file objects.",
            "key": "downloadFiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDownloadFilesItems"
                }
              }
            }
          }
        ]
      }
    },
    "Update-orderRequestForbiddenError": {
      "name": "Update-orderRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Update-orderRequestConflictError": {
      "name": "Update-orderRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdPatchResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Update-orderRequestTooManyRequestsError": {
      "name": "Update-orderRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the Order\n",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaNetAmount": {
      "description": "The net amount after application fees",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItems": {
      "description": "A customer address",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddress": {
      "description": "The shipping address",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddress": {
      "description": "The billing address",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPaypalDetails": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomDataItems": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaMetadata": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsTotal": {
      "description": "The total price",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotals": {
      "description": "An object describing various pricing totals",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDownloadFilesItems": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "orders_update-fulfill_Response_200": {
      "name": "orders_update-fulfill_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the Order\n",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStatus"
              }
            }
          },
          {
            "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
            "key": "comment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A comment that the customer left when making their Order",
            "key": "orderComment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ISO8601 timestamp that an Order was placed.",
            "key": "acceptedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "fulfilledOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
            "key": "refundedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "disputedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
            "key": "disputeUpdatedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
            "key": "disputeLastStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDisputeLastStatus"
                }
              }
            }
          },
          {
            "description": "The total paid by the customer",
            "key": "customerPaid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomerPaid"
              }
            }
          },
          {
            "description": "The net amount after application fees",
            "key": "netAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaNetAmount"
              }
            }
          },
          {
            "description": "The application fee assessed by the platform",
            "key": "applicationFee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaApplicationFee"
              }
            }
          },
          {
            "description": "All addresses provided by the customer during the ordering flow.",
            "key": "allAddresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaAllAddressesItems"
                }
              }
            }
          },
          {
            "description": "The shipping address",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaShippingAddress"
              }
            }
          },
          {
            "description": "The billing address",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaBillingAddress"
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
            "key": "shippingProvider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
            "key": "shippingTracking",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "shippingTrackingURL",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "An object with the keys `fullName` and `email`.",
            "key": "customerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomerInfo"
              }
            }
          },
          {
            "description": "An array of all things that the Customer purchased.",
            "key": "purchasedItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItems"
                }
              }
            }
          },
          {
            "description": "The sum of all 'count' fields in 'purchasedItems'.",
            "key": "purchasedItemsCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "key": "stripeDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeDetails"
              }
            }
          },
          {
            "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
            "key": "stripeCard",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaStripeCard"
              }
            }
          },
          {
            "key": "paypalDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaPaypalDetails"
              }
            }
          },
          {
            "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
            "key": "customData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCustomDataItems"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaMetadata"
              }
            }
          },
          {
            "description": "A boolean indicating whether the customer has been deleted from the site.\n",
            "key": "isCustomerDeleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
            "key": "isShippingRequired",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
            "key": "hasDownloads",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A string indicating the payment processor used for this order.\n",
            "key": "paymentProcessor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An object describing various pricing totals",
            "key": "totals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaTotals"
              }
            }
          },
          {
            "description": "An array of downloadable file objects.",
            "key": "downloadFiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDownloadFilesItems"
                }
              }
            }
          }
        ]
      }
    },
    "Fulfill-orderRequestForbiddenError": {
      "name": "Fulfill-orderRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Fulfill-orderRequestConflictError": {
      "name": "Fulfill-orderRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdFulfillPostResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Fulfill-orderRequestTooManyRequestsError": {
      "name": "Fulfill-orderRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the Order\n",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaNetAmount": {
      "description": "The net amount after application fees",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItems": {
      "description": "A customer address",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddress": {
      "description": "The shipping address",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddress": {
      "description": "The billing address",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPaypalDetails": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomDataItems": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaMetadata": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsTotal": {
      "description": "The total price",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotals": {
      "description": "An object describing various pricing totals",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDownloadFilesItems": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "orders_update-unfulfill_Response_200": {
      "name": "orders_update-unfulfill_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the Order\n",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStatus"
              }
            }
          },
          {
            "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
            "key": "comment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A comment that the customer left when making their Order",
            "key": "orderComment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ISO8601 timestamp that an Order was placed.",
            "key": "acceptedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "fulfilledOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
            "key": "refundedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "disputedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
            "key": "disputeUpdatedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
            "key": "disputeLastStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDisputeLastStatus"
                }
              }
            }
          },
          {
            "description": "The total paid by the customer",
            "key": "customerPaid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomerPaid"
              }
            }
          },
          {
            "description": "The net amount after application fees",
            "key": "netAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaNetAmount"
              }
            }
          },
          {
            "description": "The application fee assessed by the platform",
            "key": "applicationFee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaApplicationFee"
              }
            }
          },
          {
            "description": "All addresses provided by the customer during the ordering flow.",
            "key": "allAddresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaAllAddressesItems"
                }
              }
            }
          },
          {
            "description": "The shipping address",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaShippingAddress"
              }
            }
          },
          {
            "description": "The billing address",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaBillingAddress"
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
            "key": "shippingProvider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
            "key": "shippingTracking",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "shippingTrackingURL",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "An object with the keys `fullName` and `email`.",
            "key": "customerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomerInfo"
              }
            }
          },
          {
            "description": "An array of all things that the Customer purchased.",
            "key": "purchasedItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPurchasedItemsItems"
                }
              }
            }
          },
          {
            "description": "The sum of all 'count' fields in 'purchasedItems'.",
            "key": "purchasedItemsCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "key": "stripeDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeDetails"
              }
            }
          },
          {
            "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
            "key": "stripeCard",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaStripeCard"
              }
            }
          },
          {
            "key": "paypalDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaPaypalDetails"
              }
            }
          },
          {
            "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
            "key": "customData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCustomDataItems"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaMetadata"
              }
            }
          },
          {
            "description": "A boolean indicating whether the customer has been deleted from the site.\n",
            "key": "isCustomerDeleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
            "key": "isShippingRequired",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
            "key": "hasDownloads",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A string indicating the payment processor used for this order.\n",
            "key": "paymentProcessor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An object describing various pricing totals",
            "key": "totals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaTotals"
              }
            }
          },
          {
            "description": "An array of downloadable file objects.",
            "key": "downloadFiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDownloadFilesItems"
                }
              }
            }
          }
        ]
      }
    },
    "Unfulfill-orderRequestForbiddenError": {
      "name": "Unfulfill-orderRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Unfulfill-orderRequestConflictError": {
      "name": "Unfulfill-orderRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdUnfulfillPostResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Unfulfill-orderRequestTooManyRequestsError": {
      "name": "Unfulfill-orderRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostRequestBodyContentApplicationJsonSchemaReason": {
      "description": "The reason for the refund",
      "name": "SitesSiteIdOrdersOrderIdRefundPostRequestBodyContentApplicationJsonSchemaReason",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "duplicate"
          },
          {
            "value": "fraudulent"
          },
          {
            "value": "requested"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStatus": {
      "description": "The status of the Order\n",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "pending"
          },
          {
            "value": "unfulfilled"
          },
          {
            "value": "fulfilled"
          },
          {
            "value": "disputed"
          },
          {
            "value": "dispute-lost"
          },
          {
            "value": "refunded"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDisputeLastStatus": {
      "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDisputeLastStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "warning_needs_response"
          },
          {
            "value": "warning_under_review"
          },
          {
            "value": "warning_closed"
          },
          {
            "value": "needs_response"
          },
          {
            "value": "under_review"
          },
          {
            "value": "charge_refunded"
          },
          {
            "value": "won"
          },
          {
            "value": "lost"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomerPaid": {
      "description": "The total paid by the customer",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomerPaid",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaNetAmount": {
      "description": "The net amount after application fees",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaNetAmount",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaApplicationFee": {
      "description": "The application fee assessed by the platform",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaApplicationFee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItemsType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItems": {
      "description": "A customer address",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItemsType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItemsJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddress": {
      "description": "The shipping address",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddressType": {
      "description": "The type of the order address (billing or shipping)",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddressType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shipping"
          },
          {
            "value": "billing"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddressJapanType": {
      "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddressJapanType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "kana"
          },
          {
            "value": "kanji"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddress": {
      "description": "The billing address",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddress",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of the order address (billing or shipping)",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddressType"
              }
            }
          },
          {
            "description": "Represents a Japan-only address format. This field will only appear on orders placed from Japan.",
            "key": "japanType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddressJapanType"
                }
              }
            }
          },
          {
            "description": "Display name on the address",
            "key": "addressee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The first line of the address",
            "key": "line1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The second line of the address",
            "key": "line2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The city of the address.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The state or province of the address",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The country of the address",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The postal code of the address",
            "key": "postalCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomerInfo": {
      "description": "An object with the keys `fullName` and `email`.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomerInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The full name of the Customer",
            "key": "fullName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The Customer's email address",
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal": {
      "description": "The total for the row",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The image size in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "the original name of the image",
            "key": "originalFileName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The creation timestamp of the image",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "The MIME type of the image",
            "key": "contentType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "mime-type"
                }
              }
            }
          },
          {
            "description": "The image width in pixels",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "The image height in pixels",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "description": "Variants of the supplied image",
            "key": "variants",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFileVariantsItems"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The hosted location for the Variant's image",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "key": "file",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImageFile"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice": {
      "description": "The price corresponding to the variant",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItems": {
      "description": "An Item that was purchased",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Number of Item purchased.",
            "key": "count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "The total for the row",
            "key": "rowTotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsRowTotal"
              }
            }
          },
          {
            "description": "The unique identifier for the Product",
            "key": "productId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "User-facing name of the Product",
            "key": "productName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product",
            "key": "productSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Identifier for the Product Variant (SKU)",
            "key": "variantId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing name of the Product Variant (SKU)",
            "key": "variantName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Slug for the Product Variant (SKU)",
            "key": "variantSlug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-defined custom SKU of the Product Variant (SKU)",
            "key": "variantSKU",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "variantImage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantImage"
              }
            }
          },
          {
            "description": "The price corresponding to the variant",
            "key": "variantPrice",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItemsVariantPrice"
              }
            }
          },
          {
            "description": "The physical weight of the variant if provided, or null",
            "key": "weight",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical width of the variant if provided, or null",
            "key": "width",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical height of the variant if provided, or null",
            "key": "height",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The physical length of the variant if provided, or null",
            "key": "length",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeDetails": {
      "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Stripe-generated identifier for the Subscription",
            "key": "subscriptionId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentMethod used",
            "key": "paymentMethod",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated identifier for the PaymentIntent, or null",
            "key": "paymentIntentId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated customer identifier, or null",
            "key": "customerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated charge identifier, or null",
            "key": "chargeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated dispute identifier, or null",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund identifier, or null",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            }
          },
          {
            "description": "Stripe-generated refund reason, or null",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCardBrand": {
      "description": "The card's brand (ie. credit card network)",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCardBrand",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "Visa"
          },
          {
            "value": "American Express"
          },
          {
            "value": "MasterCard"
          },
          {
            "value": "Discover"
          },
          {
            "value": "JCB"
          },
          {
            "value": "Diners Club"
          },
          {
            "value": "Unknown"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCardExpires": {
      "description": "The card's expiration date.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCardExpires",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Year that the card expires",
            "key": "year",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "Month that the card expires",
            "key": "month",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCard": {
      "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCard",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The last 4 digits on the card as a string",
            "key": "last4",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's brand (ie. credit card network)",
            "key": "brand",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCardBrand"
              }
            }
          },
          {
            "description": "The name on the card.",
            "key": "ownerName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The card's expiration date.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCardExpires"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPaypalDetails": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPaypalDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "PayPal order identifier",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal payer identifier",
            "key": "payerId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal capture identifier",
            "key": "captureId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal refund identifier",
            "key": "refundId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal-issued reason for the refund",
            "key": "refundReason",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "PayPal dispute identifier",
            "key": "disputeId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomDataItems": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomDataItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaMetadata": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaMetadata",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "isBuyNow",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsSubtotal": {
      "description": "The subtotal price",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsSubtotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType": {
      "description": "The type of extra item this is.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "discount"
          },
          {
            "value": "discount-shipping"
          },
          {
            "value": "shipping"
          },
          {
            "value": "tax"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice": {
      "description": "The price for the item",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItems": {
      "description": "Extra order items, includes discounts, shipping, and taxes.",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The type of extra item this is.",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsType"
              }
            }
          },
          {
            "description": "A human-readable (but English) name for this extra charge.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A human-readable (but English) description of this extra charge.",
            "key": "description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The price for the item",
            "key": "price",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItemsPrice"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsTotal": {
      "description": "The total price",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsTotal",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The three-letter ISO currency code",
            "key": "unit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The numeric value in the base unit of the currency",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing string representation of the amount",
            "key": "string",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotals": {
      "description": "An object describing various pricing totals",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotals",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The subtotal price",
            "key": "subtotal",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsSubtotal"
              }
            }
          },
          {
            "description": "An array of extra items, includes discounts, shipping, and taxes.",
            "key": "extras",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsExtrasItems"
                }
              }
            }
          },
          {
            "description": "The total price",
            "key": "total",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotalsTotal"
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDownloadFilesItems": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDownloadFilesItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The unique identifier for the downloadable file",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The user-facing name for the downloadable file",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The hosted location for the downloadable file",
            "key": "url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        ]
      }
    },
    "orders_refund_Response_200": {
      "name": "orders_refund_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
            "key": "orderId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The status of the Order\n",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStatus"
              }
            }
          },
          {
            "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
            "key": "comment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "A comment that the customer left when making their Order",
            "key": "orderComment",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The ISO8601 timestamp that an Order was placed.",
            "key": "acceptedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "fulfilledOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
            "key": "refundedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
            "key": "disputedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
            "key": "disputeUpdatedOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
            "key": "disputeLastStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDisputeLastStatus"
                }
              }
            }
          },
          {
            "description": "The total paid by the customer",
            "key": "customerPaid",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomerPaid"
              }
            }
          },
          {
            "description": "The net amount after application fees",
            "key": "netAmount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaNetAmount"
              }
            }
          },
          {
            "description": "The application fee assessed by the platform",
            "key": "applicationFee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaApplicationFee"
              }
            }
          },
          {
            "description": "All addresses provided by the customer during the ordering flow.",
            "key": "allAddresses",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaAllAddressesItems"
                }
              }
            }
          },
          {
            "description": "The shipping address",
            "key": "shippingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaShippingAddress"
              }
            }
          },
          {
            "description": "The billing address",
            "key": "billingAddress",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaBillingAddress"
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
            "key": "shippingProvider",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
            "key": "shippingTracking",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "shippingTrackingURL",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "An object with the keys `fullName` and `email`.",
            "key": "customerInfo",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomerInfo"
              }
            }
          },
          {
            "description": "An array of all things that the Customer purchased.",
            "key": "purchasedItems",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPurchasedItemsItems"
                }
              }
            }
          },
          {
            "description": "The sum of all 'count' fields in 'purchasedItems'.",
            "key": "purchasedItemsCount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
            "key": "stripeDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeDetails"
              }
            }
          },
          {
            "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
            "key": "stripeCard",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaStripeCard"
              }
            }
          },
          {
            "key": "paypalDetails",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaPaypalDetails"
              }
            }
          },
          {
            "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
            "key": "customData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCustomDataItems"
                }
              }
            }
          },
          {
            "key": "metadata",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaMetadata"
              }
            }
          },
          {
            "description": "A boolean indicating whether the customer has been deleted from the site.\n",
            "key": "isCustomerDeleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
            "key": "isShippingRequired",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
            "key": "hasDownloads",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "A string indicating the payment processor used for this order.\n",
            "key": "paymentProcessor",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "An object describing various pricing totals",
            "key": "totals",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaTotals"
              }
            }
          },
          {
            "description": "An array of downloadable file objects.",
            "key": "downloadFiles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDownloadFilesItems"
                }
              }
            }
          }
        ]
      }
    },
    "Refund-orderRequestForbiddenError": {
      "name": "Refund-orderRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Refund-orderRequestConflictError": {
      "name": "Refund-orderRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersOrderIdRefundPostResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Refund-orderRequestTooManyRequestsError": {
      "name": "Refund-orderRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaInventoryType": {
      "description": "infinite or finite",
      "name": "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaInventoryType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "infinite"
          },
          {
            "value": "finite"
          }
        ]
      }
    },
    "inventory_list_Response_200": {
      "description": "The availabile inventory for an item",
      "name": "inventory_list_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a SKU item",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Total quantity of items remaining in inventory (if inventoryType is finite)",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "infinite or finite",
            "key": "inventoryType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaInventoryType"
              }
            }
          }
        ]
      }
    },
    "List-inventoryRequestForbiddenError": {
      "name": "List-inventoryRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "List-inventoryRequestConflictError": {
      "name": "List-inventoryRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsItemIdInventoryGetResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "List-inventoryRequestTooManyRequestsError": {
      "name": "List-inventoryRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdInventoryPatchRequestBodyContentApplicationJsonSchemaInventoryType": {
      "description": "infinite or finite",
      "name": "CollectionsCollectionIdItemsItemIdInventoryPatchRequestBodyContentApplicationJsonSchemaInventoryType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "infinite"
          },
          {
            "value": "finite"
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaInventoryType": {
      "description": "infinite or finite",
      "name": "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaInventoryType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "infinite"
          },
          {
            "value": "finite"
          }
        ]
      }
    },
    "inventory_update_Response_200": {
      "description": "The availabile inventory for an item",
      "name": "inventory_update_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Unique identifier for a SKU item",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Total quantity of items remaining in inventory (if inventoryType is finite)",
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "description": "infinite or finite",
            "key": "inventoryType",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaInventoryType"
              }
            }
          }
        ]
      }
    },
    "Update-inventoryRequestForbiddenError": {
      "name": "Update-inventoryRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Update-inventoryRequestConflictError": {
      "name": "Update-inventoryRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsItemIdInventoryPatchResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Update-inventoryRequestTooManyRequestsError": {
      "name": "Update-inventoryRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    },
    "ecommerce_get-settings_Response_200": {
      "description": "Ecommerce settings for a Webflow Site",
      "name": "ecommerce_get-settings_Response_200",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The identifier of the Site",
            "key": "siteId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "objectid"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "Date that the Site was created on",
            "key": "createdOn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "propertyAccess": "READ_ONLY"
          },
          {
            "description": "The three-letter ISO currency code for the Site",
            "key": "defaultCurrency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Ecommerce-settingsRequestForbiddenError": {
      "name": "Ecommerce-settingsRequestForbiddenError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "publicErrorCode",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "nullable",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "SitesSiteIdEcommerceSettingsGetResponsesContentApplicationJsonSchemaCode": {
      "description": "Error code",
      "name": "SitesSiteIdEcommerceSettingsGetResponsesContentApplicationJsonSchemaCode",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ecommerce_not_enabled"
          }
        ]
      }
    },
    "SitesSiteIdEcommerceSettingsGetResponsesContentApplicationJsonSchemaDetailsItems": {
      "name": "SitesSiteIdEcommerceSettingsGetResponsesContentApplicationJsonSchemaDetailsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "type": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "type": {
              "type": "map",
              "keyType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              },
              "valueType": {
                "type": "unknown"
              }
            }
          }
        ]
      }
    },
    "Ecommerce-settingsRequestConflictError": {
      "name": "Ecommerce-settingsRequestConflictError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Error code",
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SitesSiteIdEcommerceSettingsGetResponsesContentApplicationJsonSchemaCode"
              }
            }
          },
          {
            "description": "Error message",
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Link to more information",
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of errors",
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdEcommerceSettingsGetResponsesContentApplicationJsonSchemaDetailsItems"
                }
              }
            }
          }
        ]
      }
    },
    "Ecommerce-settingsRequestTooManyRequestsError": {
      "name": "Ecommerce-settingsRequestTooManyRequestsError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "externalReference",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "unknown"
                }
              }
            }
          }
        ]
      }
    }
  },
  "subpackages": {
    "subpackage_forms": {
      "subpackageId": "subpackage_forms",
      "displayName": "Forms",
      "name": "forms",
      "endpoints": [
        {
          "auth": true,
          "description": "List forms for a given site </br></br> Required scope | `forms:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_forms.list",
          "name": "List Forms",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/forms"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "forms_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 409,
              "description": "To access this feature, the site needs to be republished.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-formsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/forms",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "limit": 100,
                "offset": 0
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "forms": [
                  {
                    "displayName": "Email Form",
                    "createdOn": "2016-10-24T19:41:29.156Z",
                    "lastUpdated": "2016-10-24T19:43:17.271Z",
                    "fields": [
                      {
                        "660d5bcc9c0772150459dfb1": {
                          "displayName": "Name",
                          "type": "Plain",
                          "placeholder": null,
                          "userVisible": true
                        }
                      },
                      {
                        "589a331aa51e760df7ccb89d": {
                          "displayName": "Email",
                          "type": "Email",
                          "placeholder": "Enter your email",
                          "userVisible": true
                        }
                      }
                    ],
                    "responseSettings": {
                      "redirectUrl": "https://example.com",
                      "redirectMethod": "GET",
                      "redirectAction": null,
                      "sendEmailConfirmation": true
                    },
                    "id": "589a331aa51e760df7ccb89e",
                    "siteId": "580e63e98c9a982ac9b8b741",
                    "siteDomainId": "6419db964a9c436a4baf6248",
                    "pageId": "6419db964a9c43f6a3af6348",
                    "pageName": "Home",
                    "workspaceId": "580e63fc8c9a982ac9b8b744"
                  },
                  {
                    "displayName": "Name Form",
                    "createdOn": "2016-10-24T19:41:29.156Z",
                    "lastUpdated": "2016-10-24T19:43:17.271Z",
                    "fields": [
                      {
                        "589a331aa51e760df7ccb89d": {
                          "displayName": "Name",
                          "type": "Plain",
                          "placeholder": "Enter your name",
                          "userVisible": true
                        }
                      }
                    ],
                    "responseSettings": {
                      "redirectUrl": "https://example.com",
                      "redirectMethod": "GET",
                      "redirectAction": null,
                      "sendEmailConfirmation": false
                    },
                    "id": "580ff8d7ba3e45ba9fe588e9",
                    "siteId": "580e63e98c9a982ac9b8b741",
                    "siteDomainId": "6419db964a9c436a4baf6248",
                    "pageId": "6419db964a9c43f6a3af6348",
                    "pageName": "Home",
                    "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                    "workspaceId": "580e63fc8c9a982ac9b8b744"
                  }
                ],
                "pagination": {
                  "limit": 25,
                  "offset": 0,
                  "total": 2
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "forms": [
                    {
                      "displayName": "Email Form",
                      "createdOn": "2016-10-24T19:41:29.156Z",
                      "lastUpdated": "2016-10-24T19:43:17.271Z",
                      "fields": [
                        {
                          "660d5bcc9c0772150459dfb1": {
                            "displayName": "Name",
                            "type": "Plain",
                            "placeholder": null,
                            "userVisible": true
                          }
                        },
                        {
                          "589a331aa51e760df7ccb89d": {
                            "displayName": "Email",
                            "type": "Email",
                            "placeholder": "Enter your email",
                            "userVisible": true
                          }
                        }
                      ],
                      "responseSettings": {
                        "redirectUrl": "https://example.com",
                        "redirectMethod": "GET",
                        "redirectAction": null,
                        "sendEmailConfirmation": true
                      },
                      "id": "589a331aa51e760df7ccb89e",
                      "siteId": "580e63e98c9a982ac9b8b741",
                      "siteDomainId": "6419db964a9c436a4baf6248",
                      "pageId": "6419db964a9c43f6a3af6348",
                      "pageName": "Home",
                      "workspaceId": "580e63fc8c9a982ac9b8b744"
                    },
                    {
                      "displayName": "Name Form",
                      "createdOn": "2016-10-24T19:41:29.156Z",
                      "lastUpdated": "2016-10-24T19:43:17.271Z",
                      "fields": [
                        {
                          "589a331aa51e760df7ccb89d": {
                            "displayName": "Name",
                            "type": "Plain",
                            "placeholder": "Enter your name",
                            "userVisible": true
                          }
                        }
                      ],
                      "responseSettings": {
                        "redirectUrl": "https://example.com",
                        "redirectMethod": "GET",
                        "redirectAction": null,
                        "sendEmailConfirmation": false
                      },
                      "id": "580ff8d7ba3e45ba9fe588e9",
                      "siteId": "580e63e98c9a982ac9b8b741",
                      "siteDomainId": "6419db964a9c436a4baf6248",
                      "pageId": "6419db964a9c43f6a3af6348",
                      "pageName": "Home",
                      "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                      "workspaceId": "580e63fc8c9a982ac9b8b744"
                    }
                  ],
                  "pagination": {
                    "limit": 25,
                    "offset": 0,
                    "total": 2
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get information about a given form</br></br> Required scope | `forms:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_forms.get",
          "name": "Get Form Schema",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Form",
                "key": "form_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/forms/"
              },
              {
                "type": "pathParameter",
                "value": "form_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "forms_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-form-schemaRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/forms/580e63e98c9a982ac9b8b741",
              "pathParameters": {
                "form_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "displayName": "Email Form",
                "createdOn": "2016-10-24T19:41:29.156Z",
                "lastUpdated": "2016-10-24T19:43:17.271Z",
                "fields": {
                  "660d5bcc9c0772150459dfb1": {
                    "displayName": "Name",
                    "type": "Plain",
                    "placeholder": null,
                    "userVisible": true
                  },
                  "589a331aa51e760df7ccb89d": {
                    "displayName": "Email",
                    "type": "Email",
                    "placeholder": "Enter your email",
                    "userVisible": true
                  }
                },
                "responseSettings": {
                  "redirectUrl": "https://example.com",
                  "redirectMethod": "GET",
                  "redirectAction": null,
                  "sendEmailConfirmation": true
                },
                "id": "589a331aa51e760df7ccb89e",
                "siteId": "580e63e98c9a982ac9b8b741",
                "siteDomainId": "6419db964a9c436a4baf6248",
                "pageId": "6419db964a9c43f6a3af6348",
                "pageName": "Home",
                "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                "workspaceId": "580e63fc8c9a982ac9b8b744"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "displayName": "Email Form",
                  "createdOn": "2016-10-24T19:41:29.156Z",
                  "lastUpdated": "2016-10-24T19:43:17.271Z",
                  "fields": {
                    "660d5bcc9c0772150459dfb1": {
                      "displayName": "Name",
                      "type": "Plain",
                      "placeholder": null,
                      "userVisible": true
                    },
                    "589a331aa51e760df7ccb89d": {
                      "displayName": "Email",
                      "type": "Email",
                      "placeholder": "Enter your email",
                      "userVisible": true
                    }
                  },
                  "responseSettings": {
                    "redirectUrl": "https://example.com",
                    "redirectMethod": "GET",
                    "redirectAction": null,
                    "sendEmailConfirmation": true
                  },
                  "id": "589a331aa51e760df7ccb89e",
                  "siteId": "580e63e98c9a982ac9b8b741",
                  "siteDomainId": "6419db964a9c436a4baf6248",
                  "pageId": "6419db964a9c43f6a3af6348",
                  "pageName": "Home",
                  "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177",
                  "workspaceId": "580e63fc8c9a982ac9b8b744"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "List form submissions for a given form </br></br> Required scope | `forms:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list-submissions",
          "originalEndpointId": "endpoint_forms.list-submissions",
          "name": "List Form Submissions",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Form",
                "key": "form_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/forms/"
              },
              {
                "type": "pathParameter",
                "value": "form_id"
              },
              {
                "type": "literal",
                "value": "/submissions"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "forms_list-submissions_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-submissionsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/forms/580e63e98c9a982ac9b8b741/submissions",
              "pathParameters": {
                "form_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "formSubmissions": [
                  {
                    "id": "6321ca84df3949bfc6752327",
                    "displayName": "Sample Form",
                    "siteId": "62749158efef318abc8d5a0f",
                    "workspaceId": "62749158efef318abc8d5a0f",
                    "dateSubmitted": "2022-09-14T12:35:16.117Z",
                    "formResponse": {
                      "First Name": "Arthur",
                      "Last Name": "Dent"
                    },
                    "formId": "6321ca84df3949bfc6752327"
                  },
                  {
                    "id": "660d64fabf6e0a0d4edab981",
                    "displayName": "Sample Form",
                    "siteId": "62749158efef318abc8d5a0f",
                    "workspaceId": "62749158efef318abc8d5a0f",
                    "dateSubmitted": "2022-09-14T12:35:16.117Z",
                    "formResponse": {
                      "First Name": "Ford",
                      "Last Name": "Prefect"
                    },
                    "formId": "6321ca84df3949bfc6752327"
                  }
                ],
                "pagination": {
                  "limit": 25,
                  "offset": 0,
                  "total": 2
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "formSubmissions": [
                    {
                      "id": "6321ca84df3949bfc6752327",
                      "displayName": "Sample Form",
                      "siteId": "62749158efef318abc8d5a0f",
                      "workspaceId": "62749158efef318abc8d5a0f",
                      "dateSubmitted": "2022-09-14T12:35:16.117Z",
                      "formResponse": {
                        "First Name": "Arthur",
                        "Last Name": "Dent"
                      },
                      "formId": "6321ca84df3949bfc6752327"
                    },
                    {
                      "id": "660d64fabf6e0a0d4edab981",
                      "displayName": "Sample Form",
                      "siteId": "62749158efef318abc8d5a0f",
                      "workspaceId": "62749158efef318abc8d5a0f",
                      "dateSubmitted": "2022-09-14T12:35:16.117Z",
                      "formResponse": {
                        "First Name": "Ford",
                        "Last Name": "Prefect"
                      },
                      "formId": "6321ca84df3949bfc6752327"
                    }
                  ],
                  "pagination": {
                    "limit": 25,
                    "offset": 0,
                    "total": 2
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get information about a given form submission</br></br> Required scope | `forms:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-submission",
          "originalEndpointId": "endpoint_forms.get-submission",
          "name": "Get Form Submission",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Form Submission",
                "key": "form_submission_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/form_submissions/"
              },
              {
                "type": "pathParameter",
                "value": "form_submission_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "forms_get-submission_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-form-submissionRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/form_submissions/580e63e98c9a982ac9b8b741",
              "pathParameters": {
                "form_submission_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6321ca84df3949bfc6752327",
                "displayName": "Sample Form",
                "siteId": "62749158efef318abc8d5a0f",
                "workspaceId": "62749158efef318abc8d5a0f",
                "dateSubmitted": "2022-09-14T12:35:16.117Z",
                "formResponse": {
                  "First Name": "Arthur",
                  "Last Name": "Dent"
                },
                "formId": "6321ca84df3949bfc6752327"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6321ca84df3949bfc6752327",
                  "displayName": "Sample Form",
                  "siteId": "62749158efef318abc8d5a0f",
                  "workspaceId": "62749158efef318abc8d5a0f",
                  "dateSubmitted": "2022-09-14T12:35:16.117Z",
                  "formResponse": {
                    "First Name": "Arthur",
                    "Last Name": "Dent"
                  },
                  "formId": "6321ca84df3949bfc6752327"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update hidden fields on a form submission</br></br> Required scope | `forms:write`",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-submission",
          "originalEndpointId": "endpoint_forms.update-submission",
          "name": "Modify Form Submission",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Form Submission",
                "key": "form_submission_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/form_submissions/"
              },
              {
                "type": "pathParameter",
                "value": "form_submission_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "An existing **hidden field** defined on the form schema, and the corresponding value to set",
                    "key": "formSubmissionData",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "FormSubmissionsFormSubmissionIdPatchRequestBodyContentApplicationJsonSchemaFormSubmissionData"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "forms_update-submission_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 409,
              "description": "To access this feature, the site needs to be republished.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Modify-form-submissionRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/form_submissions/580e63e98c9a982ac9b8b741",
              "pathParameters": {
                "form_submission_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6321ca84df3949bfc6752327",
                "displayName": "Sample Form",
                "siteId": "62749158efef318abc8d5a0f",
                "workspaceId": "62749158efef318abc8d5a0f",
                "dateSubmitted": "2022-09-14T12:35:16.117Z",
                "formResponse": {
                  "First Name": "Arthur",
                  "Last Name": "Dent"
                },
                "formId": "6321ca84df3949bfc6752327"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6321ca84df3949bfc6752327",
                  "displayName": "Sample Form",
                  "siteId": "62749158efef318abc8d5a0f",
                  "workspaceId": "62749158efef318abc8d5a0f",
                  "dateSubmitted": "2022-09-14T12:35:16.117Z",
                  "formResponse": {
                    "First Name": "Arthur",
                    "Last Name": "Dent"
                  },
                  "formId": "6321ca84df3949bfc6752327"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [
        {
          "description": "Information about a form that was subitted",
          "id": "form_submission",
          "path": [],
          "method": "POST",
          "name": "Form Submission",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload of data sent from Webflow",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksFormSubmissionPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "formsFormSubmissionExample",
              "payload": {
                "triggerType": "form_submission",
                "payload": {
                  "name": "Contact Us",
                  "siteId": "65427cf400e02b306eaa049c",
                  "data": {
                    "First Name": "Zaphod",
                    "Last Name": "Beeblebrox",
                    "email": "zaphod@heartofgold.ai",
                    "Phone Number": 15550000000
                  },
                  "schema": [
                    null,
                    null,
                    null,
                    null
                  ],
                  "submittedAt": "2022-09-14T12:35:16.117Z",
                  "id": "6321ca84df3949bfc6752327",
                  "formId": "65429eadebe8a9f3a30f62d0",
                  "formElementId": "4e038d2c-6a1e-4953-7be9-a59a2b453177"
                }
              }
            }
          ]
        }
      ],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_sites": {
      "subpackageId": "subpackage_sites",
      "displayName": "Sites",
      "name": "sites",
      "endpoints": [
        {
          "auth": true,
          "description": "List of all sites the provided access token is able to access. </br></br> Required scope | `sites:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_sites.list",
          "name": "List Sites",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-sitesRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "sites": [
                  {
                    "id": "42e63e98c9a982ac9b8b741",
                    "workspaceId": "42e63fc8c9a982ac9b8b744",
                    "createdOn": "1979-10-12T12:00:00.000Z",
                    "displayName": "Heart of Gold Spaceship",
                    "shortName": "heart-of-gold",
                    "lastPublished": "2023-04-02T12:42:00.000Z",
                    "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b741/197910121200.png",
                    "timeZone": "DeepSpace/InfiniteImprobability",
                    "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                    "customDomains": [
                      {
                        "id": "589a331aa51e760df7ccb89e",
                        "url": "heartofgold.galaxy"
                      }
                    ],
                    "locales": {
                      "primary": {
                        "id": "653fd9af6a07fc9cfd7a5e57",
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "enabled": true,
                        "displayName": "English - Heart of Gold Standard",
                        "redirect": false,
                        "subdirectory": "/en",
                        "tag": "The Ultimate Answer"
                      },
                      "secondary": [
                        {
                          "id": "653fd9af6a07fc9cfd7a5e58",
                          "cmsLocaleId": "653ad57de882f528b32e810g",
                          "enabled": true,
                          "displayName": "Betelgeusian - Vogon Liaison",
                          "redirect": true,
                          "subdirectory": "/bet",
                          "tag": "Vogon"
                        },
                        {
                          "id": "653fd9af6a07fc9cfd7a5e59",
                          "cmsLocaleId": "653ad57de882f528b32e810h",
                          "enabled": false,
                          "displayName": "Magrathean - Custom Planet Designs",
                          "redirect": true,
                          "subdirectory": "/mg",
                          "tag": "Magrathean"
                        }
                      ]
                    }
                  },
                  {
                    "id": "42e63e98c9a982ac9b8b742",
                    "workspaceId": "42e63fc8c9a982ac9b8b745",
                    "createdOn": "1981-10-12T12:00:00.000Z",
                    "displayName": "Marvin's Personal Blog",
                    "shortName": "paranoid-android",
                    "lastPublished": "2023-04-02T12:45:00.000Z",
                    "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b742/198110121200.png",
                    "timeZone": "DeepSpace/Depression",
                    "parentFolderId": null,
                    "customDomains": [
                      {
                        "id": "589a331aa51e760df7ccb89f",
                        "url": "marvin.blog"
                      }
                    ],
                    "locales": {
                      "primary": {
                        "id": "653fd9af6a07fc9cfd7a5e57",
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "enabled": true,
                        "displayName": "English - Marvin's Musings",
                        "redirect": false,
                        "subdirectory": "/en",
                        "tag": "English"
                      },
                      "secondary": [
                        {
                          "id": "653fd9af6a07fc9cfd7a5e56",
                          "cmsLocaleId": "653ad57de882f528b32e810f",
                          "enabled": true,
                          "displayName": "Squornshellous - Mattress Speak",
                          "redirect": true,
                          "subdirectory": "/sr",
                          "tag": "Squornshellous"
                        }
                      ]
                    }
                  },
                  {
                    "id": "42e63e98c9a982ac9b8b743",
                    "workspaceId": "42e63fc8c9a982ac9b8b746",
                    "createdOn": "1982-10-12T12:00:00.000Z",
                    "displayName": "Vogon Poetry Archive",
                    "shortName": "vogon-poetry",
                    "lastPublished": "2023-04-02T12:50:00.000Z",
                    "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b743/198210121200.png",
                    "timeZone": "Vogsphere/PoetryHall",
                    "parentFolderId": null,
                    "customDomains": [
                      {
                        "id": "589a331aa51e760df7ccb8a0",
                        "url": "vogonpoetry.galaxy"
                      }
                    ],
                    "locales": {
                      "primary": {
                        "id": "653fd9af6a07fc9cfd7a5e55",
                        "cmsLocaleId": "653ad57de882f528b32e810d",
                        "enabled": true,
                        "displayName": "English - Vogon Verse",
                        "redirect": false,
                        "subdirectory": "/en",
                        "tag": "Third Worst Poetry"
                      },
                      "secondary": [
                        {
                          "id": "653fd9af6a07fc9cfd7a5e54",
                          "cmsLocaleId": "653ad57de882f528b32e810c",
                          "enabled": true,
                          "displayName": "Galactic - Universal Language",
                          "redirect": true,
                          "subdirectory": "/gl",
                          "tag": "Pan-Galactic Gargle Blaster"
                        }
                      ]
                    }
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "sites": [
                    {
                      "id": "42e63e98c9a982ac9b8b741",
                      "workspaceId": "42e63fc8c9a982ac9b8b744",
                      "createdOn": "1979-10-12T12:00:00.000Z",
                      "displayName": "Heart of Gold Spaceship",
                      "shortName": "heart-of-gold",
                      "lastPublished": "2023-04-02T12:42:00.000Z",
                      "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b741/197910121200.png",
                      "timeZone": "DeepSpace/InfiniteImprobability",
                      "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89e",
                          "url": "heartofgold.galaxy"
                        }
                      ],
                      "locales": {
                        "primary": {
                          "id": "653fd9af6a07fc9cfd7a5e57",
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "enabled": true,
                          "displayName": "English - Heart of Gold Standard",
                          "redirect": false,
                          "subdirectory": "/en",
                          "tag": "The Ultimate Answer"
                        },
                        "secondary": [
                          {
                            "id": "653fd9af6a07fc9cfd7a5e58",
                            "cmsLocaleId": "653ad57de882f528b32e810g",
                            "enabled": true,
                            "displayName": "Betelgeusian - Vogon Liaison",
                            "redirect": true,
                            "subdirectory": "/bet",
                            "tag": "Vogon"
                          },
                          {
                            "id": "653fd9af6a07fc9cfd7a5e59",
                            "cmsLocaleId": "653ad57de882f528b32e810h",
                            "enabled": false,
                            "displayName": "Magrathean - Custom Planet Designs",
                            "redirect": true,
                            "subdirectory": "/mg",
                            "tag": "Magrathean"
                          }
                        ]
                      }
                    },
                    {
                      "id": "42e63e98c9a982ac9b8b742",
                      "workspaceId": "42e63fc8c9a982ac9b8b745",
                      "createdOn": "1981-10-12T12:00:00.000Z",
                      "displayName": "Marvin's Personal Blog",
                      "shortName": "paranoid-android",
                      "lastPublished": "2023-04-02T12:45:00.000Z",
                      "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b742/198110121200.png",
                      "timeZone": "DeepSpace/Depression",
                      "parentFolderId": null,
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb89f",
                          "url": "marvin.blog"
                        }
                      ],
                      "locales": {
                        "primary": {
                          "id": "653fd9af6a07fc9cfd7a5e57",
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "enabled": true,
                          "displayName": "English - Marvin's Musings",
                          "redirect": false,
                          "subdirectory": "/en",
                          "tag": "English"
                        },
                        "secondary": [
                          {
                            "id": "653fd9af6a07fc9cfd7a5e56",
                            "cmsLocaleId": "653ad57de882f528b32e810f",
                            "enabled": true,
                            "displayName": "Squornshellous - Mattress Speak",
                            "redirect": true,
                            "subdirectory": "/sr",
                            "tag": "Squornshellous"
                          }
                        ]
                      }
                    },
                    {
                      "id": "42e63e98c9a982ac9b8b743",
                      "workspaceId": "42e63fc8c9a982ac9b8b746",
                      "createdOn": "1982-10-12T12:00:00.000Z",
                      "displayName": "Vogon Poetry Archive",
                      "shortName": "vogon-poetry",
                      "lastPublished": "2023-04-02T12:50:00.000Z",
                      "previewUrl": "https://d1otoma47x30pg.cloudfront.net/42e63e98c9a982ac9b8b743/198210121200.png",
                      "timeZone": "Vogsphere/PoetryHall",
                      "parentFolderId": null,
                      "customDomains": [
                        {
                          "id": "589a331aa51e760df7ccb8a0",
                          "url": "vogonpoetry.galaxy"
                        }
                      ],
                      "locales": {
                        "primary": {
                          "id": "653fd9af6a07fc9cfd7a5e55",
                          "cmsLocaleId": "653ad57de882f528b32e810d",
                          "enabled": true,
                          "displayName": "English - Vogon Verse",
                          "redirect": false,
                          "subdirectory": "/en",
                          "tag": "Third Worst Poetry"
                        },
                        "secondary": [
                          {
                            "id": "653fd9af6a07fc9cfd7a5e54",
                            "cmsLocaleId": "653ad57de882f528b32e810c",
                            "enabled": true,
                            "displayName": "Galactic - Universal Language",
                            "redirect": true,
                            "subdirectory": "/gl",
                            "tag": "Pan-Galactic Gargle Blaster"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get a site by site id </br></br>  Required scope | `sites:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_sites.get",
          "name": "Get Site",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-siteRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "42e98c9a982ac9b8b742",
                "workspaceId": "42e63e98c9a982ac9b8b742",
                "createdOn": "1979-10-12T12:00:00.000Z",
                "displayName": "The Hitchhiker's Guide to the Galaxy",
                "shortName": "hitchhikers-guide",
                "lastPublished": "2023-04-02T12:42:00.000Z",
                "lastUpdated": "2023-04-02T12:42:00.000Z",
                "previewUrl": "https://screenshots.webflow.com/sites/6258612d1ee792848f805dcf/20231219211811_d5990556c743f33b7071300a03bf67e6.png",
                "timeZone": "Magrathea/FactoryFloor",
                "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                "customDomains": [
                  {
                    "id": "589a331aa51e760df7ccb89d",
                    "url": "hitchhikersguide.galaxy"
                  },
                  {
                    "id": "589a331aa51e760df7ccb89e",
                    "url": "heartofgold.spaceship"
                  }
                ],
                "locales": {
                  "value": {
                    "primary": {
                      "id": "653fd9af6a07fc9cfd7a5e57",
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "enabled": false,
                      "displayName": "English (United States)",
                      "displayImageId": null,
                      "redirect": true,
                      "subdirectory": "",
                      "tag": "en-US"
                    },
                    "secondary": [
                      {
                        "id": "653fd9af6a07fc9cfd7a5e56",
                        "cmsLocaleId": "653fd9af6a07fc9cfd7a5e5d",
                        "enabled": true,
                        "displayName": "French (France)",
                        "displayImageId": null,
                        "subdirectory": "fr-fr",
                        "tag": "fr-FR"
                      },
                      {
                        "id": "654112a3a525b2739d97664c",
                        "cmsLocaleId": "654112a3a525b2739d97664f",
                        "enabled": true,
                        "displayName": "Spanish (Mexico)",
                        "displayImageId": null,
                        "subdirectory": "es-mx",
                        "tag": "es-MX"
                      }
                    ]
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "42e98c9a982ac9b8b742",
                  "workspaceId": "42e63e98c9a982ac9b8b742",
                  "createdOn": "1979-10-12T12:00:00.000Z",
                  "displayName": "The Hitchhiker's Guide to the Galaxy",
                  "shortName": "hitchhikers-guide",
                  "lastPublished": "2023-04-02T12:42:00.000Z",
                  "lastUpdated": "2023-04-02T12:42:00.000Z",
                  "previewUrl": "https://screenshots.webflow.com/sites/6258612d1ee792848f805dcf/20231219211811_d5990556c743f33b7071300a03bf67e6.png",
                  "timeZone": "Magrathea/FactoryFloor",
                  "parentFolderId": "1as2d3f4g5h6j7k8l9z0x1c2v3b4n5m6",
                  "customDomains": [
                    {
                      "id": "589a331aa51e760df7ccb89d",
                      "url": "hitchhikersguide.galaxy"
                    },
                    {
                      "id": "589a331aa51e760df7ccb89e",
                      "url": "heartofgold.spaceship"
                    }
                  ],
                  "locales": {
                    "value": {
                      "primary": {
                        "id": "653fd9af6a07fc9cfd7a5e57",
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "enabled": false,
                        "displayName": "English (United States)",
                        "displayImageId": null,
                        "redirect": true,
                        "subdirectory": "",
                        "tag": "en-US"
                      },
                      "secondary": [
                        {
                          "id": "653fd9af6a07fc9cfd7a5e56",
                          "cmsLocaleId": "653fd9af6a07fc9cfd7a5e5d",
                          "enabled": true,
                          "displayName": "French (France)",
                          "displayImageId": null,
                          "subdirectory": "fr-fr",
                          "tag": "fr-FR"
                        },
                        {
                          "id": "654112a3a525b2739d97664c",
                          "cmsLocaleId": "654112a3a525b2739d97664f",
                          "enabled": true,
                          "displayName": "Spanish (Mexico)",
                          "displayImageId": null,
                          "subdirectory": "es-mx",
                          "tag": "es-MX"
                        }
                      ]
                    }
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get a list of all custom domains related to site. </br></br>  Required scope | `sites:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-custom-domain",
          "originalEndpointId": "endpoint_sites.get-custom-domain",
          "name": "Get Custom Domains",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/custom_domains"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_get-custom-domain_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-custom-domainsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/custom_domains",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "customDomains": [
                  {
                    "id": "589a331aa51e760df7ccb89d",
                    "url": "hitchhikersguide.galaxy"
                  },
                  {
                    "id": "589a331aa51e760df7ccb89e",
                    "url": "heartofgold.spaceship"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "customDomains": [
                    {
                      "id": "589a331aa51e760df7ccb89d",
                      "url": "hitchhikersguide.galaxy"
                    },
                    {
                      "id": "589a331aa51e760df7ccb89e",
                      "url": "heartofgold.spaceship"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Publish a site to one more more domains. </br></br>  Required scope | `sites:write` <blockquote class=\"callout callout_info\" theme=\"📘\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">📘</span><p>Endpoint-specific rate limit</p></h2><p>This endpoint has a limit of one successful publish queue per minute.</p></blockquote>",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "publish",
          "originalEndpointId": "endpoint_sites.publish",
          "name": "Publish site",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/publish"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Array of Custom Domain ids to publish",
                    "key": "customDomains",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "description": "Choice of whether to publish to the default Webflow Subdomain",
                    "key": "publishToWebflowSubdomain",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_publish_Response_202"
              }
            },
            "statusCode": 202,
            "description": "Request accepted"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Site-publishRequestBadRequestError"
                }
              },
              "statusCode": 400,
              "description": "Bad Request",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Site-publishRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/publish",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 202,
              "responseBody": {
                "customDomains": [
                  {
                    "id": "589a331aa51e760df7ccb89d",
                    "url": "test-api-domain.com"
                  }
                ],
                "publishToWebflowSubdomain": false
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "customDomains": [
                    {
                      "id": "589a331aa51e760df7ccb89d",
                      "url": "test-api-domain.com"
                    }
                  ],
                  "publishToWebflowSubdomain": false
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [
        {
          "id": "site_publish",
          "path": [],
          "method": "POST",
          "name": "Site Publish",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload of data sent from Webflow",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksSitePublishPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "sitesSitePublishExample",
              "payload": {
                "triggerType": "site_publish",
                "payload": {
                  "domains": [
                    "my-website.webflow.io"
                  ],
                  "publishedBy": {
                    "displayName": "Zaphod BeebleBrox"
                  },
                  "site": "62749158efef318abc8d5a0f",
                  "publishTime": "2024-07-26T16:43:20.440Z"
                }
              }
            }
          ]
        }
      ],
      "websockets": [],
      "types": [],
      "subpackages": [
        "subpackage_sites/activityLogs",
        "subpackage_sites/scripts"
      ]
    },
    "subpackage_orders": {
      "subpackageId": "subpackage_orders",
      "displayName": "Orders",
      "name": "orders",
      "endpoints": [
        {
          "auth": true,
          "description": "List all orders created for a given site.\n\nRequired scope | `ecommerce:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_orders.list",
          "name": "List Orders",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/orders"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Filter the orders by status",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdOrdersGetParametersStatus"
                }
              }
            },
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "orders_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-ordersRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-ordersRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-ordersRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/orders",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "orders": [
                  {
                    "orderId": "7c1-9fd",
                    "status": "unfulfilled",
                    "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                    "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                    "acceptedOn": "2024-04-10T13:16:21.976Z",
                    "fulfilledOn": null,
                    "refundedOn": null,
                    "disputedOn": null,
                    "disputeUpdatedOn": null,
                    "disputeLastStatus": null,
                    "customerPaid": {
                      "unit": "USD",
                      "value": "21155",
                      "string": "$ 211.55 USD"
                    },
                    "netAmount": {
                      "unit": "USD",
                      "value": "20089",
                      "string": "$ 200.89 USD"
                    },
                    "applicationFee": {
                      "unit": "USD",
                      "value": "423",
                      "string": "$ 4.23 USD"
                    },
                    "allAddresses": [
                      {
                        "type": "billing",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      },
                      {
                        "type": "shipping",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      }
                    ],
                    "shippingAddress": {
                      "type": "shipping",
                      "japanType": "kanji",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    "billingAddress": {
                      "type": "billing",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    "shippingProvider": "Shipping Company, Co.",
                    "shippingTracking": "tr00000000002",
                    "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000002",
                    "customerInfo": {
                      "fullName": "Arthur Dent",
                      "email": "arthur.dent@example.com"
                    },
                    "purchasedItems": [
                      {
                        "count": 2,
                        "rowTotal": {
                          "unit": "USD",
                          "value": "11122",
                          "string": "$ 111.22 USD"
                        },
                        "productId": "66072fb61b89448912e26791",
                        "productName": "Luxurious Fresh Ball",
                        "productSlug": "luxurious-fresh-ball",
                        "variantId": "66072fb71b89448912e2683f",
                        "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                        "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                        "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                        "variantImage": {
                          "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          "file": {}
                        },
                        "variantPrice": {
                          "unit": "USD",
                          "value": "5561",
                          "string": "$ 55.61 USD"
                        },
                        "weight": 11,
                        "width": 82,
                        "height": 70,
                        "length": 9
                      },
                      {
                        "count": 1,
                        "rowTotal": {
                          "unit": "USD",
                          "value": "8309",
                          "string": "$ 83.09 USD"
                        },
                        "productId": "66072fb61b89448912e2678b",
                        "productName": "Incredible Bronze Towels",
                        "productSlug": "incredible-bronze-towels",
                        "variantId": "66072fb71b89448912e2681e",
                        "variantName": "Incredible Bronze Towels Sleek: Frozen, Incredible: Metal",
                        "variantSlug": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                        "variantSKU": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                        "variantImage": {
                          "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e26729_image16.jpeg",
                          "file": {}
                        },
                        "variantPrice": {
                          "unit": "USD",
                          "value": "8309",
                          "string": "$ 83.09 USD"
                        },
                        "weight": null,
                        "width": 19,
                        "height": 72,
                        "length": 18
                      }
                    ],
                    "purchasedItemsCount": 3,
                    "stripeDetails": {
                      "subscriptionId": null,
                      "paymentMethod": "pm_1P410gJYFi4lcbXWbeKghqjK",
                      "paymentIntentId": "pi_3P410iJYFi4lcbXW0EKKgcVg",
                      "customerId": "cus_Ptod8KJBiiPgnH",
                      "chargeId": "ch_3P410iJYFi4lcbXW0DxUkzCH",
                      "disputeId": null,
                      "refundId": null,
                      "refundReason": null
                    },
                    "stripeCard": {
                      "last4": "4242",
                      "brand": "Visa",
                      "ownerName": "Arthur Dent",
                      "expires": {
                        "year": 2025,
                        "month": 4
                      }
                    },
                    "customData": [
                      {}
                    ],
                    "metadata": {
                      "isBuyNow": false
                    },
                    "hasDownloads": false,
                    "paymentProcessor": "stripe",
                    "paypalDetails": {}
                  },
                  {
                    "orderId": "fc7-128",
                    "status": "refunded",
                    "comment": "Example comment to myself",
                    "orderComment": "",
                    "acceptedOn": "2024-03-29T21:29:21.555Z",
                    "fulfilledOn": null,
                    "refundedOn": "2024-04-08T18:25:04.238Z",
                    "disputedOn": null,
                    "disputeUpdatedOn": null,
                    "disputeLastStatus": null,
                    "customerPaid": {
                      "unit": "USD",
                      "value": "11873",
                      "string": "$ 118.73 USD"
                    },
                    "netAmount": {
                      "unit": "USD",
                      "value": "11262",
                      "string": "$ 112.62 USD"
                    },
                    "applicationFee": {
                      "unit": "USD",
                      "value": "237",
                      "string": "$ 2.37 USD"
                    },
                    "allAddresses": [
                      {
                        "type": "billing",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      },
                      {
                        "type": "shipping",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      }
                    ],
                    "shippingAddress": {
                      "type": "shipping",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    "billingAddress": {
                      "type": "billing",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    "shippingProvider": "Shipping Company, Co.",
                    "shippingTracking": "tr00000000001",
                    "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                    "customerInfo": {
                      "fullName": "Arthur Dent",
                      "email": "arthur.dent@example.com"
                    },
                    "purchasedItems": [
                      {
                        "count": 1,
                        "rowTotal": {
                          "unit": "USD",
                          "value": "5561",
                          "string": "$ 55.61 USD"
                        },
                        "productId": "66072fb61b89448912e26791",
                        "productName": "Luxurious Fresh Ball",
                        "productSlug": "luxurious-fresh-ball",
                        "variantId": "66072fb71b89448912e2683f",
                        "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                        "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                        "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                        "variantImage": {
                          "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                          "file": {}
                        },
                        "variantPrice": {
                          "unit": "USD",
                          "value": "5561",
                          "string": "$ 55.61 USD"
                        },
                        "weight": 11,
                        "width": 82,
                        "height": 70,
                        "length": 9
                      },
                      {
                        "count": 1,
                        "rowTotal": {
                          "unit": "USD",
                          "value": "5344",
                          "string": "$ 53.44 USD"
                        },
                        "productId": "66072fb61b89448912e26799",
                        "productName": "Recycled Steel Gloves",
                        "productSlug": "recycled-steel-gloves",
                        "variantId": "66072fb91b89448912e26ab9",
                        "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                        "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                        "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                        "variantImage": {
                          "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                          "file": {}
                        },
                        "variantPrice": {
                          "unit": "USD",
                          "value": "5344",
                          "string": "$ 53.44 USD"
                        },
                        "weight": 38,
                        "width": 76,
                        "height": 85,
                        "length": 40
                      }
                    ],
                    "purchasedItemsCount": 2,
                    "stripeDetails": {
                      "subscriptionId": null,
                      "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                      "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                      "customerId": "cus_PpRsNHwWdUoRKR",
                      "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                      "disputeId": null,
                      "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                      "refundReason": "fraudulent"
                    },
                    "stripeCard": {
                      "last4": "4242",
                      "brand": "Visa",
                      "ownerName": "Arthur Dent",
                      "expires": {
                        "year": 2024,
                        "month": 4
                      }
                    },
                    "customData": [
                      {}
                    ],
                    "metadata": {
                      "isBuyNow": false,
                      "hasDownloads": false,
                      "paymentProcessor": "stripe"
                    },
                    "isCustomerDeleted": false,
                    "isShippingRequired": true,
                    "totals": {
                      "subtotal": {
                        "unit": "USD",
                        "value": "10905",
                        "string": "$ 109.05 USD"
                      },
                      "extras": [
                        {
                          "type": "tax",
                          "name": "State Taxes",
                          "description": "NY Taxes (4.00%)",
                          "price": {
                            "unit": "USD",
                            "value": "436",
                            "string": "$ 4.36 USD"
                          }
                        },
                        {
                          "type": "tax",
                          "name": "City Taxes",
                          "description": "NEW YORK Taxes (4.88%)",
                          "price": {
                            "unit": "USD",
                            "value": "532",
                            "string": "$ 5.32 USD"
                          }
                        },
                        {
                          "type": "shipping",
                          "name": "Flat",
                          "description": "",
                          "price": {
                            "unit": "USD",
                            "value": "0",
                            "string": "$ 0.00 USD"
                          }
                        }
                      ],
                      "total": {
                        "unit": "USD",
                        "value": "11873",
                        "string": "$ 118.73 USD"
                      }
                    },
                    "downloadFiles": [
                      {
                        "id": "5e9a5eba75e0ac242e1b6f64",
                        "name": "New product guide",
                        "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                      }
                    ],
                    "paypalDetails": {}
                  }
                ],
                "pagination": {
                  "limit": 100,
                  "offset": 0,
                  "total": 2
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "orders": [
                    {
                      "orderId": "7c1-9fd",
                      "status": "unfulfilled",
                      "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                      "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                      "acceptedOn": "2024-04-10T13:16:21.976Z",
                      "fulfilledOn": null,
                      "refundedOn": null,
                      "disputedOn": null,
                      "disputeUpdatedOn": null,
                      "disputeLastStatus": null,
                      "customerPaid": {
                        "unit": "USD",
                        "value": "21155",
                        "string": "$ 211.55 USD"
                      },
                      "netAmount": {
                        "unit": "USD",
                        "value": "20089",
                        "string": "$ 200.89 USD"
                      },
                      "applicationFee": {
                        "unit": "USD",
                        "value": "423",
                        "string": "$ 4.23 USD"
                      },
                      "allAddresses": [
                        {
                          "type": "billing",
                          "addressee": "Arthur Dent",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "city": "New York",
                          "state": "New York",
                          "country": "US",
                          "postalCode": "10118"
                        },
                        {
                          "type": "shipping",
                          "addressee": "Arthur Dent",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "city": "New York",
                          "state": "New York",
                          "country": "US",
                          "postalCode": "10118"
                        }
                      ],
                      "shippingAddress": {
                        "type": "shipping",
                        "japanType": "kanji",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      },
                      "billingAddress": {
                        "type": "billing",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000002",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000002",
                      "customerInfo": {
                        "fullName": "Arthur Dent",
                        "email": "arthur.dent@example.com"
                      },
                      "purchasedItems": [
                        {
                          "count": 2,
                          "rowTotal": {
                            "unit": "USD",
                            "value": "11122",
                            "string": "$ 111.22 USD"
                          },
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "variantId": "66072fb71b89448912e2683f",
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                            "file": {}
                          },
                          "variantPrice": {
                            "unit": "USD",
                            "value": "5561",
                            "string": "$ 55.61 USD"
                          },
                          "weight": 11,
                          "width": 82,
                          "height": 70,
                          "length": 9
                        },
                        {
                          "count": 1,
                          "rowTotal": {
                            "unit": "USD",
                            "value": "8309",
                            "string": "$ 83.09 USD"
                          },
                          "productId": "66072fb61b89448912e2678b",
                          "productName": "Incredible Bronze Towels",
                          "productSlug": "incredible-bronze-towels",
                          "variantId": "66072fb71b89448912e2681e",
                          "variantName": "Incredible Bronze Towels Sleek: Frozen, Incredible: Metal",
                          "variantSlug": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                          "variantSKU": "incredible-bronze-towels-sleek-frozen-incredible-metal",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e26729_image16.jpeg",
                            "file": {}
                          },
                          "variantPrice": {
                            "unit": "USD",
                            "value": "8309",
                            "string": "$ 83.09 USD"
                          },
                          "weight": null,
                          "width": 19,
                          "height": 72,
                          "length": 18
                        }
                      ],
                      "purchasedItemsCount": 3,
                      "stripeDetails": {
                        "subscriptionId": null,
                        "paymentMethod": "pm_1P410gJYFi4lcbXWbeKghqjK",
                        "paymentIntentId": "pi_3P410iJYFi4lcbXW0EKKgcVg",
                        "customerId": "cus_Ptod8KJBiiPgnH",
                        "chargeId": "ch_3P410iJYFi4lcbXW0DxUkzCH",
                        "disputeId": null,
                        "refundId": null,
                        "refundReason": null
                      },
                      "stripeCard": {
                        "last4": "4242",
                        "brand": "Visa",
                        "ownerName": "Arthur Dent",
                        "expires": {
                          "year": 2025,
                          "month": 4
                        }
                      },
                      "customData": [
                        {}
                      ],
                      "metadata": {
                        "isBuyNow": false
                      },
                      "hasDownloads": false,
                      "paymentProcessor": "stripe",
                      "paypalDetails": {}
                    },
                    {
                      "orderId": "fc7-128",
                      "status": "refunded",
                      "comment": "Example comment to myself",
                      "orderComment": "",
                      "acceptedOn": "2024-03-29T21:29:21.555Z",
                      "fulfilledOn": null,
                      "refundedOn": "2024-04-08T18:25:04.238Z",
                      "disputedOn": null,
                      "disputeUpdatedOn": null,
                      "disputeLastStatus": null,
                      "customerPaid": {
                        "unit": "USD",
                        "value": "11873",
                        "string": "$ 118.73 USD"
                      },
                      "netAmount": {
                        "unit": "USD",
                        "value": "11262",
                        "string": "$ 112.62 USD"
                      },
                      "applicationFee": {
                        "unit": "USD",
                        "value": "237",
                        "string": "$ 2.37 USD"
                      },
                      "allAddresses": [
                        {
                          "type": "billing",
                          "addressee": "Arthur Dent",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "city": "New York",
                          "state": "New York",
                          "country": "US",
                          "postalCode": "10118"
                        },
                        {
                          "type": "shipping",
                          "addressee": "Arthur Dent",
                          "line1": "20 W 34th St",
                          "line2": "Empire State Building",
                          "city": "New York",
                          "state": "New York",
                          "country": "US",
                          "postalCode": "10118"
                        }
                      ],
                      "shippingAddress": {
                        "type": "shipping",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      },
                      "billingAddress": {
                        "type": "billing",
                        "addressee": "Arthur Dent",
                        "line1": "20 W 34th St",
                        "line2": "Empire State Building",
                        "city": "New York",
                        "state": "New York",
                        "country": "US",
                        "postalCode": "10118"
                      },
                      "shippingProvider": "Shipping Company, Co.",
                      "shippingTracking": "tr00000000001",
                      "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                      "customerInfo": {
                        "fullName": "Arthur Dent",
                        "email": "arthur.dent@example.com"
                      },
                      "purchasedItems": [
                        {
                          "count": 1,
                          "rowTotal": {
                            "unit": "USD",
                            "value": "5561",
                            "string": "$ 55.61 USD"
                          },
                          "productId": "66072fb61b89448912e26791",
                          "productName": "Luxurious Fresh Ball",
                          "productSlug": "luxurious-fresh-ball",
                          "variantId": "66072fb71b89448912e2683f",
                          "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                          "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                            "file": {}
                          },
                          "variantPrice": {
                            "unit": "USD",
                            "value": "5561",
                            "string": "$ 55.61 USD"
                          },
                          "weight": 11,
                          "width": 82,
                          "height": 70,
                          "length": 9
                        },
                        {
                          "count": 1,
                          "rowTotal": {
                            "unit": "USD",
                            "value": "5344",
                            "string": "$ 53.44 USD"
                          },
                          "productId": "66072fb61b89448912e26799",
                          "productName": "Recycled Steel Gloves",
                          "productSlug": "recycled-steel-gloves",
                          "variantId": "66072fb91b89448912e26ab9",
                          "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                          "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                          "variantImage": {
                            "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                            "file": {}
                          },
                          "variantPrice": {
                            "unit": "USD",
                            "value": "5344",
                            "string": "$ 53.44 USD"
                          },
                          "weight": 38,
                          "width": 76,
                          "height": 85,
                          "length": 40
                        }
                      ],
                      "purchasedItemsCount": 2,
                      "stripeDetails": {
                        "subscriptionId": null,
                        "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                        "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                        "customerId": "cus_PpRsNHwWdUoRKR",
                        "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                        "disputeId": null,
                        "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                        "refundReason": "fraudulent"
                      },
                      "stripeCard": {
                        "last4": "4242",
                        "brand": "Visa",
                        "ownerName": "Arthur Dent",
                        "expires": {
                          "year": 2024,
                          "month": 4
                        }
                      },
                      "customData": [
                        {}
                      ],
                      "metadata": {
                        "isBuyNow": false,
                        "hasDownloads": false,
                        "paymentProcessor": "stripe"
                      },
                      "isCustomerDeleted": false,
                      "isShippingRequired": true,
                      "totals": {
                        "subtotal": {
                          "unit": "USD",
                          "value": "10905",
                          "string": "$ 109.05 USD"
                        },
                        "extras": [
                          {
                            "type": "tax",
                            "name": "State Taxes",
                            "description": "NY Taxes (4.00%)",
                            "price": {
                              "unit": "USD",
                              "value": "436",
                              "string": "$ 4.36 USD"
                            }
                          },
                          {
                            "type": "tax",
                            "name": "City Taxes",
                            "description": "NEW YORK Taxes (4.88%)",
                            "price": {
                              "unit": "USD",
                              "value": "532",
                              "string": "$ 5.32 USD"
                            }
                          },
                          {
                            "type": "shipping",
                            "name": "Flat",
                            "description": "",
                            "price": {
                              "unit": "USD",
                              "value": "0",
                              "string": "$ 0.00 USD"
                            }
                          }
                        ],
                        "total": {
                          "unit": "USD",
                          "value": "11873",
                          "string": "$ 118.73 USD"
                        }
                      },
                      "downloadFiles": [
                        {
                          "id": "5e9a5eba75e0ac242e1b6f64",
                          "name": "New product guide",
                          "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                        }
                      ],
                      "paypalDetails": {}
                    }
                  ],
                  "pagination": {
                    "limit": 100,
                    "offset": 0,
                    "total": 2
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a single product by its id. All of its SKUs will also be retrieved.\n\nRequired scope | `ecommerce:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_orders.get",
          "name": "Get Order",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Order",
                "key": "order_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/orders/"
              },
              {
                "type": "pathParameter",
                "value": "order_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "orders_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-orderRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-orderRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-orderRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/orders/5e8518516e147040726cc415",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "order_id": "5e8518516e147040726cc415"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "orderId": "fc7-128",
                "status": "refunded",
                "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                "acceptedOn": "2024-03-29T21:29:21.555Z",
                "fulfilledOn": "2024-03-29T21:29:21.555Z",
                "refundedOn": "2024-04-08T18:25:04.238Z",
                "disputedOn": "2024-03-29T21:29:21.555Z",
                "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                "disputeLastStatus": "charge_refunded",
                "customerPaid": {
                  "unit": "USD",
                  "value": "11873",
                  "string": "$ 118.73 USD"
                },
                "netAmount": {
                  "unit": "USD",
                  "value": "11262",
                  "string": "$ 112.62 USD"
                },
                "applicationFee": {
                  "unit": "USD",
                  "value": "237",
                  "string": "$ 2.37 USD"
                },
                "allAddresses": [
                  {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  {
                    "type": "shipping",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  }
                ],
                "shippingAddress": {
                  "type": "shipping",
                  "japanType": "kanji",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "billingAddress": {
                  "type": "billing",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "shippingProvider": "Shipping Company, Co.",
                "shippingTracking": "tr00000000001",
                "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                "customerInfo": {
                  "fullName": "Arthur Dent",
                  "email": "arthur.dent@example.com"
                },
                "purchasedItems": [
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "productId": "66072fb61b89448912e26791",
                    "productName": "Luxurious Fresh Ball",
                    "productSlug": "luxurious-fresh-ball",
                    "variantId": "66072fb71b89448912e2683f",
                    "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                    "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "weight": 11,
                    "width": 82,
                    "height": 70,
                    "length": 9
                  },
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "productId": "66072fb61b89448912e26799",
                    "productName": "Recycled Steel Gloves",
                    "productSlug": "recycled-steel-gloves",
                    "variantId": "66072fb91b89448912e26ab9",
                    "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                    "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "weight": 38,
                    "width": 76,
                    "height": 85,
                    "length": 40
                  }
                ],
                "purchasedItemsCount": 2,
                "stripeDetails": {
                  "subscriptionId": null,
                  "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                  "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                  "customerId": "cus_PpRsNHwWdUoRKR",
                  "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                  "disputeId": null,
                  "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                  "refundReason": "fraudulent"
                },
                "stripeCard": {
                  "last4": "4242",
                  "brand": "Visa",
                  "ownerName": "Arthur Dent",
                  "expires": {
                    "year": 2024,
                    "month": 4
                  }
                },
                "customData": [
                  {}
                ],
                "metadata": {
                  "isBuyNow": false,
                  "hasDownloads": false,
                  "paymentProcessor": "stripe"
                },
                "isCustomerDeleted": false,
                "isShippingRequired": true,
                "totals": {
                  "subtotal": {
                    "unit": "USD",
                    "value": "10905",
                    "string": "$ 109.05 USD"
                  },
                  "extras": [
                    {
                      "type": "tax",
                      "name": "State Taxes",
                      "description": "NY Taxes (4.00%)",
                      "price": {
                        "unit": "USD",
                        "value": "436",
                        "string": "$ 4.36 USD"
                      }
                    },
                    {
                      "type": "tax",
                      "name": "City Taxes",
                      "description": "NEW YORK Taxes (4.88%)",
                      "price": {
                        "unit": "USD",
                        "value": "532",
                        "string": "$ 5.32 USD"
                      }
                    },
                    {
                      "type": "shipping",
                      "name": "Flat",
                      "description": "",
                      "price": {
                        "unit": "USD",
                        "value": "0",
                        "string": "$ 0.00 USD"
                      }
                    }
                  ],
                  "total": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  }
                },
                "downloadFiles": [
                  {
                    "id": "5e9a5eba75e0ac242e1b6f64",
                    "name": "New product guide",
                    "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                  }
                ],
                "paypalDetails": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "orderId": "fc7-128",
                  "status": "refunded",
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                  "acceptedOn": "2024-03-29T21:29:21.555Z",
                  "fulfilledOn": "2024-03-29T21:29:21.555Z",
                  "refundedOn": "2024-04-08T18:25:04.238Z",
                  "disputedOn": "2024-03-29T21:29:21.555Z",
                  "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                  "disputeLastStatus": "charge_refunded",
                  "customerPaid": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  },
                  "netAmount": {
                    "unit": "USD",
                    "value": "11262",
                    "string": "$ 112.62 USD"
                  },
                  "applicationFee": {
                    "unit": "USD",
                    "value": "237",
                    "string": "$ 2.37 USD"
                  },
                  "allAddresses": [
                    {
                      "type": "billing",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    {
                      "type": "shipping",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    }
                  ],
                  "shippingAddress": {
                    "type": "shipping",
                    "japanType": "kanji",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "billingAddress": {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "customerInfo": {
                    "fullName": "Arthur Dent",
                    "email": "arthur.dent@example.com"
                  },
                  "purchasedItems": [
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "variantId": "66072fb71b89448912e2683f",
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "weight": 11,
                      "width": 82,
                      "height": 70,
                      "length": 9
                    },
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "weight": 38,
                      "width": 76,
                      "height": 85,
                      "length": 40
                    }
                  ],
                  "purchasedItemsCount": 2,
                  "stripeDetails": {
                    "subscriptionId": null,
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "disputeId": null,
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent"
                  },
                  "stripeCard": {
                    "last4": "4242",
                    "brand": "Visa",
                    "ownerName": "Arthur Dent",
                    "expires": {
                      "year": 2024,
                      "month": 4
                    }
                  },
                  "customData": [
                    {}
                  ],
                  "metadata": {
                    "isBuyNow": false,
                    "hasDownloads": false,
                    "paymentProcessor": "stripe"
                  },
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "totals": {
                    "subtotal": {
                      "unit": "USD",
                      "value": "10905",
                      "string": "$ 109.05 USD"
                    },
                    "extras": [
                      {
                        "type": "tax",
                        "name": "State Taxes",
                        "description": "NY Taxes (4.00%)",
                        "price": {
                          "unit": "USD",
                          "value": "436",
                          "string": "$ 4.36 USD"
                        }
                      },
                      {
                        "type": "tax",
                        "name": "City Taxes",
                        "description": "NEW YORK Taxes (4.88%)",
                        "price": {
                          "unit": "USD",
                          "value": "532",
                          "string": "$ 5.32 USD"
                        }
                      },
                      {
                        "type": "shipping",
                        "name": "Flat",
                        "description": "",
                        "price": {
                          "unit": "USD",
                          "value": "0",
                          "string": "$ 0.00 USD"
                        }
                      }
                    ],
                    "total": {
                      "unit": "USD",
                      "value": "11873",
                      "string": "$ 118.73 USD"
                    }
                  },
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                    }
                  ],
                  "paypalDetails": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "This API lets you update the fields, `comment`, `shippingProvider`, and/or `shippingTracking` for a given order. All three fields can be updated simultaneously or independently.\n\nRequired scope | `ecommerce:write`\n",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update",
          "originalEndpointId": "endpoint_orders.update",
          "name": "Update Order",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Order",
                "key": "order_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/orders/"
              },
              {
                "type": "pathParameter",
                "value": "order_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Arbitrary data for your records",
                    "key": "comment",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Company or method used to ship order",
                    "key": "shippingProvider",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Tracking number for order shipment",
                    "key": "shippingTracking",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "URL to track order shipment",
                    "key": "shippingTrackingURL",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "The order fields to update"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "orders_update_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-orderRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-orderRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-orderRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/orders/5e8518516e147040726cc415",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "order_id": "5e8518516e147040726cc415"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "orderId": "fc7-128",
                "status": "refunded",
                "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                "acceptedOn": "2024-03-29T21:29:21.555Z",
                "fulfilledOn": "2024-03-29T21:29:21.555Z",
                "refundedOn": "2024-04-08T18:25:04.238Z",
                "disputedOn": "2024-03-29T21:29:21.555Z",
                "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                "disputeLastStatus": "charge_refunded",
                "customerPaid": {
                  "unit": "USD",
                  "value": "11873",
                  "string": "$ 118.73 USD"
                },
                "netAmount": {
                  "unit": "USD",
                  "value": "11262",
                  "string": "$ 112.62 USD"
                },
                "applicationFee": {
                  "unit": "USD",
                  "value": "237",
                  "string": "$ 2.37 USD"
                },
                "allAddresses": [
                  {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  {
                    "type": "shipping",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  }
                ],
                "shippingAddress": {
                  "type": "shipping",
                  "japanType": "kanji",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "billingAddress": {
                  "type": "billing",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "shippingProvider": "Shipping Company, Co.",
                "shippingTracking": "tr00000000001",
                "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                "customerInfo": {
                  "fullName": "Arthur Dent",
                  "email": "arthur.dent@example.com"
                },
                "purchasedItems": [
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "productId": "66072fb61b89448912e26791",
                    "productName": "Luxurious Fresh Ball",
                    "productSlug": "luxurious-fresh-ball",
                    "variantId": "66072fb71b89448912e2683f",
                    "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                    "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "weight": 11,
                    "width": 82,
                    "height": 70,
                    "length": 9
                  },
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "productId": "66072fb61b89448912e26799",
                    "productName": "Recycled Steel Gloves",
                    "productSlug": "recycled-steel-gloves",
                    "variantId": "66072fb91b89448912e26ab9",
                    "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                    "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "weight": 38,
                    "width": 76,
                    "height": 85,
                    "length": 40
                  }
                ],
                "purchasedItemsCount": 2,
                "stripeDetails": {
                  "subscriptionId": null,
                  "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                  "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                  "customerId": "cus_PpRsNHwWdUoRKR",
                  "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                  "disputeId": null,
                  "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                  "refundReason": "fraudulent"
                },
                "stripeCard": {
                  "last4": "4242",
                  "brand": "Visa",
                  "ownerName": "Arthur Dent",
                  "expires": {
                    "year": 2024,
                    "month": 4
                  }
                },
                "customData": [
                  {}
                ],
                "metadata": {
                  "isBuyNow": false,
                  "hasDownloads": false,
                  "paymentProcessor": "stripe"
                },
                "isCustomerDeleted": false,
                "isShippingRequired": true,
                "totals": {
                  "subtotal": {
                    "unit": "USD",
                    "value": "10905",
                    "string": "$ 109.05 USD"
                  },
                  "extras": [
                    {
                      "type": "tax",
                      "name": "State Taxes",
                      "description": "NY Taxes (4.00%)",
                      "price": {
                        "unit": "USD",
                        "value": "436",
                        "string": "$ 4.36 USD"
                      }
                    },
                    {
                      "type": "tax",
                      "name": "City Taxes",
                      "description": "NEW YORK Taxes (4.88%)",
                      "price": {
                        "unit": "USD",
                        "value": "532",
                        "string": "$ 5.32 USD"
                      }
                    },
                    {
                      "type": "shipping",
                      "name": "Flat",
                      "description": "",
                      "price": {
                        "unit": "USD",
                        "value": "0",
                        "string": "$ 0.00 USD"
                      }
                    }
                  ],
                  "total": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  }
                },
                "downloadFiles": [
                  {
                    "id": "5e9a5eba75e0ac242e1b6f64",
                    "name": "New product guide",
                    "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                  }
                ],
                "paypalDetails": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "orderId": "fc7-128",
                  "status": "refunded",
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                  "acceptedOn": "2024-03-29T21:29:21.555Z",
                  "fulfilledOn": "2024-03-29T21:29:21.555Z",
                  "refundedOn": "2024-04-08T18:25:04.238Z",
                  "disputedOn": "2024-03-29T21:29:21.555Z",
                  "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                  "disputeLastStatus": "charge_refunded",
                  "customerPaid": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  },
                  "netAmount": {
                    "unit": "USD",
                    "value": "11262",
                    "string": "$ 112.62 USD"
                  },
                  "applicationFee": {
                    "unit": "USD",
                    "value": "237",
                    "string": "$ 2.37 USD"
                  },
                  "allAddresses": [
                    {
                      "type": "billing",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    {
                      "type": "shipping",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    }
                  ],
                  "shippingAddress": {
                    "type": "shipping",
                    "japanType": "kanji",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "billingAddress": {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "customerInfo": {
                    "fullName": "Arthur Dent",
                    "email": "arthur.dent@example.com"
                  },
                  "purchasedItems": [
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "variantId": "66072fb71b89448912e2683f",
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "weight": 11,
                      "width": 82,
                      "height": 70,
                      "length": 9
                    },
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "weight": 38,
                      "width": 76,
                      "height": 85,
                      "length": 40
                    }
                  ],
                  "purchasedItemsCount": 2,
                  "stripeDetails": {
                    "subscriptionId": null,
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "disputeId": null,
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent"
                  },
                  "stripeCard": {
                    "last4": "4242",
                    "brand": "Visa",
                    "ownerName": "Arthur Dent",
                    "expires": {
                      "year": 2024,
                      "month": 4
                    }
                  },
                  "customData": [
                    {}
                  ],
                  "metadata": {
                    "isBuyNow": false,
                    "hasDownloads": false,
                    "paymentProcessor": "stripe"
                  },
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "totals": {
                    "subtotal": {
                      "unit": "USD",
                      "value": "10905",
                      "string": "$ 109.05 USD"
                    },
                    "extras": [
                      {
                        "type": "tax",
                        "name": "State Taxes",
                        "description": "NY Taxes (4.00%)",
                        "price": {
                          "unit": "USD",
                          "value": "436",
                          "string": "$ 4.36 USD"
                        }
                      },
                      {
                        "type": "tax",
                        "name": "City Taxes",
                        "description": "NEW YORK Taxes (4.88%)",
                        "price": {
                          "unit": "USD",
                          "value": "532",
                          "string": "$ 5.32 USD"
                        }
                      },
                      {
                        "type": "shipping",
                        "name": "Flat",
                        "description": "",
                        "price": {
                          "unit": "USD",
                          "value": "0",
                          "string": "$ 0.00 USD"
                        }
                      }
                    ],
                    "total": {
                      "unit": "USD",
                      "value": "11873",
                      "string": "$ 118.73 USD"
                    }
                  },
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                    }
                  ],
                  "paypalDetails": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Updates an order's status to fulfilled\n\nRequired scope | `ecommerce:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-fulfill",
          "originalEndpointId": "endpoint_orders.update-fulfill",
          "name": "Fulfill Order",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Order",
                "key": "order_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/orders/"
              },
              {
                "type": "pathParameter",
                "value": "order_id"
              },
              {
                "type": "literal",
                "value": "/fulfill"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Whether or not the Order Fulfilled email should be sent",
                    "key": "sendOrderFulfilledEmail",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "The order fulfillment request"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "orders_update-fulfill_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Fulfill-orderRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Fulfill-orderRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Fulfill-orderRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/orders/5e8518516e147040726cc415/fulfill",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "order_id": "5e8518516e147040726cc415"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "orderId": "fc7-128",
                "status": "refunded",
                "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                "acceptedOn": "2024-03-29T21:29:21.555Z",
                "fulfilledOn": "2024-03-29T21:29:21.555Z",
                "refundedOn": "2024-04-08T18:25:04.238Z",
                "disputedOn": "2024-03-29T21:29:21.555Z",
                "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                "disputeLastStatus": "charge_refunded",
                "customerPaid": {
                  "unit": "USD",
                  "value": "11873",
                  "string": "$ 118.73 USD"
                },
                "netAmount": {
                  "unit": "USD",
                  "value": "11262",
                  "string": "$ 112.62 USD"
                },
                "applicationFee": {
                  "unit": "USD",
                  "value": "237",
                  "string": "$ 2.37 USD"
                },
                "allAddresses": [
                  {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  {
                    "type": "shipping",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  }
                ],
                "shippingAddress": {
                  "type": "shipping",
                  "japanType": "kanji",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "billingAddress": {
                  "type": "billing",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "shippingProvider": "Shipping Company, Co.",
                "shippingTracking": "tr00000000001",
                "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                "customerInfo": {
                  "fullName": "Arthur Dent",
                  "email": "arthur.dent@example.com"
                },
                "purchasedItems": [
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "productId": "66072fb61b89448912e26791",
                    "productName": "Luxurious Fresh Ball",
                    "productSlug": "luxurious-fresh-ball",
                    "variantId": "66072fb71b89448912e2683f",
                    "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                    "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "weight": 11,
                    "width": 82,
                    "height": 70,
                    "length": 9
                  },
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "productId": "66072fb61b89448912e26799",
                    "productName": "Recycled Steel Gloves",
                    "productSlug": "recycled-steel-gloves",
                    "variantId": "66072fb91b89448912e26ab9",
                    "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                    "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "weight": 38,
                    "width": 76,
                    "height": 85,
                    "length": 40
                  }
                ],
                "purchasedItemsCount": 2,
                "stripeDetails": {
                  "subscriptionId": null,
                  "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                  "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                  "customerId": "cus_PpRsNHwWdUoRKR",
                  "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                  "disputeId": null,
                  "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                  "refundReason": "fraudulent"
                },
                "stripeCard": {
                  "last4": "4242",
                  "brand": "Visa",
                  "ownerName": "Arthur Dent",
                  "expires": {
                    "year": 2024,
                    "month": 4
                  }
                },
                "customData": [
                  {}
                ],
                "metadata": {
                  "isBuyNow": false,
                  "hasDownloads": false,
                  "paymentProcessor": "stripe"
                },
                "isCustomerDeleted": false,
                "isShippingRequired": true,
                "totals": {
                  "subtotal": {
                    "unit": "USD",
                    "value": "10905",
                    "string": "$ 109.05 USD"
                  },
                  "extras": [
                    {
                      "type": "tax",
                      "name": "State Taxes",
                      "description": "NY Taxes (4.00%)",
                      "price": {
                        "unit": "USD",
                        "value": "436",
                        "string": "$ 4.36 USD"
                      }
                    },
                    {
                      "type": "tax",
                      "name": "City Taxes",
                      "description": "NEW YORK Taxes (4.88%)",
                      "price": {
                        "unit": "USD",
                        "value": "532",
                        "string": "$ 5.32 USD"
                      }
                    },
                    {
                      "type": "shipping",
                      "name": "Flat",
                      "description": "",
                      "price": {
                        "unit": "USD",
                        "value": "0",
                        "string": "$ 0.00 USD"
                      }
                    }
                  ],
                  "total": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  }
                },
                "downloadFiles": [
                  {
                    "id": "5e9a5eba75e0ac242e1b6f64",
                    "name": "New product guide",
                    "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                  }
                ],
                "paypalDetails": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "orderId": "fc7-128",
                  "status": "refunded",
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                  "acceptedOn": "2024-03-29T21:29:21.555Z",
                  "fulfilledOn": "2024-03-29T21:29:21.555Z",
                  "refundedOn": "2024-04-08T18:25:04.238Z",
                  "disputedOn": "2024-03-29T21:29:21.555Z",
                  "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                  "disputeLastStatus": "charge_refunded",
                  "customerPaid": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  },
                  "netAmount": {
                    "unit": "USD",
                    "value": "11262",
                    "string": "$ 112.62 USD"
                  },
                  "applicationFee": {
                    "unit": "USD",
                    "value": "237",
                    "string": "$ 2.37 USD"
                  },
                  "allAddresses": [
                    {
                      "type": "billing",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    {
                      "type": "shipping",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    }
                  ],
                  "shippingAddress": {
                    "type": "shipping",
                    "japanType": "kanji",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "billingAddress": {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "customerInfo": {
                    "fullName": "Arthur Dent",
                    "email": "arthur.dent@example.com"
                  },
                  "purchasedItems": [
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "variantId": "66072fb71b89448912e2683f",
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "weight": 11,
                      "width": 82,
                      "height": 70,
                      "length": 9
                    },
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "weight": 38,
                      "width": 76,
                      "height": 85,
                      "length": 40
                    }
                  ],
                  "purchasedItemsCount": 2,
                  "stripeDetails": {
                    "subscriptionId": null,
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "disputeId": null,
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent"
                  },
                  "stripeCard": {
                    "last4": "4242",
                    "brand": "Visa",
                    "ownerName": "Arthur Dent",
                    "expires": {
                      "year": 2024,
                      "month": 4
                    }
                  },
                  "customData": [
                    {}
                  ],
                  "metadata": {
                    "isBuyNow": false,
                    "hasDownloads": false,
                    "paymentProcessor": "stripe"
                  },
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "totals": {
                    "subtotal": {
                      "unit": "USD",
                      "value": "10905",
                      "string": "$ 109.05 USD"
                    },
                    "extras": [
                      {
                        "type": "tax",
                        "name": "State Taxes",
                        "description": "NY Taxes (4.00%)",
                        "price": {
                          "unit": "USD",
                          "value": "436",
                          "string": "$ 4.36 USD"
                        }
                      },
                      {
                        "type": "tax",
                        "name": "City Taxes",
                        "description": "NEW YORK Taxes (4.88%)",
                        "price": {
                          "unit": "USD",
                          "value": "532",
                          "string": "$ 5.32 USD"
                        }
                      },
                      {
                        "type": "shipping",
                        "name": "Flat",
                        "description": "",
                        "price": {
                          "unit": "USD",
                          "value": "0",
                          "string": "$ 0.00 USD"
                        }
                      }
                    ],
                    "total": {
                      "unit": "USD",
                      "value": "11873",
                      "string": "$ 118.73 USD"
                    }
                  },
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                    }
                  ],
                  "paypalDetails": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Updates an order's status to unfulfilled\n\nRequired scope | `ecommerce:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-unfulfill",
          "originalEndpointId": "endpoint_orders.update-unfulfill",
          "name": "Unfulfill Order",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Order",
                "key": "order_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/orders/"
              },
              {
                "type": "pathParameter",
                "value": "order_id"
              },
              {
                "type": "literal",
                "value": "/unfulfill"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "orders_update-unfulfill_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Unfulfill-orderRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Unfulfill-orderRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Unfulfill-orderRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/orders/5e8518516e147040726cc415/unfulfill",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "order_id": "5e8518516e147040726cc415"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "orderId": "fc7-128",
                "status": "refunded",
                "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                "acceptedOn": "2024-03-29T21:29:21.555Z",
                "fulfilledOn": "2024-03-29T21:29:21.555Z",
                "refundedOn": "2024-04-08T18:25:04.238Z",
                "disputedOn": "2024-03-29T21:29:21.555Z",
                "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                "disputeLastStatus": "charge_refunded",
                "customerPaid": {
                  "unit": "USD",
                  "value": "11873",
                  "string": "$ 118.73 USD"
                },
                "netAmount": {
                  "unit": "USD",
                  "value": "11262",
                  "string": "$ 112.62 USD"
                },
                "applicationFee": {
                  "unit": "USD",
                  "value": "237",
                  "string": "$ 2.37 USD"
                },
                "allAddresses": [
                  {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  {
                    "type": "shipping",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  }
                ],
                "shippingAddress": {
                  "type": "shipping",
                  "japanType": "kanji",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "billingAddress": {
                  "type": "billing",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "shippingProvider": "Shipping Company, Co.",
                "shippingTracking": "tr00000000001",
                "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                "customerInfo": {
                  "fullName": "Arthur Dent",
                  "email": "arthur.dent@example.com"
                },
                "purchasedItems": [
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "productId": "66072fb61b89448912e26791",
                    "productName": "Luxurious Fresh Ball",
                    "productSlug": "luxurious-fresh-ball",
                    "variantId": "66072fb71b89448912e2683f",
                    "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                    "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "weight": 11,
                    "width": 82,
                    "height": 70,
                    "length": 9
                  },
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "productId": "66072fb61b89448912e26799",
                    "productName": "Recycled Steel Gloves",
                    "productSlug": "recycled-steel-gloves",
                    "variantId": "66072fb91b89448912e26ab9",
                    "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                    "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "weight": 38,
                    "width": 76,
                    "height": 85,
                    "length": 40
                  }
                ],
                "purchasedItemsCount": 2,
                "stripeDetails": {
                  "subscriptionId": null,
                  "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                  "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                  "customerId": "cus_PpRsNHwWdUoRKR",
                  "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                  "disputeId": null,
                  "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                  "refundReason": "fraudulent"
                },
                "stripeCard": {
                  "last4": "4242",
                  "brand": "Visa",
                  "ownerName": "Arthur Dent",
                  "expires": {
                    "year": 2024,
                    "month": 4
                  }
                },
                "customData": [
                  {}
                ],
                "metadata": {
                  "isBuyNow": false,
                  "hasDownloads": false,
                  "paymentProcessor": "stripe"
                },
                "isCustomerDeleted": false,
                "isShippingRequired": true,
                "totals": {
                  "subtotal": {
                    "unit": "USD",
                    "value": "10905",
                    "string": "$ 109.05 USD"
                  },
                  "extras": [
                    {
                      "type": "tax",
                      "name": "State Taxes",
                      "description": "NY Taxes (4.00%)",
                      "price": {
                        "unit": "USD",
                        "value": "436",
                        "string": "$ 4.36 USD"
                      }
                    },
                    {
                      "type": "tax",
                      "name": "City Taxes",
                      "description": "NEW YORK Taxes (4.88%)",
                      "price": {
                        "unit": "USD",
                        "value": "532",
                        "string": "$ 5.32 USD"
                      }
                    },
                    {
                      "type": "shipping",
                      "name": "Flat",
                      "description": "",
                      "price": {
                        "unit": "USD",
                        "value": "0",
                        "string": "$ 0.00 USD"
                      }
                    }
                  ],
                  "total": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  }
                },
                "downloadFiles": [
                  {
                    "id": "5e9a5eba75e0ac242e1b6f64",
                    "name": "New product guide",
                    "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                  }
                ],
                "paypalDetails": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "orderId": "fc7-128",
                  "status": "refunded",
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                  "acceptedOn": "2024-03-29T21:29:21.555Z",
                  "fulfilledOn": "2024-03-29T21:29:21.555Z",
                  "refundedOn": "2024-04-08T18:25:04.238Z",
                  "disputedOn": "2024-03-29T21:29:21.555Z",
                  "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                  "disputeLastStatus": "charge_refunded",
                  "customerPaid": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  },
                  "netAmount": {
                    "unit": "USD",
                    "value": "11262",
                    "string": "$ 112.62 USD"
                  },
                  "applicationFee": {
                    "unit": "USD",
                    "value": "237",
                    "string": "$ 2.37 USD"
                  },
                  "allAddresses": [
                    {
                      "type": "billing",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    {
                      "type": "shipping",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    }
                  ],
                  "shippingAddress": {
                    "type": "shipping",
                    "japanType": "kanji",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "billingAddress": {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "customerInfo": {
                    "fullName": "Arthur Dent",
                    "email": "arthur.dent@example.com"
                  },
                  "purchasedItems": [
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "variantId": "66072fb71b89448912e2683f",
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "weight": 11,
                      "width": 82,
                      "height": 70,
                      "length": 9
                    },
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "weight": 38,
                      "width": 76,
                      "height": 85,
                      "length": 40
                    }
                  ],
                  "purchasedItemsCount": 2,
                  "stripeDetails": {
                    "subscriptionId": null,
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "disputeId": null,
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent"
                  },
                  "stripeCard": {
                    "last4": "4242",
                    "brand": "Visa",
                    "ownerName": "Arthur Dent",
                    "expires": {
                      "year": 2024,
                      "month": 4
                    }
                  },
                  "customData": [
                    {}
                  ],
                  "metadata": {
                    "isBuyNow": false,
                    "hasDownloads": false,
                    "paymentProcessor": "stripe"
                  },
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "totals": {
                    "subtotal": {
                      "unit": "USD",
                      "value": "10905",
                      "string": "$ 109.05 USD"
                    },
                    "extras": [
                      {
                        "type": "tax",
                        "name": "State Taxes",
                        "description": "NY Taxes (4.00%)",
                        "price": {
                          "unit": "USD",
                          "value": "436",
                          "string": "$ 4.36 USD"
                        }
                      },
                      {
                        "type": "tax",
                        "name": "City Taxes",
                        "description": "NEW YORK Taxes (4.88%)",
                        "price": {
                          "unit": "USD",
                          "value": "532",
                          "string": "$ 5.32 USD"
                        }
                      },
                      {
                        "type": "shipping",
                        "name": "Flat",
                        "description": "",
                        "price": {
                          "unit": "USD",
                          "value": "0",
                          "string": "$ 0.00 USD"
                        }
                      }
                    ],
                    "total": {
                      "unit": "USD",
                      "value": "11873",
                      "string": "$ 118.73 USD"
                    }
                  },
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                    }
                  ],
                  "paypalDetails": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "This API will reverse a Stripe charge and refund an order back to a\ncustomer. It will also set the order's status to `refunded`.\n\n\nRequired scope | `ecommerce:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "refund",
          "originalEndpointId": "endpoint_orders.refund",
          "name": "Refund Order",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Order",
                "key": "order_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/orders/"
              },
              {
                "type": "pathParameter",
                "value": "order_id"
              },
              {
                "type": "literal",
                "value": "/refund"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The reason for the refund",
                    "key": "reason",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdOrdersOrderIdRefundPostRequestBodyContentApplicationJsonSchemaReason"
                      }
                    }
                  }
                ]
              }
            },
            "description": "The order fulfillment request"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "orders_refund_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Refund-orderRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Refund-orderRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Refund-orderRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/orders/5e8518516e147040726cc415/refund",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "order_id": "5e8518516e147040726cc415"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "orderId": "fc7-128",
                "status": "refunded",
                "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                "acceptedOn": "2024-03-29T21:29:21.555Z",
                "fulfilledOn": "2024-03-29T21:29:21.555Z",
                "refundedOn": "2024-04-08T18:25:04.238Z",
                "disputedOn": "2024-03-29T21:29:21.555Z",
                "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                "disputeLastStatus": "charge_refunded",
                "customerPaid": {
                  "unit": "USD",
                  "value": "11873",
                  "string": "$ 118.73 USD"
                },
                "netAmount": {
                  "unit": "USD",
                  "value": "11262",
                  "string": "$ 112.62 USD"
                },
                "applicationFee": {
                  "unit": "USD",
                  "value": "237",
                  "string": "$ 2.37 USD"
                },
                "allAddresses": [
                  {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  {
                    "type": "shipping",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  }
                ],
                "shippingAddress": {
                  "type": "shipping",
                  "japanType": "kanji",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "billingAddress": {
                  "type": "billing",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "shippingProvider": "Shipping Company, Co.",
                "shippingTracking": "tr00000000001",
                "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                "customerInfo": {
                  "fullName": "Arthur Dent",
                  "email": "arthur.dent@example.com"
                },
                "purchasedItems": [
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "productId": "66072fb61b89448912e26791",
                    "productName": "Luxurious Fresh Ball",
                    "productSlug": "luxurious-fresh-ball",
                    "variantId": "66072fb71b89448912e2683f",
                    "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                    "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "weight": 11,
                    "width": 82,
                    "height": 70,
                    "length": 9
                  },
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "productId": "66072fb61b89448912e26799",
                    "productName": "Recycled Steel Gloves",
                    "productSlug": "recycled-steel-gloves",
                    "variantId": "66072fb91b89448912e26ab9",
                    "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                    "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "weight": 38,
                    "width": 76,
                    "height": 85,
                    "length": 40
                  }
                ],
                "purchasedItemsCount": 2,
                "stripeDetails": {
                  "subscriptionId": null,
                  "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                  "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                  "customerId": "cus_PpRsNHwWdUoRKR",
                  "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                  "disputeId": null,
                  "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                  "refundReason": "fraudulent"
                },
                "stripeCard": {
                  "last4": "4242",
                  "brand": "Visa",
                  "ownerName": "Arthur Dent",
                  "expires": {
                    "year": 2024,
                    "month": 4
                  }
                },
                "customData": [
                  {}
                ],
                "metadata": {
                  "isBuyNow": false,
                  "hasDownloads": false,
                  "paymentProcessor": "stripe"
                },
                "isCustomerDeleted": false,
                "isShippingRequired": true,
                "totals": {
                  "subtotal": {
                    "unit": "USD",
                    "value": "10905",
                    "string": "$ 109.05 USD"
                  },
                  "extras": [
                    {
                      "type": "tax",
                      "name": "State Taxes",
                      "description": "NY Taxes (4.00%)",
                      "price": {
                        "unit": "USD",
                        "value": "436",
                        "string": "$ 4.36 USD"
                      }
                    },
                    {
                      "type": "tax",
                      "name": "City Taxes",
                      "description": "NEW YORK Taxes (4.88%)",
                      "price": {
                        "unit": "USD",
                        "value": "532",
                        "string": "$ 5.32 USD"
                      }
                    },
                    {
                      "type": "shipping",
                      "name": "Flat",
                      "description": "",
                      "price": {
                        "unit": "USD",
                        "value": "0",
                        "string": "$ 0.00 USD"
                      }
                    }
                  ],
                  "total": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  }
                },
                "downloadFiles": [
                  {
                    "id": "5e9a5eba75e0ac242e1b6f64",
                    "name": "New product guide",
                    "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                  }
                ],
                "paypalDetails": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "orderId": "fc7-128",
                  "status": "refunded",
                  "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                  "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                  "acceptedOn": "2024-03-29T21:29:21.555Z",
                  "fulfilledOn": "2024-03-29T21:29:21.555Z",
                  "refundedOn": "2024-04-08T18:25:04.238Z",
                  "disputedOn": "2024-03-29T21:29:21.555Z",
                  "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                  "disputeLastStatus": "charge_refunded",
                  "customerPaid": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  },
                  "netAmount": {
                    "unit": "USD",
                    "value": "11262",
                    "string": "$ 112.62 USD"
                  },
                  "applicationFee": {
                    "unit": "USD",
                    "value": "237",
                    "string": "$ 2.37 USD"
                  },
                  "allAddresses": [
                    {
                      "type": "billing",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    },
                    {
                      "type": "shipping",
                      "addressee": "Arthur Dent",
                      "line1": "20 W 34th St",
                      "line2": "Empire State Building",
                      "city": "New York",
                      "state": "New York",
                      "country": "US",
                      "postalCode": "10118"
                    }
                  ],
                  "shippingAddress": {
                    "type": "shipping",
                    "japanType": "kanji",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "billingAddress": {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  "shippingProvider": "Shipping Company, Co.",
                  "shippingTracking": "tr00000000001",
                  "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                  "customerInfo": {
                    "fullName": "Arthur Dent",
                    "email": "arthur.dent@example.com"
                  },
                  "purchasedItems": [
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "productId": "66072fb61b89448912e26791",
                      "productName": "Luxurious Fresh Ball",
                      "productSlug": "luxurious-fresh-ball",
                      "variantId": "66072fb71b89448912e2683f",
                      "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                      "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5561",
                        "string": "$ 55.61 USD"
                      },
                      "weight": 11,
                      "width": 82,
                      "height": 70,
                      "length": 9
                    },
                    {
                      "count": 1,
                      "rowTotal": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "productId": "66072fb61b89448912e26799",
                      "productName": "Recycled Steel Gloves",
                      "productSlug": "recycled-steel-gloves",
                      "variantId": "66072fb91b89448912e26ab9",
                      "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                      "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                      "variantImage": {
                        "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                        "file": {}
                      },
                      "variantPrice": {
                        "unit": "USD",
                        "value": "5344",
                        "string": "$ 53.44 USD"
                      },
                      "weight": 38,
                      "width": 76,
                      "height": 85,
                      "length": 40
                    }
                  ],
                  "purchasedItemsCount": 2,
                  "stripeDetails": {
                    "subscriptionId": null,
                    "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                    "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                    "customerId": "cus_PpRsNHwWdUoRKR",
                    "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                    "disputeId": null,
                    "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                    "refundReason": "fraudulent"
                  },
                  "stripeCard": {
                    "last4": "4242",
                    "brand": "Visa",
                    "ownerName": "Arthur Dent",
                    "expires": {
                      "year": 2024,
                      "month": 4
                    }
                  },
                  "customData": [
                    {}
                  ],
                  "metadata": {
                    "isBuyNow": false,
                    "hasDownloads": false,
                    "paymentProcessor": "stripe"
                  },
                  "isCustomerDeleted": false,
                  "isShippingRequired": true,
                  "totals": {
                    "subtotal": {
                      "unit": "USD",
                      "value": "10905",
                      "string": "$ 109.05 USD"
                    },
                    "extras": [
                      {
                        "type": "tax",
                        "name": "State Taxes",
                        "description": "NY Taxes (4.00%)",
                        "price": {
                          "unit": "USD",
                          "value": "436",
                          "string": "$ 4.36 USD"
                        }
                      },
                      {
                        "type": "tax",
                        "name": "City Taxes",
                        "description": "NEW YORK Taxes (4.88%)",
                        "price": {
                          "unit": "USD",
                          "value": "532",
                          "string": "$ 5.32 USD"
                        }
                      },
                      {
                        "type": "shipping",
                        "name": "Flat",
                        "description": "",
                        "price": {
                          "unit": "USD",
                          "value": "0",
                          "string": "$ 0.00 USD"
                        }
                      }
                    ],
                    "total": {
                      "unit": "USD",
                      "value": "11873",
                      "string": "$ 118.73 USD"
                    }
                  },
                  "downloadFiles": [
                    {
                      "id": "5e9a5eba75e0ac242e1b6f64",
                      "name": "New product guide",
                      "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                    }
                  ],
                  "paypalDetails": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [
        {
          "id": "ecomm_new_order",
          "path": [],
          "method": "POST",
          "name": "New eComm Order",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The status of the Order\n",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStatus"
                    }
                  }
                },
                {
                  "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                  "key": "comment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A comment that the customer left when making their Order",
                  "key": "orderComment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ISO8601 timestamp that an Order was placed.",
                  "key": "acceptedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
                  "key": "fulfilledOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                  "key": "refundedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
                  "key": "disputedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
                  "key": "disputeUpdatedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
                  "key": "disputeLastStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaDisputeLastStatus"
                      }
                    }
                  }
                },
                {
                  "description": "The total paid by the customer",
                  "key": "customerPaid",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomerPaid"
                    }
                  }
                },
                {
                  "description": "The net amount after application fees",
                  "key": "netAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaNetAmount"
                    }
                  }
                },
                {
                  "description": "The application fee assessed by the platform",
                  "key": "applicationFee",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaApplicationFee"
                    }
                  }
                },
                {
                  "description": "All addresses provided by the customer during the ordering flow.",
                  "key": "allAddresses",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaAllAddressesItems"
                      }
                    }
                  }
                },
                {
                  "description": "The shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaShippingAddress"
                    }
                  }
                },
                {
                  "description": "The billing address",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaBillingAddress"
                    }
                  }
                },
                {
                  "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
                  "key": "shippingProvider",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
                  "key": "shippingTracking",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "shippingTrackingURL",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "An object with the keys `fullName` and `email`.",
                  "key": "customerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomerInfo"
                    }
                  }
                },
                {
                  "description": "An array of all things that the Customer purchased.",
                  "key": "purchasedItems",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPurchasedItemsItems"
                      }
                    }
                  }
                },
                {
                  "description": "The sum of all 'count' fields in 'purchasedItems'.",
                  "key": "purchasedItemsCount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                  "key": "stripeDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeDetails"
                    }
                  }
                },
                {
                  "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
                  "key": "stripeCard",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaStripeCard"
                    }
                  }
                },
                {
                  "key": "paypalDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaPaypalDetails"
                    }
                  }
                },
                {
                  "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
                  "key": "customData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaCustomDataItems"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaMetadata"
                    }
                  }
                },
                {
                  "description": "A boolean indicating whether the customer has been deleted from the site.\n",
                  "key": "isCustomerDeleted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
                  "key": "isShippingRequired",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
                  "key": "hasDownloads",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A string indicating the payment processor used for this order.\n",
                  "key": "paymentProcessor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An object describing various pricing totals",
                  "key": "totals",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaTotals"
                    }
                  }
                },
                {
                  "description": "An array of downloadable file objects.",
                  "key": "downloadFiles",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommNewOrderPayloadContentApplicationJsonSchemaDownloadFilesItems"
                      }
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "ordersEcommNewOrderExample",
              "payload": {
                "status": "refunded",
                "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                "acceptedOn": "2024-03-29T21:29:21.555Z",
                "fulfilledOn": "2024-03-29T21:29:21.555Z",
                "refundedOn": "2024-04-08T18:25:04.238Z",
                "disputedOn": "2024-03-29T21:29:21.555Z",
                "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                "disputeLastStatus": "charge_refunded",
                "customerPaid": {
                  "unit": "USD",
                  "value": "11873",
                  "string": "$ 118.73 USD"
                },
                "netAmount": {
                  "unit": "USD",
                  "value": "11262",
                  "string": "$ 112.62 USD"
                },
                "applicationFee": {
                  "unit": "USD",
                  "value": "237",
                  "string": "$ 2.37 USD"
                },
                "allAddresses": [
                  {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  {
                    "type": "shipping",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  }
                ],
                "shippingAddress": {
                  "type": "shipping",
                  "japanType": "kanji",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "billingAddress": {
                  "type": "billing",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "shippingProvider": "Shipping Company, Co.",
                "shippingTracking": "tr00000000001",
                "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                "customerInfo": {
                  "fullName": "Arthur Dent",
                  "email": "arthur.dent@example.com"
                },
                "purchasedItems": [
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "productName": "Luxurious Fresh Ball",
                    "productSlug": "luxurious-fresh-ball",
                    "variantId": "66072fb71b89448912e2683f",
                    "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                    "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "weight": 11,
                    "width": 82,
                    "height": 70,
                    "length": 9,
                    "productId": "66072fb61b89448912e26791"
                  },
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "productName": "Recycled Steel Gloves",
                    "productSlug": "recycled-steel-gloves",
                    "variantId": "66072fb91b89448912e26ab9",
                    "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                    "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "weight": 38,
                    "width": 76,
                    "height": 85,
                    "length": 40,
                    "productId": "66072fb61b89448912e26799"
                  }
                ],
                "purchasedItemsCount": 2,
                "stripeDetails": {
                  "subscriptionId": null,
                  "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                  "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                  "customerId": "cus_PpRsNHwWdUoRKR",
                  "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                  "disputeId": null,
                  "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                  "refundReason": "fraudulent"
                },
                "stripeCard": {
                  "last4": "4242",
                  "brand": "Visa",
                  "ownerName": "Arthur Dent",
                  "expires": {
                    "year": 2024,
                    "month": 4
                  }
                },
                "customData": [
                  {}
                ],
                "metadata": {
                  "isBuyNow": false,
                  "hasDownloads": false,
                  "paymentProcessor": "stripe"
                },
                "isCustomerDeleted": false,
                "isShippingRequired": true,
                "totals": {
                  "subtotal": {
                    "unit": "USD",
                    "value": "10905",
                    "string": "$ 109.05 USD"
                  },
                  "extras": [
                    {
                      "type": "tax",
                      "name": "State Taxes",
                      "description": "NY Taxes (4.00%)",
                      "price": {
                        "unit": "USD",
                        "value": "436",
                        "string": "$ 4.36 USD"
                      }
                    },
                    {
                      "type": "tax",
                      "name": "City Taxes",
                      "description": "NEW YORK Taxes (4.88%)",
                      "price": {
                        "unit": "USD",
                        "value": "532",
                        "string": "$ 5.32 USD"
                      }
                    },
                    {
                      "type": "shipping",
                      "name": "Flat",
                      "description": "",
                      "price": {
                        "unit": "USD",
                        "value": "0",
                        "string": "$ 0.00 USD"
                      }
                    }
                  ],
                  "total": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  }
                },
                "downloadFiles": [
                  {
                    "id": "5e9a5eba75e0ac242e1b6f64",
                    "name": "New product guide",
                    "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                  }
                ],
                "orderId": "fc7-128",
                "paypalDetails": {}
              }
            }
          ]
        },
        {
          "id": "ecomm_order_changed",
          "path": [],
          "method": "POST",
          "name": "Updated eComm Order",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The order id. Will usually be 6 hex characters, but can also be 9 hex characters if the site has a very large number of Orders. Randomly assigned.\n",
                  "key": "orderId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The status of the Order\n",
                  "key": "status",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStatus"
                    }
                  }
                },
                {
                  "description": "A comment string for this Order, which is editable by API user (not used by Webflow).",
                  "key": "comment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "A comment that the customer left when making their Order",
                  "key": "orderComment",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The ISO8601 timestamp that an Order was placed.",
                  "key": "acceptedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "When an Order is marked as 'fulfilled', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
                  "key": "fulfilledOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "When an Order is marked as 'refunded', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.",
                  "key": "refundedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "When an Order is marked as 'disputed', this field represents the timestamp of the fulfillment in ISO8601 format. Otherwise, it is null.\n",
                  "key": "disputedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "If an Order has been disputed by the customer, this key will be set to the ISO8601 timestamp of the last update received. If the Order is not disputed, the key will be null.\n",
                  "key": "disputeUpdatedOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "If an order was disputed by the customer, then this key will be set with the [dispute's status](https://stripe.com/docs/api#dispute_object-status).\n",
                  "key": "disputeLastStatus",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaDisputeLastStatus"
                      }
                    }
                  }
                },
                {
                  "description": "The total paid by the customer",
                  "key": "customerPaid",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomerPaid"
                    }
                  }
                },
                {
                  "description": "The net amount after application fees",
                  "key": "netAmount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaNetAmount"
                    }
                  }
                },
                {
                  "description": "The application fee assessed by the platform",
                  "key": "applicationFee",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaApplicationFee"
                    }
                  }
                },
                {
                  "description": "All addresses provided by the customer during the ordering flow.",
                  "key": "allAddresses",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaAllAddressesItems"
                      }
                    }
                  }
                },
                {
                  "description": "The shipping address",
                  "key": "shippingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaShippingAddress"
                    }
                  }
                },
                {
                  "description": "The billing address",
                  "key": "billingAddress",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaBillingAddress"
                    }
                  }
                },
                {
                  "description": "A string editable by the API user to note the shipping provider used (not used by Webflow).\n",
                  "key": "shippingProvider",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "A string editable by the API user to note the shipping tracking number for the order (not used by Webflow).\n",
                  "key": "shippingTracking",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "key": "shippingTrackingURL",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "nullable",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    }
                  }
                },
                {
                  "description": "An object with the keys `fullName` and `email`.",
                  "key": "customerInfo",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomerInfo"
                    }
                  }
                },
                {
                  "description": "An array of all things that the Customer purchased.",
                  "key": "purchasedItems",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPurchasedItemsItems"
                      }
                    }
                  }
                },
                {
                  "description": "The sum of all 'count' fields in 'purchasedItems'.",
                  "key": "purchasedItemsCount",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "An object with various Stripe IDs, useful for linking into the stripe dashboard.",
                  "key": "stripeDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeDetails"
                    }
                  }
                },
                {
                  "description": "Details on the card used to fulfill this order, if this order was finalized with Stripe.\n",
                  "key": "stripeCard",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaStripeCard"
                    }
                  }
                },
                {
                  "key": "paypalDetails",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaPaypalDetails"
                    }
                  }
                },
                {
                  "description": "An array of additional inputs for custom order data gathering. Each object in the array represents an input with a name, and a textInput, textArea, or checkbox value.\n",
                  "key": "customData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaCustomDataItems"
                      }
                    }
                  }
                },
                {
                  "key": "metadata",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaMetadata"
                    }
                  }
                },
                {
                  "description": "A boolean indicating whether the customer has been deleted from the site.\n",
                  "key": "isCustomerDeleted",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A boolean indicating whether the order contains one or more purchased items that require shipping.\n",
                  "key": "isShippingRequired",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A boolean indicating whether the order contains one or more purchased items that are downloadable.\n",
                  "key": "hasDownloads",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean"
                      }
                    }
                  }
                },
                {
                  "description": "A string indicating the payment processor used for this order.\n",
                  "key": "paymentProcessor",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "An object describing various pricing totals",
                  "key": "totals",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaTotals"
                    }
                  }
                },
                {
                  "description": "An array of downloadable file objects.",
                  "key": "downloadFiles",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "WebhooksEcommOrderChangedPayloadContentApplicationJsonSchemaDownloadFilesItems"
                      }
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "ordersEcommOrderChangedExample",
              "payload": {
                "status": "refunded",
                "comment": "Customer requested gift wrapping and a personalized note saying: Happy Birthday, Ford! 🎉 Please ensure the item is packed with extra bubble wrap for safe transit.",
                "orderComment": "Please gift wrap with a personal note saying \"Happy Birthday, Ford! 🎉",
                "acceptedOn": "2024-03-29T21:29:21.555Z",
                "fulfilledOn": "2024-03-29T21:29:21.555Z",
                "refundedOn": "2024-04-08T18:25:04.238Z",
                "disputedOn": "2024-03-29T21:29:21.555Z",
                "disputeUpdatedOn": "2024-03-29T21:29:21.555Z",
                "disputeLastStatus": "charge_refunded",
                "customerPaid": {
                  "unit": "USD",
                  "value": "11873",
                  "string": "$ 118.73 USD"
                },
                "netAmount": {
                  "unit": "USD",
                  "value": "11262",
                  "string": "$ 112.62 USD"
                },
                "applicationFee": {
                  "unit": "USD",
                  "value": "237",
                  "string": "$ 2.37 USD"
                },
                "allAddresses": [
                  {
                    "type": "billing",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  },
                  {
                    "type": "shipping",
                    "addressee": "Arthur Dent",
                    "line1": "20 W 34th St",
                    "line2": "Empire State Building",
                    "city": "New York",
                    "state": "New York",
                    "country": "US",
                    "postalCode": "10118"
                  }
                ],
                "shippingAddress": {
                  "type": "shipping",
                  "japanType": "kanji",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "billingAddress": {
                  "type": "billing",
                  "addressee": "Arthur Dent",
                  "line1": "20 W 34th St",
                  "line2": "Empire State Building",
                  "city": "New York",
                  "state": "New York",
                  "country": "US",
                  "postalCode": "10118"
                },
                "shippingProvider": "Shipping Company, Co.",
                "shippingTracking": "tr00000000001",
                "shippingTrackingURL": "https://www.shippingcompany.com/tracking/tr00000000001",
                "customerInfo": {
                  "fullName": "Arthur Dent",
                  "email": "arthur.dent@example.com"
                },
                "purchasedItems": [
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "productName": "Luxurious Fresh Ball",
                    "productSlug": "luxurious-fresh-ball",
                    "variantId": "66072fb71b89448912e2683f",
                    "variantName": "Luxurious Fresh Ball Generic: Bronze, Practical: Plastic",
                    "variantSlug": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantSKU": "luxurious-fresh-ball-generic-bronze-practical-plastic",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2672c_image14.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5561",
                      "string": "$ 55.61 USD"
                    },
                    "weight": 11,
                    "width": 82,
                    "height": 70,
                    "length": 9,
                    "productId": "66072fb61b89448912e26791"
                  },
                  {
                    "count": 1,
                    "rowTotal": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "productName": "Recycled Steel Gloves",
                    "productSlug": "recycled-steel-gloves",
                    "variantId": "66072fb91b89448912e26ab9",
                    "variantName": "Recycled Steel Gloves Electronic: Granite, Handcrafted: grey",
                    "variantSlug": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantSKU": "recycled-steel-gloves-electronic-granite-handcrafted-grey",
                    "variantImage": {
                      "url": "https://d1otoma47x30pg.cloudfront.net/66072f39417a2a35b2589cc7/66072fb51b89448912e2671e_image2.jpeg",
                      "file": {}
                    },
                    "variantPrice": {
                      "unit": "USD",
                      "value": "5344",
                      "string": "$ 53.44 USD"
                    },
                    "weight": 38,
                    "width": 76,
                    "height": 85,
                    "length": 40,
                    "productId": "66072fb61b89448912e26799"
                  }
                ],
                "purchasedItemsCount": 2,
                "stripeDetails": {
                  "subscriptionId": null,
                  "paymentMethod": "pm_1OzmzBJYFi4lcbXWHKNdXU7j",
                  "paymentIntentId": "pi_3OzmzDJYFi4lcbXW1hTBW6ft",
                  "customerId": "cus_PpRsNHwWdUoRKR",
                  "chargeId": "ch_3OzmzDJYFi4lcbXW1ndkkrH2",
                  "disputeId": null,
                  "refundId": "re_3OzmzDJYFi4lcbXW1kFAmlBk",
                  "refundReason": "fraudulent"
                },
                "stripeCard": {
                  "last4": "4242",
                  "brand": "Visa",
                  "ownerName": "Arthur Dent",
                  "expires": {
                    "year": 2024,
                    "month": 4
                  }
                },
                "customData": [
                  {}
                ],
                "metadata": {
                  "isBuyNow": false,
                  "hasDownloads": false,
                  "paymentProcessor": "stripe"
                },
                "isCustomerDeleted": false,
                "isShippingRequired": true,
                "totals": {
                  "subtotal": {
                    "unit": "USD",
                    "value": "10905",
                    "string": "$ 109.05 USD"
                  },
                  "extras": [
                    {
                      "type": "tax",
                      "name": "State Taxes",
                      "description": "NY Taxes (4.00%)",
                      "price": {
                        "unit": "USD",
                        "value": "436",
                        "string": "$ 4.36 USD"
                      }
                    },
                    {
                      "type": "tax",
                      "name": "City Taxes",
                      "description": "NEW YORK Taxes (4.88%)",
                      "price": {
                        "unit": "USD",
                        "value": "532",
                        "string": "$ 5.32 USD"
                      }
                    },
                    {
                      "type": "shipping",
                      "name": "Flat",
                      "description": "",
                      "price": {
                        "unit": "USD",
                        "value": "0",
                        "string": "$ 0.00 USD"
                      }
                    }
                  ],
                  "total": {
                    "unit": "USD",
                    "value": "11873",
                    "string": "$ 118.73 USD"
                  }
                },
                "downloadFiles": [
                  {
                    "id": "5e9a5eba75e0ac242e1b6f64",
                    "name": "New product guide",
                    "url": "https://webflow.com/dashboard/download-digital-product?payload=5d93ba5e38c6b0160ab711d3;e7634a;5eb1aac72912ec06f561278c;5e9a5eba75e0ac242e1b6f63:ka2nehxy:4a1ee0a632feaab94294350087215ed89533f2f530903e3b933b638940e921aa"
                  }
                ],
                "orderId": "fc7-128",
                "paypalDetails": {}
              }
            }
          ]
        }
      ],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_inventory": {
      "subpackageId": "subpackage_inventory",
      "displayName": "Inventory",
      "name": "inventory",
      "endpoints": [
        {
          "auth": true,
          "description": "List the current inventory levels for a particular SKU item.\n\nRequired scope | `ecommerce:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_inventory.list",
          "name": "List Inventory",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": "/inventory"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "inventory_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-inventoryRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-inventoryRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-inventoryRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754/inventory",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "5bfedb42bab0ad90fa7dad39",
                "quantity": 100,
                "inventoryType": "infinite"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "5bfedb42bab0ad90fa7dad39",
                  "quantity": 100,
                  "inventoryType": "infinite"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Updates the current inventory levels for a particular SKU item. Updates may be given in one or two methods, absolutely or incrementally. Absolute updates are done by setting `quantity` directly. Incremental updates are by specifying the inventory delta in `updateQuantity` which is then added to the `quantity` stored on the server.\n\nRequired scope | `ecommerce:write`\n",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update",
          "originalEndpointId": "endpoint_inventory.update",
          "name": "Update Item Inventory",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": "/inventory"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "infinite or finite",
                    "key": "inventoryType",
                    "valueType": {
                      "type": "id",
                      "value": "CollectionsCollectionIdItemsItemIdInventoryPatchRequestBodyContentApplicationJsonSchemaInventoryType"
                    }
                  },
                  {
                    "description": "Adds this quantity to currently store quantity. Can be negative.",
                    "key": "updateQuantity",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "double"
                        }
                      }
                    }
                  },
                  {
                    "description": "Immediately sets quantity to this value.",
                    "key": "quantity",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "double"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "The updated inventory"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "inventory_update_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-inventoryRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-inventoryRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-inventoryRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754/inventory",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "inventoryType": "infinite"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "inventoryType": "infinite"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "5bfedb42bab0ad90fa7dad39",
                "quantity": 100,
                "inventoryType": "infinite"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "5bfedb42bab0ad90fa7dad39",
                  "quantity": 100,
                  "inventoryType": "infinite"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [
        {
          "id": "ecomm_inventory_changed",
          "path": [],
          "method": "POST",
          "name": "Updated eComm Inventory",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier for a SKU item",
                  "key": "id",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "objectid"
                      }
                    }
                  }
                },
                {
                  "description": "Total quantity of items remaining in inventory (if inventoryType is finite)",
                  "key": "quantity",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "double"
                      }
                    }
                  }
                },
                {
                  "description": "infinite or finite",
                  "key": "inventoryType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksEcommInventoryChangedPayloadContentApplicationJsonSchemaInventoryType"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "inventoryEcommInventoryChangedExample",
              "payload": {}
            }
          ]
        }
      ],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_users": {
      "subpackageId": "subpackage_users",
      "name": "users",
      "endpoints": [
        {
          "auth": true,
          "description": "Get a list of users for a site <br><br> Required scope | `users:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_users.list",
          "name": "List Users",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/users"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Sort string to use when ordering users\n\nExample(`CreatedOn`, `Email`, `Status`, `LastLogin`, `UpdatedOn`).\n\nCan be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)\n",
              "key": "sort",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdUsersGetParametersSort"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "users_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Validation failure",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-usersRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Forbidden",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-usersRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/users",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100,
                "sort": "CreatedOn"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "count": 5,
                "limit": 5,
                "offset": 0,
                "total": 201,
                "users": [
                  {
                    "id": "6287ec36a841b25637c663df",
                    "isEmailVerified": false,
                    "lastUpdated": "2022-05-20T13:46:12.093Z",
                    "createdOn": "2022-05-20T13:46:12.093Z",
                    "status": "unverified",
                    "accessGroups": [
                      {
                        "slug": "vogon-construction-crew",
                        "type": "admin"
                      }
                    ],
                    "data": {
                      "accept-privacy": false,
                      "accept-communications": false,
                      "email": "zaphod.beeblebrox@heart-of-gold.com",
                      "name": "Zaphod Beeblebrox"
                    }
                  },
                  {
                    "id": "6287ec36a841b25637c663f0",
                    "isEmailVerified": false,
                    "lastUpdated": "2022-05-19T05:32:04.581Z",
                    "createdOn": "2022-05-19T05:32:04.581Z",
                    "status": "unverified",
                    "accessGroups": [
                      {
                        "slug": "improbability-drive-test-subjects",
                        "type": "admin"
                      }
                    ],
                    "data": {
                      "accept-privacy": false,
                      "accept-communications": false,
                      "email": "ford.prefect@hitchhikers-guide.com",
                      "name": "Ford Prefect"
                    }
                  },
                  {
                    "id": "6287ec36a841b25637c663d9",
                    "isEmailVerified": true,
                    "lastUpdated": "2022-05-17T03:34:06.720Z",
                    "createdOn": "2022-05-17T03:34:06.720Z",
                    "status": "verified",
                    "accessGroups": [
                      {
                        "slug": "heart-of-gold-crew",
                        "type": "admin"
                      }
                    ],
                    "data": {
                      "accept-privacy": false,
                      "accept-communications": false,
                      "email": "arthur.dent@earthling.com",
                      "name": "Arthur Dent"
                    }
                  },
                  {
                    "id": "6287ec37a841b25637c6641b",
                    "isEmailVerified": false,
                    "lastUpdated": "2022-05-15T03:46:09.748Z",
                    "createdOn": "2022-05-15T03:46:09.748Z",
                    "status": "unverified",
                    "accessGroups": [
                      {
                        "slug": "hitchhikers-guide-research-team",
                        "type": "admin"
                      }
                    ],
                    "data": {
                      "accept-privacy": false,
                      "accept-communications": false,
                      "email": "marvin@paranoid-android.com",
                      "name": "Marvin the Paranoid Android"
                    }
                  },
                  {
                    "id": "6287ec37a841b25637c66449",
                    "isEmailVerified": true,
                    "lastUpdated": "2022-05-15T02:55:38.786Z",
                    "createdOn": "2022-05-15T02:55:38.786Z",
                    "status": "verified",
                    "accessGroups": [
                      {
                        "slug": "milliways-reservationists",
                        "type": "admin"
                      }
                    ],
                    "data": {
                      "accept-privacy": false,
                      "accept-communications": false,
                      "email": "trillian@trillian-alternative.com",
                      "name": "Trillian"
                    }
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "count": 5,
                  "limit": 5,
                  "offset": 0,
                  "total": 201,
                  "users": [
                    {
                      "id": "6287ec36a841b25637c663df",
                      "isEmailVerified": false,
                      "lastUpdated": "2022-05-20T13:46:12.093Z",
                      "createdOn": "2022-05-20T13:46:12.093Z",
                      "status": "unverified",
                      "accessGroups": [
                        {
                          "slug": "vogon-construction-crew",
                          "type": "admin"
                        }
                      ],
                      "data": {
                        "accept-privacy": false,
                        "accept-communications": false,
                        "email": "zaphod.beeblebrox@heart-of-gold.com",
                        "name": "Zaphod Beeblebrox"
                      }
                    },
                    {
                      "id": "6287ec36a841b25637c663f0",
                      "isEmailVerified": false,
                      "lastUpdated": "2022-05-19T05:32:04.581Z",
                      "createdOn": "2022-05-19T05:32:04.581Z",
                      "status": "unverified",
                      "accessGroups": [
                        {
                          "slug": "improbability-drive-test-subjects",
                          "type": "admin"
                        }
                      ],
                      "data": {
                        "accept-privacy": false,
                        "accept-communications": false,
                        "email": "ford.prefect@hitchhikers-guide.com",
                        "name": "Ford Prefect"
                      }
                    },
                    {
                      "id": "6287ec36a841b25637c663d9",
                      "isEmailVerified": true,
                      "lastUpdated": "2022-05-17T03:34:06.720Z",
                      "createdOn": "2022-05-17T03:34:06.720Z",
                      "status": "verified",
                      "accessGroups": [
                        {
                          "slug": "heart-of-gold-crew",
                          "type": "admin"
                        }
                      ],
                      "data": {
                        "accept-privacy": false,
                        "accept-communications": false,
                        "email": "arthur.dent@earthling.com",
                        "name": "Arthur Dent"
                      }
                    },
                    {
                      "id": "6287ec37a841b25637c6641b",
                      "isEmailVerified": false,
                      "lastUpdated": "2022-05-15T03:46:09.748Z",
                      "createdOn": "2022-05-15T03:46:09.748Z",
                      "status": "unverified",
                      "accessGroups": [
                        {
                          "slug": "hitchhikers-guide-research-team",
                          "type": "admin"
                        }
                      ],
                      "data": {
                        "accept-privacy": false,
                        "accept-communications": false,
                        "email": "marvin@paranoid-android.com",
                        "name": "Marvin the Paranoid Android"
                      }
                    },
                    {
                      "id": "6287ec37a841b25637c66449",
                      "isEmailVerified": true,
                      "lastUpdated": "2022-05-15T02:55:38.786Z",
                      "createdOn": "2022-05-15T02:55:38.786Z",
                      "status": "verified",
                      "accessGroups": [
                        {
                          "slug": "milliways-reservationists",
                          "type": "admin"
                        }
                      ],
                      "data": {
                        "accept-privacy": false,
                        "accept-communications": false,
                        "email": "trillian@trillian-alternative.com",
                        "name": "Trillian"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get a User by ID <br><br> Required scope | `users:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_users.get",
          "name": "Get User",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a User",
                "key": "user_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/users/"
              },
              {
                "type": "pathParameter",
                "value": "user_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "users_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Validation failure",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-userRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Forbidden",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-userRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/users/580e63e98c9a982ac9b8b741",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "user_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6287ec36a841b25637c663df",
                "isEmailVerified": true,
                "lastUpdated": "2022-05-20T13:46:12.093Z",
                "invitedOn": "2022-05-20T13:46:12.093Z",
                "createdOn": "2022-05-20T13:46:12.093Z",
                "lastLogin": "2022-05-20T13:46:12.093Z",
                "status": "verified",
                "accessGroups": [
                  {
                    "slug": "webflowers",
                    "type": "admin"
                  }
                ],
                "data": {
                  "name": "Arthur Dent",
                  "email": "arthur.dent@mostlyharmless.com",
                  "accept-privacy": true,
                  "accept-communications": true,
                  "favoriteDrink": "Tea",
                  "currentPlanet": "Somewhere in the vicinity of Betelgeuse"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6287ec36a841b25637c663df",
                  "isEmailVerified": true,
                  "lastUpdated": "2022-05-20T13:46:12.093Z",
                  "invitedOn": "2022-05-20T13:46:12.093Z",
                  "createdOn": "2022-05-20T13:46:12.093Z",
                  "lastLogin": "2022-05-20T13:46:12.093Z",
                  "status": "verified",
                  "accessGroups": [
                    {
                      "slug": "webflowers",
                      "type": "admin"
                    }
                  ],
                  "data": {
                    "name": "Arthur Dent",
                    "email": "arthur.dent@mostlyharmless.com",
                    "accept-privacy": true,
                    "accept-communications": true,
                    "favoriteDrink": "Tea",
                    "currentPlanet": "Somewhere in the vicinity of Betelgeuse"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a User by ID <br><br> Required scope | `users:write`",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete",
          "originalEndpointId": "endpoint_users.delete",
          "name": "Delete User",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a User",
                "key": "user_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/users/"
              },
              {
                "type": "pathParameter",
                "value": "user_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Validation failure",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-userRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Forbidden",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-userRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/users/580e63e98c9a982ac9b8b741",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "user_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update a User by ID <br><br> Required scope | `users:write`\n<aside class=\"notice\">The <code>email</code> and <code>password</code> fields cannot be updated using this endpoint</aside>\n",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update",
          "originalEndpointId": "endpoint_users.update",
          "name": "Update User",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a User",
                "key": "user_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/users/"
              },
              {
                "type": "pathParameter",
                "value": "user_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "key": "data",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdUsersUserIdPatchRequestBodyContentApplicationJsonSchemaData"
                      }
                    }
                  },
                  {
                    "description": "An array of access group slugs. Access groups are assigned to the user as type `admin` and the user remains in the group until removed.\n",
                    "key": "accessGroups",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "users_update_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Validation failure",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-userRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Forbidden",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-userRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/users/580e63e98c9a982ac9b8b741",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "user_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "data": {
                  "name": "Some One",
                  "accept-privacy": false,
                  "accept-communications": false
                },
                "accessGroups": [
                  "webflowers",
                  "platinum",
                  "free-tier"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "data": {
                    "name": "Some One",
                    "accept-privacy": false,
                    "accept-communications": false
                  },
                  "accessGroups": [
                    "webflowers",
                    "platinum",
                    "free-tier"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6287ec36a841b25637c663df",
                "isEmailVerified": true,
                "lastUpdated": "2022-05-20T13:46:12.093Z",
                "invitedOn": "2022-05-20T13:46:12.093Z",
                "createdOn": "2022-05-20T13:46:12.093Z",
                "lastLogin": "2022-05-20T13:46:12.093Z",
                "status": "verified",
                "accessGroups": [
                  {
                    "slug": "webflowers",
                    "type": "admin"
                  }
                ],
                "data": {
                  "name": "Arthur Dent",
                  "email": "arthur.dent@mostlyharmless.com",
                  "accept-privacy": true,
                  "accept-communications": true,
                  "favoriteDrink": "Tea",
                  "currentPlanet": "Somewhere in the vicinity of Betelgeuse"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6287ec36a841b25637c663df",
                  "isEmailVerified": true,
                  "lastUpdated": "2022-05-20T13:46:12.093Z",
                  "invitedOn": "2022-05-20T13:46:12.093Z",
                  "createdOn": "2022-05-20T13:46:12.093Z",
                  "lastLogin": "2022-05-20T13:46:12.093Z",
                  "status": "verified",
                  "accessGroups": [
                    {
                      "slug": "webflowers",
                      "type": "admin"
                    }
                  ],
                  "data": {
                    "name": "Arthur Dent",
                    "email": "arthur.dent@mostlyharmless.com",
                    "accept-privacy": true,
                    "accept-communications": true,
                    "favoriteDrink": "Tea",
                    "currentPlanet": "Somewhere in the vicinity of Betelgeuse"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create and invite a user with an email address. The user will be sent and invite via email, which they will need to accept in order to join paid Access Groups. <br><br> Required scope | `users:write`",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "invite",
          "originalEndpointId": "endpoint_users.invite",
          "name": "Create and Invite a User",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/users/invite"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Email address of user to send invite to",
                    "key": "email",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "email"
                      }
                    }
                  },
                  {
                    "description": "An array of access group slugs. Access groups are assigned to the user as type `admin` and the user remains in the group until removed.\n",
                    "key": "accessGroups",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "users_invite_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Validation failure",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Invite-userRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Forbidden",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Invite-userRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "Conflict",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Invite-userRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/users/invite",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "email": "some.one@home.com",
                "accessGroups": [
                  "webflowers"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "email": "some.one@home.com",
                  "accessGroups": [
                    "webflowers"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6287ec36a841b25637c663df",
                "isEmailVerified": true,
                "lastUpdated": "2022-05-20T13:46:12.093Z",
                "invitedOn": "2022-05-20T13:46:12.093Z",
                "createdOn": "2022-05-20T13:46:12.093Z",
                "lastLogin": "2022-05-20T13:46:12.093Z",
                "status": "verified",
                "accessGroups": [
                  {
                    "slug": "webflowers",
                    "type": "admin"
                  }
                ],
                "data": {
                  "name": "Arthur Dent",
                  "email": "arthur.dent@mostlyharmless.com",
                  "accept-privacy": true,
                  "accept-communications": true,
                  "favoriteDrink": "Tea",
                  "currentPlanet": "Somewhere in the vicinity of Betelgeuse"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6287ec36a841b25637c663df",
                  "isEmailVerified": true,
                  "lastUpdated": "2022-05-20T13:46:12.093Z",
                  "invitedOn": "2022-05-20T13:46:12.093Z",
                  "createdOn": "2022-05-20T13:46:12.093Z",
                  "lastLogin": "2022-05-20T13:46:12.093Z",
                  "status": "verified",
                  "accessGroups": [
                    {
                      "slug": "webflowers",
                      "type": "admin"
                    }
                  ],
                  "data": {
                    "name": "Arthur Dent",
                    "email": "arthur.dent@mostlyharmless.com",
                    "accept-privacy": true,
                    "accept-communications": true,
                    "favoriteDrink": "Tea",
                    "currentPlanet": "Somewhere in the vicinity of Betelgeuse"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [
        {
          "id": "user_account_added",
          "path": [],
          "method": "POST",
          "name": "New User Added",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaTriggerType"
                    }
                  }
                },
                {
                  "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksUserAccountAddedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "usersUserAccountAddedExample",
              "payload": {}
            }
          ]
        },
        {
          "id": "user_account_updated",
          "path": [],
          "method": "POST",
          "name": "Account Updated",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaTriggerType"
                    }
                  }
                },
                {
                  "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksUserAccountUpdatedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "usersUserAccountUpdatedExample",
              "payload": {}
            }
          ]
        },
        {
          "id": "user_account_deleted",
          "path": [],
          "method": "POST",
          "name": "Account Deleted",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaTriggerType"
                    }
                  }
                },
                {
                  "description": "The fields that define the schema for a given Item are based on the Collection that Item belongs to. Beyond the user defined fields, there are a handful of additional fields that are automatically created for all items\n",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksUserAccountDeletedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "usersUserAccountDeletedExample",
              "payload": {}
            }
          ]
        }
      ],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_items": {
      "subpackageId": "subpackage_items",
      "name": "items",
      "endpoints": [],
      "webhooks": [
        {
          "id": "collection_item_created",
          "path": [],
          "method": "POST",
          "name": "Item Created",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier for the Item",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Identifier for the locale of the CMS item",
                  "key": "cmsLocaleId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date the item was last published",
                  "key": "lastPublished",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "date-string"
                      }
                    }
                  }
                },
                {
                  "description": "The date the item was last updated",
                  "key": "lastUpdated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "date-string"
                      }
                    }
                  }
                },
                {
                  "description": "The date the item was created",
                  "key": "createdOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "date-string"
                      }
                    }
                  }
                },
                {
                  "description": "Boolean determining if the Item is set to archived",
                  "key": "isArchived",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                {
                  "description": "Boolean determining if the Item is set to draft",
                  "key": "isDraft",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                {
                  "key": "fieldData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksCollectionItemCreatedPayloadContentApplicationJsonSchemaFieldData"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "itemsCollectionItemCreatedExample",
              "payload": {
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                },
                "id": "42b720ef280c7a7a3be8cabe",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z"
              }
            }
          ]
        },
        {
          "id": "collection_item_changed",
          "path": [],
          "method": "POST",
          "name": "Item Updated",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "Unique identifier for the Item",
                  "key": "id",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "Identifier for the locale of the CMS item",
                  "key": "cmsLocaleId",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The date the item was last published",
                  "key": "lastPublished",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "date-string"
                      }
                    }
                  }
                },
                {
                  "description": "The date the item was last updated",
                  "key": "lastUpdated",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "date-string"
                      }
                    }
                  }
                },
                {
                  "description": "The date the item was created",
                  "key": "createdOn",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "date-string"
                      }
                    }
                  }
                },
                {
                  "description": "Boolean determining if the Item is set to archived",
                  "key": "isArchived",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                {
                  "description": "Boolean determining if the Item is set to draft",
                  "key": "isDraft",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                {
                  "key": "fieldData",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksCollectionItemChangedPayloadContentApplicationJsonSchemaFieldData"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "itemsCollectionItemChangedExample",
              "payload": {
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                },
                "id": "42b720ef280c7a7a3be8cabe",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z"
              }
            }
          ]
        },
        {
          "id": "collection_item_deleted",
          "path": [],
          "method": "POST",
          "name": "Item Deleted",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload of data sent from Webflow",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksCollectionItemDeletedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "itemsCollectionItemDeletedExample",
              "payload": {
                "triggerType": "collection_item_deleted,",
                "payload": {
                  "id": "66424365e972c886137a1cf1",
                  "siteId": "65427cf400e02b306eaa049c",
                  "workspaceId": "625860a7a6c16d624927122f",
                  "collectionId": "664243617fcc8b464b23c4ee"
                }
              }
            }
          ]
        },
        {
          "id": "collection_item_unpublished",
          "path": [],
          "method": "POST",
          "name": "Item Unpublished",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload of data sent from Webflow",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksCollectionItemUnpublishedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "itemsCollectionItemUnpublishedExample",
              "payload": {
                "triggerType": "collection_item_deleted,",
                "payload": {
                  "id": "66424365e972c886137a1cf1",
                  "siteId": "65427cf400e02b306eaa049c",
                  "workspaceId": "625860a7a6c16d624927122f",
                  "collectionId": "664243617fcc8b464b23c4ee"
                }
              }
            }
          ]
        }
      ],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_pages": {
      "subpackageId": "subpackage_pages",
      "displayName": "Pages",
      "name": "pages",
      "endpoints": [
        {
          "auth": true,
          "description": "List of all pages for a site </br></br> Required scope | `pages:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_pages.list",
          "name": "List Pages",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/pages"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a specific locale. Applicable, when using localization.",
              "key": "locale",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "pages_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-pagesRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/pages",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "locale": "65427cf400e02b306eaa04a0",
                "limit": 100,
                "offset": 0
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "pages": [
                  {
                    "id": "6596da6045e56dee495bcbba",
                    "siteId": "6258612d1ee792848f805dcf",
                    "title": "Guide to the Galaxy",
                    "slug": "guide-to-the-galaxy",
                    "createdOn": "2024-03-11T10:42:00.000Z",
                    "lastUpdated": "2024-03-11T10:42:42.000Z",
                    "archived": false,
                    "draft": false,
                    "canBranch": true,
                    "seo": {
                      "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                      "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                    },
                    "openGraph": {
                      "title": "Explore the Cosmos with The Ultimate Guide",
                      "titleCopied": false,
                      "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                      "descriptionCopied": false
                    },
                    "localeId": "653fd9af6a07fc9cfd7a5e57",
                    "publishedPath": "/en-us/guide-to-the-galaxy",
                    "parentId": {},
                    "collectionId": {}
                  },
                  {
                    "id": "6596da6045e56dee495bcbad",
                    "siteId": "6258612d1ee792848f805dcf",
                    "title": "Towel Day Celebrations",
                    "slug": "towel-day",
                    "createdOn": "2024-05-25T09:00:00.000Z",
                    "lastUpdated": "2024-05-25T09:42:00.000Z",
                    "archived": false,
                    "draft": false,
                    "canBranch": true,
                    "seo": {
                      "title": "Celebrate Towel Day - The Hitchhiker's Guide to the Galaxy",
                      "description": "A guide to celebrating Towel Day, in honor of the most massively useful thing an interstellar hitchhiker can have."
                    },
                    "openGraph": {
                      "title": "Towel Day - Don't Panic",
                      "titleCopied": false,
                      "description": "Join the galaxy in celebrating Towel Day, the day dedicated to carrying towels everywhere in memory of Douglas Adams.",
                      "descriptionCopied": false
                    },
                    "localeId": "653fd9af6a07fc9cfd7a5e57",
                    "publishedPath": "/en-us/towel-day",
                    "parentId": {},
                    "collectionId": {}
                  }
                ],
                "pagination": {
                  "limit": 20,
                  "offset": 0,
                  "total": 2
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pages": [
                    {
                      "id": "6596da6045e56dee495bcbba",
                      "siteId": "6258612d1ee792848f805dcf",
                      "title": "Guide to the Galaxy",
                      "slug": "guide-to-the-galaxy",
                      "createdOn": "2024-03-11T10:42:00.000Z",
                      "lastUpdated": "2024-03-11T10:42:42.000Z",
                      "archived": false,
                      "draft": false,
                      "canBranch": true,
                      "seo": {
                        "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                        "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                      },
                      "openGraph": {
                        "title": "Explore the Cosmos with The Ultimate Guide",
                        "titleCopied": false,
                        "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                        "descriptionCopied": false
                      },
                      "localeId": "653fd9af6a07fc9cfd7a5e57",
                      "publishedPath": "/en-us/guide-to-the-galaxy",
                      "parentId": {},
                      "collectionId": {}
                    },
                    {
                      "id": "6596da6045e56dee495bcbad",
                      "siteId": "6258612d1ee792848f805dcf",
                      "title": "Towel Day Celebrations",
                      "slug": "towel-day",
                      "createdOn": "2024-05-25T09:00:00.000Z",
                      "lastUpdated": "2024-05-25T09:42:00.000Z",
                      "archived": false,
                      "draft": false,
                      "canBranch": true,
                      "seo": {
                        "title": "Celebrate Towel Day - The Hitchhiker's Guide to the Galaxy",
                        "description": "A guide to celebrating Towel Day, in honor of the most massively useful thing an interstellar hitchhiker can have."
                      },
                      "openGraph": {
                        "title": "Towel Day - Don't Panic",
                        "titleCopied": false,
                        "description": "Join the galaxy in celebrating Towel Day, the day dedicated to carrying towels everywhere in memory of Douglas Adams.",
                        "descriptionCopied": false
                      },
                      "localeId": "653fd9af6a07fc9cfd7a5e57",
                      "publishedPath": "/en-us/towel-day",
                      "parentId": {},
                      "collectionId": {}
                    }
                  ],
                  "pagination": {
                    "limit": 20,
                    "offset": 0,
                    "total": 2
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get metadata information for a single page </br></br> Required scope | `pages:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-metadata",
          "originalEndpointId": "endpoint_pages.get-metadata",
          "name": "Get Page Metadata",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Page",
                "key": "page_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pages/"
              },
              {
                "type": "pathParameter",
                "value": "page_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a specific locale. Applicable, when using localization.",
              "key": "locale",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "pages_get-metadata_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-page-metadataRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/pages/63c720f9347c2139b248e552",
              "pathParameters": {
                "page_id": "63c720f9347c2139b248e552"
              },
              "queryParameters": {
                "locale": "65427cf400e02b306eaa04a0"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6596da6045e56dee495bcbba",
                "siteId": "6258612d1ee792848f805dcf",
                "title": "Guide to the Galaxy",
                "slug": "guide-to-the-galaxy",
                "createdOn": "2024-03-11T10:42:00.000Z",
                "lastUpdated": "2024-03-11T10:42:42.000Z",
                "archived": false,
                "draft": false,
                "canBranch": true,
                "seo": {
                  "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                  "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                },
                "openGraph": {
                  "title": "Explore the Cosmos with The Ultimate Guide",
                  "titleCopied": false,
                  "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                  "descriptionCopied": false
                },
                "localeId": "653fd9af6a07fc9cfd7a5e57",
                "publishedPath": "/en-us/guide-to-the-galaxy",
                "parentId": {},
                "collectionId": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6596da6045e56dee495bcbba",
                  "siteId": "6258612d1ee792848f805dcf",
                  "title": "Guide to the Galaxy",
                  "slug": "guide-to-the-galaxy",
                  "createdOn": "2024-03-11T10:42:00.000Z",
                  "lastUpdated": "2024-03-11T10:42:42.000Z",
                  "archived": false,
                  "draft": false,
                  "canBranch": true,
                  "seo": {
                    "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                    "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                  },
                  "openGraph": {
                    "title": "Explore the Cosmos with The Ultimate Guide",
                    "titleCopied": false,
                    "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                    "descriptionCopied": false
                  },
                  "localeId": "653fd9af6a07fc9cfd7a5e57",
                  "publishedPath": "/en-us/guide-to-the-galaxy",
                  "parentId": {},
                  "collectionId": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update Page-level metadata, including SEO and Open Graph fields. </br></br> Required scope | `pages:write`",
          "method": "PUT",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-page-settings",
          "originalEndpointId": "endpoint_pages.update-page-settings",
          "name": "Update Page Metadata",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Page",
                "key": "page_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pages/"
              },
              {
                "type": "pathParameter",
                "value": "page_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a specific locale. Applicable, when using localization.",
              "key": "locale",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Unique identifier for the Page",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "objectid"
                      }
                    }
                  },
                  {
                    "description": "Unique identifier for the Site",
                    "key": "siteId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "objectid"
                        }
                      }
                    }
                  },
                  {
                    "description": "Title of the Page",
                    "key": "title",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "slug of the Page (derived from title)",
                    "key": "slug",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Identifier of the parent folder",
                    "key": "parentId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "objectid"
                        }
                      }
                    }
                  },
                  {
                    "description": "Unique identifier for a linked Collection, value will be null if the Page is not part of a Collection.",
                    "key": "collectionId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "objectid"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the Page was created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the Page was most recently updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  {
                    "description": "Whether the Page has been archived",
                    "key": "archived",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Whether the Page is a draft",
                    "key": "draft",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Indicates whether the Page supports [Page Branching](https://university.webflow.com/lesson/page-branching)",
                    "key": "canBranch",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Indicates whether the Page is restricted by [Memberships Controls](https://university.webflow.com/lesson/webflow-memberships-overview#how-to-manage-page-restrictions)",
                    "key": "isMembersOnly",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "SEO-related fields for the Page",
                    "key": "seo",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "PagesPageIdPutRequestBodyContentApplicationJsonSchemaSeo"
                      }
                    }
                  },
                  {
                    "description": "Open Graph fields for the Page",
                    "key": "openGraph",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "PagesPageIdPutRequestBodyContentApplicationJsonSchemaOpenGraph"
                      }
                    }
                  },
                  {
                    "description": "Unique ID of the page locale",
                    "key": "localeId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "nullable",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "format": "objectid"
                          }
                        }
                      }
                    }
                  },
                  {
                    "description": "Relative path of the published page URL",
                    "key": "publishedPath",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pages_update-page-settings_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-page-settingsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/pages/63c720f9347c2139b248e552",
              "pathParameters": {
                "page_id": "63c720f9347c2139b248e552"
              },
              "queryParameters": {
                "locale": "65427cf400e02b306eaa04a0"
              },
              "headers": {},
              "requestBody": {
                "title": "Guide to the Galaxy",
                "slug": "guide-to-the-galaxy",
                "seo": {
                  "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                  "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                },
                "openGraph": {
                  "title": "Explore the Cosmos with The Ultimate Guide",
                  "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                  "titleCopied": false,
                  "descriptionCopied": false
                },
                "id": "6596da6045e56dee495bcbba",
                "siteId": "6258612d1ee792848f805dcf",
                "parentId": {},
                "collectionId": {},
                "createdOn": "2024-03-11T10:42:00.000Z",
                "lastUpdated": "2024-03-11T10:42:42.000Z",
                "archived": false,
                "draft": false,
                "canBranch": true,
                "localeId": "653fd9af6a07fc9cfd7a5e57",
                "publishedPath": "/en-us/guide-to-the-galaxy"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "title": "Guide to the Galaxy",
                  "slug": "guide-to-the-galaxy",
                  "seo": {
                    "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                    "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                  },
                  "openGraph": {
                    "title": "Explore the Cosmos with The Ultimate Guide",
                    "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                    "titleCopied": false,
                    "descriptionCopied": false
                  },
                  "id": "6596da6045e56dee495bcbba",
                  "siteId": "6258612d1ee792848f805dcf",
                  "parentId": {},
                  "collectionId": {},
                  "createdOn": "2024-03-11T10:42:00.000Z",
                  "lastUpdated": "2024-03-11T10:42:42.000Z",
                  "archived": false,
                  "draft": false,
                  "canBranch": true,
                  "localeId": "653fd9af6a07fc9cfd7a5e57",
                  "publishedPath": "/en-us/guide-to-the-galaxy"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6596da6045e56dee495bcbba",
                "siteId": "6258612d1ee792848f805dcf",
                "title": "Guide to the Galaxy",
                "slug": "guide-to-the-galaxy",
                "createdOn": "2024-03-11T10:42:00.000Z",
                "lastUpdated": "2024-03-11T10:42:42.000Z",
                "archived": false,
                "draft": false,
                "canBranch": true,
                "seo": {
                  "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                  "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                },
                "openGraph": {
                  "title": "Explore the Cosmos with The Ultimate Guide",
                  "titleCopied": false,
                  "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                  "descriptionCopied": false
                },
                "localeId": "653fd9af6a07fc9cfd7a5e57",
                "publishedPath": "/en-us/guide-to-the-galaxy",
                "parentId": {},
                "collectionId": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6596da6045e56dee495bcbba",
                  "siteId": "6258612d1ee792848f805dcf",
                  "title": "Guide to the Galaxy",
                  "slug": "guide-to-the-galaxy",
                  "createdOn": "2024-03-11T10:42:00.000Z",
                  "lastUpdated": "2024-03-11T10:42:42.000Z",
                  "archived": false,
                  "draft": false,
                  "canBranch": true,
                  "seo": {
                    "title": "The Ultimate Hitchhiker's Guide to the Galaxy",
                    "description": "Everything you need to know about the galaxy, from avoiding Vogon poetry to the importance of towels."
                  },
                  "openGraph": {
                    "title": "Explore the Cosmos with The Ultimate Guide",
                    "titleCopied": false,
                    "description": "Dive deep into the mysteries of the universe with your guide to everything galactic.",
                    "descriptionCopied": false
                  },
                  "localeId": "653fd9af6a07fc9cfd7a5e57",
                  "publishedPath": "/en-us/guide-to-the-galaxy",
                  "parentId": {},
                  "collectionId": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get static content from a static page. </br> If you do not provide a Locale ID in your request, the response will return any content that can be localized from the Primary locale</br></br> Required scope | `pages:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-content",
          "originalEndpointId": "endpoint_pages.get-content",
          "name": "Get Page Content",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Page",
                "key": "page_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pages/"
              },
              {
                "type": "pathParameter",
                "value": "page_id"
              },
              {
                "type": "literal",
                "value": "/dom"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a specific locale. Applicable, when using localization.",
              "key": "locale",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "pages_get-content_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-static-contentRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/pages/63c720f9347c2139b248e552/dom",
              "pathParameters": {
                "page_id": "63c720f9347c2139b248e552"
              },
              "queryParameters": {
                "locale": "65427cf400e02b306eaa04a0",
                "limit": 100,
                "offset": 0
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "pageId": "658205daa3e8206a523b5ad4",
                "nodes": [
                  {
                    "id": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                    "type": "text",
                    "text": {
                      "html": "<h1>The Hitchhiker's Guide to the Galaxy</h1>",
                      "text": "The Hitchhiker's Guide to the Galaxy"
                    },
                    "attributes": {}
                  },
                  {
                    "id": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                    "type": "text",
                    "text": {
                      "html": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>",
                      "text": null
                    },
                    "attributes": {}
                  },
                  {
                    "id": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                    "type": "image",
                    "image": {
                      "alt": "Marvin, the Paranoid Android",
                      "assetId": "659595234426a9fcbad57043"
                    },
                    "attributes": {}
                  }
                ],
                "pagination": {
                  "limit": 3,
                  "offset": 0,
                  "total": 3
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "pageId": "658205daa3e8206a523b5ad4",
                  "nodes": [
                    {
                      "id": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                      "type": "text",
                      "text": {
                        "html": "<h1>The Hitchhiker's Guide to the Galaxy</h1>",
                        "text": "The Hitchhiker's Guide to the Galaxy"
                      },
                      "attributes": {}
                    },
                    {
                      "id": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                      "type": "text",
                      "text": {
                        "html": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>",
                        "text": null
                      },
                      "attributes": {}
                    },
                    {
                      "id": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                      "type": "image",
                      "image": {
                        "alt": "Marvin, the Paranoid Android",
                        "assetId": "659595234426a9fcbad57043"
                      },
                      "attributes": {}
                    }
                  ],
                  "pagination": {
                    "limit": 3,
                    "offset": 0,
                    "total": 3
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "This endpoint allows for updating static content on a static page within a secondary locale. It is designed specifically for localized pages and can handle up to 1000 nodes per request.\n<blockquote class=\"callout callout_info\"><p><strong>Note:</strong>This endpoint is specifically for localized pages. Ensure that the locale specified is a valid secondary locale for the site.</p></blockquote>\n\nRequired scope | `pages:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-static-content",
          "originalEndpointId": "endpoint_pages.update-static-content",
          "name": "Update Page Content",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Page",
                "key": "page_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pages/"
              },
              {
                "type": "pathParameter",
                "value": "page_id"
              },
              {
                "type": "literal",
                "value": "/dom"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The locale identifier.",
              "key": "locale",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "key": "nodes",
                    "valueType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "PagesPageIdDomPostRequestBodyContentApplicationJsonSchemaNodesItems"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pages_update-static-content_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 403,
              "description": "Provided access token does not have access rights to this content.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-static-contentRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/pages/63c720f9347c2139b248e552/dom",
              "pathParameters": {
                "page_id": "63c720f9347c2139b248e552"
              },
              "queryParameters": {
                "locale": "locale"
              },
              "headers": {},
              "requestBody": {
                "nodes": [
                  {
                    "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                    "text": "<h1>The Hitchhiker's Guide to the Galaxy</h1>"
                  },
                  {
                    "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                    "text": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>"
                  },
                  {
                    "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                    "text": "<img alt='Marvin, the Paranoid Android' src='path/to/image/with/assetId/659595234426a9fcbad57043'/>"
                  }
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "nodes": [
                    {
                      "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad623",
                      "text": "<h1>The Hitchhiker's Guide to the Galaxy</h1>"
                    },
                    {
                      "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad627",
                      "text": "<div><h3>Don't Panic!</h3><p>Always know where your towel is.</p></div>"
                    },
                    {
                      "nodeId": "a245c12d-995b-55ee-5ec7-aa36a6cad629",
                      "text": "<img alt='Marvin, the Paranoid Android' src='path/to/image/with/assetId/659595234426a9fcbad57043'/>"
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "errors": []
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "errors": []
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [
        {
          "id": "page_created",
          "path": [],
          "method": "POST",
          "name": "Page Created",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload of data sent from Webflow",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksPageCreatedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "pagesPageCreatedExample",
              "payload": {
                "triggerType": "page_created",
                "payload": {
                  "siteId": "65427cf400e02b306eaa049c",
                  "pageId": "66a3cfb276641574f5d58311",
                  "pageTitle": "Heart of Gold Specs",
                  "createdOn": "2024-07-26T16:32:50.903Z"
                }
              }
            }
          ]
        },
        {
          "id": "page_metadata_updated",
          "path": [],
          "method": "POST",
          "name": "Page Metadata Updated",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload of data sent from Webflow",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksPageMetadataUpdatedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "pagesPageMetadataUpdatedExample",
              "payload": {
                "triggerType": "page_metadata_updated",
                "payload": {
                  "siteId": "65427cf400e02b306eaa049c",
                  "pageId": "66a3cfb276641574f5d58311",
                  "pageTitle": "Heart of Gold Specs",
                  "lastUpdated": "2024-07-26T16:32:50.903Z"
                }
              }
            }
          ]
        },
        {
          "id": "page_deleted",
          "path": [],
          "method": "POST",
          "name": "Page Deleted",
          "headers": [],
          "payload": {
            "type": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The type of event that triggered the request",
                  "key": "triggerType",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "description": "The payload of data sent from Webflow",
                  "key": "payload",
                  "valueType": {
                    "type": "optional",
                    "itemType": {
                      "type": "id",
                      "value": "WebhooksPageDeletedPayloadContentApplicationJsonSchemaPayload"
                    }
                  }
                }
              ]
            }
          },
          "examples": [
            {
              "name": "pagesPageDeletedExample",
              "payload": {
                "triggerType": "page_deleted",
                "payload": {
                  "siteId": "65427cf400e02b306eaa049c",
                  "pageId": "66a3cfb276641574f5d58311",
                  "pageTitle": "Heart of Gold Specs",
                  "deletedOn": "2024-07-26T16:32:50.903Z"
                }
              }
            }
          ]
        }
      ],
      "websockets": [],
      "types": [],
      "subpackages": [
        "subpackage_pages/scripts"
      ]
    },
    "subpackage_token": {
      "subpackageId": "subpackage_token",
      "name": "token",
      "endpoints": [
        {
          "auth": true,
          "description": "Information about the Authorized User <br><br> Required Scope | `authorized_user:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "authorized-by",
          "originalEndpointId": "endpoint_token.authorized-by",
          "name": "Get Authorization User Info",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/token/authorized_by"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "token_authorized-by_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Authorized_byRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/token/authorized_by",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "545bbecb7bdd6769632504a7",
                "email": "some@email.com",
                "firstName": "Some",
                "lastName": "One"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "545bbecb7bdd6769632504a7",
                  "email": "some@email.com",
                  "firstName": "Some",
                  "lastName": "One"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Information about the authorization token <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>    \n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "introspect",
          "originalEndpointId": "endpoint_token.introspect",
          "name": "Get Authorization Info",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/token/introspect"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "token_introspect_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/token/introspect",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "authorization": {
                  "id": "55818d58616600637b9a5786",
                  "createdOn": "2016-10-03T23:12:00.755Z",
                  "lastUsed": "2016-10-10T21:41:12.736Z",
                  "grantType": "authorization_code",
                  "rateLimit": 60,
                  "scope": "assets:read,assets:write",
                  "authorizedTo": {
                    "siteIds": [
                      "62f3b1f7eafac55d0c64ef91"
                    ],
                    "workspaceIds": [
                      "52f3b1f7eafac55d0c64ef91"
                    ],
                    "userIds": [
                      "545bbecb7bdd6769632504a7"
                    ]
                  }
                },
                "application": null
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "authorization": {
                    "id": "55818d58616600637b9a5786",
                    "createdOn": "2016-10-03T23:12:00.755Z",
                    "lastUsed": "2016-10-10T21:41:12.736Z",
                    "grantType": "authorization_code",
                    "rateLimit": 60,
                    "scope": "assets:read,assets:write",
                    "authorizedTo": {
                      "siteIds": [
                        "62f3b1f7eafac55d0c64ef91"
                      ],
                      "workspaceIds": [
                        "52f3b1f7eafac55d0c64ef91"
                      ],
                      "userIds": [
                        "545bbecb7bdd6769632504a7"
                      ]
                    }
                  },
                  "application": null
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_sites/activityLogs": {
      "subpackageId": "subpackage_sites/activityLogs",
      "name": "activityLogs",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve Activity Logs for a specific Site. Requires Site to be on an Enterprise plan. </br></br>  Required scope | `site_activity:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_sites/activityLogs.list",
          "name": "Get Site Activity Logs",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/activity_logs"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_activity-logs_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "A list of site activity logs"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-site-activity-logsRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Forbidden request",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-site-activity-logsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/activity_logs",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "limit": 100,
                "offset": 0
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "items": [
                  {
                    "id": "654c16c7b229e56bcf26872d",
                    "createdOn": "2023-11-08T23:16:23.496Z",
                    "lastUpdated": "2023-11-08T23:16:23.496Z",
                    "event": "cms_collection",
                    "resourceOperation": "CREATED",
                    "user": {
                      "id": "6509cd56e90eec668b009712",
                      "displayName": "John Doe"
                    },
                    "resourceId": "654c16c7b229e56bcf26870c",
                    "resourceName": "foo-bar",
                    "newValue": null,
                    "previousValue": null,
                    "payload": null
                  }
                ],
                "pagination": {
                  "limit": 25,
                  "offset": 0,
                  "total": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "id": "654c16c7b229e56bcf26872d",
                      "createdOn": "2023-11-08T23:16:23.496Z",
                      "lastUpdated": "2023-11-08T23:16:23.496Z",
                      "event": "cms_collection",
                      "resourceOperation": "CREATED",
                      "user": {
                        "id": "6509cd56e90eec668b009712",
                        "displayName": "John Doe"
                      },
                      "resourceId": "654c16c7b229e56bcf26870c",
                      "resourceName": "foo-bar",
                      "newValue": null,
                      "previousValue": null,
                      "payload": null
                    }
                  ],
                  "pagination": {
                    "limit": 25,
                    "offset": 0,
                    "total": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_collections": {
      "subpackageId": "subpackage_collections",
      "displayName": "Collections",
      "name": "collections",
      "endpoints": [
        {
          "auth": true,
          "description": "List of all Collections within a Site. </br></br> Required scope | `cms:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_collections.list",
          "name": "List Collections",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/collections"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-collectionsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/collections",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "collections": [
                  {
                    "id": "63692ab61fb2852f582ba8f5",
                    "displayName": "Products",
                    "singularName": "Product",
                    "slug": "product",
                    "createdOn": "2019-06-12T13:35:14.238Z",
                    "lastUpdated": "2022-11-17T15:08:50.480Z"
                  },
                  {
                    "id": "63692ab61fb2856e6a2ba8f6",
                    "displayName": "Categories",
                    "singularName": "Category",
                    "slug": "category",
                    "createdOn": "2019-06-12T13:35:14.238Z",
                    "lastUpdated": "2022-11-17T15:08:50.481Z"
                  },
                  {
                    "id": "63692ab61fb285a8562ba8f4",
                    "displayName": "SKUs",
                    "singularName": "SKU",
                    "slug": "sku",
                    "createdOn": "2019-06-12T13:35:14.238Z",
                    "lastUpdated": "2022-11-17T15:08:50.478Z"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "collections": [
                    {
                      "id": "63692ab61fb2852f582ba8f5",
                      "displayName": "Products",
                      "singularName": "Product",
                      "slug": "product",
                      "createdOn": "2019-06-12T13:35:14.238Z",
                      "lastUpdated": "2022-11-17T15:08:50.480Z"
                    },
                    {
                      "id": "63692ab61fb2856e6a2ba8f6",
                      "displayName": "Categories",
                      "singularName": "Category",
                      "slug": "category",
                      "createdOn": "2019-06-12T13:35:14.238Z",
                      "lastUpdated": "2022-11-17T15:08:50.481Z"
                    },
                    {
                      "id": "63692ab61fb285a8562ba8f4",
                      "displayName": "SKUs",
                      "singularName": "SKU",
                      "slug": "sku",
                      "createdOn": "2019-06-12T13:35:14.238Z",
                      "lastUpdated": "2022-11-17T15:08:50.478Z"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a Collection for a site. </br></br> Required scope | `cms:write`",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create",
          "originalEndpointId": "endpoint_collections.create",
          "name": "Create Collection",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/collections"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Name of the collection. Each collection name must be distinct.",
                    "key": "displayName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Singular name of each item.",
                    "key": "singularName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Part of a URL that identifier",
                    "key": "slug",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "Pass the Name of the collection, as well as the singular name of each item in the collection."
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_create_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-collectionRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/collections",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "displayName": "Blog Posts",
                "singularName": "Blog Post",
                "slug": "posts"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "displayName": "Blog Posts",
                  "singularName": "Blog Post",
                  "slug": "posts"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "580e63fc8c9a982ac9b8b745",
                "displayName": "Blog Posts",
                "singularName": "Blog Post",
                "slug": "post",
                "createdOn": "2016-10-24T19:41:48.349Z",
                "lastUpdated": "2016-10-24T19:42:38.929Z",
                "fields": [
                  {
                    "id": "23cc2d952d4e4631ffd4345d2743db4e",
                    "isRequired": true,
                    "isEditable": true,
                    "type": "PlainText",
                    "slug": "name",
                    "displayName": "Name",
                    "helpText": {}
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "580e63fc8c9a982ac9b8b745",
                  "displayName": "Blog Posts",
                  "singularName": "Blog Post",
                  "slug": "post",
                  "createdOn": "2016-10-24T19:41:48.349Z",
                  "lastUpdated": "2016-10-24T19:42:38.929Z",
                  "fields": [
                    {
                      "id": "23cc2d952d4e4631ffd4345d2743db4e",
                      "isRequired": true,
                      "isEditable": true,
                      "type": "PlainText",
                      "slug": "name",
                      "displayName": "Name",
                      "helpText": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get the full details of a collection from its ID. </br></br> Required scope | `cms:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_collections.get",
          "name": "Get Collection Details",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Collection-detailsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "580e63fc8c9a982ac9b8b745",
                "displayName": "Blog Posts",
                "singularName": "Blog Post",
                "slug": "post",
                "createdOn": "2016-10-24T19:41:48.349Z",
                "lastUpdated": "2016-10-24T19:42:38.929Z",
                "fields": [
                  {
                    "id": "23cc2d952d4e4631ffd4345d2743db4e",
                    "isRequired": true,
                    "isEditable": true,
                    "type": "PlainText",
                    "slug": "name",
                    "displayName": "Name",
                    "helpText": {}
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "580e63fc8c9a982ac9b8b745",
                  "displayName": "Blog Posts",
                  "singularName": "Blog Post",
                  "slug": "post",
                  "createdOn": "2016-10-24T19:41:48.349Z",
                  "lastUpdated": "2016-10-24T19:42:38.929Z",
                  "fields": [
                    {
                      "id": "23cc2d952d4e4631ffd4345d2743db4e",
                      "isRequired": true,
                      "isEditable": true,
                      "type": "PlainText",
                      "slug": "name",
                      "displayName": "Name",
                      "helpText": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a collection using its ID. </br></br> Required scope | `cms:write`",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete-collection",
          "originalEndpointId": "endpoint_collections.delete-collection",
          "name": "Delete Collection",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-collectionRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a custom field in a collection. This endpoint does not currently support bulk deletion. </br></br> Required scope | `cms:write`",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete",
          "originalEndpointId": "endpoint_collections.delete",
          "name": "Delete Collection Field",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a Field in a collection",
                "key": "field_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "field_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-fieldRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/fields/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "field_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": [
        "subpackage_collections/fields",
        "subpackage_collections/items"
      ]
    },
    "subpackage_collections/fields": {
      "subpackageId": "subpackage_collections/fields",
      "name": "fields",
      "endpoints": [
        {
          "auth": true,
          "description": "Create a custom field in a collection.  </br></br> Slugs must be all lowercase letters without spaces. If you pass a string with uppercase letters and/or spaces to the \"Slug\" property, Webflow will convert the slug to lowercase and replace spaces with \"-.\" </br></br> Only some field types can be created through the API.  This endpoint does not currently support bulk creation.  </br></br>  Required scope | `cms:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create",
          "originalEndpointId": "endpoint_collections/fields.create",
          "name": "Create Collection Field",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/fields"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "define whether a field is required in a collection",
                    "key": "isRequired",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "Choose these appropriate field type for your collection data",
                    "key": "type",
                    "valueType": {
                      "type": "id",
                      "value": "CollectionsCollectionIdFieldsPostRequestBodyContentApplicationJsonSchemaType"
                    }
                  },
                  {
                    "description": "The name of a field",
                    "key": "displayName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Additional text to help anyone filling out this field",
                    "key": "helpText",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "The field to create"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_fields_create_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-fieldRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/fields",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "isRequired": false,
                "type": "RichText",
                "displayName": "Post Body",
                "helpText": "Add the body of your post here"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "isRequired": false,
                  "type": "RichText",
                  "displayName": "Post Body",
                  "helpText": "Add the body of your post here"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "75821f618da60c18383330bcc0ca488b",
                "isRequired": false,
                "isEditable": true,
                "type": "RichText",
                "slug": "post-body",
                "displayName": "Post Body",
                "helpText": "Add the body of your post here"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "75821f618da60c18383330bcc0ca488b",
                  "isRequired": false,
                  "isEditable": true,
                  "type": "RichText",
                  "slug": "post-body",
                  "displayName": "Post Body",
                  "helpText": "Add the body of your post here"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update a custom field in a collection.  </br></br> Required scope | `cms:write`",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update",
          "originalEndpointId": "endpoint_collections/fields.update",
          "name": "Update Collection Field",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a Field in a collection",
                "key": "field_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/fields/"
              },
              {
                "type": "pathParameter",
                "value": "field_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Define whether a field is required in a collection",
                    "key": "isRequired",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  {
                    "description": "The name of a field",
                    "key": "displayName",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Additional text to help anyone filling out this field",
                    "key": "helpText",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "The field details to update"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_fields_update_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-fieldRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/fields/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "field_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "isRequired": false,
                "displayName": "Post Body",
                "helpText": "Add the body of your post here"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "isRequired": false,
                  "displayName": "Post Body",
                  "helpText": "Add the body of your post here"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "75821f618da60c18383330bcc0ca488b",
                "isRequired": false,
                "isEditable": true,
                "type": "RichText",
                "slug": "post-body",
                "displayName": "Post Body",
                "helpText": "Add the body of your post here"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "75821f618da60c18383330bcc0ca488b",
                  "isRequired": false,
                  "isEditable": true,
                  "type": "RichText",
                  "slug": "post-body",
                  "displayName": "Post Body",
                  "helpText": "Add the body of your post here"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_collections/items": {
      "subpackageId": "subpackage_collections/items",
      "displayName": "Items",
      "name": "items",
      "endpoints": [
        {
          "auth": true,
          "description": "List of all Items within a Collection. </br></br> Required scope | `CMS:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list-items",
          "originalEndpointId": "endpoint_collections/items.list-items",
          "name": "List Collection Items",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
              "key": "cmsLocaleId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "The name of the item(s)",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The slug of the item",
              "key": "slug",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The last published date of the item(s)",
              "key": "lastPublished",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsGetParametersLastPublished"
                }
              }
            },
            {
              "description": "Sort results by the provided value",
              "key": "sortBy",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsGetParametersSortBy"
                }
              }
            },
            {
              "description": "Sorts the results by asc or desc",
              "key": "sortOrder",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsGetParametersSortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_list-items_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-collection-itemsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "items": [
                  {
                    "id": "62b720ef280c7a7a3be8cabe",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                    "lastPublished": "2022-06-30T13:35:20.878Z",
                    "lastUpdated": "2022-06-25T14:51:27.809Z",
                    "createdOn": "2022-06-25T14:51:27.809Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Senior Data Analyst",
                      "slug": "senior-data-analyst",
                      "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                      "department": "Data"
                    }
                  },
                  {
                    "id": "62c880ef281c7b7b4cf9dabc",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                    "lastPublished": "2023-04-15T10:25:18.123Z",
                    "lastUpdated": "2023-04-10T11:45:30.567Z",
                    "createdOn": "2023-04-10T11:45:30.567Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Product Manager",
                      "slug": "product-manager",
                      "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                      "department": "Product"
                    }
                  }
                ],
                "pagination": {
                  "limit": 25,
                  "offset": 0,
                  "total": 2
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "id": "62b720ef280c7a7a3be8cabe",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                      "lastPublished": "2022-06-30T13:35:20.878Z",
                      "lastUpdated": "2022-06-25T14:51:27.809Z",
                      "createdOn": "2022-06-25T14:51:27.809Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Senior Data Analyst",
                        "slug": "senior-data-analyst",
                        "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                        "department": "Data"
                      }
                    },
                    {
                      "id": "62c880ef281c7b7b4cf9dabc",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                      "lastPublished": "2023-04-15T10:25:18.123Z",
                      "lastUpdated": "2023-04-10T11:45:30.567Z",
                      "createdOn": "2023-04-10T11:45:30.567Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Product Manager",
                        "slug": "product-manager",
                        "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                        "department": "Product"
                      }
                    }
                  ],
                  "pagination": {
                    "limit": 25,
                    "offset": 0,
                    "total": 2
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "<style>.rm-Markdown.markdown-body a{color: #146EF5 !important;}</style> Create Item in a Collection.</br></br> To create items across multiple locales, <a href=\"https://developers.webflow.com/data/reference/create-item-for-multiple-locales\"> please use the bulk item endpoint.</a> </br></br> Required scope | <code>CMS:write</code>",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create-item",
          "originalEndpointId": "endpoint_collections/items.create-item",
          "name": "Create Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Unique identifier for the Item",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Identifier for the locale of the CMS item",
                    "key": "cmsLocaleId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last published",
                    "key": "lastPublished",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to archived",
                    "key": "isArchived",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to draft",
                    "key": "isDraft",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "key": "fieldData",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "CollectionsCollectionIdItemsPostRequestBodyContentApplicationJsonSchemaFieldData"
                      }
                    }
                  }
                ]
              }
            },
            "description": "Details of the item to create"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_create-item_Response_202"
              }
            },
            "statusCode": 202,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-itemRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                },
                "id": "42b720ef280c7a7a3be8cabe",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z"
                }
              },
              "responseStatusCode": 202,
              "responseBody": {
                "id": "42b720ef280c7a7a3be8cabe",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "42b720ef280c7a7a3be8cabe",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "List of all live Items within a Collection. </br></br> Required scope | `CMS:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list-items-live",
          "originalEndpointId": "endpoint_collections/items.list-items-live",
          "name": "List Live Collection Items",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/live"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
              "key": "cmsLocaleId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "The name of the item(s)",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The slug of the item",
              "key": "slug",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The last published date of the item(s)",
              "key": "lastPublished",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsLiveGetParametersLastPublished"
                }
              }
            },
            {
              "description": "Sort results by the provided value",
              "key": "sortBy",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsLiveGetParametersSortBy"
                }
              }
            },
            {
              "description": "Sorts the results by asc or desc",
              "key": "sortOrder",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CollectionsCollectionIdItemsLiveGetParametersSortOrder"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_list-items-live_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-collection-items-liveRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/live",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "items": [
                  {
                    "id": "62b720ef280c7a7a3be8cabe",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                    "lastPublished": "2022-06-30T13:35:20.878Z",
                    "lastUpdated": "2022-06-25T14:51:27.809Z",
                    "createdOn": "2022-06-25T14:51:27.809Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Senior Data Analyst",
                      "slug": "senior-data-analyst",
                      "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                      "department": "Data"
                    }
                  },
                  {
                    "id": "62c880ef281c7b7b4cf9dabc",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                    "lastPublished": "2023-04-15T10:25:18.123Z",
                    "lastUpdated": "2023-04-10T11:45:30.567Z",
                    "createdOn": "2023-04-10T11:45:30.567Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Product Manager",
                      "slug": "product-manager",
                      "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                      "department": "Product"
                    }
                  }
                ],
                "pagination": {
                  "limit": 25,
                  "offset": 0,
                  "total": 2
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "id": "62b720ef280c7a7a3be8cabe",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                      "lastPublished": "2022-06-30T13:35:20.878Z",
                      "lastUpdated": "2022-06-25T14:51:27.809Z",
                      "createdOn": "2022-06-25T14:51:27.809Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Senior Data Analyst",
                        "slug": "senior-data-analyst",
                        "url": "https://boards.greenhouse.io/webflow/jobs/26567701",
                        "department": "Data"
                      }
                    },
                    {
                      "id": "62c880ef281c7b7b4cf9dabc",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                      "lastPublished": "2023-04-15T10:25:18.123Z",
                      "lastUpdated": "2023-04-10T11:45:30.567Z",
                      "createdOn": "2023-04-10T11:45:30.567Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Product Manager",
                        "slug": "product-manager",
                        "url": "https://boards.greenhouse.io/webflow/jobs/31234567",
                        "department": "Product"
                      }
                    }
                  ],
                  "pagination": {
                    "limit": 25,
                    "offset": 0,
                    "total": 2
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create live Item in a Collection. This Item will be published to the live site. </br></br> To create items across multiple locales, <a href=\"https://developers.webflow.com/data/reference/create-item-for-multiple-locales\"> please use this endpoint.</a> </br></br> Required scope | `CMS:write`",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create-item-live",
          "originalEndpointId": "endpoint_collections/items.create-item-live",
          "name": "Create Live Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/live"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Unique identifier for the Item",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Identifier for the locale of the CMS item",
                    "key": "cmsLocaleId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last published",
                    "key": "lastPublished",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to archived",
                    "key": "isArchived",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to draft",
                    "key": "isDraft",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "key": "fieldData",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "CollectionsCollectionIdItemsLivePostRequestBodyContentApplicationJsonSchemaFieldData"
                      }
                    }
                  }
                ]
              }
            },
            "description": "Details of the item to create"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_create-item-live_Response_202"
              }
            },
            "statusCode": 202,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-item-liveRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/live",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                },
                "id": "42b720ef280c7a7a3be8cabe",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z"
                }
              },
              "responseStatusCode": 202,
              "responseBody": {
                "id": "42b720ef280c7a7a3be8cabe",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "42b720ef280c7a7a3be8cabe",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create single Item in a Collection with multiple corresponding locales. </br></br> Required scope | `CMS:write`",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create-item-for-multiple-locales",
          "originalEndpointId": "endpoint_collections/items.create-item-for-multiple-locales",
          "name": "Create Item for Multiple Locales",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/bulk"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Unique identifier for the Item",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Array of identifiers for the locales where the item will be created",
                    "key": "cmsLocaleIds",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last published",
                    "key": "lastPublished",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "nullable",
                        "itemType": {
                          "type": "primitive",
                          "value": {
                            "type": "string",
                            "format": "date-string"
                          }
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to archived",
                    "key": "isArchived",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to draft",
                    "key": "isDraft",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "key": "fieldData",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "CollectionsCollectionIdItemsBulkPostRequestBodyContentApplicationJsonSchemaFieldData"
                      }
                    }
                  }
                ]
              }
            },
            "description": "Details of the item to create"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_create-item-for-multiple-locales_Response_202"
              }
            },
            "statusCode": 202,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-item-for-multiple-localesRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/bulk",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "items": [
                  {
                    "id": "66f6ed9576ddacf3149d5ea6",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                    "lastPublished": null,
                    "lastUpdated": "2024-02-28T19:25:39.942Z",
                    "createdOn": "2024-02-28T19:25:39.942Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Don't Panic",
                      "slug": "dont-panic"
                    }
                  },
                  {
                    "id": "66f6ed9576ddacf3149d5ea6",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca4",
                    "lastPublished": null,
                    "lastUpdated": "2024-02-28T19:25:39.942Z",
                    "createdOn": "2024-02-28T19:25:39.942Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Don't Panic",
                      "slug": "dont-panic"
                    }
                  },
                  {
                    "id": "66f6ed9576ddacf3149d5ea6",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca5",
                    "lastPublished": null,
                    "lastUpdated": "2024-02-28T19:25:39.942Z",
                    "createdOn": "2024-02-28T19:25:39.942Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Don't Panic",
                      "slug": "dont-panic"
                    }
                  }
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "id": "66f6ed9576ddacf3149d5ea6",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                      "lastPublished": null,
                      "lastUpdated": "2024-02-28T19:25:39.942Z",
                      "createdOn": "2024-02-28T19:25:39.942Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Don't Panic",
                        "slug": "dont-panic"
                      }
                    },
                    {
                      "id": "66f6ed9576ddacf3149d5ea6",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca4",
                      "lastPublished": null,
                      "lastUpdated": "2024-02-28T19:25:39.942Z",
                      "createdOn": "2024-02-28T19:25:39.942Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Don't Panic",
                        "slug": "dont-panic"
                      }
                    },
                    {
                      "id": "66f6ed9576ddacf3149d5ea6",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca5",
                      "lastPublished": null,
                      "lastUpdated": "2024-02-28T19:25:39.942Z",
                      "createdOn": "2024-02-28T19:25:39.942Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Don't Panic",
                        "slug": "dont-panic"
                      }
                    }
                  ]
                }
              },
              "responseStatusCode": 202,
              "responseBody": {
                "id": "580e64008c9a982ac9b8b754",
                "items": [
                  {
                    "id": "66f6ed9576ddacf3149d5ea6",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                    "lastPublished": null,
                    "lastUpdated": "2024-02-28T19:25:39.942Z",
                    "createdOn": "2024-02-28T19:25:39.942Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Don't Panic",
                      "slug": "dont-panic"
                    }
                  },
                  {
                    "id": "66f6ed9576ddacf3149d5ea6",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca4",
                    "lastPublished": null,
                    "lastUpdated": "2024-02-28T19:25:39.942Z",
                    "createdOn": "2024-02-28T19:25:39.942Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Don't Panic",
                      "slug": "dont-panic"
                    }
                  },
                  {
                    "id": "66f6ed9576ddacf3149d5ea6",
                    "cmsLocaleId": "66f6e966c9e1dc700a857ca5",
                    "lastPublished": null,
                    "lastUpdated": "2024-02-28T19:25:39.942Z",
                    "createdOn": "2024-02-28T19:25:39.942Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "Don't Panic",
                      "slug": "dont-panic"
                    }
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "580e64008c9a982ac9b8b754",
                  "items": [
                    {
                      "id": "66f6ed9576ddacf3149d5ea6",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca3",
                      "lastPublished": null,
                      "lastUpdated": "2024-02-28T19:25:39.942Z",
                      "createdOn": "2024-02-28T19:25:39.942Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Don't Panic",
                        "slug": "dont-panic"
                      }
                    },
                    {
                      "id": "66f6ed9576ddacf3149d5ea6",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca4",
                      "lastPublished": null,
                      "lastUpdated": "2024-02-28T19:25:39.942Z",
                      "createdOn": "2024-02-28T19:25:39.942Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Don't Panic",
                        "slug": "dont-panic"
                      }
                    },
                    {
                      "id": "66f6ed9576ddacf3149d5ea6",
                      "cmsLocaleId": "66f6e966c9e1dc700a857ca5",
                      "lastPublished": null,
                      "lastUpdated": "2024-02-28T19:25:39.942Z",
                      "createdOn": "2024-02-28T19:25:39.942Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "Don't Panic",
                        "slug": "dont-panic"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get details of a selected Collection Item. </br></br> Required scope | `CMS:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-item",
          "originalEndpointId": "endpoint_collections/items.get-item",
          "name": "Get Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
              "key": "cmsLocaleId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_get-item_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-ItemRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "42b720ef280c7a7a3be8cabe",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "42b720ef280c7a7a3be8cabe",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete an Item from a Collection. This endpoint does not currently support bulk deletion. </br></br> Required scope | `CMS:write`",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete-item",
          "originalEndpointId": "endpoint_collections/items.delete-item",
          "name": "Delete Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
              "key": "cmsLocaleId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-itemRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update a selected Item in a Collection. </br></br> Required scope | `CMS:write`",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-item",
          "originalEndpointId": "endpoint_collections/items.update-item",
          "name": "Update Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Unique identifier for the Item",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Identifier for the locale of the CMS item",
                    "key": "cmsLocaleId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last published",
                    "key": "lastPublished",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to archived",
                    "key": "isArchived",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to draft",
                    "key": "isDraft",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "key": "fieldData",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "CollectionsCollectionIdItemsItemIdPatchRequestBodyContentApplicationJsonSchemaFieldData"
                      }
                    }
                  }
                ]
              }
            },
            "description": "Details of the item to update"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_update-item_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-itemRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                },
                "id": "42b720ef280c7a7a3be8cabe",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "42b720ef280c7a7a3be8cabe",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "42b720ef280c7a7a3be8cabe",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get details of a selected Collection live Item. </br></br> Required scope | `CMS:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-item-live",
          "originalEndpointId": "endpoint_collections/items.get-item-live",
          "name": "Get Live Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": "/live"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
              "key": "cmsLocaleId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_get-item-live_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-item-liveRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754/live",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "42b720ef280c7a7a3be8cabe",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "42b720ef280c7a7a3be8cabe",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Remove a live item from the site. Removing a published item will unpublish the item from the live site and set it to draft. This endpoint does not currently support bulk deletion.</br></br> Required scope | `CMS:write`",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete-item-live",
          "originalEndpointId": "endpoint_collections/items.delete-item-live",
          "name": "Delete Collection Item (Live)",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": "/live"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Unique identifier for a CMS Locale. This UID is different from the Site locale identifier and is listed as `cmsLocaleId` in the Sites response. To query multiple locales, input a comma separated string.",
              "key": "cmsLocaleId",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-item-liveRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754/live",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update a selected live Item in a Collection. The updates for this Item will be published to the live site. </br></br> Required scope | `CMS:write`",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-item-live",
          "originalEndpointId": "endpoint_collections/items.update-item-live",
          "name": "Update Live Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for an Item",
                "key": "item_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/"
              },
              {
                "type": "pathParameter",
                "value": "item_id"
              },
              {
                "type": "literal",
                "value": "/live"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Unique identifier for the Item",
                    "key": "id",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Identifier for the locale of the CMS item",
                    "key": "cmsLocaleId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last published",
                    "key": "lastPublished",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was last updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "The date the item was created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to archived",
                    "key": "isArchived",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "Boolean determining if the Item is set to draft",
                    "key": "isDraft",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "key": "fieldData",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "CollectionsCollectionIdItemsItemIdLivePatchRequestBodyContentApplicationJsonSchemaFieldData"
                      }
                    }
                  }
                ]
              }
            },
            "description": "Details of the item to update"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_update-item-live_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-item-liveRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/580e64008c9a982ac9b8b754/live",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745",
                "item_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                },
                "id": "42b720ef280c7a7a3be8cabe",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  },
                  "id": "42b720ef280c7a7a3be8cabe",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "42b720ef280c7a7a3be8cabe",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2022-11-29T16:22:43.159Z",
                "lastUpdated": "2022-11-17T17:19:43.282Z",
                "createdOn": "2022-11-17T17:11:57.148Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "Pan Galactic Gargle Blaster Recipe",
                  "slug": "pan-galactic-gargle-blaster",
                  "date": "2022-11-18T00:00:00.000Z",
                  "featured": true,
                  "color": "#db4b68"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "42b720ef280c7a7a3be8cabe",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2022-11-29T16:22:43.159Z",
                  "lastUpdated": "2022-11-17T17:19:43.282Z",
                  "createdOn": "2022-11-17T17:11:57.148Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "Pan Galactic Gargle Blaster Recipe",
                    "slug": "pan-galactic-gargle-blaster",
                    "date": "2022-11-18T00:00:00.000Z",
                    "featured": true,
                    "color": "#db4b68"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Publish an item or multiple items. </br></br> Required scope | `cms:write`",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "publish-item",
          "originalEndpointId": "endpoint_collections/items.publish-item",
          "name": "Publish Collection Item",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Collection",
                "key": "collection_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/collections/"
              },
              {
                "type": "pathParameter",
                "value": "collection_id"
              },
              {
                "type": "literal",
                "value": "/items/publish"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "key": "itemIds",
                    "valueType": {
                      "type": "list",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "objectid"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "An array of Item IDs"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "collections_items_publish-item_Response_202"
              }
            },
            "statusCode": 202,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Publish-itemRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/collections/580e63fc8c9a982ac9b8b745/items/publish",
              "pathParameters": {
                "collection_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "itemIds": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "itemIds": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 202,
              "responseBody": {
                "publishedItemIds": [
                  "643fd856d66b6528195ee2ca",
                  "643fd856d66b6528195ee2cb"
                ],
                "errors": [
                  "Staging item ID 643fd856d66b6528195ee2cf not found."
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "publishedItemIds": [
                    "643fd856d66b6528195ee2ca",
                    "643fd856d66b6528195ee2cb"
                  ],
                  "errors": [
                    "Staging item ID 643fd856d66b6528195ee2cf not found."
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_pages/scripts": {
      "subpackageId": "subpackage_pages/scripts",
      "name": "scripts",
      "endpoints": [
        {
          "auth": true,
          "description": "Get all registered scripts that have been applied to a specific Page.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote> Required scope | `custom_code:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-custom-code",
          "originalEndpointId": "endpoint_pages/scripts.get-custom-code",
          "name": "Get Custom Code",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Page",
                "key": "page_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pages/"
              },
              {
                "type": "pathParameter",
                "value": "page_id"
              },
              {
                "type": "literal",
                "value": "/custom_code"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "pages_scripts_get-custom-code_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-page-custom-codeRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/pages/63c720f9347c2139b248e552/custom_code",
              "pathParameters": {
                "page_id": "63c720f9347c2139b248e552"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "scripts": [
                  {
                    "id": "cms_slider",
                    "location": "header",
                    "version": "1.0.0",
                    "attributes": {
                      "my-attribute": "some-value"
                    }
                  },
                  {
                    "id": "alert",
                    "location": "header",
                    "version": "0.0.1",
                    "attributes": {}
                  }
                ],
                "lastUpdated": "2022-10-26T00:28:54.191Z",
                "createdOn": "2022-10-26T00:28:54.191Z"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "scripts": [
                    {
                      "id": "cms_slider",
                      "location": "header",
                      "version": "1.0.0",
                      "attributes": {
                        "my-attribute": "some-value"
                      }
                    },
                    {
                      "id": "alert",
                      "location": "header",
                      "version": "0.0.1",
                      "attributes": {}
                    }
                  ],
                  "lastUpdated": "2022-10-26T00:28:54.191Z",
                  "createdOn": "2022-10-26T00:28:54.191Z"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add a registered script to a Page.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote> Required scope | `custom_code:write`\n",
          "method": "PUT",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "upsert-custom-code",
          "originalEndpointId": "endpoint_pages/scripts.upsert-custom-code",
          "name": "Add/Update Custom Code",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Page",
                "key": "page_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pages/"
              },
              {
                "type": "pathParameter",
                "value": "page_id"
              },
              {
                "type": "literal",
                "value": "/custom_code"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "A list of scripts applied to a Site or a Page",
                    "key": "scripts",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "id",
                          "value": "PagesPageIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItems"
                        }
                      }
                    }
                  },
                  {
                    "description": "Date when the Site's scripts were last updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Date when the Site's scripts were created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "pages_scripts_upsert-custom-code_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Add-custom-code-to-pageRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/pages/63c720f9347c2139b248e552/custom_code",
              "pathParameters": {
                "page_id": "63c720f9347c2139b248e552"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "scripts": [
                  {
                    "id": "cms_slider",
                    "location": "header",
                    "version": "1.0.0",
                    "attributes": {
                      "my-attribute": "some-value"
                    }
                  },
                  {
                    "id": "alert",
                    "location": "header",
                    "version": "0.0.1"
                  }
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "scripts": [
                    {
                      "id": "cms_slider",
                      "location": "header",
                      "version": "1.0.0",
                      "attributes": {
                        "my-attribute": "some-value"
                      }
                    },
                    {
                      "id": "alert",
                      "location": "header",
                      "version": "0.0.1"
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "scripts": [
                  {
                    "id": "cms_slider",
                    "location": "header",
                    "version": "1.0.0",
                    "attributes": {
                      "my-attribute": "some-value"
                    }
                  },
                  {
                    "id": "alert",
                    "location": "header",
                    "version": "0.0.1",
                    "attributes": {}
                  }
                ],
                "lastUpdated": "2022-10-26T00:28:54.191Z",
                "createdOn": "2022-10-26T00:28:54.191Z"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "scripts": [
                    {
                      "id": "cms_slider",
                      "location": "header",
                      "version": "1.0.0",
                      "attributes": {
                        "my-attribute": "some-value"
                      }
                    },
                    {
                      "id": "alert",
                      "location": "header",
                      "version": "0.0.1",
                      "attributes": {}
                    }
                  ],
                  "lastUpdated": "2022-10-26T00:28:54.191Z",
                  "createdOn": "2022-10-26T00:28:54.191Z"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete the custom code block that an app has created for a page </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote> Required scope | `custom_code:write`\n",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete-custom-code",
          "originalEndpointId": "endpoint_pages/scripts.delete-custom-code",
          "name": "Delete Custom Code",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Page",
                "key": "page_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pages/"
              },
              {
                "type": "pathParameter",
                "value": "page_id"
              },
              {
                "type": "literal",
                "value": "/custom_code"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-page-custom-codeRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/pages/63c720f9347c2139b248e552/custom_code",
              "pathParameters": {
                "page_id": "63c720f9347c2139b248e552"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_sites/scripts": {
      "subpackageId": "subpackage_sites/scripts",
      "name": "scripts",
      "endpoints": [
        {
          "auth": true,
          "description": "Get all registered scripts that have been applied to a specific Site.  <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-custom-code",
          "originalEndpointId": "endpoint_sites/scripts.get-custom-code",
          "name": "Get Custom Code",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/custom_code"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_scripts_get-custom-code_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-site-custom-codeRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/custom_code",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "scripts": [
                  {
                    "id": "cms_slider",
                    "location": "header",
                    "version": "1.0.0",
                    "attributes": {
                      "my-attribute": "some-value"
                    }
                  },
                  {
                    "id": "alert",
                    "location": "header",
                    "version": "0.0.1",
                    "attributes": {}
                  }
                ],
                "lastUpdated": "2022-10-26T00:28:54.191Z",
                "createdOn": "2022-10-26T00:28:54.191Z"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "scripts": [
                    {
                      "id": "cms_slider",
                      "location": "header",
                      "version": "1.0.0",
                      "attributes": {
                        "my-attribute": "some-value"
                      }
                    },
                    {
                      "id": "alert",
                      "location": "header",
                      "version": "0.0.1",
                      "attributes": {}
                    }
                  ],
                  "lastUpdated": "2022-10-26T00:28:54.191Z",
                  "createdOn": "2022-10-26T00:28:54.191Z"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add a registered script to a Site.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`\n",
          "method": "PUT",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "upsert-custom-code",
          "originalEndpointId": "endpoint_sites/scripts.upsert-custom-code",
          "name": "Add/Update Custom Code",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/custom_code"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "A list of scripts applied to a Site or a Page",
                    "key": "scripts",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "list",
                        "itemType": {
                          "type": "id",
                          "value": "SitesSiteIdCustomCodePutRequestBodyContentApplicationJsonSchemaScriptsItems"
                        }
                      }
                    }
                  },
                  {
                    "description": "Date when the Site's scripts were last updated",
                    "key": "lastUpdated",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Date when the Site's scripts were created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_scripts_upsert-custom-code_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Add-custom-code-tositeRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/custom_code",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "scripts": [
                  {
                    "id": "cms_slider",
                    "location": "header",
                    "version": "1.0.0",
                    "attributes": {
                      "my-attribute": "some-value"
                    }
                  },
                  {
                    "id": "alert",
                    "location": "header",
                    "version": "0.0.1"
                  }
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "scripts": [
                    {
                      "id": "cms_slider",
                      "location": "header",
                      "version": "1.0.0",
                      "attributes": {
                        "my-attribute": "some-value"
                      }
                    },
                    {
                      "id": "alert",
                      "location": "header",
                      "version": "0.0.1"
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "scripts": [
                  {
                    "id": "cms_slider",
                    "location": "header",
                    "version": "1.0.0",
                    "attributes": {
                      "my-attribute": "some-value"
                    }
                  },
                  {
                    "id": "alert",
                    "location": "header",
                    "version": "0.0.1"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "scripts": [
                    {
                      "id": "cms_slider",
                      "location": "header",
                      "version": "1.0.0",
                      "attributes": {
                        "my-attribute": "some-value"
                      }
                    },
                    {
                      "id": "alert",
                      "location": "header",
                      "version": "0.0.1"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete the custom code block that an app created for a Site </br></br> <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`\n",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete-custom-code",
          "originalEndpointId": "endpoint_sites/scripts.delete-custom-code",
          "name": "Delete Custom Code",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/custom_code"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-site-custom-codeRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/custom_code",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get all instances of Custom Code applied to a Site or Pages.  <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list-custom-code-blocks",
          "originalEndpointId": "endpoint_sites/scripts.list-custom-code-blocks",
          "name": "List Custom Code Blocks",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/custom_code/blocks"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "sites_scripts_list-custom-code-blocks_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-site-custom-code-blocksRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/custom_code/blocks",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "blocks": [
                  {
                    "siteId": "6258612d1ee792848f805dcf",
                    "pageId": null,
                    "type": "site",
                    "scripts": [
                      {
                        "id": "chartjs",
                        "location": "header",
                        "version": "4.4.2",
                        "attributes": {},
                        "displayName": "ChartJS"
                      }
                    ],
                    "createdOn": "2024-04-03T16:49:15.461Z",
                    "lastUpdated": "2024-04-03T16:49:15.461Z"
                  },
                  {
                    "siteId": "6390c49674a71f84b51a08d8",
                    "pageId": "6419db964a9c43f6a3af6348",
                    "type": "page",
                    "scripts": [
                      {
                        "id": "cms_slider",
                        "location": "header",
                        "version": "1.0.0",
                        "attributes": {
                          "my-attribute": "some-value"
                        }
                      },
                      {
                        "id": "alert",
                        "location": "header",
                        "version": "0.0.1",
                        "attributes": {}
                      }
                    ],
                    "createdOn": "2022-10-26T00:28:54.191Z",
                    "lastUpdated": "2022-10-26T00:28:54.191Z"
                  }
                ],
                "pagination": {
                  "limit": 10,
                  "offset": 0,
                  "total": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "blocks": [
                    {
                      "siteId": "6258612d1ee792848f805dcf",
                      "pageId": null,
                      "type": "site",
                      "scripts": [
                        {
                          "id": "chartjs",
                          "location": "header",
                          "version": "4.4.2",
                          "attributes": {},
                          "displayName": "ChartJS"
                        }
                      ],
                      "createdOn": "2024-04-03T16:49:15.461Z",
                      "lastUpdated": "2024-04-03T16:49:15.461Z"
                    },
                    {
                      "siteId": "6390c49674a71f84b51a08d8",
                      "pageId": "6419db964a9c43f6a3af6348",
                      "type": "page",
                      "scripts": [
                        {
                          "id": "cms_slider",
                          "location": "header",
                          "version": "1.0.0",
                          "attributes": {
                            "my-attribute": "some-value"
                          }
                        },
                        {
                          "id": "alert",
                          "location": "header",
                          "version": "0.0.1",
                          "attributes": {}
                        }
                      ],
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "lastUpdated": "2022-10-26T00:28:54.191Z"
                    }
                  ],
                  "pagination": {
                    "limit": 10,
                    "offset": 0,
                    "total": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_scripts": {
      "subpackageId": "subpackage_scripts",
      "name": "scripts",
      "endpoints": [
        {
          "auth": true,
          "description": "List of scripts registered to a Site.  </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  Additionally, Scripts can be remotely hosted, or registered as inline snippets. <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     Required scope | `custom_code:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_scripts.list",
          "name": "Get Registered Scripts",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/registered_scripts"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "scripts_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-scriptsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/registered_scripts",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "registeredScripts": [
                  {
                    "id": "alert",
                    "canCopy": false,
                    "displayName": "Alert",
                    "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.1.js",
                    "createdOn": "2022-10-26T00:28:54.191Z",
                    "version": "0.0.1",
                    "integrityHash": {}
                  },
                  {
                    "id": "alert",
                    "canCopy": false,
                    "displayName": "Alert",
                    "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.2.js",
                    "createdOn": "2022-10-26T00:28:54.191Z",
                    "version": "0.0.2",
                    "integrityHash": {}
                  },
                  {
                    "id": "cms_slider",
                    "canCopy": true,
                    "displayName": "CMS Slider",
                    "hostedLocation": "https://cdn.jsdelivr.net/.../cms_slider.js",
                    "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                    "createdOn": "2022-10-26T00:28:54.191Z",
                    "version": "1.0.0"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "registeredScripts": [
                    {
                      "id": "alert",
                      "canCopy": false,
                      "displayName": "Alert",
                      "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.1.js",
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "version": "0.0.1",
                      "integrityHash": {}
                    },
                    {
                      "id": "alert",
                      "canCopy": false,
                      "displayName": "Alert",
                      "hostedLocation": "https://cdn.webflow.io/.../alert-0.0.2.js",
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "version": "0.0.2",
                      "integrityHash": {}
                    },
                    {
                      "id": "cms_slider",
                      "canCopy": true,
                      "displayName": "CMS Slider",
                      "hostedLocation": "https://cdn.jsdelivr.net/.../cms_slider.js",
                      "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                      "createdOn": "2022-10-26T00:28:54.191Z",
                      "version": "1.0.0"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add a script to a Site's Custom Code registry. </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  Additionally, Scripts can be remotely hosted, or registered as inline snippets.   <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     </br></br>  Required scope | `custom_code:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "register-hosted",
          "originalEndpointId": "endpoint_scripts.register-hosted",
          "name": "Register Script - Hosted",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/registered_scripts/hosted"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "URI for an externally hosted script location",
                    "key": "hostedLocation",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Sub-Resource Integrity Hash",
                    "key": "integrityHash",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string",
                        "format": "hash"
                      }
                    }
                  },
                  {
                    "description": "Define whether the script can be copied on site duplication and transfer",
                    "key": "canCopy",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "A Semantic Version (SemVer) string, denoting the version of the script",
                    "key": "version",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                    "key": "displayName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "scripts_register-hosted_Response_201"
              }
            },
            "statusCode": 201,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Post-hosted-scriptRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/registered_scripts/hosted",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                "canCopy": true,
                "version": "1.0.0",
                "displayName": "CMS Slider"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                  "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                  "canCopy": true,
                  "version": "1.0.0",
                  "displayName": "CMS Slider"
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "id": "cms_slider",
                "canCopy": true,
                "displayName": "CMS Slider",
                "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                "createdOn": "2022-10-26T00:28:54.191Z",
                "version": "1.0.0"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "cms_slider",
                  "canCopy": true,
                  "displayName": "CMS Slider",
                  "hostedLocation": "https://cdn.jsdelivr.net/.../cmsslider.js",
                  "integrityHash": "sha384-J+YlJ8v0gpaRoKH7SbFbEmxOZlAxLiwNjfSsBhDooGa5roXlPPpXbEevck4J7YZ+",
                  "createdOn": "2022-10-26T00:28:54.191Z",
                  "version": "1.0.0"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Add a script to a Site's Custom Code registry. Inline scripts can be between 1 and 2000 characters. </br></br>  In order to use the Custom Code APIs for Sites and Pages, Custom Code Scripts must first be registered  to a Site via the `registered_scripts` endpoints, and then applied to a Site or Page using the appropriate `custom_code` endpoints.  </br></br>  <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     Required scope | `custom_code:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "register-inline",
          "originalEndpointId": "endpoint_scripts.register-inline",
          "name": "Register Script - Inline",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/registered_scripts/inline"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "The code to be added to the site (to be hosted by Webflow).",
                    "key": "sourceCode",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "Sub-Resource Integrity Hash. Only required for externally hosted scripts (passed via hostedLocation)",
                    "key": "integrityHash",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "hash"
                        }
                      }
                    }
                  },
                  {
                    "description": "Define whether the script can be copied on site duplication and transfer",
                    "key": "canCopy",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "boolean",
                          "default": false
                        }
                      }
                    }
                  },
                  {
                    "description": "A Semantic Version (SemVer) string, denoting the version of the script",
                    "key": "version",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "User-facing name for the script. Must be between 1 and 50 alphanumeric characters",
                    "key": "displayName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "scripts_register-inline_Response_201"
              }
            },
            "statusCode": 201,
            "description": "Created"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Post-inline-scriptsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/registered_scripts/inline",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sourceCode": "alert('hello world');",
                "version": "0.0.1",
                "displayName": "Alert",
                "integrityHash": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sourceCode": "alert('hello world');",
                  "version": "0.0.1",
                  "displayName": "Alert",
                  "integrityHash": {}
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "id": "alert",
                "canCopy": false,
                "displayName": "Alert",
                "hostedLocation": "https://uploads-ssl.webflow.com/6258612d1ee792848f805dcf%2F64b6c769ff52ba6c3d904a91%2F660d6e15b3d1696f2d2b1447%2Falert-0.0.1.js",
                "createdOn": "2022-10-26T00:28:54.191Z",
                "version": "0.0.1",
                "integrityHash": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "alert",
                  "canCopy": false,
                  "displayName": "Alert",
                  "hostedLocation": "https://uploads-ssl.webflow.com/6258612d1ee792848f805dcf%2F64b6c769ff52ba6c3d904a91%2F660d6e15b3d1696f2d2b1447%2Falert-0.0.1.js",
                  "createdOn": "2022-10-26T00:28:54.191Z",
                  "version": "0.0.1",
                  "integrityHash": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_assets": {
      "subpackageId": "subpackage_assets",
      "displayName": "Assets",
      "name": "assets",
      "endpoints": [
        {
          "auth": true,
          "description": "List assets for a given site </br></br> Required scope | `assets:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_assets.list",
          "name": "List Assets",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/assets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "assets_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-assetsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/assets",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "assets": [
                  {
                    "id": "63e5889e7fe4eafa7384cea4",
                    "contentType": "image/png",
                    "size": 2212772,
                    "siteId": "63938b302ea6b0aa6f3d8745",
                    "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/63938b302ea6b0aa6f3d8745/63e5889e7fe4eafa7384cea4_Vectors-Wrapper.svg",
                    "originalFileName": "Candy-Wrapper.svg",
                    "displayName": "63e5889e7fe4eafa7384cea4_Candy-Wrapper.png",
                    "lastUpdated": "2023-03-01T23:42:57.862Z",
                    "createdOn": "2023-02-09T23:58:22.294Z",
                    "variants": [
                      {
                        "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                        "originalFileName": "Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                        "displayName": "660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                        "format": "png",
                        "width": 500,
                        "quality": 100,
                        "height": {},
                        "error": {}
                      }
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "assets": [
                    {
                      "id": "63e5889e7fe4eafa7384cea4",
                      "contentType": "image/png",
                      "size": 2212772,
                      "siteId": "63938b302ea6b0aa6f3d8745",
                      "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/63938b302ea6b0aa6f3d8745/63e5889e7fe4eafa7384cea4_Vectors-Wrapper.svg",
                      "originalFileName": "Candy-Wrapper.svg",
                      "displayName": "63e5889e7fe4eafa7384cea4_Candy-Wrapper.png",
                      "lastUpdated": "2023-03-01T23:42:57.862Z",
                      "createdOn": "2023-02-09T23:58:22.294Z",
                      "variants": [
                        {
                          "hostedUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                          "originalFileName": "Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                          "displayName": "660d83ce30f3a599ddb0bdb3_Screenshot%202024-03-20%20at%209.03.24%E2%80%AFPM-p-500.png",
                          "format": "png",
                          "width": 500,
                          "quality": 100,
                          "height": {},
                          "error": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a new asset entry.  </br></br> This endpoint generates a response with the following information: `uploadUrl` and `uploadDetails`.  You can use these two properties to [upload the file to Amazon s3 by making a POST](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPOST.html) request to the `uploadUrl` with the `uploadDetails` object as your header information in the request. </br></br>  Required scope | `assets:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create",
          "originalEndpointId": "endpoint_assets.create",
          "name": "Create Asset Metadata",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/assets"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "file name including file extension",
                    "key": "fileName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "MD5 hash of the file",
                    "key": "fileHash",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "id of the Asset folder (optional)",
                    "key": "parentFolder",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "Information about the asset to create"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "assets_create_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-assetRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/assets",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "fileName": "file.png",
                "fileHash": "3c7d87c9575702bc3b1e991f4d3c638e"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "fileName": "file.png",
                  "fileHash": "3c7d87c9575702bc3b1e991f4d3c638e"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "uploadDetails": {
                  "acl": "public-read",
                  "bucket": "webflow-bucket-name",
                  "X-Amz-Algorithm": "AWS4-HMAC-SHA256",
                  "X-Amz-Credential": "<credential-key>/<date>/<region-zone>/s3/aws4_request",
                  "X-Amz-Date": "<date-in-iso-like-string>",
                  "key": "<siteId>/<fileId>_<filename-with-extension>",
                  "Policy": "<a-very-long-alphanumeric-token-with-equal-sign-at-the-end>",
                  "X-Amz-Signature": "<one-line-ling-alphanumeric-signature>",
                  "success_action_status": "201",
                  "content-type": "image/png",
                  "Cache-Control": "max-age=31536000, must-revalidate"
                },
                "contentType": "image/png",
                "id": "64358b9544249dc43d37d2b7",
                "parentFolder": "6436b1ce5281cace05b65aea",
                "uploadUrl": "https://s3.amazonaws.com/webflow-dev-assets/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                "assetUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d907ab9e91e3e9f56385e_paranoidAndroid-2024.png",
                "hostedUrl": "https://d1otoma47x30pg.cloudfront.net/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                "originalFileName": "file.png",
                "createdOn": "2023-04-11T16:32:21.804Z",
                "lastUpdated": "2023-04-12T20:31:03.197Z"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "uploadDetails": {
                    "acl": "public-read",
                    "bucket": "webflow-bucket-name",
                    "X-Amz-Algorithm": "AWS4-HMAC-SHA256",
                    "X-Amz-Credential": "<credential-key>/<date>/<region-zone>/s3/aws4_request",
                    "X-Amz-Date": "<date-in-iso-like-string>",
                    "key": "<siteId>/<fileId>_<filename-with-extension>",
                    "Policy": "<a-very-long-alphanumeric-token-with-equal-sign-at-the-end>",
                    "X-Amz-Signature": "<one-line-ling-alphanumeric-signature>",
                    "success_action_status": "201",
                    "content-type": "image/png",
                    "Cache-Control": "max-age=31536000, must-revalidate"
                  },
                  "contentType": "image/png",
                  "id": "64358b9544249dc43d37d2b7",
                  "parentFolder": "6436b1ce5281cace05b65aea",
                  "uploadUrl": "https://s3.amazonaws.com/webflow-dev-assets/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                  "assetUrl": "https://s3.amazonaws.com/webflow-prod-assets/6258612d1ee792848f805dcf/660d907ab9e91e3e9f56385e_paranoidAndroid-2024.png",
                  "hostedUrl": "https://d1otoma47x30pg.cloudfront.net/643021114e290e0d3a0602b2/64358b9544249dc43d37d2b7_Screenshot%202023-04-11%20at%209.50.42%20AM.png",
                  "originalFileName": "file.png",
                  "createdOn": "2023-04-11T16:32:21.804Z",
                  "lastUpdated": "2023-04-12T20:31:03.197Z"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get an Asset </br></br> Required scope | `assets:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_assets.get",
          "name": "Get Asset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for an Asset on a site",
                "key": "asset_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "asset_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "assets_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-assetRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/assets/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "asset_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "55131cd036c09f7d07883dfc",
                "contentType": "image/png",
                "size": 1500,
                "siteId": "62749158efef318abc8d5a0f",
                "hostedUrl": "example.com/hostedimage.png",
                "originalFileName": "image.png",
                "displayName": "example-image-123.png",
                "lastUpdated": "2016-09-06T21:12:22.148Z",
                "createdOn": "2016-09-02T23:26:22.241Z",
                "variants": [
                  {
                    "hostedUrl": "example.com/hostedimage.png",
                    "originalFileName": "image.png",
                    "displayName": "A brown dog",
                    "format": "foo",
                    "width": 1500,
                    "height": 900,
                    "quality": 42,
                    "error": "foo"
                  }
                ],
                "altText": "A red chair"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "55131cd036c09f7d07883dfc",
                  "contentType": "image/png",
                  "size": 1500,
                  "siteId": "62749158efef318abc8d5a0f",
                  "hostedUrl": "example.com/hostedimage.png",
                  "originalFileName": "image.png",
                  "displayName": "example-image-123.png",
                  "lastUpdated": "2016-09-06T21:12:22.148Z",
                  "createdOn": "2016-09-02T23:26:22.241Z",
                  "variants": [
                    {
                      "hostedUrl": "example.com/hostedimage.png",
                      "originalFileName": "image.png",
                      "displayName": "A brown dog",
                      "format": "foo",
                      "width": 1500,
                      "height": 900,
                      "quality": 42,
                      "error": "foo"
                    }
                  ],
                  "altText": "A red chair"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete an Asset",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete",
          "originalEndpointId": "endpoint_assets.delete",
          "name": "Delete Asset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for an Asset on a site",
                "key": "asset_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "asset_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Delete-assetRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/assets/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "asset_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update an Asset </br></br> Required scope | `assets:write`",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update",
          "originalEndpointId": "endpoint_assets.update",
          "name": "Update Asset",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for an Asset on a site",
                "key": "asset_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/assets/"
              },
              {
                "type": "pathParameter",
                "value": "asset_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "file name including file extension",
                    "key": "displayName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            },
            "description": "Information about the asset to update"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "assets_update_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Patch-assetRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/assets/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "asset_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "displayName": "bulldoze.png"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "displayName": "bulldoze.png"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "55131cd036c09f7d07883dfc",
                "contentType": "image/png",
                "size": 1500,
                "siteId": "62749158efef318abc8d5a0f",
                "hostedUrl": "example.com/hostedimage.png",
                "originalFileName": "image.png",
                "displayName": "example-image-123.png",
                "lastUpdated": "2016-09-06T21:12:22.148Z",
                "createdOn": "2016-09-02T23:26:22.241Z",
                "variants": [
                  {
                    "hostedUrl": "example.com/hostedimage.png",
                    "originalFileName": "image.png",
                    "displayName": "A brown dog",
                    "format": "foo",
                    "width": 1500,
                    "height": 900,
                    "quality": 42,
                    "error": "foo"
                  }
                ],
                "altText": "A red chair"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "55131cd036c09f7d07883dfc",
                  "contentType": "image/png",
                  "size": 1500,
                  "siteId": "62749158efef318abc8d5a0f",
                  "hostedUrl": "example.com/hostedimage.png",
                  "originalFileName": "image.png",
                  "displayName": "example-image-123.png",
                  "lastUpdated": "2016-09-06T21:12:22.148Z",
                  "createdOn": "2016-09-02T23:26:22.241Z",
                  "variants": [
                    {
                      "hostedUrl": "example.com/hostedimage.png",
                      "originalFileName": "image.png",
                      "displayName": "A brown dog",
                      "format": "foo",
                      "width": 1500,
                      "height": 900,
                      "quality": 42,
                      "error": "foo"
                    }
                  ],
                  "altText": "A red chair"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "List Asset Folders within a given site <br><br> Required scope | `assets:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list-folders",
          "originalEndpointId": "endpoint_assets.list-folders",
          "name": "List Asset Folders",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/asset_folders"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "assets_list-folders_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-asset-foldersRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/asset_folders",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "assetFolders": [
                  {
                    "id": "6390c49774a71f0e3c1a08ee",
                    "displayName": "emoji icons",
                    "assets": [
                      "63e5889e7fe4eafa7384cea4",
                      "659595234426a9fcbad57043"
                    ],
                    "siteId": "6390c49674a71f84b51a08d8",
                    "createdOn": "2018-10-14T21:55:49.063Z",
                    "lastUpdated": "2022-12-07T16:51:37.571Z",
                    "parentFolder": {}
                  }
                ],
                "pagination": {
                  "limit": 1,
                  "offset": 0,
                  "total": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "assetFolders": [
                    {
                      "id": "6390c49774a71f0e3c1a08ee",
                      "displayName": "emoji icons",
                      "assets": [
                        "63e5889e7fe4eafa7384cea4",
                        "659595234426a9fcbad57043"
                      ],
                      "siteId": "6390c49674a71f84b51a08d8",
                      "createdOn": "2018-10-14T21:55:49.063Z",
                      "lastUpdated": "2022-12-07T16:51:37.571Z",
                      "parentFolder": {}
                    }
                  ],
                  "pagination": {
                    "limit": 1,
                    "offset": 0,
                    "total": 1
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create an Asset Folder within a given site <br><br> Required scope | `assets:write`",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create-folder",
          "originalEndpointId": "endpoint_assets.create-folder",
          "name": "Create Asset Folder",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/asset_folders"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "A human readable name for the Asset Folder",
                    "key": "displayName",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "description": "An (optional) pointer to a parent Asset Folder (or null for root)",
                    "key": "parentFolder",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "assets_create-folder_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-asset-folderRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/asset_folders",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "displayName": "my asset folder"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "displayName": "my asset folder"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6390c49774a71f0e3c1a08ee",
                "displayName": "emoji icons",
                "parentFolder": "6390c49774a71f99f21a08eb",
                "assets": [
                  "63e5889e7fe4eafa7384cea4",
                  "659595234426a9fcbad57043"
                ],
                "siteId": "6390c49674a71f84b51a08d8",
                "createdOn": "2018-10-14T21:55:49.063Z",
                "lastUpdated": "2022-12-07T16:51:37.571Z"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6390c49774a71f0e3c1a08ee",
                  "displayName": "emoji icons",
                  "parentFolder": "6390c49774a71f99f21a08eb",
                  "assets": [
                    "63e5889e7fe4eafa7384cea4",
                    "659595234426a9fcbad57043"
                  ],
                  "siteId": "6390c49674a71f84b51a08d8",
                  "createdOn": "2018-10-14T21:55:49.063Z",
                  "lastUpdated": "2022-12-07T16:51:37.571Z"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get details about a specific Asset Folder <br><br> Required scope | `assets:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-folder",
          "originalEndpointId": "endpoint_assets.get-folder",
          "name": "Get Asset Folder",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for an Asset Folder",
                "key": "asset_folder_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/asset_folders/"
              },
              {
                "type": "pathParameter",
                "value": "asset_folder_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "assets_get-folder_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-asset-folderRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/asset_folders/6390c49774a71f0e3c1a08ee",
              "pathParameters": {
                "asset_folder_id": "6390c49774a71f0e3c1a08ee"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "6390c49774a71f0e3c1a08ee",
                "displayName": "emoji icons",
                "parentFolder": "6390c49774a71f99f21a08eb",
                "assets": [
                  "63e5889e7fe4eafa7384cea4",
                  "659595234426a9fcbad57043"
                ],
                "siteId": "6390c49674a71f84b51a08d8",
                "createdOn": "2018-10-14T21:55:49.063Z",
                "lastUpdated": "2022-12-07T16:51:37.571Z"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "6390c49774a71f0e3c1a08ee",
                  "displayName": "emoji icons",
                  "parentFolder": "6390c49774a71f99f21a08eb",
                  "assets": [
                    "63e5889e7fe4eafa7384cea4",
                    "659595234426a9fcbad57043"
                  ],
                  "siteId": "6390c49674a71f84b51a08d8",
                  "createdOn": "2018-10-14T21:55:49.063Z",
                  "lastUpdated": "2022-12-07T16:51:37.571Z"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_webhooks": {
      "subpackageId": "subpackage_webhooks",
      "displayName": "Webhooks",
      "name": "webhooks",
      "endpoints": [
        {
          "auth": true,
          "description": "List all App-created Webhooks registered for a given site </br></br> Required scope | `sites:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_webhooks.list",
          "name": "List Webhooks",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/webhooks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "webhooks_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-webhooksRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/webhooks",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "webhooks": [
                  {
                    "id": "57ca0a9e418c504a6e1acbb6",
                    "triggerType": "form_submission",
                    "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    "workspaceId": "4f4e46fd476ea8c507000001",
                    "siteId": "562ac0395358780a1f5e6fbd",
                    "filter": {
                      "name": "Email Form"
                    },
                    "lastTriggered": "2023-02-08T23:59:28.572Z",
                    "createdOn": "2016-09-02T23:26:22.241Z"
                  },
                  {
                    "id": "578d85cce0c47cd2865f4cf2",
                    "triggerType": "form_submission",
                    "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    "workspaceId": "4f4e46fd476ea8c507000001",
                    "siteId": "562ac0395358780a1f5e6fbd",
                    "filter": {
                      "name": "Email Form"
                    },
                    "lastTriggered": "2023-02-08T23:59:28.572Z",
                    "createdOn": "2016-07-19T01:43:40.585Z"
                  },
                  {
                    "id": "578d85cce0c47cd2865f4cf3",
                    "triggerType": "form_submission",
                    "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                    "workspaceId": "4f4e46fd476ea8c507000001",
                    "siteId": "562ac0395358780a1f5e6fbd",
                    "filter": {
                      "name": "Email Form"
                    },
                    "lastTriggered": "2023-02-08T23:59:28.572Z",
                    "createdOn": "2016-07-19T01:43:40.605Z"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "webhooks": [
                    {
                      "id": "57ca0a9e418c504a6e1acbb6",
                      "triggerType": "form_submission",
                      "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                      "workspaceId": "4f4e46fd476ea8c507000001",
                      "siteId": "562ac0395358780a1f5e6fbd",
                      "filter": {
                        "name": "Email Form"
                      },
                      "lastTriggered": "2023-02-08T23:59:28.572Z",
                      "createdOn": "2016-09-02T23:26:22.241Z"
                    },
                    {
                      "id": "578d85cce0c47cd2865f4cf2",
                      "triggerType": "form_submission",
                      "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                      "workspaceId": "4f4e46fd476ea8c507000001",
                      "siteId": "562ac0395358780a1f5e6fbd",
                      "filter": {
                        "name": "Email Form"
                      },
                      "lastTriggered": "2023-02-08T23:59:28.572Z",
                      "createdOn": "2016-07-19T01:43:40.585Z"
                    },
                    {
                      "id": "578d85cce0c47cd2865f4cf3",
                      "triggerType": "form_submission",
                      "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                      "workspaceId": "4f4e46fd476ea8c507000001",
                      "siteId": "562ac0395358780a1f5e6fbd",
                      "filter": {
                        "name": "Email Form"
                      },
                      "lastTriggered": "2023-02-08T23:59:28.572Z",
                      "createdOn": "2016-07-19T01:43:40.605Z"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a new Webhook, to be notified when Webflow resources change. Limit of 75 registrations per `triggerType`, per site. <blockquote class=\"callout callout_info\" theme=\"📘\">Access to this endpoint requires a bearer token from a <a href=\"https://developers.webflow.com/data/docs/getting-started-data-clients\">Data Client App</a>.</blockquote>     Required scope | `sites:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create",
          "originalEndpointId": "endpoint_webhooks.create",
          "name": "Create Webhook",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/webhooks"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Unique identifier for the Webhook registration",
                    "key": "id",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "objectid"
                        }
                      }
                    }
                  },
                  {
                    "description": "* `form_submission` - Sends the [form_submission](#form_submission) event\n* `site_publish` - Sends a [site_publish](#site_publish) event\n* `page_created` - Send the [page_created](#page_created) event\n* `page_metadata_updated` - Sends the [page_metadata_updated](#page_metadata_updated) event\n* `page_deleted` - Sends the [page_deleted](#page_deleted) event\n* `ecomm_new_order` - Sends the new [ecomm_new_order](#ecomm_new_order) event\n* `ecomm_order_changed` - Sends the [ecomm_order_changed](#ecomm_order_changed) event\n* `ecomm_inventory_changed` - Sends the [ecomm_inventory_changed](#ecomm_inventory_changed) event\n* `user_account_added` - Sends the [user_account_added](#user_account_added) event\n* `user_account_updated` - Sends the [user_account_updated](#user_account_updated) event\n* `user_account_deleted` - Sends the [user_account_deleted](#user_account_deleted) event\n* `collection_item_created` - Sends the [collection_item_created](#collection_item_created) event\n* `collection_item_changed` - Sends the [collection_item_changed](#collection_item_changed) event\n* `collection_item_deleted` - Sends the [collection_item_deleted](#collection_item_deleted) event\n* `collection_item_unpublished` - Sends the [collection_item_unpublished](#collection_item_unpublished) event\n",
                    "key": "triggerType",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdWebhooksPostRequestBodyContentApplicationJsonSchemaTriggerType"
                      }
                    }
                  },
                  {
                    "description": "URL to send the Webhook payload to",
                    "key": "url",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  {
                    "description": "Unique identifier for the Workspace the Webhook is registered in",
                    "key": "workspaceId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "objectid"
                        }
                      }
                    }
                  },
                  {
                    "description": "Unique identifier for the Site the Webhook is registered in",
                    "key": "siteId",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "objectid"
                        }
                      }
                    }
                  },
                  {
                    "description": "Only supported for the `form_submission` trigger type. Filter for the form you want Webhooks to be sent for. ",
                    "key": "filter",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdWebhooksPostRequestBodyContentApplicationJsonSchemaFilter"
                      }
                    }
                  },
                  {
                    "description": "Date the Webhook instance was last triggered",
                    "key": "lastTriggered",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  {
                    "description": "Date the Webhook registration was created",
                    "key": "createdOn",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "description": "The Webhook registration object"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "webhooks_create_Response_201"
              }
            },
            "statusCode": 201,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-webhookRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/webhooks",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "triggerType": "form_submission",
                "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                "id": "582266e0cd48de0f0e3c6d8b",
                "siteId": "562ac0395358780a1f5e6fbd",
                "workspaceId": "4f4e46fd476ea8c507000001",
                "createdOn": "2022-11-08T23:59:28.572Z",
                "lastTriggered": "2023-02-08T23:59:28.572Z",
                "filter": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "triggerType": "form_submission",
                  "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                  "id": "582266e0cd48de0f0e3c6d8b",
                  "siteId": "562ac0395358780a1f5e6fbd",
                  "workspaceId": "4f4e46fd476ea8c507000001",
                  "createdOn": "2022-11-08T23:59:28.572Z",
                  "lastTriggered": "2023-02-08T23:59:28.572Z",
                  "filter": {}
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "id": "582266e0cd48de0f0e3c6d8b",
                "triggerType": "form_submission",
                "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                "workspaceId": "4f4e46fd476ea8c507000001",
                "siteId": "562ac0395358780a1f5e6fbd",
                "lastTriggered": "2023-02-08T23:59:28.572Z",
                "createdOn": "2022-11-08T23:59:28.572Z",
                "filter": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "582266e0cd48de0f0e3c6d8b",
                  "triggerType": "form_submission",
                  "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                  "workspaceId": "4f4e46fd476ea8c507000001",
                  "siteId": "562ac0395358780a1f5e6fbd",
                  "lastTriggered": "2023-02-08T23:59:28.572Z",
                  "createdOn": "2022-11-08T23:59:28.572Z",
                  "filter": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get a specific Webhook instance",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_webhooks.get",
          "name": "Get Webhook",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Webhook",
                "key": "webhook_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhooks/"
              },
              {
                "type": "pathParameter",
                "value": "webhook_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "webhooks_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-webhookRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/webhooks/580e64008c9a982ac9b8b754",
              "pathParameters": {
                "webhook_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "id": "582266e0cd48de0f0e3c6d8b",
                "triggerType": "form_submission",
                "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                "workspaceId": "4f4e46fd476ea8c507000001",
                "siteId": "562ac0395358780a1f5e6fbd",
                "lastTriggered": "2023-02-08T23:59:28.572Z",
                "createdOn": "2022-11-08T23:59:28.572Z",
                "filter": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "582266e0cd48de0f0e3c6d8b",
                  "triggerType": "form_submission",
                  "url": "https://webhook.site/7f7f7f7f-7f7f-7f7f-7f7f-7f7f7f7f7f7f",
                  "workspaceId": "4f4e46fd476ea8c507000001",
                  "siteId": "562ac0395358780a1f5e6fbd",
                  "lastTriggered": "2023-02-08T23:59:28.572Z",
                  "createdOn": "2022-11-08T23:59:28.572Z",
                  "filter": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Remove a Webhook",
          "method": "DELETE",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "delete",
          "originalEndpointId": "endpoint_webhooks.delete",
          "name": "Remove Webhook",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Webhook",
                "key": "webhook_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhooks/"
              },
              {
                "type": "pathParameter",
                "value": "webhook_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Remove-webhookRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/webhooks/580e64008c9a982ac9b8b754",
              "pathParameters": {
                "webhook_id": "580e64008c9a982ac9b8b754"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_accessGroups": {
      "subpackageId": "subpackage_accessGroups",
      "name": "accessGroups",
      "endpoints": [
        {
          "auth": true,
          "description": "Get a list of access groups for a site <br><br> Required scope | `users:read`",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_accessGroups.list",
          "name": "List Access Groups",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/accessgroups"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Sort string to use when ordering access groups\nCan be prefixed with a `-` to reverse the sort (ex. `-CreatedOn`)\n",
              "key": "sort",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "SitesSiteIdAccessgroupsGetParametersSort"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "access-groups_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Validation failure",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-access-groupsRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Forbidden",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-access-groupsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/accessgroups",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100,
                "sort": "CreatedOn"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "count": 1,
                "limit": 10,
                "offset": 0,
                "total": 1,
                "accessGroups": [
                  {
                    "id": "62be58d404be8a6cc900c081",
                    "name": "Research Team",
                    "shortId": "rt",
                    "slug": "hitchhikers-guide-research-team",
                    "createdOn": "2022-08-01T19:41:48.349Z"
                  },
                  {
                    "id": "65a96161991e77bbb4a6c573",
                    "name": "Admin",
                    "shortId": "ad",
                    "slug": "admin",
                    "createdOn": "2022-08-01T19:41:48.349Z"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "count": 1,
                  "limit": 10,
                  "offset": 0,
                  "total": 1,
                  "accessGroups": [
                    {
                      "id": "62be58d404be8a6cc900c081",
                      "name": "Research Team",
                      "shortId": "rt",
                      "slug": "hitchhikers-guide-research-team",
                      "createdOn": "2022-08-01T19:41:48.349Z"
                    },
                    {
                      "id": "65a96161991e77bbb4a6c573",
                      "name": "Admin",
                      "shortId": "ad",
                      "slug": "admin",
                      "createdOn": "2022-08-01T19:41:48.349Z"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_products": {
      "subpackageId": "subpackage_products",
      "name": "products",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve all products for a site. Use `limit` and `offset` to page through all products with subsequent requests. All SKUs for each product will also be fetched and returned. The `limit`, `offset` and `total` values represent Products only and do not include any SKUs.\n\nRequired scope | `ecommerce:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "list",
          "originalEndpointId": "endpoint_products.list",
          "name": "List Products & SKUs",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/products"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Offset used for pagination if the results have more than limit records",
              "key": "offset",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            },
            {
              "description": "Maximum number of records to be returned (max limit: 100)",
              "key": "limit",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "products_list_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Validation failure",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-productsRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-productsRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "List-productsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/products",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {
                "offset": 0,
                "limit": 100
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "items": [
                  {
                    "product": {
                      "id": "580e63fc8c9a982ac9b8b745",
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "lastPublished": "2023-03-17T18:47:35.560Z",
                      "lastUpdated": "2023-03-17T18:47:35.560Z",
                      "createdOn": "2023-03-17T18:47:35.560Z",
                      "isArchived": false,
                      "isDraft": false,
                      "fieldData": {
                        "name": "T-Shirt",
                        "slug": "t-shirt",
                        "description": "A plain cotton t-shirt.",
                        "shippable": true,
                        "sku-properties": [
                          {
                            "id": "Color",
                            "name": "Color",
                            "enum": [
                              {
                                "id": [
                                  "royal-blue",
                                  "crimson-red",
                                  "forrest-green"
                                ],
                                "name": "Royal Blue",
                                "slug": "royal-blue"
                              }
                            ]
                          }
                        ],
                        "categories": [
                          "foo"
                        ],
                        "tax-category": "standard-taxable",
                        "default-sku": "foo",
                        "ec-product-type": "ff42fee0113744f693a764e3431a9cc2"
                      }
                    },
                    "skus": [
                      {
                        "id": "580e63fc8c9a982ac9b8b745",
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "lastPublished": "2023-03-17T18:47:35.560Z",
                        "lastUpdated": "2023-03-17T18:47:35.560Z",
                        "createdOn": "2023-03-17T18:47:35.560Z",
                        "fieldData": {
                          "sku-values": {},
                          "name": "Blue T-shirt",
                          "slug": "t-shirt-blue",
                          "price": {
                            "value": 100,
                            "unit": "USD"
                          },
                          "compare-at-price": {
                            "value": 100,
                            "unit": "USD"
                          },
                          "ec-sku-billing-method": "one-time",
                          "ec-sku-subscription-plan": {
                            "interval": "day",
                            "frequency": 1,
                            "trial": 7,
                            "plans": [
                              {
                                "platform": "stripe",
                                "id": "foo",
                                "status": "active"
                              }
                            ]
                          },
                          "track-inventory": false,
                          "quantity": 10
                        }
                      }
                    ]
                  }
                ],
                "pagination": {
                  "limit": 100,
                  "offset": 0,
                  "total": 100
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "items": [
                    {
                      "product": {
                        "id": "580e63fc8c9a982ac9b8b745",
                        "cmsLocaleId": "653ad57de882f528b32e810e",
                        "lastPublished": "2023-03-17T18:47:35.560Z",
                        "lastUpdated": "2023-03-17T18:47:35.560Z",
                        "createdOn": "2023-03-17T18:47:35.560Z",
                        "isArchived": false,
                        "isDraft": false,
                        "fieldData": {
                          "name": "T-Shirt",
                          "slug": "t-shirt",
                          "description": "A plain cotton t-shirt.",
                          "shippable": true,
                          "sku-properties": [
                            {
                              "id": "Color",
                              "name": "Color",
                              "enum": [
                                {
                                  "id": [
                                    "royal-blue",
                                    "crimson-red",
                                    "forrest-green"
                                  ],
                                  "name": "Royal Blue",
                                  "slug": "royal-blue"
                                }
                              ]
                            }
                          ],
                          "categories": [
                            "foo"
                          ],
                          "tax-category": "standard-taxable",
                          "default-sku": "foo",
                          "ec-product-type": "ff42fee0113744f693a764e3431a9cc2"
                        }
                      },
                      "skus": [
                        {
                          "id": "580e63fc8c9a982ac9b8b745",
                          "cmsLocaleId": "653ad57de882f528b32e810e",
                          "lastPublished": "2023-03-17T18:47:35.560Z",
                          "lastUpdated": "2023-03-17T18:47:35.560Z",
                          "createdOn": "2023-03-17T18:47:35.560Z",
                          "fieldData": {
                            "sku-values": {},
                            "name": "Blue T-shirt",
                            "slug": "t-shirt-blue",
                            "price": {
                              "value": 100,
                              "unit": "USD"
                            },
                            "compare-at-price": {
                              "value": 100,
                              "unit": "USD"
                            },
                            "ec-sku-billing-method": "one-time",
                            "ec-sku-subscription-plan": {
                              "interval": "day",
                              "frequency": 1,
                              "trial": 7,
                              "plans": [
                                {
                                  "platform": "stripe",
                                  "id": "foo",
                                  "status": "active"
                                }
                              ]
                            },
                            "track-inventory": false,
                            "quantity": 10
                          }
                        }
                      ]
                    }
                  ],
                  "pagination": {
                    "limit": 100,
                    "offset": 0,
                    "total": 100
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Creating a new Product involves creating both a Product and a SKU, since a Product Item has to have, at minimum, a single SKU.\n\nIn order to create a Product with multiple SKUs - for example a T-shirt in sizes small, medium and large - you'll need to create `sku-properties`. In our T-shirt example, a single `sku-property` would be Color. Within that property, we'll need to list out the various colors a T-shirt could be as an array of `enum` values: `royal-blue`, `crimson-red`, and `forrest-green`.\n\nOnce, you've created a Product and its `sku-properties` with `enum` values, you can create your default SKU, which will automatically be a combination of the first `sku-properties` you've created. In our example, the default SKU will be a Royal Blue T-Shirt, because our first `enum` of our Color `sku-property` is Royal Blue. After you've created your product, you can create additional SKUs using the <a href=\"https://developers.webflow.com/reference/create-skus\">Create SKU endpoint</a>\n\nUpon creation, the default product type will be `Advanced`. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown.\n\nRequired scope | `ecommerce:write`",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create",
          "originalEndpointId": "endpoint_products.create",
          "name": "Create Product & SKU",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/products"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
                    "key": "publishStatus",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaPublishStatus"
                      }
                    }
                  },
                  {
                    "key": "product",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaProduct"
                      }
                    }
                  },
                  {
                    "description": "The SKU object",
                    "key": "sku",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsPostRequestBodyContentApplicationJsonSchemaSku"
                      }
                    }
                  }
                ]
              }
            },
            "description": "The Product and SKU to create"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "products_create_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-productRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-productRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-productRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/products",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": "660eb7a486d1d6e0412292d7",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2024-04-04T14:24:19.467Z",
                "lastUpdated": "2024-04-04T14:30:19.282Z",
                "createdOn": "2024-04-04T14:22:28.547Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "tax-category": "standard-taxable",
                  "shippable": true,
                  "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                  "sku-properties": [
                    {
                      "id": "31b77fa66fa376c2c0abb458d5be39fb",
                      "name": "Size",
                      "enum": [
                        {
                          "id": "8d21a625d655ab260e9941c27180c75b",
                          "name": "Small",
                          "slug": "small"
                        },
                        {
                          "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                          "name": "Medium",
                          "slug": "medium"
                        },
                        {
                          "id": "ec7877d6137ecf7ec86f726c135b1812",
                          "name": "Large",
                          "slug": "large"
                        }
                      ]
                    },
                    {
                      "id": "74d3738e62c568d5634dd6989daec5ec",
                      "name": "Color",
                      "enum": [
                        {
                          "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                          "name": "Royal Blue",
                          "slug": "royal-blue"
                        },
                        {
                          "id": "68d98f2fbafc0fd45651cddc44798dd0",
                          "name": "Crimson Red",
                          "slug": "crimson-red"
                        },
                        {
                          "id": "996cd95c97fd5620d0a374c835b37205",
                          "name": "Forrest Green",
                          "slug": "forrest-green"
                        }
                      ]
                    }
                  ],
                  "name": "T-Shirt",
                  "description": "A plain t-shirt",
                  "slug": "t-shirt",
                  "default-sku": "66072fb71b89448912e2681c"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "660eb7a486d1d6e0412292d7",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2024-04-04T14:24:19.467Z",
                  "lastUpdated": "2024-04-04T14:30:19.282Z",
                  "createdOn": "2024-04-04T14:22:28.547Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "tax-category": "standard-taxable",
                    "shippable": true,
                    "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                    "sku-properties": [
                      {
                        "id": "31b77fa66fa376c2c0abb458d5be39fb",
                        "name": "Size",
                        "enum": [
                          {
                            "id": "8d21a625d655ab260e9941c27180c75b",
                            "name": "Small",
                            "slug": "small"
                          },
                          {
                            "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                            "name": "Medium",
                            "slug": "medium"
                          },
                          {
                            "id": "ec7877d6137ecf7ec86f726c135b1812",
                            "name": "Large",
                            "slug": "large"
                          }
                        ]
                      },
                      {
                        "id": "74d3738e62c568d5634dd6989daec5ec",
                        "name": "Color",
                        "enum": [
                          {
                            "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                            "name": "Royal Blue",
                            "slug": "royal-blue"
                          },
                          {
                            "id": "68d98f2fbafc0fd45651cddc44798dd0",
                            "name": "Crimson Red",
                            "slug": "crimson-red"
                          },
                          {
                            "id": "996cd95c97fd5620d0a374c835b37205",
                            "name": "Forrest Green",
                            "slug": "forrest-green"
                          }
                        ]
                      }
                    ],
                    "name": "T-Shirt",
                    "description": "A plain t-shirt",
                    "slug": "t-shirt",
                    "default-sku": "66072fb71b89448912e2681c"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "product": {
                  "id": "580e63fc8c9a982ac9b8b745",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2023-03-17T18:47:35.560Z",
                  "lastUpdated": "2023-03-17T18:47:35.560Z",
                  "createdOn": "2023-03-17T18:47:35.560Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "T-Shirt",
                    "slug": "t-shirt",
                    "description": "A plain cotton t-shirt.",
                    "shippable": true,
                    "sku-properties": [
                      {
                        "id": "Color",
                        "name": "Color",
                        "enum": [
                          {
                            "id": [
                              "royal-blue",
                              "crimson-red",
                              "forrest-green"
                            ],
                            "name": "Royal Blue",
                            "slug": "royal-blue"
                          }
                        ]
                      }
                    ],
                    "categories": [
                      "foo"
                    ],
                    "tax-category": "standard-taxable",
                    "default-sku": "foo",
                    "ec-product-type": "ff42fee0113744f693a764e3431a9cc2"
                  }
                },
                "skus": [
                  {
                    "id": "580e63fc8c9a982ac9b8b745",
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "lastPublished": "2023-03-17T18:47:35.560Z",
                    "lastUpdated": "2023-03-17T18:47:35.560Z",
                    "createdOn": "2023-03-17T18:47:35.560Z",
                    "fieldData": {
                      "sku-values": {},
                      "name": "Blue T-shirt",
                      "slug": "t-shirt-blue",
                      "price": {
                        "value": 100,
                        "unit": "USD"
                      },
                      "compare-at-price": {
                        "value": 100,
                        "unit": "USD"
                      },
                      "ec-sku-billing-method": "one-time",
                      "ec-sku-subscription-plan": {
                        "interval": "day",
                        "frequency": 1,
                        "trial": 7,
                        "plans": [
                          {
                            "platform": "stripe",
                            "id": "foo",
                            "status": "active"
                          }
                        ]
                      },
                      "track-inventory": false,
                      "quantity": 10
                    }
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "product": {
                    "id": "580e63fc8c9a982ac9b8b745",
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "lastPublished": "2023-03-17T18:47:35.560Z",
                    "lastUpdated": "2023-03-17T18:47:35.560Z",
                    "createdOn": "2023-03-17T18:47:35.560Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "T-Shirt",
                      "slug": "t-shirt",
                      "description": "A plain cotton t-shirt.",
                      "shippable": true,
                      "sku-properties": [
                        {
                          "id": "Color",
                          "name": "Color",
                          "enum": [
                            {
                              "id": [
                                "royal-blue",
                                "crimson-red",
                                "forrest-green"
                              ],
                              "name": "Royal Blue",
                              "slug": "royal-blue"
                            }
                          ]
                        }
                      ],
                      "categories": [
                        "foo"
                      ],
                      "tax-category": "standard-taxable",
                      "default-sku": "foo",
                      "ec-product-type": "ff42fee0113744f693a764e3431a9cc2"
                    }
                  },
                  "skus": [
                    {
                      "id": "580e63fc8c9a982ac9b8b745",
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "lastPublished": "2023-03-17T18:47:35.560Z",
                      "lastUpdated": "2023-03-17T18:47:35.560Z",
                      "createdOn": "2023-03-17T18:47:35.560Z",
                      "fieldData": {
                        "sku-values": {},
                        "name": "Blue T-shirt",
                        "slug": "t-shirt-blue",
                        "price": {
                          "value": 100,
                          "unit": "USD"
                        },
                        "compare-at-price": {
                          "value": 100,
                          "unit": "USD"
                        },
                        "ec-sku-billing-method": "one-time",
                        "ec-sku-subscription-plan": {
                          "interval": "day",
                          "frequency": 1,
                          "trial": 7,
                          "plans": [
                            {
                              "platform": "stripe",
                              "id": "foo",
                              "status": "active"
                            }
                          ]
                        },
                        "track-inventory": false,
                        "quantity": 10
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Retrieve a single product by its id. All of its SKUs will also be retrieved.\n\nRequired scope | `ecommerce:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get",
          "originalEndpointId": "endpoint_products.get",
          "name": "Get Product and SKUs",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a Product",
                "key": "product_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/products/"
              },
              {
                "type": "pathParameter",
                "value": "product_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "products_get_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-productRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-productRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Get-productRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/products/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "product_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "product": {
                  "id": "580e63fc8c9a982ac9b8b745",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2023-03-17T18:47:35.560Z",
                  "lastUpdated": "2023-03-17T18:47:35.560Z",
                  "createdOn": "2023-03-17T18:47:35.560Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "T-Shirt",
                    "slug": "t-shirt",
                    "description": "A plain cotton t-shirt.",
                    "shippable": true,
                    "sku-properties": [
                      {
                        "id": "Color",
                        "name": "Color",
                        "enum": [
                          {
                            "id": [
                              "royal-blue",
                              "crimson-red",
                              "forrest-green"
                            ],
                            "name": "Royal Blue",
                            "slug": "royal-blue"
                          }
                        ]
                      }
                    ],
                    "categories": [
                      "foo"
                    ],
                    "tax-category": "standard-taxable",
                    "default-sku": "foo",
                    "ec-product-type": "ff42fee0113744f693a764e3431a9cc2"
                  }
                },
                "skus": [
                  {
                    "id": "580e63fc8c9a982ac9b8b745",
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "lastPublished": "2023-03-17T18:47:35.560Z",
                    "lastUpdated": "2023-03-17T18:47:35.560Z",
                    "createdOn": "2023-03-17T18:47:35.560Z",
                    "fieldData": {
                      "sku-values": {},
                      "name": "Blue T-shirt",
                      "slug": "t-shirt-blue",
                      "price": {
                        "value": 100,
                        "unit": "USD"
                      },
                      "compare-at-price": {
                        "value": 100,
                        "unit": "USD"
                      },
                      "ec-sku-billing-method": "one-time",
                      "ec-sku-subscription-plan": {
                        "interval": "day",
                        "frequency": 1,
                        "trial": 7,
                        "plans": [
                          {
                            "platform": "stripe",
                            "id": "foo",
                            "status": "active"
                          }
                        ]
                      },
                      "track-inventory": false,
                      "quantity": 10
                    }
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "product": {
                    "id": "580e63fc8c9a982ac9b8b745",
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "lastPublished": "2023-03-17T18:47:35.560Z",
                    "lastUpdated": "2023-03-17T18:47:35.560Z",
                    "createdOn": "2023-03-17T18:47:35.560Z",
                    "isArchived": false,
                    "isDraft": false,
                    "fieldData": {
                      "name": "T-Shirt",
                      "slug": "t-shirt",
                      "description": "A plain cotton t-shirt.",
                      "shippable": true,
                      "sku-properties": [
                        {
                          "id": "Color",
                          "name": "Color",
                          "enum": [
                            {
                              "id": [
                                "royal-blue",
                                "crimson-red",
                                "forrest-green"
                              ],
                              "name": "Royal Blue",
                              "slug": "royal-blue"
                            }
                          ]
                        }
                      ],
                      "categories": [
                        "foo"
                      ],
                      "tax-category": "standard-taxable",
                      "default-sku": "foo",
                      "ec-product-type": "ff42fee0113744f693a764e3431a9cc2"
                    }
                  },
                  "skus": [
                    {
                      "id": "580e63fc8c9a982ac9b8b745",
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "lastPublished": "2023-03-17T18:47:35.560Z",
                      "lastUpdated": "2023-03-17T18:47:35.560Z",
                      "createdOn": "2023-03-17T18:47:35.560Z",
                      "fieldData": {
                        "sku-values": {},
                        "name": "Blue T-shirt",
                        "slug": "t-shirt-blue",
                        "price": {
                          "value": 100,
                          "unit": "USD"
                        },
                        "compare-at-price": {
                          "value": 100,
                          "unit": "USD"
                        },
                        "ec-sku-billing-method": "one-time",
                        "ec-sku-subscription-plan": {
                          "interval": "day",
                          "frequency": 1,
                          "trial": 7,
                          "plans": [
                            {
                              "platform": "stripe",
                              "id": "foo",
                              "status": "active"
                            }
                          ]
                        },
                        "track-inventory": false,
                        "quantity": 10
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Updating an existing Product will set the product type to `Advanced`. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.\n\nRequired scope | `ecommerce:write`\n",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update",
          "originalEndpointId": "endpoint_products.update",
          "name": "Update Product",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a Product",
                "key": "product_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/products/"
              },
              {
                "type": "pathParameter",
                "value": "product_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
                    "key": "publishStatus",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaPublishStatus"
                      }
                    }
                  },
                  {
                    "description": "The Product object",
                    "key": "product",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaProduct"
                      }
                    }
                  },
                  {
                    "description": "The SKU object",
                    "key": "sku",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsProductIdPatchRequestBodyContentApplicationJsonSchemaSku"
                      }
                    }
                  }
                ]
              }
            },
            "description": "The product to update"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "products_update_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-productRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-productRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-productRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/products/580e63fc8c9a982ac9b8b745",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "product_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "id": "660eb7a486d1d6e0412292d7",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2024-04-04T14:24:19.467Z",
                "lastUpdated": "2024-04-04T14:30:19.282Z",
                "createdOn": "2024-04-04T14:22:28.547Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "tax-category": "standard-taxable",
                  "shippable": true,
                  "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                  "sku-properties": [
                    {
                      "id": "31b77fa66fa376c2c0abb458d5be39fb",
                      "name": "Size",
                      "enum": [
                        {
                          "id": "8d21a625d655ab260e9941c27180c75b",
                          "name": "Small",
                          "slug": "small"
                        },
                        {
                          "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                          "name": "Medium",
                          "slug": "medium"
                        },
                        {
                          "id": "ec7877d6137ecf7ec86f726c135b1812",
                          "name": "Large",
                          "slug": "large"
                        }
                      ]
                    },
                    {
                      "id": "74d3738e62c568d5634dd6989daec5ec",
                      "name": "Color",
                      "enum": [
                        {
                          "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                          "name": "Royal Blue",
                          "slug": "royal-blue"
                        },
                        {
                          "id": "68d98f2fbafc0fd45651cddc44798dd0",
                          "name": "Crimson Red",
                          "slug": "crimson-red"
                        },
                        {
                          "id": "996cd95c97fd5620d0a374c835b37205",
                          "name": "Forrest Green",
                          "slug": "forrest-green"
                        }
                      ]
                    }
                  ],
                  "name": "T-Shirt",
                  "description": "A plain t-shirt",
                  "slug": "t-shirt",
                  "default-sku": "66072fb71b89448912e2681c"
                }
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "id": "660eb7a486d1d6e0412292d7",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2024-04-04T14:24:19.467Z",
                  "lastUpdated": "2024-04-04T14:30:19.282Z",
                  "createdOn": "2024-04-04T14:22:28.547Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "tax-category": "standard-taxable",
                    "shippable": true,
                    "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76",
                    "sku-properties": [
                      {
                        "id": "31b77fa66fa376c2c0abb458d5be39fb",
                        "name": "Size",
                        "enum": [
                          {
                            "id": "8d21a625d655ab260e9941c27180c75b",
                            "name": "Small",
                            "slug": "small"
                          },
                          {
                            "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                            "name": "Medium",
                            "slug": "medium"
                          },
                          {
                            "id": "ec7877d6137ecf7ec86f726c135b1812",
                            "name": "Large",
                            "slug": "large"
                          }
                        ]
                      },
                      {
                        "id": "74d3738e62c568d5634dd6989daec5ec",
                        "name": "Color",
                        "enum": [
                          {
                            "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                            "name": "Royal Blue",
                            "slug": "royal-blue"
                          },
                          {
                            "id": "68d98f2fbafc0fd45651cddc44798dd0",
                            "name": "Crimson Red",
                            "slug": "crimson-red"
                          },
                          {
                            "id": "996cd95c97fd5620d0a374c835b37205",
                            "name": "Forrest Green",
                            "slug": "forrest-green"
                          }
                        ]
                      }
                    ],
                    "name": "T-Shirt",
                    "description": "A plain t-shirt",
                    "slug": "t-shirt",
                    "default-sku": "66072fb71b89448912e2681c"
                  }
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "660eb7a486d1d6e0412292d7",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2024-04-04T14:24:19.467Z",
                "lastUpdated": "2024-04-04T14:30:19.282Z",
                "createdOn": "2024-04-04T14:22:28.547Z",
                "isArchived": false,
                "isDraft": false,
                "fieldData": {
                  "name": "T-Shirt",
                  "slug": "t-shirt",
                  "description": "A plain t-shirt",
                  "shippable": true,
                  "sku-properties": [
                    {
                      "id": "31b77fa66fa376c2c0abb458d5be39fb",
                      "name": "Size",
                      "enum": [
                        {
                          "id": "8d21a625d655ab260e9941c27180c75b",
                          "name": "Small",
                          "slug": "small"
                        },
                        {
                          "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                          "name": "Medium",
                          "slug": "medium"
                        },
                        {
                          "id": "ec7877d6137ecf7ec86f726c135b1812",
                          "name": "Large",
                          "slug": "large"
                        }
                      ]
                    },
                    {
                      "id": "74d3738e62c568d5634dd6989daec5ec",
                      "name": "Color",
                      "enum": [
                        {
                          "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                          "name": "Royal Blue",
                          "slug": "royal-blue"
                        },
                        {
                          "id": "68d98f2fbafc0fd45651cddc44798dd0",
                          "name": "Crimson Red",
                          "slug": "crimson-red"
                        },
                        {
                          "id": "996cd95c97fd5620d0a374c835b37205",
                          "name": "Forrest Green",
                          "slug": "forrest-green"
                        }
                      ]
                    }
                  ],
                  "tax-category": "standard-taxable",
                  "default-sku": "66072fb71b89448912e2681c",
                  "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "660eb7a486d1d6e0412292d7",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2024-04-04T14:24:19.467Z",
                  "lastUpdated": "2024-04-04T14:30:19.282Z",
                  "createdOn": "2024-04-04T14:22:28.547Z",
                  "isArchived": false,
                  "isDraft": false,
                  "fieldData": {
                    "name": "T-Shirt",
                    "slug": "t-shirt",
                    "description": "A plain t-shirt",
                    "shippable": true,
                    "sku-properties": [
                      {
                        "id": "31b77fa66fa376c2c0abb458d5be39fb",
                        "name": "Size",
                        "enum": [
                          {
                            "id": "8d21a625d655ab260e9941c27180c75b",
                            "name": "Small",
                            "slug": "small"
                          },
                          {
                            "id": "ecdca17106ad86c0dfe3b5f3ac8be6c9",
                            "name": "Medium",
                            "slug": "medium"
                          },
                          {
                            "id": "ec7877d6137ecf7ec86f726c135b1812",
                            "name": "Large",
                            "slug": "large"
                          }
                        ]
                      },
                      {
                        "id": "74d3738e62c568d5634dd6989daec5ec",
                        "name": "Color",
                        "enum": [
                          {
                            "id": "e539b0d6c3a609cd06ddb2da804f68f0",
                            "name": "Royal Blue",
                            "slug": "royal-blue"
                          },
                          {
                            "id": "68d98f2fbafc0fd45651cddc44798dd0",
                            "name": "Crimson Red",
                            "slug": "crimson-red"
                          },
                          {
                            "id": "996cd95c97fd5620d0a374c835b37205",
                            "name": "Forrest Green",
                            "slug": "forrest-green"
                          }
                        ]
                      }
                    ],
                    "tax-category": "standard-taxable",
                    "default-sku": "66072fb71b89448912e2681c",
                    "ec-product-type": "b6ccc1830db4b1babeb06a9ac5f6dd76"
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create additional SKUs to cover every variant of your Product. The Default SKU already counts as one of the variants.\n\nCreating additional SKUs will set the product type to `Advanced` for the product associated with the SKUs. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.\n\nRequired scope | `ecommerce:write`\n",
          "method": "POST",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "create-sku",
          "originalEndpointId": "endpoint_products.create-sku",
          "name": "Create SKU",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a Product",
                "key": "product_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/products/"
              },
              {
                "type": "pathParameter",
                "value": "product_id"
              },
              {
                "type": "literal",
                "value": "/skus"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
                    "key": "publishStatus",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaPublishStatus"
                      }
                    }
                  },
                  {
                    "description": "An array of the SKU data your are adding",
                    "key": "skus",
                    "valueType": {
                      "type": "list",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsProductIdSkusPostRequestBodyContentApplicationJsonSchemaSkusItems"
                      }
                    }
                  }
                ]
              }
            },
            "description": "The SKUs to add"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "products_create-sku_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-skusRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-skusRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Create-skusRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/products/580e63fc8c9a982ac9b8b745/skus",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "product_id": "580e63fc8c9a982ac9b8b745"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "skus": [
                  {}
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "skus": [
                    {}
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "skus": [
                  {
                    "id": "580e63fc8c9a982ac9b8b745",
                    "cmsLocaleId": "653ad57de882f528b32e810e",
                    "lastPublished": "2023-03-17T18:47:35.560Z",
                    "lastUpdated": "2023-03-17T18:47:35.560Z",
                    "createdOn": "2023-03-17T18:47:35.560Z",
                    "fieldData": {
                      "sku-values": {},
                      "name": "Blue T-shirt",
                      "slug": "t-shirt-blue",
                      "price": {
                        "value": 100,
                        "unit": "USD"
                      },
                      "compare-at-price": {
                        "value": 100,
                        "unit": "USD"
                      },
                      "ec-sku-billing-method": "one-time",
                      "ec-sku-subscription-plan": {
                        "interval": "day",
                        "frequency": 1,
                        "trial": 7,
                        "plans": [
                          {
                            "platform": "stripe",
                            "id": "foo",
                            "status": "active"
                          }
                        ]
                      },
                      "track-inventory": false,
                      "quantity": 10
                    }
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "skus": [
                    {
                      "id": "580e63fc8c9a982ac9b8b745",
                      "cmsLocaleId": "653ad57de882f528b32e810e",
                      "lastPublished": "2023-03-17T18:47:35.560Z",
                      "lastUpdated": "2023-03-17T18:47:35.560Z",
                      "createdOn": "2023-03-17T18:47:35.560Z",
                      "fieldData": {
                        "sku-values": {},
                        "name": "Blue T-shirt",
                        "slug": "t-shirt-blue",
                        "price": {
                          "value": 100,
                          "unit": "USD"
                        },
                        "compare-at-price": {
                          "value": 100,
                          "unit": "USD"
                        },
                        "ec-sku-billing-method": "one-time",
                        "ec-sku-subscription-plan": {
                          "interval": "day",
                          "frequency": 1,
                          "trial": 7,
                          "plans": [
                            {
                              "platform": "stripe",
                              "id": "foo",
                              "status": "active"
                            }
                          ]
                        },
                        "track-inventory": false,
                        "quantity": 10
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Updating an existing SKU will set the product type to `Advanced` for the product associated with the SKU. The product type is used to determine which Product and SKU fields are shown to users in the `Designer` and the `Editor`. Setting it to `Advanced` ensures that all Product and SKU fields will be shown. The product type can be edited in the `Designer` or the `Editor`.\n\nRequired scope | `ecommerce:write`\n",
          "method": "PATCH",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "update-sku",
          "originalEndpointId": "endpoint_products.update-sku",
          "name": "Update SKU",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a Product",
                "key": "product_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              },
              {
                "description": "Unique identifier for a SKU",
                "key": "sku_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/products/"
              },
              {
                "type": "pathParameter",
                "value": "product_id"
              },
              {
                "type": "literal",
                "value": "/skus/"
              },
              {
                "type": "pathParameter",
                "value": "sku_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                  {
                    "description": "Indicate whether your Product should be set as \"staging\" or \"live\"",
                    "key": "publishStatus",
                    "valueType": {
                      "type": "optional",
                      "itemType": {
                        "type": "id",
                        "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaPublishStatus"
                      }
                    }
                  },
                  {
                    "description": "The SKU object",
                    "key": "sku",
                    "valueType": {
                      "type": "id",
                      "value": "SitesSiteIdProductsProductIdSkusSkuIdPatchRequestBodyContentApplicationJsonSchemaSku"
                    }
                  }
                ]
              }
            },
            "description": "The SKU to update"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "products_update-sku_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-skuRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-skuRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Update-skuRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/products/580e63fc8c9a982ac9b8b745/skus/5e8518516e147040726cc415",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741",
                "product_id": "580e63fc8c9a982ac9b8b745",
                "sku_id": "5e8518516e147040726cc415"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "sku": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sku": {}
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "id": "580e63fc8c9a982ac9b8b745",
                "cmsLocaleId": "653ad57de882f528b32e810e",
                "lastPublished": "2023-03-17T18:47:35.560Z",
                "lastUpdated": "2023-03-17T18:47:35.560Z",
                "createdOn": "2023-03-17T18:47:35.560Z",
                "fieldData": {
                  "sku-values": {},
                  "name": "Blue T-shirt",
                  "slug": "t-shirt-blue",
                  "price": {
                    "value": 100,
                    "unit": "USD"
                  },
                  "compare-at-price": {
                    "value": 100,
                    "unit": "USD"
                  },
                  "ec-sku-billing-method": "one-time",
                  "ec-sku-subscription-plan": {
                    "interval": "day",
                    "frequency": 1,
                    "trial": 7,
                    "plans": [
                      {
                        "platform": "stripe",
                        "id": "foo",
                        "status": "active"
                      }
                    ]
                  },
                  "track-inventory": false,
                  "quantity": 10
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "580e63fc8c9a982ac9b8b745",
                  "cmsLocaleId": "653ad57de882f528b32e810e",
                  "lastPublished": "2023-03-17T18:47:35.560Z",
                  "lastUpdated": "2023-03-17T18:47:35.560Z",
                  "createdOn": "2023-03-17T18:47:35.560Z",
                  "fieldData": {
                    "sku-values": {},
                    "name": "Blue T-shirt",
                    "slug": "t-shirt-blue",
                    "price": {
                      "value": 100,
                      "unit": "USD"
                    },
                    "compare-at-price": {
                      "value": 100,
                      "unit": "USD"
                    },
                    "ec-sku-billing-method": "one-time",
                    "ec-sku-subscription-plan": {
                      "interval": "day",
                      "frequency": 1,
                      "trial": 7,
                      "plans": [
                        {
                          "platform": "stripe",
                          "id": "foo",
                          "status": "active"
                        }
                      ]
                    },
                    "track-inventory": false,
                    "quantity": 10
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_ecommerce": {
      "subpackageId": "subpackage_ecommerce",
      "name": "ecommerce",
      "endpoints": [
        {
          "auth": true,
          "description": "Retrieve ecommerce settings for a site.\n\nRequired scope | `ecommerce:read`\n",
          "method": "GET",
          "defaultEnvironment": "https://api.webflow.com/v2",
          "environments": [
            {
              "id": "https://api.webflow.com/v2",
              "baseUrl": "https://api.webflow.com/v2"
            }
          ],
          "id": "get-settings",
          "originalEndpointId": "endpoint_ecommerce.get-settings",
          "name": "Get Ecommerce Settings",
          "path": {
            "pathParameters": [
              {
                "description": "Unique identifier for a Site",
                "key": "site_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "objectid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sites/"
              },
              {
                "type": "pathParameter",
                "value": "site_id"
              },
              {
                "type": "literal",
                "value": "/ecommerce/settings"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ecommerce_get-settings_Response_200"
              }
            },
            "statusCode": 200,
            "description": "Request was successful"
          },
          "errorsV2": [
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 400,
              "description": "Request body was incorrectly formatted. Likely invalid JSON being sent up.",
              "name": "BadRequestError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 401,
              "description": "Provided access token is invalid or does not have access to requested resource",
              "name": "UnauthorizedError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Ecommerce-settingsRequestForbiddenError"
                }
              },
              "statusCode": 403,
              "description": "Provided access token is valid, but is missing the required scopes.",
              "name": "ForbiddenError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 404,
              "description": "Requested resource not found",
              "name": "NotFoundError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Ecommerce-settingsRequestConflictError"
                }
              },
              "statusCode": 409,
              "description": "The site does not have ecommerce enabled.",
              "name": "ConflictError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "id",
                  "value": "Ecommerce-settingsRequestTooManyRequestsError"
                }
              },
              "statusCode": 429,
              "description": "The rate limit of the provided access_token has been reached. Please have your application respect the X-RateLimit-Remaining header we include on API responses.",
              "name": "TooManyRequestsError",
              "examples": []
            },
            {
              "type": {
                "type": "alias",
                "value": {
                  "type": "unknown"
                }
              },
              "statusCode": 500,
              "description": "We had a problem with our server. Try again later.",
              "name": "InternalServerError",
              "examples": []
            }
          ],
          "examples": [
            {
              "description": "",
              "path": "/sites/580e63e98c9a982ac9b8b741/ecommerce/settings",
              "pathParameters": {
                "site_id": "580e63e98c9a982ac9b8b741"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "siteId": "5eb0b5583bf24e2d3a488969",
                "createdOn": "2018-10-04T15:21:02.042Z",
                "defaultCurrency": "USD"
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "siteId": "5eb0b5583bf24e2d3a488969",
                  "createdOn": "2018-10-04T15:21:02.042Z",
                  "defaultCurrency": "USD"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "websockets": [],
    "types": [],
    "subpackages": [
      "subpackage_forms",
      "subpackage_sites",
      "subpackage_orders",
      "subpackage_inventory",
      "subpackage_users",
      "subpackage_items",
      "subpackage_pages",
      "subpackage_token",
      "subpackage_collections",
      "subpackage_scripts",
      "subpackage_assets",
      "subpackage_webhooks",
      "subpackage_accessGroups",
      "subpackage_products",
      "subpackage_ecommerce"
    ]
  },
  "auth": {
    "type": "bearerAuth",
    "tokenName": "token"
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}