{
  "types": {
    "StorageProofItems": {
      "description": "Object proving a relationship of a storage value to an account's storageHash.",
      "name": "StorageProofItems",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "StorageProofKey"
              }
            }
          },
          {
            "description": "The value of the storage slot in its account tree",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          },
          {
            "key": "proof",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ProofNodes"
              }
            }
          }
        ]
      }
    },
    "StorageProof": {
      "description": "Current block header PoW hash.",
      "name": "StorageProof",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "StorageProofItems"
          }
        }
      }
    },
    "ProofNodes": {
      "description": "The set of node values needed to traverse a patricia merkle tree (from root to leaf) to retrieve a value",
      "name": "ProofNodes",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "ProofNode"
          }
        }
      }
    },
    "FilterId": {
      "description": "An identifier used to reference the filter.",
      "name": "FilterId",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "BlockHash": {
      "description": "The hex representation of the Keccak 256 of the RLP encoded block",
      "name": "BlockHash",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[a-fA-F\\d]{64}$"
          }
        }
      }
    },
    "BlockNumber": {
      "description": "The hex representation of the block's height",
      "name": "BlockNumber",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "BlockNumberTag": {
      "description": "The optional block height description",
      "name": "BlockNumberTag",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "earliest"
          },
          {
            "value": "latest"
          },
          {
            "value": "pending"
          }
        ]
      }
    },
    "BlockOrNull": {
      "name": "BlockOrNull",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Block",
            "type": {
              "type": "id",
              "value": "Block"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "IntegerOrNull": {
      "name": "IntegerOrNull",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Integer",
            "type": {
              "type": "id",
              "value": "Integer"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "AddressOrNull": {
      "name": "AddressOrNull",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Address",
            "type": {
              "type": "id",
              "value": "Address"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "Receipt": {
      "description": "The receipt of a transaction",
      "name": "Receipt",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "blockHash",
            "valueType": {
              "type": "id",
              "value": "BlockHash"
            }
          },
          {
            "key": "blockNumber",
            "valueType": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "description": "The contract address created, if the transaction was a contract creation, otherwise null",
            "key": "contractAddress",
            "valueType": {
              "type": "id",
              "value": "AddressOrNull"
            }
          },
          {
            "description": "The gas units used by the transaction",
            "key": "cumulativeGasUsed",
            "valueType": {
              "type": "id",
              "value": "Integer"
            }
          },
          {
            "key": "from",
            "valueType": {
              "type": "id",
              "value": "From"
            }
          },
          {
            "description": "The total gas used by the transaction",
            "key": "gasUsed",
            "valueType": {
              "type": "id",
              "value": "Integer"
            }
          },
          {
            "description": "An array of all the logs triggered during the transaction",
            "key": "logs",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Log"
              }
            }
          },
          {
            "key": "logsBloom",
            "valueType": {
              "type": "id",
              "value": "BloomFilter"
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "id",
              "value": "To"
            }
          },
          {
            "key": "transactionHash",
            "valueType": {
              "type": "id",
              "value": "TransactionHash"
            }
          },
          {
            "key": "transactionIndex",
            "valueType": {
              "type": "id",
              "value": "TransactionIndex"
            }
          },
          {
            "description": "The intermediate stateRoot directly after transaction execution.",
            "key": "postTransactionState",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "description": "Whether or not the transaction threw an error.",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "BloomFilter": {
      "description": "A 2048 bit bloom filter from the logs of the transaction. Each log sets 3 bits though taking the low-order 11 bits of each of the first three pairs of bytes in a Keccak 256 hash of the log's byte series",
      "name": "BloomFilter",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "Log": {
      "description": "An indexed event generated during a transaction",
      "name": "Log",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Sender of the transaction",
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Address"
              }
            }
          },
          {
            "key": "blockHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockHash"
              }
            }
          },
          {
            "key": "blockNumber",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "description": "The data/input string sent along with the transaction",
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Bytes"
              }
            }
          },
          {
            "description": "The index of the event within its transaction, null when its pending",
            "key": "logIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          },
          {
            "description": "Whether or not the log was orphaned off the main chain",
            "key": "removed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Topics"
              }
            }
          },
          {
            "key": "transactionHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TransactionHash"
              }
            }
          },
          {
            "key": "transactionIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TransactionIndex"
              }
            }
          }
        ]
      }
    },
    "Topics": {
      "description": "Topics are order-dependent. Each topic can also be an array of DATA with 'or' options.",
      "name": "Topics",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Topic"
          }
        }
      }
    },
    "BlockNumberOrNull": {
      "description": "The block number or null when its the pending block",
      "name": "BlockNumberOrNull",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "NonceOrNull": {
      "description": "Randomly selected number to satisfy the proof-of-work or null when its the pending block",
      "name": "NonceOrNull",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Nonce",
            "type": {
              "type": "id",
              "value": "Nonce"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "To": {
      "description": "Destination address of the transaction. Null if it was a contract create.",
      "name": "To",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Address",
            "type": {
              "type": "id",
              "value": "Address"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "BlockTransactionsItems": {
      "name": "BlockTransactionsItems",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Transaction",
            "type": {
              "type": "id",
              "value": "Transaction"
            }
          },
          {
            "typeName": "TransactionHash",
            "type": {
              "type": "id",
              "value": "TransactionHash"
            }
          }
        ]
      }
    },
    "Block": {
      "description": "The Block is the collection of relevant pieces of information (known as the block header), together with information corresponding to the comprised transactions, and a set of other block headers that are known to have a parent equal to the present block’s parent’s parent.",
      "name": "Block",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumberOrNull"
              }
            }
          },
          {
            "key": "hash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockHashOrNull"
              }
            }
          },
          {
            "key": "parentHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockHash"
              }
            }
          },
          {
            "key": "nonce",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "NonceOrNull"
              }
            }
          },
          {
            "description": "Keccak hash of the uncles data in the block",
            "key": "sha3Uncles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "description": "The bloom filter for the logs of the block or null when its the pending block",
            "key": "logsBloom",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^0x[a-fA-F\\d]+$"
                }
              }
            }
          },
          {
            "description": "The root of the transactions trie of the block.",
            "key": "transactionsRoot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "description": "The root of the final state trie of the block",
            "key": "stateRoot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "description": "The root of the receipts trie of the block",
            "key": "receiptsRoot",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "key": "miner",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AddressOrNull"
              }
            }
          },
          {
            "description": "Integer of the difficulty for this block",
            "key": "difficulty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Integer of the total difficulty of the chain until this block",
            "key": "totalDifficulty",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "IntegerOrNull"
              }
            }
          },
          {
            "description": "The 'extra data' field of this block",
            "key": "extraData",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Integer the size of this block in bytes",
            "key": "size",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The maximum gas allowed in this block",
            "key": "gasLimit",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The total used gas by all transactions in this block",
            "key": "gasUsed",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The unix timestamp for when the block was collated",
            "key": "timestamp",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter",
            "key": "transactions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "BlockTransactionsItems"
                }
              }
            }
          },
          {
            "description": "Array of uncle hashes",
            "key": "uncles",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Keccak"
                }
              }
            }
          }
        ]
      }
    },
    "Transaction": {
      "name": "Transaction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "blockHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockHashOrNull"
              }
            }
          },
          {
            "key": "blockNumber",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumberOrNull"
              }
            }
          },
          {
            "key": "from",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "From"
              }
            }
          },
          {
            "description": "The gas limit provided by the sender in Wei",
            "key": "gas",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The gas price willing to be paid by the sender in Wei",
            "key": "gasPrice",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "hash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TransactionHash"
              }
            }
          },
          {
            "description": "The data field sent with the transaction",
            "key": "input",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The total number of prior transactions made by the sender",
            "key": "nonce",
            "valueType": {
              "type": "id",
              "value": "Nonce"
            }
          },
          {
            "key": "to",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "To"
              }
            }
          },
          {
            "key": "transactionIndex",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "TransactionIndex"
              }
            }
          },
          {
            "description": "Value of Ether being transferred in Wei",
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "description": "ECDSA recovery id",
            "key": "v",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "ECDSA signature r",
            "key": "r",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "ECDSA signature s",
            "key": "s",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "Transactions": {
      "description": "An array of transactions",
      "name": "Transactions",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Transaction"
          }
        }
      }
    },
    "TransactionHash": {
      "description": "Keccak 256 Hash of the RLP encoding of a transaction",
      "name": "TransactionHash",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "KeccakOrPending": {
      "name": "KeccakOrPending",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Keccak",
            "type": {
              "type": "id",
              "value": "Keccak"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "Keccak": {
      "description": "Hex representation of a Keccak 256 hash",
      "name": "Keccak",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[a-fA-F\\d]{64}$"
          }
        }
      }
    },
    "Integer": {
      "description": "Hex representation of the integer",
      "name": "Integer",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[a-fA-F0-9]+$"
          }
        }
      }
    },
    "Address": {
      "name": "Address",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[a-fA-F\\d]{40}$"
          }
        }
      }
    },
    "Addresses": {
      "description": "List of contract addresses from which to monitor events",
      "name": "Addresses",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Address"
          }
        }
      }
    },
    "Position": {
      "description": "Hex representation of the storage slot where the variable exists",
      "name": "Position",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([a-fA-F0-9]?)+$"
          }
        }
      }
    },
    "DataWord": {
      "description": "Hex representation of a 256 bit unit of data",
      "name": "DataWord",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([a-fA-F\\d]{64})?$"
          }
        }
      }
    },
    "Bytes": {
      "description": "Hex representation of a variable length byte array",
      "name": "Bytes",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x([a-fA-F0-9]?)+$"
          }
        }
      }
    },
    "w_e_b_3___c_l_i_e_n_t_V_e_r_s_i_o_n_Result": {
      "name": "Web3ClientVersionResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "w_e_b_3___s_h_a_3_Param_data": {
      "name": "WEBSHAParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[a-fA-F\\d]+$"
          }
        }
      }
    },
    "n_e_t___l_i_s_t_e_n_i_n_g_Result": {
      "name": "NetListeningResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "n_e_t___p_e_e_r_C_o_u_n_t_Result": {
      "description": "Hex representation of number of connected peers",
      "name": "NetPeerCountResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string"
          }
        }
      }
    },
    "n_e_t___v_e_r_s_i_o_n_Result": {
      "name": "NetVersionResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^[\\d]+$"
          }
        }
      }
    },
    "EthBlockNumberResult": {
      "name": "EthBlockNumberResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___b_l_o_c_k_N_u_m_b_e_r_Result": {
      "name": "EthBlockNumberResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "ETHCALLParams": {
      "name": "ETHCALLParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___c_a_l_l_Param_blockNumber": {
      "name": "ETHCALLParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___c_h_a_i_n_I_d_Result": {
      "name": "EthChainIdResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "string",
            "regex": "^0x[a-fA-F\\d]+$"
          }
        }
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_H_a_s_h_Param_includeTransactions": {
      "name": "ETHGETBLOCKBYHASHParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "ETHGETBLOCKBYNUMBERParams": {
      "name": "ETHGETBLOCKBYNUMBERParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_N_u_m_b_e_r_Param_blockNumber": {
      "name": "ETHGETBLOCKBYNUMBERParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_B_y_N_u_m_b_e_r_Param_includeTransactions": {
      "name": "ETHGETBLOCKBYNUMBERParams",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "ETHGETBLOCKTRANSACTIONCOUNTBYNUMBERParams": {
      "name": "ETHGETBLOCKTRANSACTIONCOUNTBYNUMBERParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_B_l_o_c_k_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_B_y_N_u_m_b_e_r_Param_blockNumber": {
      "name": "ETHGETBLOCKTRANSACTIONCOUNTBYNUMBERParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_F_i_l_t_e_r_C_h_a_n_g_e_s_Result": {
      "name": "EthGetFilterChangesResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Log"
          }
        }
      }
    },
    "e_t_h___g_e_t_F_i_l_t_e_r_L_o_g_s_Result": {
      "name": "EthGetFilterLogsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Log"
          }
        }
      }
    },
    "ETHGETRAWTRANSACTIONBYBLOCKNUMBERANDINDEXParams": {
      "name": "ETHGETRAWTRANSACTIONBYBLOCKNUMBERANDINDEXParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_R_a_w_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_N_u_m_b_e_r_A_n_d_I_n_d_e_x_Param_blockNumber": {
      "name": "ETHGETRAWTRANSACTIONBYBLOCKNUMBERANDINDEXParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "ETHGETLOGSParamsAddress": {
      "name": "ETHGETLOGSParamsAddress",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Address",
            "type": {
              "type": "id",
              "value": "Address"
            }
          },
          {
            "typeName": "Addresses",
            "type": {
              "type": "id",
              "value": "Addresses"
            }
          }
        ]
      }
    },
    "ETHGETLOGSParams": {
      "description": "A filter used to monitor the blockchain for log/events",
      "name": "ETHGETLOGSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fromBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "toBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ETHGETLOGSParamsAddress"
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Topics"
              }
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_L_o_g_s_Param_filter": {
      "description": "A filter used to monitor the blockchain for log/events",
      "name": "ETHGETLOGSParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fromBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "toBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ETHGETLOGSParamsAddress"
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Topics"
              }
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_L_o_g_s_Result": {
      "name": "EthGetLogsResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "id",
            "value": "Log"
          }
        }
      }
    },
    "ETHGETSTORAGEATParams": {
      "name": "ETHGETSTORAGEATParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_S_t_o_r_a_g_e_A_t_Param_blockNumber": {
      "name": "ETHGETSTORAGEATParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "EthGetTransactionByBlockHashAndIndexResult": {
      "name": "EthGetTransactionByBlockHashAndIndexResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Transaction",
            "type": {
              "type": "id",
              "value": "Transaction"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_H_a_s_h_A_n_d_I_n_d_e_x_Result": {
      "name": "EthGetTransactionByBlockHashAndIndexResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Transaction",
            "type": {
              "type": "id",
              "value": "Transaction"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResult": {
      "name": "EthGetTransactionByBlockNumberAndIndexResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Transaction",
            "type": {
              "type": "id",
              "value": "Transaction"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "ETHGETTRANSACTIONBYBLOCKNUMBERANDINDEXParams": {
      "name": "ETHGETTRANSACTIONBYBLOCKNUMBERANDINDEXParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_N_u_m_b_e_r_A_n_d_I_n_d_e_x_Param_blockNumber": {
      "name": "ETHGETTRANSACTIONBYBLOCKNUMBERANDINDEXParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_B_l_o_c_k_N_u_m_b_e_r_A_n_d_I_n_d_e_x_Result": {
      "name": "EthGetTransactionByBlockNumberAndIndexResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Transaction",
            "type": {
              "type": "id",
              "value": "Transaction"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "EthGetTransactionByHashResult": {
      "name": "EthGetTransactionByHashResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Transaction",
            "type": {
              "type": "id",
              "value": "Transaction"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_B_y_H_a_s_h_Result": {
      "name": "EthGetTransactionByHashResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Transaction",
            "type": {
              "type": "id",
              "value": "Transaction"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "EthGetTransactionCountResult": {
      "name": "EthGetTransactionCountResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Nonce",
            "type": {
              "type": "id",
              "value": "Nonce"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "ETHGETTRANSACTIONCOUNTParams": {
      "name": "ETHGETTRANSACTIONCOUNTParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_Param_blockNumber": {
      "name": "ETHGETTRANSACTIONCOUNTParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_C_o_u_n_t_Result": {
      "name": "EthGetTransactionCountResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Nonce",
            "type": {
              "type": "id",
              "value": "Nonce"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "EthGetTransactionReceiptResult": {
      "name": "EthGetTransactionReceiptResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Receipt",
            "type": {
              "type": "id",
              "value": "Receipt"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_T_r_a_n_s_a_c_t_i_o_n_R_e_c_e_i_p_t_Result": {
      "name": "EthGetTransactionReceiptResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Receipt",
            "type": {
              "type": "id",
              "value": "Receipt"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "ETHGETUNCLECOUNTBYBLOCKNUMBERParams": {
      "name": "ETHGETUNCLECOUNTBYBLOCKNUMBERParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_U_n_c_l_e_C_o_u_n_t_B_y_B_l_o_c_k_N_u_m_b_e_r_Param_blockNumber": {
      "name": "ETHGETUNCLECOUNTBYBLOCKNUMBERParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "EthGetProofResultOneOfZero": {
      "description": "The merkle proofs of the specified account connecting them to the blockhash of the block specified",
      "name": "EthGetProofResultOneOfZero",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The address of the account or contract of the request",
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Address"
              }
            }
          },
          {
            "key": "accountProof",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ProofNodes"
              }
            }
          },
          {
            "description": "The Ether balance of the account or contract of the request",
            "key": "balance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          },
          {
            "description": "The code hash of the contract of the request (keccak(NULL) if external account)",
            "key": "codeHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "description": "The transaction count of the account or contract of the request",
            "key": "nonce",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Nonce"
              }
            }
          },
          {
            "description": "The storage hash of the contract of the request (keccak(rlp(NULL)) if external account)",
            "key": "storageHash",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Keccak"
              }
            }
          },
          {
            "key": "storageProof",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "StorageProof"
              }
            }
          }
        ]
      }
    },
    "EthGetProofResult": {
      "name": "EthGetProofResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "EthGetProofResultOneOfZero",
            "description": "The merkle proofs of the specified account connecting them to the blockhash of the block specified",
            "type": {
              "type": "id",
              "value": "EthGetProofResultOneOfZero"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "ETHGETPROOFParams": {
      "name": "ETHGETPROOFParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_P_r_o_o_f_Param_blockNumber": {
      "name": "ETHGETPROOFParams",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "BlockNumber",
            "type": {
              "type": "id",
              "value": "BlockNumber"
            }
          },
          {
            "typeName": "BlockNumberTag",
            "type": {
              "type": "id",
              "value": "BlockNumberTag"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_P_r_o_o_f_Result": {
      "name": "EthGetProofResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "EthGetProofResultOneOfZero",
            "description": "The merkle proofs of the specified account connecting them to the blockhash of the block specified",
            "type": {
              "type": "id",
              "value": "EthGetProofResultOneOfZero"
            }
          },
          {
            "typeName": "Null",
            "type": {
              "type": "id",
              "value": "Null"
            }
          }
        ]
      }
    },
    "e_t_h___g_e_t_W_o_r_k_Result": {
      "name": "EthGetWorkResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "list",
          "itemType": {
            "type": "unknown"
          }
        }
      }
    },
    "e_t_h___m_i_n_i_n_g_Result": {
      "name": "EthMiningResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "ETHNEWFILTERParamsAddress": {
      "name": "ETHNEWFILTERParamsAddress",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "Address",
            "type": {
              "type": "id",
              "value": "Address"
            }
          },
          {
            "typeName": "Addresses",
            "type": {
              "type": "id",
              "value": "Addresses"
            }
          }
        ]
      }
    },
    "ETHNEWFILTERParams": {
      "description": "A filter used to monitor the blockchain for log/events",
      "name": "ETHNEWFILTERParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fromBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "toBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ETHNEWFILTERParamsAddress"
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Topics"
              }
            }
          }
        ]
      }
    },
    "e_t_h___n_e_w_F_i_l_t_e_r_Param_filter": {
      "description": "A filter used to monitor the blockchain for log/events",
      "name": "ETHNEWFILTERParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "fromBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "toBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "BlockNumber"
              }
            }
          },
          {
            "key": "address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ETHNEWFILTERParamsAddress"
              }
            }
          },
          {
            "key": "topics",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Topics"
              }
            }
          }
        ]
      }
    },
    "e_t_h___s_u_b_m_i_t_H_a_s_h_r_a_t_e_Result": {
      "name": "EthSubmitHashrateResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "e_t_h___s_u_b_m_i_t_W_o_r_k_Result": {
      "name": "EthSubmitWorkResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "EthSyncingResultOneOfZero": {
      "description": "An object with sync status data",
      "name": "EthSyncingResultOneOfZero",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Block at which the import started (will only be reset, after the sync reached his head)",
            "key": "startingBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          },
          {
            "description": "The current block, same as eth_blockNumber",
            "key": "currentBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          },
          {
            "description": "The estimated highest block",
            "key": "highestBlock",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          },
          {
            "description": "The known states",
            "key": "knownStates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          },
          {
            "description": "The pulled states",
            "key": "pulledStates",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Integer"
              }
            }
          }
        ]
      }
    },
    "EthSyncingResultOneOfOne": {
      "name": "EthSyncingResultOneOfOne",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    },
    "EthSyncingResult": {
      "name": "EthSyncingResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "EthSyncingResultOneOfZero",
            "description": "An object with sync status data",
            "type": {
              "type": "id",
              "value": "EthSyncingResultOneOfZero"
            }
          },
          {
            "typeName": "EthSyncingResultOneOfOne",
            "type": {
              "type": "id",
              "value": "EthSyncingResultOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___s_y_n_c_i_n_g_Result": {
      "name": "EthSyncingResult",
      "shape": {
        "type": "undiscriminatedUnion",
        "variants": [
          {
            "typeName": "EthSyncingResultOneOfZero",
            "description": "An object with sync status data",
            "type": {
              "type": "id",
              "value": "EthSyncingResultOneOfZero"
            }
          },
          {
            "typeName": "EthSyncingResultOneOfOne",
            "type": {
              "type": "id",
              "value": "EthSyncingResultOneOfOne"
            }
          }
        ]
      }
    },
    "e_t_h___u_n_i_n_s_t_a_l_l_F_i_l_t_e_r_Result": {
      "name": "EthUninstallFilterResult",
      "shape": {
        "type": "alias",
        "value": {
          "type": "primitive",
          "value": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "subpackages": {},
  "rootPackage": {
    "endpoints": [
      {
        "auth": false,
        "description": "Returns the version of the current client",
        "method": "POST",
        "id": "web3_clientVersion",
        "originalEndpointId": "web3_clientVersion",
        "name": "web3_clientVersion",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "client version"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "web3_clientVersion"
        }
      },
      {
        "auth": false,
        "description": "Hashes data using the Keccak-256 algorithm",
        "method": "POST",
        "id": "web3_sha3",
        "originalEndpointId": "web3_sha3",
        "name": "web3_sha3",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "data to hash using the Keccak-256 algorithm",
                  "key": "data",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "regex": "^0x[a-fA-F\\d]+$"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Keccak"
            }
          },
          "description": "Keccak-256 hash of the given data"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x68656c6c6f20776f726c64"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x68656c6c6f20776f726c64"
              ]
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": "0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad"
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "web3_sha3"
        }
      },
      {
        "auth": false,
        "description": "Determines if this client is listening for new network connections.",
        "method": "POST",
        "id": "net_listening",
        "originalEndpointId": "net_listening",
        "name": "net_listening",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          "description": "`true` if listening is active or `false` if listening is not active"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [],
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": true
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "jsonrpc": "2.0",
                "id": "1",
                "result": true
              }
            },
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "net_listening"
        }
      },
      {
        "auth": false,
        "description": "Returns the number of peers currently connected to this client.",
        "method": "POST",
        "id": "net_peerCount",
        "originalEndpointId": "net_peerCount",
        "name": "net_peerCount",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          "description": "number of connected peers."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "net_peerCount"
        }
      },
      {
        "auth": false,
        "description": "Returns the network ID associated with the current network.",
        "method": "POST",
        "id": "net_version",
        "originalEndpointId": "net_version",
        "name": "net_version",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^[\\d]+$"
              }
            }
          },
          "description": "Network ID associated with the current network"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "net_version"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_blockNumber",
        "originalEndpointId": "eth_blockNumber",
        "name": "eth_blockNumber",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthBlockNumberResult"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_blockNumber"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_call",
        "originalEndpointId": "eth_call",
        "name": "eth_call",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transaction",
                  "valueType": {
                    "type": "id",
                    "value": "Transaction"
                  }
                },
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHCALLParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Bytes"
            }
          },
          "description": "The return value of the executed contract"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_call"
        }
      },
      {
        "auth": false,
        "description": "Returns the currently configured chain id, a value used in replay-protected transaction signing as introduced by [EIP-155](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md).",
        "method": "POST",
        "id": "eth_chainId",
        "originalEndpointId": "eth_chainId",
        "name": "eth_chainId",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "string",
                "regex": "^0x[a-fA-F\\d]+$"
              }
            }
          },
          "description": "hex format integer of the current chain id. Defaults are ETC=61, ETH=1, Morden=62."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": "foo"
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_chainId"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_coinbase",
        "originalEndpointId": "eth_coinbase",
        "name": "eth_coinbase",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Address"
            }
          },
          "description": "The address owned by the client that is used as default for things like the mining reward"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_coinbase"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_estimateGas",
        "originalEndpointId": "eth_estimateGas",
        "name": "eth_estimateGas",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transaction",
                  "valueType": {
                    "type": "id",
                    "value": "Transaction"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Integer"
            }
          },
          "description": "The amount of gas used"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_estimateGas"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_gasPrice",
        "originalEndpointId": "eth_gasPrice",
        "name": "eth_gasPrice",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Integer"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_gasPrice"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getBalance",
        "originalEndpointId": "eth_getBalance",
        "name": "eth_getBalance",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the account or contract",
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "Address"
                  }
                },
                {
                  "description": "A BlockNumber at which to request the balance",
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "BlockNumber"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "IntegerOrNull"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBalance"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getBlockByHash",
        "originalEndpointId": "eth_getBlockByHash",
        "name": "eth_getBlockByHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockHash",
                  "valueType": {
                    "type": "id",
                    "value": "BlockHash"
                  }
                },
                {
                  "description": "If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.",
                  "key": "includeTransactions",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "BlockOrNull"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockByHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getBlockByNumber",
        "originalEndpointId": "eth_getBlockByNumber",
        "name": "eth_getBlockByNumber",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETBLOCKBYNUMBERParams"
                  }
                },
                {
                  "description": "If `true` it returns the full transaction objects, if `false` only the hashes of the transactions.",
                  "key": "includeTransactions",
                  "valueType": {
                    "type": "primitive",
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "BlockOrNull"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockByNumber"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getBlockTransactionCountByHash",
        "originalEndpointId": "eth_getBlockTransactionCountByHash",
        "name": "eth_getBlockTransactionCountByHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockHash",
                  "valueType": {
                    "type": "id",
                    "value": "BlockHash"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "IntegerOrNull"
            }
          },
          "description": "The Number of total transactions in the given block"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockTransactionCountByHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getBlockTransactionCountByNumber",
        "originalEndpointId": "eth_getBlockTransactionCountByNumber",
        "name": "eth_getBlockTransactionCountByNumber",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETBLOCKTRANSACTIONCOUNTBYNUMBERParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "IntegerOrNull"
            }
          },
          "description": "The Number of total transactions in the given block"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getBlockTransactionCountByNumber"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getCode",
        "originalEndpointId": "eth_getCode",
        "name": "eth_getCode",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the contract",
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "Address"
                  }
                },
                {
                  "description": "A BlockNumber of which the code existed",
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "BlockNumber"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Bytes"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getCode"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getFilterChanges",
        "originalEndpointId": "eth_getFilterChanges",
        "name": "eth_getFilterChanges",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "filterId",
                  "valueType": {
                    "type": "id",
                    "value": "FilterId"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Log"
              }
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getFilterChanges"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getFilterLogs",
        "originalEndpointId": "eth_getFilterLogs",
        "name": "eth_getFilterLogs",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "filterId",
                  "valueType": {
                    "type": "id",
                    "value": "FilterId"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Log"
              }
            }
          },
          "description": "An array of all logs matching filter with given id."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getFilterLogs"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getRawTransactionByHash",
        "originalEndpointId": "eth_getRawTransactionByHash",
        "name": "eth_getRawTransactionByHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transactionHash",
                  "valueType": {
                    "type": "id",
                    "value": "TransactionHash"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Bytes"
            }
          },
          "description": "The raw transaction data"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getRawTransactionByHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getRawTransactionByBlockHashAndIndex",
        "originalEndpointId": "eth_getRawTransactionByBlockHashAndIndex",
        "name": "eth_getRawTransactionByBlockHashAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockHash",
                  "valueType": {
                    "type": "id",
                    "value": "BlockHash"
                  }
                },
                {
                  "description": "The ordering in which a transaction is mined within its block.",
                  "key": "index",
                  "valueType": {
                    "type": "id",
                    "value": "Integer"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Bytes"
            }
          },
          "description": "The raw transaction data"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getRawTransactionByBlockHashAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getRawTransactionByBlockNumberAndIndex",
        "originalEndpointId": "eth_getRawTransactionByBlockNumberAndIndex",
        "name": "eth_getRawTransactionByBlockNumberAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETRAWTRANSACTIONBYBLOCKNUMBERANDINDEXParams"
                  }
                },
                {
                  "description": "The ordering in which a transaction is mined within its block.",
                  "key": "index",
                  "valueType": {
                    "type": "id",
                    "value": "Integer"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Bytes"
            }
          },
          "description": "The raw transaction data"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getRawTransactionByBlockNumberAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getLogs",
        "originalEndpointId": "eth_getLogs",
        "name": "eth_getLogs",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "filter",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETLOGSParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "Log"
              }
            }
          },
          "description": "An array of all logs matching filter with given id."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  {}
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getLogs"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getStorageAt",
        "originalEndpointId": "eth_getStorageAt",
        "name": "eth_getStorageAt",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "Address"
                  }
                },
                {
                  "key": "key",
                  "valueType": {
                    "type": "id",
                    "value": "Position"
                  }
                },
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETSTORAGEATParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "DataWord"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getStorageAt"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getTransactionByBlockHashAndIndex",
        "originalEndpointId": "eth_getTransactionByBlockHashAndIndex",
        "name": "eth_getTransactionByBlockHashAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockHash",
                  "valueType": {
                    "type": "id",
                    "value": "BlockHash"
                  }
                },
                {
                  "description": "The ordering in which a transaction is mined within its block.",
                  "key": "index",
                  "valueType": {
                    "type": "id",
                    "value": "Integer"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthGetTransactionByBlockHashAndIndexResult"
            }
          },
          "description": "Returns a transaction or null"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef",
              "0x0"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef",
                "0x0"
              ]
            },
            "responseStatusCode": 200,
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionByBlockHashAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getTransactionByBlockNumberAndIndex",
        "originalEndpointId": "eth_getTransactionByBlockNumberAndIndex",
        "name": "eth_getTransactionByBlockNumberAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETTRANSACTIONBYBLOCKNUMBERANDINDEXParams"
                  }
                },
                {
                  "description": "The ordering in which a transaction is mined within its block.",
                  "key": "index",
                  "valueType": {
                    "type": "id",
                    "value": "Integer"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthGetTransactionByBlockNumberAndIndexResult"
            }
          },
          "description": "Returns a transaction or null"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {
                  "gas": "foo",
                  "gasPrice": "foo",
                  "nonce": null
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {
                  "gas": "foo",
                  "gasPrice": "foo",
                  "nonce": null
                }
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionByBlockNumberAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getTransactionByHash",
        "originalEndpointId": "eth_getTransactionByHash",
        "name": "eth_getTransactionByHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transactionHash",
                  "valueType": {
                    "type": "id",
                    "value": "TransactionHash"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthGetTransactionByHashResult"
            }
          },
          "description": "Returns a transaction or null"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {
                  "gas": "foo",
                  "gasPrice": "foo",
                  "nonce": null
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {
                  "gas": "foo",
                  "gasPrice": "foo",
                  "nonce": null
                }
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionByHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getTransactionCount",
        "originalEndpointId": "eth_getTransactionCount",
        "name": "eth_getTransactionCount",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "Address"
                  }
                },
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETTRANSACTIONCOUNTParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthGetTransactionCountResult"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": null
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": null
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionCount"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getTransactionReceipt",
        "originalEndpointId": "eth_getTransactionReceipt",
        "name": "eth_getTransactionReceipt",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "transactionHash",
                  "valueType": {
                    "type": "id",
                    "value": "TransactionHash"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthGetTransactionReceiptResult"
            }
          },
          "description": "returns either a receipt or null"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {
                  "blockHash": "foo",
                  "blockNumber": "foo",
                  "contractAddress": "foo",
                  "cumulativeGasUsed": "foo",
                  "from": null,
                  "gasUsed": "foo",
                  "logs": [
                    {}
                  ],
                  "logsBloom": "foo",
                  "to": "foo",
                  "transactionHash": "foo",
                  "transactionIndex": null
                }
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {
                  "blockHash": "foo",
                  "blockNumber": "foo",
                  "contractAddress": "foo",
                  "cumulativeGasUsed": "foo",
                  "from": null,
                  "gasUsed": "foo",
                  "logs": [
                    {}
                  ],
                  "logsBloom": "foo",
                  "to": "foo",
                  "transactionHash": "foo",
                  "transactionIndex": null
                }
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getTransactionReceipt"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getUncleByBlockHashAndIndex",
        "originalEndpointId": "eth_getUncleByBlockHashAndIndex",
        "name": "eth_getUncleByBlockHashAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockHash",
                  "valueType": {
                    "type": "id",
                    "value": "BlockHash"
                  }
                },
                {
                  "description": "The ordering in which a uncle is included within its block.",
                  "key": "index",
                  "valueType": {
                    "type": "id",
                    "value": "Integer"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "BlockOrNull"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getUncleByBlockHashAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getUncleByBlockNumberAndIndex",
        "originalEndpointId": "eth_getUncleByBlockNumberAndIndex",
        "name": "eth_getUncleByBlockNumberAndIndex",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The block in which the uncle was included",
                  "key": "uncleBlockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "BlockNumber"
                  }
                },
                {
                  "description": "The ordering in which a uncle is included within its block.",
                  "key": "index",
                  "valueType": {
                    "type": "id",
                    "value": "Integer"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "BlockOrNull"
            }
          },
          "description": "returns an uncle block or null"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x0",
              "0x0"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x0",
                "0x0"
              ]
            },
            "responseStatusCode": 200,
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getUncleByBlockNumberAndIndex"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getUncleCountByBlockHash",
        "originalEndpointId": "eth_getUncleCountByBlockHash",
        "name": "eth_getUncleCountByBlockHash",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockHash",
                  "valueType": {
                    "type": "id",
                    "value": "BlockHash"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "IntegerOrNull"
            }
          },
          "description": "The Number of total uncles in the given block"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getUncleCountByBlockHash"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getUncleCountByBlockNumber",
        "originalEndpointId": "eth_getUncleCountByBlockNumber",
        "name": "eth_getUncleCountByBlockNumber",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETUNCLECOUNTBYBLOCKNUMBERParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "IntegerOrNull"
            }
          },
          "description": "The Number of total uncles in the given block"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getUncleCountByBlockNumber"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getProof",
        "originalEndpointId": "eth_getProof",
        "name": "eth_getProof",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The address of the account or contract",
                  "key": "address",
                  "valueType": {
                    "type": "id",
                    "value": "Address"
                  }
                },
                {
                  "key": "blockNumber",
                  "valueType": {
                    "type": "id",
                    "value": "ETHGETPROOFParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthGetProofResult"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getProof"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_getWork",
        "originalEndpointId": "eth_getWork",
        "name": "eth_getWork",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "list",
              "itemType": {
                "type": "unknown"
              }
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  null
                ]
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": [
                  null
                ]
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_getWork"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_hashrate",
        "originalEndpointId": "eth_hashrate",
        "name": "eth_hashrate",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Integer"
            }
          },
          "description": "Integer of the number of hashes per second"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_hashrate"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_mining",
        "originalEndpointId": "eth_mining",
        "name": "eth_mining",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          "description": "Whether or not the client is mining"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_mining"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_newBlockFilter",
        "originalEndpointId": "eth_newBlockFilter",
        "name": "eth_newBlockFilter",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "FilterId"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_newBlockFilter"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_newFilter",
        "originalEndpointId": "eth_newFilter",
        "name": "eth_newFilter",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "filter",
                  "valueType": {
                    "type": "id",
                    "value": "ETHNEWFILTERParams"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Integer"
            }
          },
          "description": "The filter ID for use in `eth_getFilterChanges`"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_newFilter"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_newPendingTransactionFilter",
        "originalEndpointId": "eth_newPendingTransactionFilter",
        "name": "eth_newPendingTransactionFilter",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "FilterId"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_newPendingTransactionFilter"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_pendingTransactions",
        "originalEndpointId": "eth_pendingTransactions",
        "name": "eth_pendingTransactions",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Transactions"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_pendingTransactions"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_protocolVersion",
        "originalEndpointId": "eth_protocolVersion",
        "name": "eth_protocolVersion",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Integer"
            }
          },
          "description": "The current ethereum protocol version"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_protocolVersion"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_sendRawTransaction",
        "originalEndpointId": "eth_sendRawTransaction",
        "name": "eth_sendRawTransaction",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "description": "The signed transaction data",
                  "key": "signedTransactionData",
                  "valueType": {
                    "type": "id",
                    "value": "Bytes"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "Keccak"
            }
          },
          "description": "The transaction hash, or the zero hash if the transaction is not yet available."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_sendRawTransaction"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_submitHashrate",
        "originalEndpointId": "eth_submitHashrate",
        "name": "eth_submitHashrate",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "hashRate",
                  "valueType": {
                    "type": "id",
                    "value": "DataWord"
                  }
                },
                {
                  "description": "String identifying the client",
                  "key": "id",
                  "valueType": {
                    "type": "id",
                    "value": "DataWord"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          "description": "whether of not submitting went through successfully"
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_submitHashrate"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_submitWork",
        "originalEndpointId": "eth_submitWork",
        "name": "eth_submitWork",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "nonce",
                  "valueType": {
                    "type": "id",
                    "value": "Nonce"
                  }
                },
                {
                  "key": "powHash",
                  "valueType": {
                    "type": "id",
                    "value": "PowHash"
                  }
                },
                {
                  "key": "mixHash",
                  "valueType": {
                    "type": "id",
                    "value": "MixHash"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          "description": "returns true if the provided solution is valid, otherwise false."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/{apiKey}",
            "pathParameters": {},
            "queryParameters": {},
            "headers": {},
            "requestBody": [
              "0x0000000000000001",
              "0x6bf2cAE0dE3ec3ecA5E194a6C6e02cf42aADfe1C2c4Fff12E5D36C3Cf7297F22",
              "0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000"
            ],
            "requestBodyV3": {
              "type": "json",
              "value": [
                "0x0000000000000001",
                "0x6bf2cAE0dE3ec3ecA5E194a6C6e02cf42aADfe1C2c4Fff12E5D36C3Cf7297F22",
                "0xD1FE5700000000000000000000000000D1FE5700000000000000000000000000"
              ]
            },
            "responseStatusCode": 200,
            "codeSamples": []
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_submitWork"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_syncing",
        "originalEndpointId": "eth_syncing",
        "name": "eth_syncing",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "id",
              "value": "EthSyncingResult"
            }
          }
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": {}
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_syncing"
        }
      },
      {
        "auth": false,
        "method": "POST",
        "id": "eth_uninstallFilter",
        "originalEndpointId": "eth_uninstallFilter",
        "name": "eth_uninstallFilter",
        "path": {
          "pathParameters": [
            {
              "key": "apiKey",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "parts": [
            {
              "type": "literal",
              "value": ""
            },
            {
              "type": "literal",
              "value": "/"
            },
            {
              "type": "pathParameter",
              "value": "apiKey"
            },
            {
              "type": "literal",
              "value": ""
            }
          ]
        },
        "queryParameters": [],
        "headers": [],
        "request": {
          "type": {
            "type": "json",
            "contentType": "application/json",
            "shape": {
              "type": "object",
              "extends": [],
              "properties": [
                {
                  "key": "filterId",
                  "valueType": {
                    "type": "id",
                    "value": "FilterId"
                  }
                }
              ]
            }
          }
        },
        "response": {
          "type": {
            "type": "reference",
            "value": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          "description": "returns true if the filter was successfully uninstalled, false otherwise."
        },
        "errorsV2": [],
        "examples": [
          {
            "name": "",
            "description": "",
            "path": "/",
            "pathParameters": {
              "apiKey": "apiKey"
            },
            "queryParameters": {},
            "headers": {},
            "requestBodyV3": {
              "type": "json"
            },
            "responseStatusCode": 200,
            "responseBody": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            },
            "responseBodyV3": {
              "type": "json",
              "value": {
                "id": 1,
                "jsonrpc": "2.0",
                "result": true
              }
            }
          }
        ],
        "protocol": {
          "type": "openrpc",
          "methodName": "eth_uninstallFilter"
        }
      }
    ],
    "webhooks": [],
    "websockets": [],
    "types": [
      "StorageProof",
      "ProofNodes",
      "FilterId",
      "BlockHash",
      "BlockNumber",
      "BlockNumberTag",
      "BlockOrNull",
      "IntegerOrNull",
      "AddressOrNull",
      "Receipt",
      "BloomFilter",
      "Log",
      "Topics",
      "BlockNumberOrNull",
      "NonceOrNull",
      "To",
      "Block",
      "Transaction",
      "Transactions",
      "TransactionHash",
      "KeccakOrPending",
      "Keccak",
      "Integer",
      "Address",
      "Addresses",
      "Position",
      "DataWord",
      "Bytes"
    ],
    "subpackages": []
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}