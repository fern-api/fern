{
  "types": {
    "AccountDetailsCategory": {
      "name": "AccountDetailsCategory",
      "shape": {
        "type": "object",
        "extends": [
          "CategoryEnum"
        ],
        "properties": []
      }
    },
    "AccountDetails": {
      "name": "AccountDetails",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "key": "integration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "integration_slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "AccountDetailsCategory"
                }
              }
            }
          },
          {
            "key": "end_user_origin_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "end_user_organization_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "end_user_email_address",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "email"
                }
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "webhook_listener_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          {
            "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
            "key": "is_duplicate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "AccountDetailsAndActionsCategory": {
      "name": "AccountDetailsAndActionsCategory",
      "shape": {
        "type": "object",
        "extends": [
          "CategoryEnum"
        ],
        "properties": []
      }
    },
    "AccountDetailsAndActionsStatus": {
      "name": "AccountDetailsAndActionsStatus",
      "shape": {
        "type": "object",
        "extends": [
          "AccountDetailsAndActionsStatusEnum"
        ],
        "properties": []
      }
    },
    "AccountDetailsAndActions": {
      "description": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
      "name": "AccountDetailsAndActions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AccountDetailsAndActionsCategory"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "AccountDetailsAndActionsStatus"
            }
          },
          {
            "key": "status_detail",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "end_user_origin_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "end_user_organization_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "end_user_email_address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "webhook_listener_url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
            "key": "is_duplicate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "key": "integration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AccountDetailsAndActionsIntegration"
              }
            }
          }
        ]
      }
    },
    "AccountDetailsAndActionsIntegration": {
      "name": "AccountDetailsAndActionsIntegration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "categories",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "CategoriesEnum"
              }
            }
          },
          {
            "key": "image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "square_image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "color",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "slug",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "passthrough_available",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "available_model_operations",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ModelOperation"
                }
              }
            }
          }
        ]
      }
    },
    "AccountDetailsAndActionsStatusEnum": {
      "description": "* `COMPLETE` - COMPLETE\n* `INCOMPLETE` - INCOMPLETE\n* `RELINK_NEEDED` - RELINK_NEEDED",
      "name": "AccountDetailsAndActionsStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "COMPLETE"
          },
          {
            "value": "INCOMPLETE"
          },
          {
            "value": "RELINK_NEEDED"
          }
        ]
      }
    },
    "AccountIntegrationApiEndpointsToDocumentationUrls": {
      "description": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}",
      "name": "AccountIntegrationApiEndpointsToDocumentationUrls",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "AccountIntegration": {
      "name": "AccountIntegration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Company name.",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
            "key": "categories",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CategoriesEnum"
                }
              }
            }
          },
          {
            "description": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>",
            "key": "image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "Company logo in square shape. <b>Upload an image with a white background.</b>",
            "key": "square_image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          },
          {
            "description": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
            "key": "color",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "regex": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
                  "maxLength": 18
                }
              }
            }
          },
          {
            "key": "slug",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "If checked, this integration will not appear in the linking flow, and will appear elsewhere with a Beta tag.",
            "key": "is_in_beta",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}",
            "key": "api_endpoints_to_documentation_urls",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AccountIntegrationApiEndpointsToDocumentationUrls"
              }
            }
          }
        ]
      }
    },
    "AccountToken": {
      "name": "AccountToken",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "account_token",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "integration",
            "valueType": {
              "type": "id",
              "value": "AccountIntegration"
            }
          }
        ]
      }
    },
    "AccountTypeEnum": {
      "description": "* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
      "name": "AccountTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SAVINGS"
          },
          {
            "value": "CHECKING"
          }
        ]
      }
    },
    "AvailableActions": {
      "description": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
      "name": "AvailableActions",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "integration",
            "valueType": {
              "type": "id",
              "value": "AccountIntegration"
            }
          },
          {
            "key": "passthrough_available",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "available_model_operations",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ModelOperation"
                }
              }
            }
          }
        ]
      }
    },
    "BankInfoAccountType": {
      "description": "The bank account type\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
      "name": "BankInfoAccountType",
      "shape": {
        "type": "object",
        "extends": [
          "AccountTypeEnum"
        ],
        "properties": []
      }
    },
    "BankInfoFieldMappings": {
      "name": "BankInfoFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "BankInfo": {
      "description": "# The BankInfo Object\n### Description\nThe `BankInfo` object is used to represent the Bank Account information for an Employee.\n\n### Usage Example\nFetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.",
      "name": "BankInfo",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee with this bank account.",
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The account number.",
            "key": "account_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              }
            }
          },
          {
            "description": "The routing number.",
            "key": "routing_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The bank name.",
            "key": "bank_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The bank account type\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
            "key": "account_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoAccountType"
                }
              }
            }
          },
          {
            "description": "When the matching bank object was created in the third party system.",
            "key": "remote_created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "BenefitFieldMappings": {
      "name": "BenefitFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Benefit": {
      "description": "# The Benefit Object\n### Description\nThe `Benefit` object is used to represent a benefit that an employee has enrolled in.\n\n### Usage Example\nFetch from the `LIST Benefits` endpoint and filter by `ID` to show all benefits.",
      "name": "Benefit",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee on the plan.",
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The name of the benefit provider.",
            "key": "provider_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The type of benefit plan",
            "key": "benefit_plan_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's contribution.",
            "key": "employee_contribution",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The company's contribution.",
            "key": "company_contribution",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time the benefit started.",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time the benefit ended.",
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BenefitFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "CategoriesEnum": {
      "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
      "name": "CategoriesEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "hris"
          },
          {
            "value": "ats"
          },
          {
            "value": "accounting"
          },
          {
            "value": "ticketing"
          },
          {
            "value": "crm"
          },
          {
            "value": "mktg"
          },
          {
            "value": "filestorage"
          }
        ]
      }
    },
    "CategoryEnum": {
      "description": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
      "name": "CategoryEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "hris"
          },
          {
            "value": "ats"
          },
          {
            "value": "accounting"
          },
          {
            "value": "ticketing"
          },
          {
            "value": "crm"
          },
          {
            "value": "mktg"
          },
          {
            "value": "filestorage"
          }
        ]
      }
    },
    "CommonModelScopesBodyRequest": {
      "name": "CommonModelScopesBodyRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "model_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "enabled_actions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "EnabledActionsEnum"
              }
            }
          },
          {
            "key": "disabled_fields",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        ]
      }
    },
    "CompanyFieldMappings": {
      "name": "CompanyFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Company": {
      "description": "# The Company Object\n### Description\nThe `Company` object is used to represent a company within the HRIS / Payroll system.\n\n### Usage Example\nFetch from the `LIST Companies` endpoint and filter by `ID` to show all companies.",
      "name": "Company",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The company's legal name.",
            "key": "legal_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The company's display name.",
            "key": "display_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The company's Employer Identification Numbers.",
            "key": "eins",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "CompanyFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ConditionSchemaConditionType": {
      "description": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
      "name": "ConditionSchemaConditionType",
      "shape": {
        "type": "object",
        "extends": [
          "ConditionTypeEnum"
        ],
        "properties": []
      }
    },
    "ConditionSchema": {
      "name": "ConditionSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account.",
            "key": "id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "The common model for which a condition schema is defined.",
            "key": "common_model",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing *native condition* name. e.g. \"Skip Manager\".",
            "key": "native_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
            "key": "field_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times.",
            "key": "is_unique",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
            "key": "condition_type",
            "valueType": {
              "type": "id",
              "value": "ConditionSchemaConditionType"
            }
          },
          {
            "description": "The schemas for the operators that can be used on a condition.",
            "key": "operators",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "OperatorSchema"
              }
            }
          }
        ]
      }
    },
    "ConditionTypeEnum": {
      "description": "* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
      "name": "ConditionTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "BOOLEAN"
          },
          {
            "value": "DATE"
          },
          {
            "value": "DATE_TIME"
          },
          {
            "value": "INTEGER"
          },
          {
            "value": "FLOAT"
          },
          {
            "value": "STRING"
          },
          {
            "value": "LIST_OF_STRINGS"
          }
        ]
      }
    },
    "CountryEnum": {
      "description": "* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
      "name": "CountryEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "AF"
          },
          {
            "value": "AX"
          },
          {
            "value": "AL"
          },
          {
            "value": "DZ"
          },
          {
            "value": "AS"
          },
          {
            "value": "AD"
          },
          {
            "value": "AO"
          },
          {
            "value": "AI"
          },
          {
            "value": "AQ"
          },
          {
            "value": "AG"
          },
          {
            "value": "AR"
          },
          {
            "value": "AM"
          },
          {
            "value": "AW"
          },
          {
            "value": "AU"
          },
          {
            "value": "AT"
          },
          {
            "value": "AZ"
          },
          {
            "value": "BS"
          },
          {
            "value": "BH"
          },
          {
            "value": "BD"
          },
          {
            "value": "BB"
          },
          {
            "value": "BY"
          },
          {
            "value": "BE"
          },
          {
            "value": "BZ"
          },
          {
            "value": "BJ"
          },
          {
            "value": "BM"
          },
          {
            "value": "BT"
          },
          {
            "value": "BO"
          },
          {
            "value": "BQ"
          },
          {
            "value": "BA"
          },
          {
            "value": "BW"
          },
          {
            "value": "BV"
          },
          {
            "value": "BR"
          },
          {
            "value": "IO"
          },
          {
            "value": "BN"
          },
          {
            "value": "BG"
          },
          {
            "value": "BF"
          },
          {
            "value": "BI"
          },
          {
            "value": "CV"
          },
          {
            "value": "KH"
          },
          {
            "value": "CM"
          },
          {
            "value": "CA"
          },
          {
            "value": "KY"
          },
          {
            "value": "CF"
          },
          {
            "value": "TD"
          },
          {
            "value": "CL"
          },
          {
            "value": "CN"
          },
          {
            "value": "CX"
          },
          {
            "value": "CC"
          },
          {
            "value": "CO"
          },
          {
            "value": "KM"
          },
          {
            "value": "CG"
          },
          {
            "value": "CD"
          },
          {
            "value": "CK"
          },
          {
            "value": "CR"
          },
          {
            "value": "CI"
          },
          {
            "value": "HR"
          },
          {
            "value": "CU"
          },
          {
            "value": "CW"
          },
          {
            "value": "CY"
          },
          {
            "value": "CZ"
          },
          {
            "value": "DK"
          },
          {
            "value": "DJ"
          },
          {
            "value": "DM"
          },
          {
            "value": "DO"
          },
          {
            "value": "EC"
          },
          {
            "value": "EG"
          },
          {
            "value": "SV"
          },
          {
            "value": "GQ"
          },
          {
            "value": "ER"
          },
          {
            "value": "EE"
          },
          {
            "value": "SZ"
          },
          {
            "value": "ET"
          },
          {
            "value": "FK"
          },
          {
            "value": "FO"
          },
          {
            "value": "FJ"
          },
          {
            "value": "FI"
          },
          {
            "value": "FR"
          },
          {
            "value": "GF"
          },
          {
            "value": "PF"
          },
          {
            "value": "TF"
          },
          {
            "value": "GA"
          },
          {
            "value": "GM"
          },
          {
            "value": "GE"
          },
          {
            "value": "DE"
          },
          {
            "value": "GH"
          },
          {
            "value": "GI"
          },
          {
            "value": "GR"
          },
          {
            "value": "GL"
          },
          {
            "value": "GD"
          },
          {
            "value": "GP"
          },
          {
            "value": "GU"
          },
          {
            "value": "GT"
          },
          {
            "value": "GG"
          },
          {
            "value": "GN"
          },
          {
            "value": "GW"
          },
          {
            "value": "GY"
          },
          {
            "value": "HT"
          },
          {
            "value": "HM"
          },
          {
            "value": "VA"
          },
          {
            "value": "HN"
          },
          {
            "value": "HK"
          },
          {
            "value": "HU"
          },
          {
            "value": "IS"
          },
          {
            "value": "IN"
          },
          {
            "value": "ID"
          },
          {
            "value": "IR"
          },
          {
            "value": "IQ"
          },
          {
            "value": "IE"
          },
          {
            "value": "IM"
          },
          {
            "value": "IL"
          },
          {
            "value": "IT"
          },
          {
            "value": "JM"
          },
          {
            "value": "JP"
          },
          {
            "value": "JE"
          },
          {
            "value": "JO"
          },
          {
            "value": "KZ"
          },
          {
            "value": "KE"
          },
          {
            "value": "KI"
          },
          {
            "value": "KW"
          },
          {
            "value": "KG"
          },
          {
            "value": "LA"
          },
          {
            "value": "LV"
          },
          {
            "value": "LB"
          },
          {
            "value": "LS"
          },
          {
            "value": "LR"
          },
          {
            "value": "LY"
          },
          {
            "value": "LI"
          },
          {
            "value": "LT"
          },
          {
            "value": "LU"
          },
          {
            "value": "MO"
          },
          {
            "value": "MG"
          },
          {
            "value": "MW"
          },
          {
            "value": "MY"
          },
          {
            "value": "MV"
          },
          {
            "value": "ML"
          },
          {
            "value": "MT"
          },
          {
            "value": "MH"
          },
          {
            "value": "MQ"
          },
          {
            "value": "MR"
          },
          {
            "value": "MU"
          },
          {
            "value": "YT"
          },
          {
            "value": "MX"
          },
          {
            "value": "FM"
          },
          {
            "value": "MD"
          },
          {
            "value": "MC"
          },
          {
            "value": "MN"
          },
          {
            "value": "ME"
          },
          {
            "value": "MS"
          },
          {
            "value": "MA"
          },
          {
            "value": "MZ"
          },
          {
            "value": "MM"
          },
          {
            "value": "NA"
          },
          {
            "value": "NR"
          },
          {
            "value": "NP"
          },
          {
            "value": "NL"
          },
          {
            "value": "NC"
          },
          {
            "value": "NZ"
          },
          {
            "value": "NI"
          },
          {
            "value": "NE"
          },
          {
            "value": "NG"
          },
          {
            "value": "NU"
          },
          {
            "value": "NF"
          },
          {
            "value": "KP"
          },
          {
            "value": "MK"
          },
          {
            "value": "MP"
          },
          {
            "value": "NO"
          },
          {
            "value": "OM"
          },
          {
            "value": "PK"
          },
          {
            "value": "PW"
          },
          {
            "value": "PS"
          },
          {
            "value": "PA"
          },
          {
            "value": "PG"
          },
          {
            "value": "PY"
          },
          {
            "value": "PE"
          },
          {
            "value": "PH"
          },
          {
            "value": "PN"
          },
          {
            "value": "PL"
          },
          {
            "value": "PT"
          },
          {
            "value": "PR"
          },
          {
            "value": "QA"
          },
          {
            "value": "RE"
          },
          {
            "value": "RO"
          },
          {
            "value": "RU"
          },
          {
            "value": "RW"
          },
          {
            "value": "BL"
          },
          {
            "value": "SH"
          },
          {
            "value": "KN"
          },
          {
            "value": "LC"
          },
          {
            "value": "MF"
          },
          {
            "value": "PM"
          },
          {
            "value": "VC"
          },
          {
            "value": "WS"
          },
          {
            "value": "SM"
          },
          {
            "value": "ST"
          },
          {
            "value": "SA"
          },
          {
            "value": "SN"
          },
          {
            "value": "RS"
          },
          {
            "value": "SC"
          },
          {
            "value": "SL"
          },
          {
            "value": "SG"
          },
          {
            "value": "SX"
          },
          {
            "value": "SK"
          },
          {
            "value": "SI"
          },
          {
            "value": "SB"
          },
          {
            "value": "SO"
          },
          {
            "value": "ZA"
          },
          {
            "value": "GS"
          },
          {
            "value": "KR"
          },
          {
            "value": "SS"
          },
          {
            "value": "ES"
          },
          {
            "value": "LK"
          },
          {
            "value": "SD"
          },
          {
            "value": "SR"
          },
          {
            "value": "SJ"
          },
          {
            "value": "SE"
          },
          {
            "value": "CH"
          },
          {
            "value": "SY"
          },
          {
            "value": "TW"
          },
          {
            "value": "TJ"
          },
          {
            "value": "TZ"
          },
          {
            "value": "TH"
          },
          {
            "value": "TL"
          },
          {
            "value": "TG"
          },
          {
            "value": "TK"
          },
          {
            "value": "TO"
          },
          {
            "value": "TT"
          },
          {
            "value": "TN"
          },
          {
            "value": "TR"
          },
          {
            "value": "TM"
          },
          {
            "value": "TC"
          },
          {
            "value": "TV"
          },
          {
            "value": "UG"
          },
          {
            "value": "UA"
          },
          {
            "value": "AE"
          },
          {
            "value": "GB"
          },
          {
            "value": "UM"
          },
          {
            "value": "US"
          },
          {
            "value": "UY"
          },
          {
            "value": "UZ"
          },
          {
            "value": "VU"
          },
          {
            "value": "VE"
          },
          {
            "value": "VN"
          },
          {
            "value": "VG"
          },
          {
            "value": "VI"
          },
          {
            "value": "WF"
          },
          {
            "value": "EH"
          },
          {
            "value": "YE"
          },
          {
            "value": "ZM"
          },
          {
            "value": "ZW"
          }
        ]
      }
    },
    "DataPassthroughRequestMethod": {
      "name": "DataPassthroughRequestMethod",
      "shape": {
        "type": "object",
        "extends": [
          "MethodEnum"
        ],
        "properties": []
      }
    },
    "DataPassthroughRequestHeaders": {
      "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
      "name": "DataPassthroughRequestHeaders",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "DataPassthroughRequestRequestFormat": {
      "name": "DataPassthroughRequestRequestFormat",
      "shape": {
        "type": "object",
        "extends": [
          "RequestFormatEnum"
        ],
        "properties": []
      }
    },
    "DataPassthroughRequest": {
      "description": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
      "name": "DataPassthroughRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "method",
            "valueType": {
              "type": "id",
              "value": "DataPassthroughRequestMethod"
            }
          },
          {
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "base_url_override",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          },
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          },
          {
            "description": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`.",
            "key": "multipart_form_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "MultipartFormFieldRequest"
                  }
                }
              }
            }
          },
          {
            "description": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
            "key": "headers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DataPassthroughRequestHeaders"
                }
              }
            }
          },
          {
            "key": "request_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DataPassthroughRequestRequestFormat"
                }
              }
            }
          },
          {
            "description": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`.",
            "key": "normalize_response",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "DebugModeLog": {
      "name": "DebugModeLog",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "log_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "dashboard_view",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "log_summary",
            "valueType": {
              "type": "id",
              "value": "DebugModelLogSummary"
            }
          }
        ]
      }
    },
    "DebugModelLogSummary": {
      "name": "DebugModelLogSummary",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "url",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "method",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "status_code",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          }
        ]
      }
    },
    "DeductionFieldMappings": {
      "name": "DeductionFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Deduction": {
      "description": "# The Deduction Object\n### Description\nThe `Deduction` object is used to represent an array of the wages withheld from total earnings for the purpose of paying taxes.\n\n### Usage Example\nFetch from the `LIST Deductions` endpoint and filter by `ID` to show all deductions.",
      "name": "Deduction",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "employee_payroll_run",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The deduction's name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The amount of money that is withheld from an employee's gross pay by the employee.",
            "key": "employee_deduction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The amount of money that is withheld on behalf of an employee by the company.",
            "key": "company_deduction",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "DeductionFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EarningType": {
      "description": "The type of earning.\n\n* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
      "name": "EarningType",
      "shape": {
        "type": "object",
        "extends": [
          "EarningTypeEnum"
        ],
        "properties": []
      }
    },
    "EarningFieldMappings": {
      "name": "EarningFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Earning": {
      "description": "# The Earning Object\n### Description\nThe `Earning` object is used to represent an array of different compensations that an employee receives within specific wage categories.\n\n### Usage Example\nFetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.",
      "name": "Earning",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "employee_payroll_run",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The amount earned.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The type of earning.\n\n* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EarningType"
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EarningFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EarningTypeEnum": {
      "description": "* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
      "name": "EarningTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SALARY"
          },
          {
            "value": "REIMBURSEMENT"
          },
          {
            "value": "OVERTIME"
          },
          {
            "value": "BONUS"
          }
        ]
      }
    },
    "EmployeeGender": {
      "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "name": "EmployeeGender",
      "shape": {
        "type": "object",
        "extends": [
          "GenderEnum"
        ],
        "properties": []
      }
    },
    "EmployeeEthnicity": {
      "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "name": "EmployeeEthnicity",
      "shape": {
        "type": "object",
        "extends": [
          "EthnicityEnum"
        ],
        "properties": []
      }
    },
    "EmployeeMaritalStatus": {
      "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
      "name": "EmployeeMaritalStatus",
      "shape": {
        "type": "object",
        "extends": [
          "MaritalStatusEnum"
        ],
        "properties": []
      }
    },
    "EmployeeEmploymentStatus": {
      "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
      "name": "EmployeeEmploymentStatus",
      "shape": {
        "type": "object",
        "extends": [
          "EmploymentStatusEnum"
        ],
        "properties": []
      }
    },
    "EmployeeCustomFields": {
      "description": "Custom fields configured for a given model.",
      "name": "EmployeeCustomFields",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "EmployeeFieldMappings": {
      "name": "EmployeeFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Employee": {
      "description": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
      "name": "Employee",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's number that appears in the third-party integration's UI.",
            "key": "employee_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The ID of the employee's company.",
            "key": "company",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's first name.",
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's last name.",
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
            "key": "display_full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's username that appears in the remote UI.",
            "key": "username",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "groups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's work email.",
            "key": "work_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                  }
                }
              }
            }
          },
          {
            "description": "The employee's personal email.",
            "key": "personal_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                  }
                }
              }
            }
          },
          {
            "description": "The employee's mobile phone number.",
            "key": "mobile_phone_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Array of `Employment` IDs for this Employee.",
            "key": "employments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's home address.",
            "key": "home_location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's work address.",
            "key": "work_location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee ID of the employee's manager.",
            "key": "manager",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's team.",
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's pay group",
            "key": "pay_group",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's social security number.",
            "key": "ssn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              }
            }
          },
          {
            "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "key": "gender",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeGender"
                }
              }
            }
          },
          {
            "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "key": "ethnicity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeEthnicity"
                }
              }
            }
          },
          {
            "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            "key": "marital_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeMaritalStatus"
                }
              }
            }
          },
          {
            "description": "The employee's date of birth.",
            "key": "date_of_birth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
            "key": "hire_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "When the third party's employee was created.",
            "key": "remote_created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
            "key": "employment_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeEmploymentStatus"
                }
              }
            }
          },
          {
            "description": "The employee's termination date.",
            "key": "termination_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The URL of the employee's avatar image.",
            "key": "avatar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  }
                }
              }
            }
          },
          {
            "description": "Custom fields configured for a given model.",
            "key": "custom_fields",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeCustomFields"
                }
              }
            }
          },
          {
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EmployeeEndpointRequest": {
      "name": "EmployeeEndpointRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "model",
            "valueType": {
              "type": "id",
              "value": "EmployeeRequest"
            }
          }
        ]
      }
    },
    "EmployeePayrollRunFieldMappings": {
      "name": "EmployeePayrollRunFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "EmployeePayrollRun": {
      "description": "# The EmployeePayrollRun Object\n### Description\nThe `EmployeePayrollRun` object is used to represent an employee's pay statement for a specific payroll run.\n\n### Usage Example\nFetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to show all employee payroll runs.",
      "name": "EmployeePayrollRun",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee whose payroll is being run.",
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The payroll being run.",
            "key": "payroll_run",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The total earnings throughout a given period for an employee before any deductions are made.",
            "key": "gross_pay",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The take-home pay throughout a given period for an employee after deductions are made.",
            "key": "net_pay",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time the payroll run started.",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time the payroll run ended.",
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time the payroll run was checked.",
            "key": "check_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "key": "earnings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Earning"
                }
              }
            }
          },
          {
            "key": "deductions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Deduction"
                }
              }
            }
          },
          {
            "key": "taxes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Tax"
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeePayrollRunFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EmployeeRequestGender": {
      "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "name": "EmployeeRequestGender",
      "shape": {
        "type": "object",
        "extends": [
          "GenderEnum"
        ],
        "properties": []
      }
    },
    "EmployeeRequestEthnicity": {
      "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "name": "EmployeeRequestEthnicity",
      "shape": {
        "type": "object",
        "extends": [
          "EthnicityEnum"
        ],
        "properties": []
      }
    },
    "EmployeeRequestMaritalStatus": {
      "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
      "name": "EmployeeRequestMaritalStatus",
      "shape": {
        "type": "object",
        "extends": [
          "MaritalStatusEnum"
        ],
        "properties": []
      }
    },
    "EmployeeRequestEmploymentStatus": {
      "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
      "name": "EmployeeRequestEmploymentStatus",
      "shape": {
        "type": "object",
        "extends": [
          "EmploymentStatusEnum"
        ],
        "properties": []
      }
    },
    "EmployeeRequestIntegrationParams": {
      "name": "EmployeeRequestIntegrationParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "EmployeeRequestLinkedAccountParams": {
      "name": "EmployeeRequestLinkedAccountParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "EmployeeRequest": {
      "description": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
      "name": "EmployeeRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The employee's number that appears in the third-party integration's UI.",
            "key": "employee_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The ID of the employee's company.",
            "key": "company",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's first name.",
            "key": "first_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's last name.",
            "key": "last_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
            "key": "display_full_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's username that appears in the remote UI.",
            "key": "username",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "groups",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's work email.",
            "key": "work_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                  }
                }
              }
            }
          },
          {
            "description": "The employee's personal email.",
            "key": "personal_email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                  }
                }
              }
            }
          },
          {
            "description": "The employee's mobile phone number.",
            "key": "mobile_phone_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Array of `Employment` IDs for this Employee.",
            "key": "employments",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's home address.",
            "key": "home_location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's work address.",
            "key": "work_location",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee ID of the employee's manager.",
            "key": "manager",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's team.",
            "key": "team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's pay group",
            "key": "pay_group",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The employee's social security number.",
            "key": "ssn",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              }
            }
          },
          {
            "description": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "key": "gender",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeRequestGender"
                }
              }
            }
          },
          {
            "description": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "key": "ethnicity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeRequestEthnicity"
                }
              }
            }
          },
          {
            "description": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            "key": "marital_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeRequestMaritalStatus"
                }
              }
            }
          },
          {
            "description": "The employee's date of birth.",
            "key": "date_of_birth",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
            "key": "hire_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            "availability": "Deprecated"
          },
          {
            "description": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
            "key": "employment_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeRequestEmploymentStatus"
                }
              }
            }
          },
          {
            "description": "The employee's termination date.",
            "key": "termination_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The URL of the employee's avatar image.",
            "key": "avatar",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uri",
                    "maxLength": 2000
                  }
                }
              }
            }
          },
          {
            "key": "integration_params",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeRequestIntegrationParams"
                }
              }
            }
          },
          {
            "key": "linked_account_params",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeeRequestLinkedAccountParams"
                }
              }
            }
          }
        ]
      }
    },
    "EmployeeResponse": {
      "name": "EmployeeResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "model",
            "valueType": {
              "type": "id",
              "value": "Employee"
            }
          },
          {
            "key": "warnings",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "WarningValidationProblem"
              }
            }
          },
          {
            "key": "errors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ErrorValidationProblem"
              }
            }
          },
          {
            "key": "logs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "DebugModeLog"
                }
              }
            }
          }
        ]
      }
    },
    "EmploymentPayPeriod": {
      "description": "The time period this pay rate encompasses.\n\n* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
      "name": "EmploymentPayPeriod",
      "shape": {
        "type": "object",
        "extends": [
          "PayPeriodEnum"
        ],
        "properties": []
      }
    },
    "EmploymentPayFrequency": {
      "description": "The position's pay frequency.\n\n* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
      "name": "EmploymentPayFrequency",
      "shape": {
        "type": "object",
        "extends": [
          "PayFrequencyEnum"
        ],
        "properties": []
      }
    },
    "EmploymentPayCurrency": {
      "description": "The position's currency code.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
      "name": "EmploymentPayCurrency",
      "shape": {
        "type": "object",
        "extends": [
          "PayCurrencyEnum"
        ],
        "properties": []
      }
    },
    "EmploymentFlsaStatus": {
      "description": "The position's FLSA status.\n\n* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
      "name": "EmploymentFlsaStatus",
      "shape": {
        "type": "object",
        "extends": [
          "FlsaStatusEnum"
        ],
        "properties": []
      }
    },
    "EmploymentEmploymentType": {
      "description": "The position's type of employment.\n\n* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
      "name": "EmploymentEmploymentType",
      "shape": {
        "type": "object",
        "extends": [
          "EmploymentTypeEnum"
        ],
        "properties": []
      }
    },
    "EmploymentFieldMappings": {
      "name": "EmploymentFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Employment": {
      "description": "# The Employment Object\n### Description\nThe `Employment` object is used to represent a job position at a company.\n\nPlease note: When there is a change in pay or title, integrations with historical data will create new Employment objects while integrations without historical data will update existing ones.\n\n### Usage Example\nFetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.",
      "name": "Employment",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee holding this position.",
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The position's title.",
            "key": "job_title",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The position's pay rate in dollars.",
            "key": "pay_rate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The time period this pay rate encompasses.\n\n* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
            "key": "pay_period",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentPayPeriod"
                }
              }
            }
          },
          {
            "description": "The position's pay frequency.\n\n* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
            "key": "pay_frequency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentPayFrequency"
                }
              }
            }
          },
          {
            "description": "The position's currency code.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
            "key": "pay_currency",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentPayCurrency"
                }
              }
            }
          },
          {
            "description": "The employment's pay group",
            "key": "pay_group",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The position's FLSA status.\n\n* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
            "key": "flsa_status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentFlsaStatus"
                }
              }
            }
          },
          {
            "description": "The position's effective date.",
            "key": "effective_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The position's type of employment.\n\n* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
            "key": "employment_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentEmploymentType"
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "EmploymentStatusEnum": {
      "description": "* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
      "name": "EmploymentStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ACTIVE"
          },
          {
            "value": "PENDING"
          },
          {
            "value": "INACTIVE"
          }
        ]
      }
    },
    "EmploymentTypeEnum": {
      "description": "* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
      "name": "EmploymentTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "FULL_TIME"
          },
          {
            "value": "PART_TIME"
          },
          {
            "value": "INTERN"
          },
          {
            "value": "CONTRACTOR"
          },
          {
            "value": "FREELANCE"
          }
        ]
      }
    },
    "EnabledActionsEnum": {
      "description": "* `READ` - READ\n* `WRITE` - WRITE",
      "name": "EnabledActionsEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "READ"
          },
          {
            "value": "WRITE"
          }
        ]
      }
    },
    "EncodingEnum": {
      "description": "* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
      "name": "EncodingEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "RAW"
          },
          {
            "value": "BASE64"
          },
          {
            "value": "GZIP_BASE64"
          }
        ]
      }
    },
    "EndUserDetailsRequest": {
      "name": "EndUserDetailsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
            "key": "end_user_email_address",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            }
          },
          {
            "description": "Your end user's organization.",
            "key": "end_user_organization_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            }
          },
          {
            "description": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
            "key": "end_user_origin_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            }
          },
          {
            "description": "The integration categories to show in Merge Link.",
            "key": "categories",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "CategoriesEnum"
              }
            }
          },
          {
            "description": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.",
            "key": "integration",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          },
          {
            "description": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.",
            "key": "link_expiry_mins",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer",
                  "minimum": 30,
                  "maximum": 10080,
                  "default": 30
                }
              }
            }
          },
          {
            "description": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.",
            "key": "should_create_magic_link_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          {
            "description": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account.",
            "key": "common_models",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "CommonModelScopesBodyRequest"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "ErrorValidationProblem": {
      "name": "ErrorValidationProblem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ValidationProblemSource"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "problem_type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "EthnicityEnum": {
      "description": "* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "name": "EthnicityEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "AMERICAN_INDIAN_OR_ALASKA_NATIVE"
          },
          {
            "value": "ASIAN_OR_INDIAN_SUBCONTINENT"
          },
          {
            "value": "BLACK_OR_AFRICAN_AMERICAN"
          },
          {
            "value": "HISPANIC_OR_LATINO"
          },
          {
            "value": "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER"
          },
          {
            "value": "TWO_OR_MORE_RACES"
          },
          {
            "value": "WHITE"
          },
          {
            "value": "PREFER_NOT_TO_DISCLOSE"
          }
        ]
      }
    },
    "FlsaStatusEnum": {
      "description": "* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
      "name": "FlsaStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "EXEMPT"
          },
          {
            "value": "SALARIED_NONEXEMPT"
          },
          {
            "value": "NONEXEMPT"
          },
          {
            "value": "OWNER"
          }
        ]
      }
    },
    "GenderEnum": {
      "description": "* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "name": "GenderEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "MALE"
          },
          {
            "value": "FEMALE"
          },
          {
            "value": "NON-BINARY"
          },
          {
            "value": "OTHER"
          },
          {
            "value": "PREFER_NOT_TO_DISCLOSE"
          }
        ]
      }
    },
    "GenerateRemoteKeyRequest": {
      "description": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
      "name": "GenerateRemoteKeyRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "GroupType": {
      "description": "The group type\n\n* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
      "name": "GroupType",
      "shape": {
        "type": "object",
        "extends": [
          "GroupTypeEnum"
        ],
        "properties": []
      }
    },
    "GroupFieldMappings": {
      "name": "GroupFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Group": {
      "description": "# The Group Object\n### Description\nThe `Group` object is used to represent any subset of employees, such as `PayGroup` or `Team`. Employees can be in multiple Groups.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and expand groups to view an employee's groups.",
      "name": "Group",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The parent group for this group.",
            "key": "parent_group",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The group name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The group type\n\n* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupType"
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "GroupTypeEnum": {
      "description": "* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
      "name": "GroupTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "TEAM"
          },
          {
            "value": "DEPARTMENT"
          },
          {
            "value": "COST_CENTER"
          },
          {
            "value": "BUSINESS_UNIT"
          },
          {
            "value": "GROUP"
          }
        ]
      }
    },
    "IgnoreCommonModelRequestReason": {
      "name": "IgnoreCommonModelRequestReason",
      "shape": {
        "type": "object",
        "extends": [
          "ReasonEnum"
        ],
        "properties": []
      }
    },
    "IgnoreCommonModelRequest": {
      "name": "IgnoreCommonModelRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "reason",
            "valueType": {
              "type": "id",
              "value": "IgnoreCommonModelRequestReason"
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 256
                }
              }
            }
          }
        ]
      }
    },
    "IssueStatus": {
      "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
      "name": "IssueStatus",
      "shape": {
        "type": "object",
        "extends": [
          "IssueStatusEnum"
        ],
        "properties": []
      }
    },
    "IssueEndUser": {
      "name": "IssueEndUser",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Issue": {
      "name": "Issue",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "IssueStatus"
              }
            }
          },
          {
            "key": "error_description",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "end_user",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "IssueEndUser"
              }
            }
          },
          {
            "key": "first_incident_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "key": "last_incident_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "key": "is_muted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "key": "error_details",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "IssueStatusEnum": {
      "description": "* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
      "name": "IssueStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ONGOING"
          },
          {
            "value": "RESOLVED"
          }
        ]
      }
    },
    "LinkToken": {
      "name": "LinkToken",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "link_token",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "integration_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "magic_link_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "LinkedAccountCondition": {
      "name": "LinkedAccountCondition",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID indicating which condition schema to use for a specific condition.",
            "key": "condition_schema_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "The common model for a specific condition.",
            "key": "common_model",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User-facing *native condition* name. e.g. \"Skip Manager\".",
            "key": "native_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "The operator for a specific condition.",
            "key": "operator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
            "key": "field_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "LinkedAccountConditionRequest": {
      "name": "LinkedAccountConditionRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The ID indicating which condition schema to use for a specific condition.",
            "key": "condition_schema_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "description": "The operator for a specific condition.",
            "key": "operator",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "LinkedAccountSelectiveSyncConfiguration": {
      "name": "LinkedAccountSelectiveSyncConfiguration",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The conditions belonging to a selective sync.",
            "key": "linked_account_conditions",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "LinkedAccountCondition"
                }
              }
            }
          }
        ]
      }
    },
    "LinkedAccountSelectiveSyncConfigurationListRequest": {
      "name": "LinkedAccountSelectiveSyncConfigurationListRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The selective syncs associated with a linked account.",
            "key": "sync_configurations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "LinkedAccountSelectiveSyncConfigurationRequest"
              }
            }
          }
        ]
      }
    },
    "LinkedAccountSelectiveSyncConfigurationRequest": {
      "name": "LinkedAccountSelectiveSyncConfigurationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The conditions belonging to a selective sync.",
            "key": "linked_account_conditions",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "LinkedAccountConditionRequest"
              }
            }
          }
        ]
      }
    },
    "LinkedAccountStatus": {
      "name": "LinkedAccountStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "linked_account_status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "can_make_request",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "LocationCountry": {
      "description": "The location's country.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
      "name": "LocationCountry",
      "shape": {
        "type": "object",
        "extends": [
          "CountryEnum"
        ],
        "properties": []
      }
    },
    "LocationLocationType": {
      "description": "The location's type. Can be either WORK or HOME\n\n* `HOME` - HOME\n* `WORK` - WORK",
      "name": "LocationLocationType",
      "shape": {
        "type": "object",
        "extends": [
          "LocationTypeEnum"
        ],
        "properties": []
      }
    },
    "LocationFieldMappings": {
      "name": "LocationFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Location": {
      "description": "# The Location Object\n### Description\nThe `Location` object is used to represent an address that can be associated with an employee.\n\n### Usage Example\nFetch from the `LIST Locations` endpoint and filter by `ID` to show all office locations.",
      "name": "Location",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The location's name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The location's phone number.",
            "key": "phone_number",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Line 1 of the location's street address.",
            "key": "street_1",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Line 2 of the location's street address.",
            "key": "street_2",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The location's city.",
            "key": "city",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The location's state. Represents a region if outside of the US.",
            "key": "state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The location's zip code or postal code.",
            "key": "zip_code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The location's country.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
            "key": "country",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocationCountry"
                }
              }
            }
          },
          {
            "description": "The location's type. Can be either WORK or HOME\n\n* `HOME` - HOME\n* `WORK` - WORK",
            "key": "location_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocationLocationType"
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocationFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "LocationTypeEnum": {
      "description": "* `HOME` - HOME\n* `WORK` - WORK",
      "name": "LocationTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "HOME"
          },
          {
            "value": "WORK"
          }
        ]
      }
    },
    "MaritalStatusEnum": {
      "description": "* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
      "name": "MaritalStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SINGLE"
          },
          {
            "value": "MARRIED_FILING_JOINTLY"
          },
          {
            "value": "MARRIED_FILING_SEPARATELY"
          },
          {
            "value": "HEAD_OF_HOUSEHOLD"
          },
          {
            "value": "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD"
          }
        ]
      }
    },
    "MetaResponseRequestSchema": {
      "name": "MetaResponseRequestSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "MetaResponseRemoteFieldClasses": {
      "name": "MetaResponseRemoteFieldClasses",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "MetaResponse": {
      "name": "MetaResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "request_schema",
            "valueType": {
              "type": "id",
              "value": "MetaResponseRequestSchema"
            }
          },
          {
            "key": "remote_field_classes",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "MetaResponseRemoteFieldClasses"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "LinkedAccountStatus"
              }
            }
          },
          {
            "key": "has_conditional_params",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "has_required_linked_account_params",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      }
    },
    "MethodEnum": {
      "description": "* `GET` - GET\n* `OPTIONS` - OPTIONS\n* `HEAD` - HEAD\n* `POST` - POST\n* `PUT` - PUT\n* `PATCH` - PATCH\n* `DELETE` - DELETE",
      "name": "MethodEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "GET"
          },
          {
            "value": "OPTIONS"
          },
          {
            "value": "HEAD"
          },
          {
            "value": "POST"
          },
          {
            "value": "PUT"
          },
          {
            "value": "PATCH"
          },
          {
            "value": "DELETE"
          }
        ]
      }
    },
    "ModelOperation": {
      "description": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
      "name": "ModelOperation",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "model_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "available_operations",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "required_post_parameters",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "supported_fields",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "MultipartFormFieldRequestEncoding": {
      "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
      "name": "MultipartFormFieldRequestEncoding",
      "shape": {
        "type": "object",
        "extends": [
          "EncodingEnum"
        ],
        "properties": []
      }
    },
    "MultipartFormFieldRequest": {
      "description": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
      "name": "MultipartFormFieldRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The name of the form field",
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The data for the form field.",
            "key": "data",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "description": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
            "key": "encoding",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "MultipartFormFieldRequestEncoding"
                }
              }
            }
          },
          {
            "description": "The file name of the form field, if the field is for a file.",
            "key": "file_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          },
          {
            "description": "The MIME type of the file, if the field is for a file.",
            "key": "content_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          }
        ]
      }
    },
    "OperatorSchema": {
      "name": "OperatorSchema",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The operator for which an operator schema is defined.",
            "key": "operator",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Whether the operator can be repeated multiple times.",
            "key": "is_unique",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedAccountDetailsAndActionsList": {
      "name": "PaginatedAccountDetailsAndActionsList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "AccountDetailsAndActions"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedBankInfoList": {
      "name": "PaginatedBankInfoList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "BankInfo"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedBenefitList": {
      "name": "PaginatedBenefitList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Benefit"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedCompanyList": {
      "name": "PaginatedCompanyList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Company"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedConditionSchemaList": {
      "name": "PaginatedConditionSchemaList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "ConditionSchema"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedEmployeeList": {
      "name": "PaginatedEmployeeList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Employee"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedEmployeePayrollRunList": {
      "name": "PaginatedEmployeePayrollRunList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "EmployeePayrollRun"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedEmploymentList": {
      "name": "PaginatedEmploymentList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Employment"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedGroupList": {
      "name": "PaginatedGroupList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Group"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedIssueList": {
      "name": "PaginatedIssueList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Issue"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedLocationList": {
      "name": "PaginatedLocationList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Location"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedPayGroupList": {
      "name": "PaginatedPayGroupList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "PayGroup"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedPayrollRunList": {
      "name": "PaginatedPayrollRunList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRun"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedSyncStatusList": {
      "name": "PaginatedSyncStatusList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SyncStatus"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedTeamList": {
      "name": "PaginatedTeamList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Team"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedTimeOffBalanceList": {
      "name": "PaginatedTimeOffBalanceList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalance"
                }
              }
            }
          }
        ]
      }
    },
    "PaginatedTimeOffList": {
      "name": "PaginatedTimeOffList",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "next",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "previous",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "results",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "TimeOff"
                }
              }
            }
          }
        ]
      }
    },
    "PayCurrencyEnum": {
      "description": "* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
      "name": "PayCurrencyEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "XUA"
          },
          {
            "value": "AFN"
          },
          {
            "value": "AFA"
          },
          {
            "value": "ALL"
          },
          {
            "value": "ALK"
          },
          {
            "value": "DZD"
          },
          {
            "value": "ADP"
          },
          {
            "value": "AOA"
          },
          {
            "value": "AOK"
          },
          {
            "value": "AON"
          },
          {
            "value": "AOR"
          },
          {
            "value": "ARA"
          },
          {
            "value": "ARS"
          },
          {
            "value": "ARM"
          },
          {
            "value": "ARP"
          },
          {
            "value": "ARL"
          },
          {
            "value": "AMD"
          },
          {
            "value": "AWG"
          },
          {
            "value": "AUD"
          },
          {
            "value": "ATS"
          },
          {
            "value": "AZN"
          },
          {
            "value": "AZM"
          },
          {
            "value": "BSD"
          },
          {
            "value": "BHD"
          },
          {
            "value": "BDT"
          },
          {
            "value": "BBD"
          },
          {
            "value": "BYN"
          },
          {
            "value": "BYB"
          },
          {
            "value": "BYR"
          },
          {
            "value": "BEF"
          },
          {
            "value": "BEC"
          },
          {
            "value": "BEL"
          },
          {
            "value": "BZD"
          },
          {
            "value": "BMD"
          },
          {
            "value": "BTN"
          },
          {
            "value": "BOB"
          },
          {
            "value": "BOL"
          },
          {
            "value": "BOV"
          },
          {
            "value": "BOP"
          },
          {
            "value": "BAM"
          },
          {
            "value": "BAD"
          },
          {
            "value": "BAN"
          },
          {
            "value": "BWP"
          },
          {
            "value": "BRC"
          },
          {
            "value": "BRZ"
          },
          {
            "value": "BRE"
          },
          {
            "value": "BRR"
          },
          {
            "value": "BRN"
          },
          {
            "value": "BRB"
          },
          {
            "value": "BRL"
          },
          {
            "value": "GBP"
          },
          {
            "value": "BND"
          },
          {
            "value": "BGL"
          },
          {
            "value": "BGN"
          },
          {
            "value": "BGO"
          },
          {
            "value": "BGM"
          },
          {
            "value": "BUK"
          },
          {
            "value": "BIF"
          },
          {
            "value": "XPF"
          },
          {
            "value": "KHR"
          },
          {
            "value": "CAD"
          },
          {
            "value": "CVE"
          },
          {
            "value": "KYD"
          },
          {
            "value": "XAF"
          },
          {
            "value": "CLE"
          },
          {
            "value": "CLP"
          },
          {
            "value": "CLF"
          },
          {
            "value": "CNX"
          },
          {
            "value": "CNY"
          },
          {
            "value": "CNH"
          },
          {
            "value": "COP"
          },
          {
            "value": "COU"
          },
          {
            "value": "KMF"
          },
          {
            "value": "CDF"
          },
          {
            "value": "CRC"
          },
          {
            "value": "HRD"
          },
          {
            "value": "HRK"
          },
          {
            "value": "CUC"
          },
          {
            "value": "CUP"
          },
          {
            "value": "CYP"
          },
          {
            "value": "CZK"
          },
          {
            "value": "CSK"
          },
          {
            "value": "DKK"
          },
          {
            "value": "DJF"
          },
          {
            "value": "DOP"
          },
          {
            "value": "NLG"
          },
          {
            "value": "XCD"
          },
          {
            "value": "DDM"
          },
          {
            "value": "ECS"
          },
          {
            "value": "ECV"
          },
          {
            "value": "EGP"
          },
          {
            "value": "GQE"
          },
          {
            "value": "ERN"
          },
          {
            "value": "EEK"
          },
          {
            "value": "ETB"
          },
          {
            "value": "EUR"
          },
          {
            "value": "XBA"
          },
          {
            "value": "XEU"
          },
          {
            "value": "XBB"
          },
          {
            "value": "XBC"
          },
          {
            "value": "XBD"
          },
          {
            "value": "FKP"
          },
          {
            "value": "FJD"
          },
          {
            "value": "FIM"
          },
          {
            "value": "FRF"
          },
          {
            "value": "XFO"
          },
          {
            "value": "XFU"
          },
          {
            "value": "GMD"
          },
          {
            "value": "GEK"
          },
          {
            "value": "GEL"
          },
          {
            "value": "DEM"
          },
          {
            "value": "GHS"
          },
          {
            "value": "GHC"
          },
          {
            "value": "GIP"
          },
          {
            "value": "XAU"
          },
          {
            "value": "GRD"
          },
          {
            "value": "GTQ"
          },
          {
            "value": "GWP"
          },
          {
            "value": "GNF"
          },
          {
            "value": "GNS"
          },
          {
            "value": "GYD"
          },
          {
            "value": "HTG"
          },
          {
            "value": "HNL"
          },
          {
            "value": "HKD"
          },
          {
            "value": "HUF"
          },
          {
            "value": "IMP"
          },
          {
            "value": "ISK"
          },
          {
            "value": "ISJ"
          },
          {
            "value": "INR"
          },
          {
            "value": "IDR"
          },
          {
            "value": "IRR"
          },
          {
            "value": "IQD"
          },
          {
            "value": "IEP"
          },
          {
            "value": "ILS"
          },
          {
            "value": "ILP"
          },
          {
            "value": "ILR"
          },
          {
            "value": "ITL"
          },
          {
            "value": "JMD"
          },
          {
            "value": "JPY"
          },
          {
            "value": "JOD"
          },
          {
            "value": "KZT"
          },
          {
            "value": "KES"
          },
          {
            "value": "KWD"
          },
          {
            "value": "KGS"
          },
          {
            "value": "LAK"
          },
          {
            "value": "LVL"
          },
          {
            "value": "LVR"
          },
          {
            "value": "LBP"
          },
          {
            "value": "LSL"
          },
          {
            "value": "LRD"
          },
          {
            "value": "LYD"
          },
          {
            "value": "LTL"
          },
          {
            "value": "LTT"
          },
          {
            "value": "LUL"
          },
          {
            "value": "LUC"
          },
          {
            "value": "LUF"
          },
          {
            "value": "MOP"
          },
          {
            "value": "MKD"
          },
          {
            "value": "MKN"
          },
          {
            "value": "MGA"
          },
          {
            "value": "MGF"
          },
          {
            "value": "MWK"
          },
          {
            "value": "MYR"
          },
          {
            "value": "MVR"
          },
          {
            "value": "MVP"
          },
          {
            "value": "MLF"
          },
          {
            "value": "MTL"
          },
          {
            "value": "MTP"
          },
          {
            "value": "MRU"
          },
          {
            "value": "MRO"
          },
          {
            "value": "MUR"
          },
          {
            "value": "MXV"
          },
          {
            "value": "MXN"
          },
          {
            "value": "MXP"
          },
          {
            "value": "MDC"
          },
          {
            "value": "MDL"
          },
          {
            "value": "MCF"
          },
          {
            "value": "MNT"
          },
          {
            "value": "MAD"
          },
          {
            "value": "MAF"
          },
          {
            "value": "MZE"
          },
          {
            "value": "MZN"
          },
          {
            "value": "MZM"
          },
          {
            "value": "MMK"
          },
          {
            "value": "NAD"
          },
          {
            "value": "NPR"
          },
          {
            "value": "ANG"
          },
          {
            "value": "TWD"
          },
          {
            "value": "NZD"
          },
          {
            "value": "NIO"
          },
          {
            "value": "NIC"
          },
          {
            "value": "NGN"
          },
          {
            "value": "KPW"
          },
          {
            "value": "NOK"
          },
          {
            "value": "OMR"
          },
          {
            "value": "PKR"
          },
          {
            "value": "XPD"
          },
          {
            "value": "PAB"
          },
          {
            "value": "PGK"
          },
          {
            "value": "PYG"
          },
          {
            "value": "PEI"
          },
          {
            "value": "PEN"
          },
          {
            "value": "PES"
          },
          {
            "value": "PHP"
          },
          {
            "value": "XPT"
          },
          {
            "value": "PLN"
          },
          {
            "value": "PLZ"
          },
          {
            "value": "PTE"
          },
          {
            "value": "GWE"
          },
          {
            "value": "QAR"
          },
          {
            "value": "XRE"
          },
          {
            "value": "RHD"
          },
          {
            "value": "RON"
          },
          {
            "value": "ROL"
          },
          {
            "value": "RUB"
          },
          {
            "value": "RUR"
          },
          {
            "value": "RWF"
          },
          {
            "value": "SVC"
          },
          {
            "value": "WST"
          },
          {
            "value": "SAR"
          },
          {
            "value": "RSD"
          },
          {
            "value": "CSD"
          },
          {
            "value": "SCR"
          },
          {
            "value": "SLL"
          },
          {
            "value": "XAG"
          },
          {
            "value": "SGD"
          },
          {
            "value": "SKK"
          },
          {
            "value": "SIT"
          },
          {
            "value": "SBD"
          },
          {
            "value": "SOS"
          },
          {
            "value": "ZAR"
          },
          {
            "value": "ZAL"
          },
          {
            "value": "KRH"
          },
          {
            "value": "KRW"
          },
          {
            "value": "KRO"
          },
          {
            "value": "SSP"
          },
          {
            "value": "SUR"
          },
          {
            "value": "ESP"
          },
          {
            "value": "ESA"
          },
          {
            "value": "ESB"
          },
          {
            "value": "XDR"
          },
          {
            "value": "LKR"
          },
          {
            "value": "SHP"
          },
          {
            "value": "XSU"
          },
          {
            "value": "SDD"
          },
          {
            "value": "SDG"
          },
          {
            "value": "SDP"
          },
          {
            "value": "SRD"
          },
          {
            "value": "SRG"
          },
          {
            "value": "SZL"
          },
          {
            "value": "SEK"
          },
          {
            "value": "CHF"
          },
          {
            "value": "SYP"
          },
          {
            "value": "STN"
          },
          {
            "value": "STD"
          },
          {
            "value": "TVD"
          },
          {
            "value": "TJR"
          },
          {
            "value": "TJS"
          },
          {
            "value": "TZS"
          },
          {
            "value": "XTS"
          },
          {
            "value": "THB"
          },
          {
            "value": "XXX"
          },
          {
            "value": "TPE"
          },
          {
            "value": "TOP"
          },
          {
            "value": "TTD"
          },
          {
            "value": "TND"
          },
          {
            "value": "TRY"
          },
          {
            "value": "TRL"
          },
          {
            "value": "TMT"
          },
          {
            "value": "TMM"
          },
          {
            "value": "USD"
          },
          {
            "value": "USN"
          },
          {
            "value": "USS"
          },
          {
            "value": "UGX"
          },
          {
            "value": "UGS"
          },
          {
            "value": "UAH"
          },
          {
            "value": "UAK"
          },
          {
            "value": "AED"
          },
          {
            "value": "UYW"
          },
          {
            "value": "UYU"
          },
          {
            "value": "UYP"
          },
          {
            "value": "UYI"
          },
          {
            "value": "UZS"
          },
          {
            "value": "VUV"
          },
          {
            "value": "VES"
          },
          {
            "value": "VEB"
          },
          {
            "value": "VEF"
          },
          {
            "value": "VND"
          },
          {
            "value": "VNN"
          },
          {
            "value": "CHE"
          },
          {
            "value": "CHW"
          },
          {
            "value": "XOF"
          },
          {
            "value": "YDD"
          },
          {
            "value": "YER"
          },
          {
            "value": "YUN"
          },
          {
            "value": "YUD"
          },
          {
            "value": "YUM"
          },
          {
            "value": "YUR"
          },
          {
            "value": "ZWN"
          },
          {
            "value": "ZRN"
          },
          {
            "value": "ZRZ"
          },
          {
            "value": "ZMW"
          },
          {
            "value": "ZMK"
          },
          {
            "value": "ZWD"
          },
          {
            "value": "ZWR"
          },
          {
            "value": "ZWL"
          }
        ]
      }
    },
    "PayFrequencyEnum": {
      "description": "* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
      "name": "PayFrequencyEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "WEEKLY"
          },
          {
            "value": "BIWEEKLY"
          },
          {
            "value": "MONTHLY"
          },
          {
            "value": "QUARTERLY"
          },
          {
            "value": "SEMIANNUALLY"
          },
          {
            "value": "ANNUALLY"
          },
          {
            "value": "THIRTEEN-MONTHLY"
          },
          {
            "value": "PRO_RATA"
          },
          {
            "value": "SEMIMONTHLY"
          }
        ]
      }
    },
    "PayGroupFieldMappings": {
      "name": "PayGroupFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "PayGroup": {
      "description": "# The PayGroup Object\n### Description\nThe `PayGroup` object is used to represent a subset of employees that are put together for payroll processing purposes.\n\n### Usage Example\nFetch from the `LIST PayGroup` endpoint and filter by `ID` to show all pay group information.",
      "name": "PayGroup",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The pay group name.",
            "key": "pay_group_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayGroupFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "PayPeriodEnum": {
      "description": "* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
      "name": "PayPeriodEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "HOUR"
          },
          {
            "value": "DAY"
          },
          {
            "value": "WEEK"
          },
          {
            "value": "EVERY_TWO_WEEKS"
          },
          {
            "value": "SEMIMONTHLY"
          },
          {
            "value": "MONTH"
          },
          {
            "value": "QUARTER"
          },
          {
            "value": "EVERY_SIX_MONTHS"
          },
          {
            "value": "YEAR"
          }
        ]
      }
    },
    "PayrollRunRunState": {
      "description": "The state of the payroll run\n\n* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
      "name": "PayrollRunRunState",
      "shape": {
        "type": "object",
        "extends": [
          "RunStateEnum"
        ],
        "properties": []
      }
    },
    "PayrollRunRunType": {
      "description": "The type of the payroll run\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
      "name": "PayrollRunRunType",
      "shape": {
        "type": "object",
        "extends": [
          "RunTypeEnum"
        ],
        "properties": []
      }
    },
    "PayrollRunFieldMappings": {
      "name": "PayrollRunFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "PayrollRun": {
      "description": "# The PayrollRun Object\n### Description\nThe `PayrollRun` object is used to represent a group of pay statements for a specific pay schedule.\n\n### Usage Example\nFetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all payroll runs.",
      "name": "PayrollRun",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The state of the payroll run\n\n* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
            "key": "run_state",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunRunState"
                }
              }
            }
          },
          {
            "description": "The type of the payroll run\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
            "key": "run_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunRunType"
                }
              }
            }
          },
          {
            "description": "The day and time the payroll run started.",
            "key": "start_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time the payroll run ended.",
            "key": "end_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time the payroll run was checked.",
            "key": "check_date",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "PolicyTypeEnum": {
      "description": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
      "name": "PolicyTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "VACATION"
          },
          {
            "value": "SICK"
          },
          {
            "value": "PERSONAL"
          },
          {
            "value": "JURY_DUTY"
          },
          {
            "value": "VOLUNTEER"
          },
          {
            "value": "BEREAVEMENT"
          }
        ]
      }
    },
    "ReasonEnum": {
      "description": "* `GENERAL_CUSTOMER_REQUEST` - GENERAL_CUSTOMER_REQUEST\n* `GDPR` - GDPR\n* `OTHER` - OTHER",
      "name": "ReasonEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "GENERAL_CUSTOMER_REQUEST"
          },
          {
            "value": "GDPR"
          },
          {
            "value": "OTHER"
          }
        ]
      }
    },
    "RemoteDataData": {
      "name": "RemoteDataData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "RemoteData": {
      "name": "RemoteData",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "RemoteDataData"
              }
            }
          }
        ]
      }
    },
    "RemoteKey": {
      "description": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
      "name": "RemoteKey",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "key",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "RemoteKeyForRegenerationRequest": {
      "description": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
      "name": "RemoteKeyForRegenerationRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      }
    },
    "RemoteResponseResponseHeaders": {
      "name": "RemoteResponseResponseHeaders",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "RemoteResponseResponseType": {
      "name": "RemoteResponseResponseType",
      "shape": {
        "type": "object",
        "extends": [
          "ResponseTypeEnum"
        ],
        "properties": []
      }
    },
    "RemoteResponseHeaders": {
      "name": "RemoteResponseHeaders",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "RemoteResponse": {
      "description": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
      "name": "RemoteResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "method",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "path",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "integer"
              }
            }
          },
          {
            "key": "response_headers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "RemoteResponseResponseHeaders"
              }
            }
          },
          {
            "key": "response_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "RemoteResponseResponseType"
              }
            }
          },
          {
            "key": "headers",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "RemoteResponseHeaders"
              }
            }
          }
        ]
      }
    },
    "RequestFormatEnum": {
      "description": "* `JSON` - JSON\n* `XML` - XML\n* `MULTIPART` - MULTIPART",
      "name": "RequestFormatEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "JSON"
          },
          {
            "value": "XML"
          },
          {
            "value": "MULTIPART"
          }
        ]
      }
    },
    "RequestTypeEnum": {
      "description": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
      "name": "RequestTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "VACATION"
          },
          {
            "value": "SICK"
          },
          {
            "value": "PERSONAL"
          },
          {
            "value": "JURY_DUTY"
          },
          {
            "value": "VOLUNTEER"
          },
          {
            "value": "BEREAVEMENT"
          }
        ]
      }
    },
    "ResponseTypeEnum": {
      "description": "* `JSON` - JSON\n* `BASE64_GZIP` - BASE64_GZIP",
      "name": "ResponseTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "JSON"
          },
          {
            "value": "BASE64_GZIP"
          }
        ]
      }
    },
    "RunStateEnum": {
      "description": "* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
      "name": "RunStateEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "PAID"
          },
          {
            "value": "DRAFT"
          },
          {
            "value": "APPROVED"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "CLOSED"
          }
        ]
      }
    },
    "RunTypeEnum": {
      "description": "* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
      "name": "RunTypeEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "REGULAR"
          },
          {
            "value": "OFF_CYCLE"
          },
          {
            "value": "CORRECTION"
          },
          {
            "value": "TERMINATION"
          },
          {
            "value": "SIGN_ON_BONUS"
          }
        ]
      }
    },
    "SelectiveSyncConfigurationsUsageEnum": {
      "description": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC\n* `IN_LAST_SYNC` - IN_LAST_SYNC",
      "name": "SelectiveSyncConfigurationsUsageEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "IN_NEXT_SYNC"
          },
          {
            "value": "IN_LAST_SYNC"
          }
        ]
      }
    },
    "SyncStatusStatus": {
      "name": "SyncStatusStatus",
      "shape": {
        "type": "object",
        "extends": [
          "SyncStatusStatusEnum"
        ],
        "properties": []
      }
    },
    "SyncStatus": {
      "description": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
      "name": "SyncStatus",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "model_name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "model_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "last_sync_start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "next_sync_start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "status",
            "valueType": {
              "type": "id",
              "value": "SyncStatusStatus"
            }
          },
          {
            "key": "is_initial_sync",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "selective_sync_configurations_usage",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SelectiveSyncConfigurationsUsageEnum"
              }
            }
          }
        ]
      }
    },
    "SyncStatusStatusEnum": {
      "description": "* `SYNCING` - SYNCING\n* `DONE` - DONE\n* `FAILED` - FAILED\n* `DISABLED` - DISABLED\n* `PAUSED` - PAUSED\n* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
      "name": "SyncStatusStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "SYNCING"
          },
          {
            "value": "DONE"
          },
          {
            "value": "FAILED"
          },
          {
            "value": "DISABLED"
          },
          {
            "value": "PAUSED"
          },
          {
            "value": "PARTIALLY_SYNCED"
          }
        ]
      }
    },
    "TaxFieldMappings": {
      "name": "TaxFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Tax": {
      "description": "# The Tax Object\n### Description\nThe `Tax` object is used to represent an array of the tax deductions for a given employee's payroll run.\n\n### Usage Example\nFetch from the `LIST Taxes` endpoint and filter by `ID` to show all taxes.",
      "name": "Tax",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "employee_payroll_run",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The tax's name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The tax amount.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "Whether or not the employer is responsible for paying the tax.",
            "key": "employer_tax",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TaxFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TeamFieldMappings": {
      "name": "TeamFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "Team": {
      "description": "# The Team Object\n### Description\nThe `Team` object is used to represent a subdivision of the company, usually a department. Each employee will be grouped into one specific Team.\n\n### Usage Example\nIf you're building a way to filter by `Team`, you'd hit the `GET Teams` endpoint to fetch the `Teams`, and then use the `ID` of the team your user selects to filter the `GET Employees` endpoint.",
      "name": "Team",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The team's name.",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The team's parent team.",
            "key": "parent_team",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TeamFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TimeOffStatus": {
      "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
      "name": "TimeOffStatus",
      "shape": {
        "type": "object",
        "extends": [
          "TimeOffStatusEnum"
        ],
        "properties": []
      }
    },
    "TimeOffUnits": {
      "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
      "name": "TimeOffUnits",
      "shape": {
        "type": "object",
        "extends": [
          "UnitsEnum"
        ],
        "properties": []
      }
    },
    "TimeOffRequestType": {
      "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
      "name": "TimeOffRequestType",
      "shape": {
        "type": "object",
        "extends": [
          "RequestTypeEnum"
        ],
        "properties": []
      }
    },
    "TimeOffFieldMappings": {
      "name": "TimeOffFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "TimeOff": {
      "description": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
      "name": "TimeOff",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee requesting time off.",
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The Merge ID of the employee with the ability to approve the time off request.",
            "key": "approver",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffStatus"
                }
              }
            }
          },
          {
            "description": "The employee note for this time off request.",
            "key": "employee_note",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
            "key": "units",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffUnits"
                }
              }
            }
          },
          {
            "description": "The time off quantity measured by the prescribed “units”.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
            "key": "request_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffRequestType"
                }
              }
            }
          },
          {
            "description": "The day and time of the start of the time requested off.",
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time of the end of the time requested off.",
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TimeOffBalancePolicyType": {
      "description": "The policy type of this time off balance.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
      "name": "TimeOffBalancePolicyType",
      "shape": {
        "type": "object",
        "extends": [
          "PolicyTypeEnum"
        ],
        "properties": []
      }
    },
    "TimeOffBalanceFieldMappings": {
      "name": "TimeOffBalanceFieldMappings",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "TimeOffBalance": {
      "description": "# The TimeOffBalance Object\n### Description\nThe `TimeOffBalance` object is used to represent current balances for an employee's Time Off plan.\n\n### Usage Example\nFetch from the `LIST TimeOffBalances` endpoint and filter by `ID` to show all time off balances.",
      "name": "TimeOffBalance",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          {
            "description": "The third-party API ID of the matching object.",
            "key": "remote_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The employee the balance belongs to.",
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The current remaining PTO balance, always measured in terms of hours.",
            "key": "balance",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The amount of PTO used in terms of hours.",
            "key": "used",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The policy type of this time off balance.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
            "key": "policy_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancePolicyType"
                }
              }
            }
          },
          {
            "description": "Indicates whether or not this object has been deleted by third party webhooks.",
            "key": "remote_was_deleted",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          },
          {
            "description": "This is the datetime that this object was last updated by Merge",
            "key": "modified_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "key": "field_mappings",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalanceFieldMappings"
                }
              }
            }
          },
          {
            "key": "remote_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "RemoteData"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "TimeOffEndpointRequest": {
      "name": "TimeOffEndpointRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "model",
            "valueType": {
              "type": "id",
              "value": "TimeOffRequest"
            }
          }
        ]
      }
    },
    "TimeOffRequestStatus": {
      "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
      "name": "TimeOffRequestStatus",
      "shape": {
        "type": "object",
        "extends": [
          "TimeOffStatusEnum"
        ],
        "properties": []
      }
    },
    "TimeOffRequestUnits": {
      "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
      "name": "TimeOffRequestUnits",
      "shape": {
        "type": "object",
        "extends": [
          "UnitsEnum"
        ],
        "properties": []
      }
    },
    "TimeOffRequestRequestType": {
      "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
      "name": "TimeOffRequestRequestType",
      "shape": {
        "type": "object",
        "extends": [
          "RequestTypeEnum"
        ],
        "properties": []
      }
    },
    "TimeOffRequestIntegrationParams": {
      "name": "TimeOffRequestIntegrationParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "TimeOffRequestLinkedAccountParams": {
      "name": "TimeOffRequestLinkedAccountParams",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": []
      }
    },
    "TimeOffRequest": {
      "description": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
      "name": "TimeOffRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The employee requesting time off.",
            "key": "employee",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The Merge ID of the employee with the ability to approve the time off request.",
            "key": "approver",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          },
          {
            "description": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffRequestStatus"
                }
              }
            }
          },
          {
            "description": "The employee note for this time off request.",
            "key": "employee_note",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "description": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
            "key": "units",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffRequestUnits"
                }
              }
            }
          },
          {
            "description": "The time off quantity measured by the prescribed “units”.",
            "key": "amount",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "double"
                  }
                }
              }
            }
          },
          {
            "description": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
            "key": "request_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffRequestRequestType"
                }
              }
            }
          },
          {
            "description": "The day and time of the start of the time requested off.",
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "description": "The day and time of the end of the time requested off.",
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          {
            "key": "integration_params",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffRequestIntegrationParams"
                }
              }
            }
          },
          {
            "key": "linked_account_params",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffRequestLinkedAccountParams"
                }
              }
            }
          }
        ]
      }
    },
    "TimeOffResponse": {
      "name": "TimeOffResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "model",
            "valueType": {
              "type": "id",
              "value": "TimeOff"
            }
          },
          {
            "key": "warnings",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "WarningValidationProblem"
              }
            }
          },
          {
            "key": "errors",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "id",
                "value": "ErrorValidationProblem"
              }
            }
          },
          {
            "key": "logs",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "DebugModeLog"
                }
              }
            }
          }
        ]
      }
    },
    "TimeOffStatusEnum": {
      "description": "* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
      "name": "TimeOffStatusEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "REQUESTED"
          },
          {
            "value": "APPROVED"
          },
          {
            "value": "DECLINED"
          },
          {
            "value": "CANCELLED"
          },
          {
            "value": "DELETED"
          }
        ]
      }
    },
    "UnitsEnum": {
      "description": "* `HOURS` - HOURS\n* `DAYS` - DAYS",
      "name": "UnitsEnum",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "HOURS"
          },
          {
            "value": "DAYS"
          }
        ]
      }
    },
    "ValidationProblemSource": {
      "name": "ValidationProblemSource",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "pointer",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "WarningValidationProblem": {
      "name": "WarningValidationProblem",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "source",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ValidationProblemSource"
              }
            }
          },
          {
            "key": "title",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "detail",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "problem_type",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "WebhookReceiver": {
      "name": "WebhookReceiver",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "event",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "is_active",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "WebhookReceiverRequest": {
      "name": "WebhookReceiverRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "event",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string",
                "minLength": 1
              }
            }
          },
          {
            "key": "is_active",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "boolean"
              }
            }
          },
          {
            "key": "key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        ]
      }
    },
    "BankInfoGetParametersSchema": {
      "name": "BankInfoGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "account_type"
          }
        ]
      }
    },
    "BankInfoIdGetParametersSchema": {
      "name": "BankInfoIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "account_type"
          }
        ]
      }
    },
    "BenefitsGetParametersSchema": {
      "name": "BenefitsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employee"
          }
        ]
      }
    },
    "BenefitsIdGetParametersSchema": {
      "name": "BenefitsIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employee"
          }
        ]
      }
    },
    "EmployeePayrollRunsGetParametersSchema": {
      "name": "EmployeePayrollRunsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employee"
          },
          {
            "value": "employee,payroll_run"
          },
          {
            "value": "payroll_run"
          }
        ]
      }
    },
    "EmployeePayrollRunsIdGetParametersSchema": {
      "name": "EmployeePayrollRunsIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employee"
          },
          {
            "value": "employee,payroll_run"
          },
          {
            "value": "payroll_run"
          }
        ]
      }
    },
    "EmployeesGetParametersSchema": {
      "name": "EmployeesGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employment_status"
          },
          {
            "value": "employment_status,ethnicity"
          },
          {
            "value": "employment_status,ethnicity,gender"
          },
          {
            "value": "employment_status,ethnicity,gender,marital_status"
          },
          {
            "value": "employment_status,ethnicity,marital_status"
          },
          {
            "value": "employment_status,gender"
          },
          {
            "value": "employment_status,gender,marital_status"
          },
          {
            "value": "employment_status,marital_status"
          },
          {
            "value": "ethnicity"
          },
          {
            "value": "ethnicity,gender"
          },
          {
            "value": "ethnicity,gender,marital_status"
          },
          {
            "value": "ethnicity,marital_status"
          },
          {
            "value": "gender"
          },
          {
            "value": "gender,marital_status"
          },
          {
            "value": "marital_status"
          }
        ]
      }
    },
    "EmployeesIdGetParametersSchema": {
      "name": "EmployeesIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employment_status"
          },
          {
            "value": "employment_status,ethnicity"
          },
          {
            "value": "employment_status,ethnicity,gender"
          },
          {
            "value": "employment_status,ethnicity,gender,marital_status"
          },
          {
            "value": "employment_status,ethnicity,marital_status"
          },
          {
            "value": "employment_status,gender"
          },
          {
            "value": "employment_status,gender,marital_status"
          },
          {
            "value": "employment_status,marital_status"
          },
          {
            "value": "ethnicity"
          },
          {
            "value": "ethnicity,gender"
          },
          {
            "value": "ethnicity,gender,marital_status"
          },
          {
            "value": "ethnicity,marital_status"
          },
          {
            "value": "gender"
          },
          {
            "value": "gender,marital_status"
          },
          {
            "value": "marital_status"
          }
        ]
      }
    },
    "EmploymentsGetParametersSchema": {
      "name": "EmploymentsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employment_type"
          },
          {
            "value": "employment_type,flsa_status"
          },
          {
            "value": "employment_type,flsa_status,pay_frequency"
          },
          {
            "value": "employment_type,flsa_status,pay_frequency,pay_period"
          },
          {
            "value": "employment_type,flsa_status,pay_period"
          },
          {
            "value": "employment_type,pay_frequency"
          },
          {
            "value": "employment_type,pay_frequency,pay_period"
          },
          {
            "value": "employment_type,pay_period"
          },
          {
            "value": "flsa_status"
          },
          {
            "value": "flsa_status,pay_frequency"
          },
          {
            "value": "flsa_status,pay_frequency,pay_period"
          },
          {
            "value": "flsa_status,pay_period"
          },
          {
            "value": "pay_frequency"
          },
          {
            "value": "pay_frequency,pay_period"
          },
          {
            "value": "pay_period"
          }
        ]
      }
    },
    "EmploymentsIdGetParametersSchema": {
      "name": "EmploymentsIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "employment_type"
          },
          {
            "value": "employment_type,flsa_status"
          },
          {
            "value": "employment_type,flsa_status,pay_frequency"
          },
          {
            "value": "employment_type,flsa_status,pay_frequency,pay_period"
          },
          {
            "value": "employment_type,flsa_status,pay_period"
          },
          {
            "value": "employment_type,pay_frequency"
          },
          {
            "value": "employment_type,pay_frequency,pay_period"
          },
          {
            "value": "employment_type,pay_period"
          },
          {
            "value": "flsa_status"
          },
          {
            "value": "flsa_status,pay_frequency"
          },
          {
            "value": "flsa_status,pay_frequency,pay_period"
          },
          {
            "value": "flsa_status,pay_period"
          },
          {
            "value": "pay_frequency"
          },
          {
            "value": "pay_frequency,pay_period"
          },
          {
            "value": "pay_period"
          }
        ]
      }
    },
    "GroupsGetParametersSchema": {
      "name": "GroupsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "type"
          }
        ]
      }
    },
    "GroupsIdGetParametersSchema": {
      "name": "GroupsIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "type"
          }
        ]
      }
    },
    "IssuesGetParametersSchema": {
      "name": "IssuesGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "ONGOING"
          },
          {
            "value": "RESOLVED"
          }
        ]
      }
    },
    "LinkedAccountsGetParametersSchema": {
      "name": "LinkedAccountsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "accounting"
          },
          {
            "value": "ats"
          },
          {
            "value": "crm"
          },
          {
            "value": "filestorage"
          },
          {
            "value": "hris"
          },
          {
            "value": "mktg"
          },
          {
            "value": "ticketing"
          }
        ]
      }
    },
    "LocationsGetParametersSchema": {
      "name": "LocationsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "location_type"
          }
        ]
      }
    },
    "LocationsIdGetParametersSchema": {
      "name": "LocationsIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "location_type"
          }
        ]
      }
    },
    "PayrollRunsGetParametersSchema": {
      "name": "PayrollRunsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "run_state"
          },
          {
            "value": "run_state,run_type"
          },
          {
            "value": "run_type"
          }
        ]
      }
    },
    "PayrollRunsIdGetParametersSchema": {
      "name": "PayrollRunsIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "run_state"
          },
          {
            "value": "run_state,run_type"
          },
          {
            "value": "run_type"
          }
        ]
      }
    },
    "TeamsGetParametersSchema": {
      "name": "TeamsGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "parent_team"
          }
        ]
      }
    },
    "TeamsIdGetParametersSchema": {
      "name": "TeamsIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "parent_team"
          }
        ]
      }
    },
    "TimeOffGetParametersSchema": {
      "name": "TimeOffGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "APPROVED"
          },
          {
            "value": "CANCELLED"
          },
          {
            "value": "DECLINED"
          },
          {
            "value": "DELETED"
          },
          {
            "value": "REQUESTED"
          }
        ]
      }
    },
    "TimeOffBalancesGetParametersSchema": {
      "name": "TimeOffBalancesGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "policy_type"
          }
        ]
      }
    },
    "TimeOffBalancesIdGetParametersSchema": {
      "name": "TimeOffBalancesIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "policy_type"
          }
        ]
      }
    },
    "TimeOffIdGetParametersSchema": {
      "name": "TimeOffIdGetParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "request_type"
          },
          {
            "value": "request_type,status"
          },
          {
            "value": "request_type,status,units"
          },
          {
            "value": "request_type,units"
          },
          {
            "value": "status"
          },
          {
            "value": "status,units"
          },
          {
            "value": "units"
          }
        ]
      }
    }
  },
  "subpackages": {
    "subpackage_accountDetails": {
      "subpackageId": "subpackage_accountDetails",
      "name": "accountDetails",
      "endpoints": [
        {
          "auth": true,
          "description": "Get details for a linked account.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "account-details.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/account-details"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AccountDetails"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/account-details",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                  "integration": "BambooHR",
                  "integration_slug": "bamboohr",
                  "category": "hris",
                  "end_user_origin_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "end_user_organization_name": "Waystar Royco",
                  "end_user_email_address": "kendall.roy@waystar-royco.com",
                  "status": "COMPLETE",
                  "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                  "is_duplicate": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                  "integration": "BambooHR",
                  "integration_slug": "bamboohr",
                  "category": "hris",
                  "end_user_origin_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "end_user_organization_name": "Waystar Royco",
                  "end_user_email_address": "kendall.roy@waystar-royco.com",
                  "status": "COMPLETE",
                  "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                  "is_duplicate": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_accountToken": {
      "subpackageId": "subpackage_accountToken",
      "name": "accountToken",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns the account token for the end user with the provided public token.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "account-token.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "public_token",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/account-token/"
              },
              {
                "type": "pathParameter",
                "value": "public_token"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AccountToken"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/account-token/",
              "pathParameters": {
                "public_token": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "account_token": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                  "integration": {
                    "name": "foo",
                    "categories": [
                      "hris"
                    ],
                    "image": "foo",
                    "square_image": "foo",
                    "color": "foo",
                    "slug": "foo",
                    "is_in_beta": true,
                    "api_endpoints_to_documentation_urls": {}
                  }
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "account_token": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                  "integration": {
                    "name": "foo",
                    "categories": [
                      "hris"
                    ],
                    "image": "foo",
                    "square_image": "foo",
                    "color": "foo",
                    "slug": "foo",
                    "is_in_beta": true,
                    "api_endpoints_to_documentation_urls": {}
                  }
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_availableActions": {
      "subpackageId": "subpackage_availableActions",
      "name": "availableActions",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of models and actions available for an account.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "available-actions.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/available-actions"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "AvailableActions"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/available-actions",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "integration": {
                    "name": "foo",
                    "categories": [
                      "hris"
                    ],
                    "image": "foo",
                    "square_image": "foo",
                    "color": "foo",
                    "slug": "foo",
                    "is_in_beta": true,
                    "api_endpoints_to_documentation_urls": {}
                  },
                  "passthrough_available": true,
                  "available_model_operations": [
                    {
                      "model_name": "Candidate",
                      "available_operations": [
                        "foo"
                      ],
                      "required_post_parameters": [
                        "foo"
                      ],
                      "supported_fields": [
                        "foo"
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "integration": {
                    "name": "foo",
                    "categories": [
                      "hris"
                    ],
                    "image": "foo",
                    "square_image": "foo",
                    "color": "foo",
                    "slug": "foo",
                    "is_in_beta": true,
                    "api_endpoints_to_documentation_urls": {}
                  },
                  "passthrough_available": true,
                  "available_model_operations": [
                    {
                      "model_name": "Candidate",
                      "available_operations": [
                        "foo"
                      ],
                      "required_post_parameters": [
                        "foo"
                      ],
                      "supported_fields": [
                        "foo"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_bankInfo": {
      "subpackageId": "subpackage_bankInfo",
      "name": "bankInfo",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `BankInfo` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "bank-info.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/bank-info"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return BankInfo's with this account type. Options: ('SAVINGS', 'CHECKING')\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
              "key": "account_type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoGetParametersSchema"
                }
              }
            },
            {
              "description": "If provided, will only return BankInfo's with this bank name.",
              "key": "bank_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return bank accounts for this employee.",
              "key": "employee_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Overrides the default ordering for this endpoint.",
              "key": "order_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoGetParametersSchema"
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedBankInfoList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/bank-info",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "employee_id": "foo",
                "expand": "employee",
                "remote_fields": "account_type",
                "show_enum_origins": "account_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "123234",
                      "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                      "account_number": "439291590",
                      "routing_number": "089690059",
                      "bank_name": "Chase",
                      "account_type": "SAVINGS",
                      "remote_created_at": "2021-12-06T10:11:26Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "123234",
                      "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                      "account_number": "439291590",
                      "routing_number": "089690059",
                      "bank_name": "Chase",
                      "account_type": "SAVINGS",
                      "remote_created_at": "2021-12-06T10:11:26Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `BankInfo` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "bank-info.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/bank-info/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BankInfoIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "BankInfo"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/bank-info/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "employee",
                "remote_fields": "account_type",
                "show_enum_origins": "account_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                  "remote_id": "123234",
                  "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                  "account_number": "439291590",
                  "routing_number": "089690059",
                  "bank_name": "Chase",
                  "account_type": "SAVINGS",
                  "remote_created_at": "2021-12-06T10:11:26Z",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                  "remote_id": "123234",
                  "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                  "account_number": "439291590",
                  "routing_number": "089690059",
                  "bank_name": "Chase",
                  "account_type": "SAVINGS",
                  "remote_created_at": "2021-12-06T10:11:26Z",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_benefits": {
      "subpackageId": "subpackage_benefits",
      "name": "benefits",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `Benefit` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "benefits.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/benefits"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will return the benefits associated with the employee.",
              "key": "employee_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BenefitsGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedBenefitList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/benefits",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "employee_id": "foo",
                "expand": "employee"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "provider_name": "Blue Shield of California",
                      "benefit_plan_type": "foo",
                      "employee_contribution": 23.65,
                      "company_contribution": 150,
                      "start_date": "2020-11-15 00:59:25.309761+00:00",
                      "end_date": "2021-10-15 00:23:25.309761+00:00",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "provider_name": "Blue Shield of California",
                      "benefit_plan_type": "foo",
                      "employee_contribution": 23.65,
                      "company_contribution": 150,
                      "start_date": "2020-11-15 00:59:25.309761+00:00",
                      "end_date": "2021-10-15 00:23:25.309761+00:00",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `Benefit` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "benefits.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/benefits/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "BenefitsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Benefit"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/benefits/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "employee"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "provider_name": "Blue Shield of California",
                  "benefit_plan_type": "foo",
                  "employee_contribution": 23.65,
                  "company_contribution": 150,
                  "start_date": "2020-11-15 00:59:25.309761+00:00",
                  "end_date": "2021-10-15 00:23:25.309761+00:00",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "provider_name": "Blue Shield of California",
                  "benefit_plan_type": "foo",
                  "employee_contribution": 23.65,
                  "company_contribution": 150,
                  "start_date": "2020-11-15 00:59:25.309761+00:00",
                  "end_date": "2021-10-15 00:23:25.309761+00:00",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_companies": {
      "subpackageId": "subpackage_companies",
      "name": "companies",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `Company` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "companies.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedCompanyList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_id": "19202938",
                      "legal_name": "Waystar Royco, Inc.",
                      "display_name": "Waystar Royco",
                      "eins": [
                        "foo"
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_id": "19202938",
                      "legal_name": "Waystar Royco, Inc.",
                      "display_name": "Waystar Royco",
                      "eins": [
                        "foo"
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `Company` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "companies.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/companies/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Company"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/companies/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                  "remote_id": "19202938",
                  "legal_name": "Waystar Royco, Inc.",
                  "display_name": "Waystar Royco",
                  "eins": [
                    "foo"
                  ],
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                  "remote_id": "19202938",
                  "legal_name": "Waystar Royco, Inc.",
                  "display_name": "Waystar Royco",
                  "eins": [
                    "foo"
                  ],
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_deleteAccount": {
      "subpackageId": "subpackage_deleteAccount",
      "name": "deleteAccount",
      "endpoints": [
        {
          "auth": true,
          "description": "Delete a linked account.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "delete-account.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/delete-account"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/delete-account",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_employeePayrollRuns": {
      "subpackageId": "subpackage_employeePayrollRuns",
      "name": "employeePayrollRuns",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `EmployeePayrollRun` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "employee-payroll-runs.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employee-payroll-runs"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employee payroll runs for this employee.",
              "key": "employee_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employee payroll runs ended after this datetime.",
              "key": "ended_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employee payroll runs ended before this datetime.",
              "key": "ended_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeePayrollRunsGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employee payroll runs for this employee.",
              "key": "payroll_run_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employee payroll runs started after this datetime.",
              "key": "started_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employee payroll runs started before this datetime.",
              "key": "started_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedEmployeePayrollRunList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employee-payroll-runs",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "employee_id": "foo",
                "expand": "employee,payroll_run",
                "payroll_run_id": "foo"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "gross_pay": 1342.67,
                      "net_pay": 865.78,
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-09T00:00:00Z",
                      "check_date": "2020-11-10T00:00:00Z",
                      "earnings": [
                        {
                          "id": "babbced6-3a81-4775-8da2-490dc6385259",
                          "remote_id": "52802",
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "amount": 1002.34,
                          "type": "SALARY",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "foo",
                              "data": {}
                            }
                          ]
                        }
                      ],
                      "deductions": [
                        {
                          "id": "5fd439fc-1b64-4755-b275-64918936c365",
                          "remote_id": "93478612",
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "Social Security",
                          "employee_deduction": 34.54,
                          "company_deduction": 78.78,
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "foo",
                              "data": {}
                            }
                          ]
                        }
                      ],
                      "taxes": [
                        {
                          "id": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                          "remote_id": "26806834",
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "California State Income Tax",
                          "amount": 100.25,
                          "employer_tax": "False",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "foo",
                              "data": {}
                            }
                          ]
                        }
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "gross_pay": 1342.67,
                      "net_pay": 865.78,
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-09T00:00:00Z",
                      "check_date": "2020-11-10T00:00:00Z",
                      "earnings": [
                        {
                          "id": "babbced6-3a81-4775-8da2-490dc6385259",
                          "remote_id": "52802",
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "amount": 1002.34,
                          "type": "SALARY",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "foo",
                              "data": {}
                            }
                          ]
                        }
                      ],
                      "deductions": [
                        {
                          "id": "5fd439fc-1b64-4755-b275-64918936c365",
                          "remote_id": "93478612",
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "Social Security",
                          "employee_deduction": 34.54,
                          "company_deduction": 78.78,
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "foo",
                              "data": {}
                            }
                          ]
                        }
                      ],
                      "taxes": [
                        {
                          "id": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                          "remote_id": "26806834",
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "California State Income Tax",
                          "amount": 100.25,
                          "employer_tax": "False",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "foo",
                              "data": {}
                            }
                          ]
                        }
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns an `EmployeePayrollRun` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "employee-payroll-runs.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employee-payroll-runs/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeePayrollRunsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EmployeePayrollRun"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employee-payroll-runs/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "employee,payroll_run"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                  "gross_pay": 1342.67,
                  "net_pay": 865.78,
                  "start_date": "2020-11-08T00:00:00Z",
                  "end_date": "2020-11-09T00:00:00Z",
                  "check_date": "2020-11-10T00:00:00Z",
                  "earnings": [
                    {
                      "id": "babbced6-3a81-4775-8da2-490dc6385259",
                      "remote_id": "52802",
                      "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "amount": 1002.34,
                      "type": "SALARY",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ],
                  "deductions": [
                    {
                      "id": "5fd439fc-1b64-4755-b275-64918936c365",
                      "remote_id": "93478612",
                      "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "name": "Social Security",
                      "employee_deduction": 34.54,
                      "company_deduction": 78.78,
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ],
                  "taxes": [
                    {
                      "id": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                      "remote_id": "26806834",
                      "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "name": "California State Income Tax",
                      "amount": 100.25,
                      "employer_tax": "False",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ],
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                  "gross_pay": 1342.67,
                  "net_pay": 865.78,
                  "start_date": "2020-11-08T00:00:00Z",
                  "end_date": "2020-11-09T00:00:00Z",
                  "check_date": "2020-11-10T00:00:00Z",
                  "earnings": [
                    {
                      "id": "babbced6-3a81-4775-8da2-490dc6385259",
                      "remote_id": "52802",
                      "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "amount": 1002.34,
                      "type": "SALARY",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ],
                  "deductions": [
                    {
                      "id": "5fd439fc-1b64-4755-b275-64918936c365",
                      "remote_id": "93478612",
                      "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "name": "Social Security",
                      "employee_deduction": 34.54,
                      "company_deduction": 78.78,
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ],
                  "taxes": [
                    {
                      "id": "e3a825fd-c38d-4095-a717-df98c4cb9ebc",
                      "remote_id": "26806834",
                      "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "name": "California State Income Tax",
                      "amount": 100.25,
                      "employer_tax": "False",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ],
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_employees": {
      "subpackageId": "subpackage_employees",
      "name": "employees",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `Employee` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "employees.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employees"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return employees for this company.",
              "key": "company_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees with this display name.",
              "key": "display_full_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees with this employment status.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
              "key": "employment_status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeesGetParametersSchema"
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeesGetParametersSchema"
                }
              }
            },
            {
              "description": "If provided, will only return employees with this first name.",
              "key": "first_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees matching the group ids; multiple groups can be separated by commas.",
              "key": "groups",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include sensitive fields (such as social security numbers) in the response.",
              "key": "include_sensitive_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees with this last name.",
              "key": "last_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees for this manager.",
              "key": "manager_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees for this pay group",
              "key": "pay_group_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return Employees with this personal email",
              "key": "personal_email",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeesGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeesGetParametersSchema"
                }
              }
            },
            {
              "description": "If provided, will only return employees that started after this datetime.",
              "key": "started_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees that started before this datetime.",
              "key": "started_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees for this team.",
              "key": "team_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees that were terminated after this datetime.",
              "key": "terminated_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees that were terminated before this datetime.",
              "key": "terminated_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return Employees with this work email",
              "key": "work_email",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employees for this location.",
              "key": "work_location_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedEmployeeList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employees",
              "pathParameters": {},
              "queryParameters": {
                "company_id": "foo",
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "expand": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                "manager_id": "foo",
                "pay_group_id": "foo",
                "remote_fields": "employment_status,ethnicity,gender,marital_status",
                "show_enum_origins": "employment_status,ethnicity,gender,marital_status",
                "team_id": "foo",
                "work_location_id": "foo"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "remote_id": "19202938",
                      "employee_number": "2",
                      "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                      "first_name": "Greg",
                      "last_name": "Hirsch",
                      "display_full_name": "Cousin Greg Hirsch",
                      "username": "cousingreg",
                      "groups": [
                        "foo"
                      ],
                      "work_email": "greg@merge.dev",
                      "personal_email": "greg@gmail.com",
                      "mobile_phone_number": "+1234567890",
                      "employments": [
                        "foo"
                      ],
                      "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                      "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                      "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                      "ssn": "1234567890",
                      "gender": "MALE",
                      "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                      "marital_status": "SINGLE",
                      "date_of_birth": "1990-11-10T00:00:00Z",
                      "hire_date": "2020-10-10T00:00:00Z",
                      "start_date": "2020-10-11T00:00:00Z",
                      "remote_created_at": "2020-10-11T00:00:00Z",
                      "employment_status": "ACTIVE",
                      "termination_date": "2021-10-12T00:00:00Z",
                      "avatar": "http://alturl.com/h2h8m",
                      "custom_fields": {},
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "remote_id": "19202938",
                      "employee_number": "2",
                      "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                      "first_name": "Greg",
                      "last_name": "Hirsch",
                      "display_full_name": "Cousin Greg Hirsch",
                      "username": "cousingreg",
                      "groups": [
                        "foo"
                      ],
                      "work_email": "greg@merge.dev",
                      "personal_email": "greg@gmail.com",
                      "mobile_phone_number": "+1234567890",
                      "employments": [
                        "foo"
                      ],
                      "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                      "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                      "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                      "ssn": "1234567890",
                      "gender": "MALE",
                      "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                      "marital_status": "SINGLE",
                      "date_of_birth": "1990-11-10T00:00:00Z",
                      "hire_date": "2020-10-10T00:00:00Z",
                      "start_date": "2020-10-11T00:00:00Z",
                      "remote_created_at": "2020-10-11T00:00:00Z",
                      "employment_status": "ACTIVE",
                      "termination_date": "2021-10-12T00:00:00Z",
                      "avatar": "http://alturl.com/h2h8m",
                      "custom_fields": {},
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Creates an `Employee` object with the given values.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "employees.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employees"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Whether to include debug fields (such as log file links) in the response.",
              "key": "is_debug_mode",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether or not third-party updates should be run asynchronously.",
              "key": "run_async",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "EmployeeEndpointRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "EmployeeResponse"
              }
            },
            "statusCode": 201,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employees",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "requestBody": {
                "model": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "model": {}
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "model": {
                    "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                    "remote_id": "19202938",
                    "employee_number": "2",
                    "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    "first_name": "Greg",
                    "last_name": "Hirsch",
                    "display_full_name": "Cousin Greg Hirsch",
                    "username": "cousingreg",
                    "groups": [
                      "foo"
                    ],
                    "work_email": "greg@merge.dev",
                    "personal_email": "greg@gmail.com",
                    "mobile_phone_number": "+1234567890",
                    "employments": [
                      "foo"
                    ],
                    "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                    "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                    "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                    "ssn": "1234567890",
                    "gender": "MALE",
                    "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                    "marital_status": "SINGLE",
                    "date_of_birth": "1990-11-10T00:00:00Z",
                    "hire_date": "2020-10-10T00:00:00Z",
                    "start_date": "2020-10-11T00:00:00Z",
                    "remote_created_at": "2020-10-11T00:00:00Z",
                    "employment_status": "ACTIVE",
                    "termination_date": "2021-10-12T00:00:00Z",
                    "avatar": "http://alturl.com/h2h8m",
                    "custom_fields": {},
                    "remote_was_deleted": true,
                    "modified_at": "2021-10-16T00:00:00Z",
                    "field_mappings": {},
                    "remote_data": [
                      {
                        "path": "foo",
                        "data": {}
                      }
                    ]
                  },
                  "warnings": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Unrecognized Field",
                      "detail": "An unrecognized field, age, was passed in with request data.",
                      "problem_type": "UNRECOGNIZED_FIELD"
                    }
                  ],
                  "errors": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Missing Required Field",
                      "detail": "custom_fields is a required field on model.",
                      "problem_type": "MISSING_REQUIRED_FIELD"
                    }
                  ],
                  "logs": [
                    {
                      "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                      "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                      "log_summary": {
                        "url": "https://harvest.greenhouse.io/v1/candidates/",
                        "method": "POST",
                        "status_code": 200
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "model": {
                    "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                    "remote_id": "19202938",
                    "employee_number": "2",
                    "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    "first_name": "Greg",
                    "last_name": "Hirsch",
                    "display_full_name": "Cousin Greg Hirsch",
                    "username": "cousingreg",
                    "groups": [
                      "foo"
                    ],
                    "work_email": "greg@merge.dev",
                    "personal_email": "greg@gmail.com",
                    "mobile_phone_number": "+1234567890",
                    "employments": [
                      "foo"
                    ],
                    "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                    "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                    "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                    "ssn": "1234567890",
                    "gender": "MALE",
                    "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                    "marital_status": "SINGLE",
                    "date_of_birth": "1990-11-10T00:00:00Z",
                    "hire_date": "2020-10-10T00:00:00Z",
                    "start_date": "2020-10-11T00:00:00Z",
                    "remote_created_at": "2020-10-11T00:00:00Z",
                    "employment_status": "ACTIVE",
                    "termination_date": "2021-10-12T00:00:00Z",
                    "avatar": "http://alturl.com/h2h8m",
                    "custom_fields": {},
                    "remote_was_deleted": true,
                    "modified_at": "2021-10-16T00:00:00Z",
                    "field_mappings": {},
                    "remote_data": [
                      {
                        "path": "foo",
                        "data": {}
                      }
                    ]
                  },
                  "warnings": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Unrecognized Field",
                      "detail": "An unrecognized field, age, was passed in with request data.",
                      "problem_type": "UNRECOGNIZED_FIELD"
                    }
                  ],
                  "errors": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Missing Required Field",
                      "detail": "custom_fields is a required field on model.",
                      "problem_type": "MISSING_REQUIRED_FIELD"
                    }
                  ],
                  "logs": [
                    {
                      "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                      "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                      "log_summary": {
                        "url": "https://harvest.greenhouse.io/v1/candidates/",
                        "method": "POST",
                        "status_code": 200
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns an `Employee` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "employees.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employees/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeesIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include sensitive fields (such as social security numbers) in the response.",
              "key": "include_sensitive_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeesIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmployeesIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Employee"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employees/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                "remote_fields": "employment_status,ethnicity,gender,marital_status",
                "show_enum_origins": "employment_status,ethnicity,gender,marital_status"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                  "remote_id": "19202938",
                  "employee_number": "2",
                  "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                  "first_name": "Greg",
                  "last_name": "Hirsch",
                  "display_full_name": "Cousin Greg Hirsch",
                  "username": "cousingreg",
                  "groups": [
                    "foo"
                  ],
                  "work_email": "greg@merge.dev",
                  "personal_email": "greg@gmail.com",
                  "mobile_phone_number": "+1234567890",
                  "employments": [
                    "foo"
                  ],
                  "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                  "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                  "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                  "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                  "ssn": "1234567890",
                  "gender": "MALE",
                  "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                  "marital_status": "SINGLE",
                  "date_of_birth": "1990-11-10T00:00:00Z",
                  "hire_date": "2020-10-10T00:00:00Z",
                  "start_date": "2020-10-11T00:00:00Z",
                  "remote_created_at": "2020-10-11T00:00:00Z",
                  "employment_status": "ACTIVE",
                  "termination_date": "2021-10-12T00:00:00Z",
                  "avatar": "http://alturl.com/h2h8m",
                  "custom_fields": {},
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                  "remote_id": "19202938",
                  "employee_number": "2",
                  "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                  "first_name": "Greg",
                  "last_name": "Hirsch",
                  "display_full_name": "Cousin Greg Hirsch",
                  "username": "cousingreg",
                  "groups": [
                    "foo"
                  ],
                  "work_email": "greg@merge.dev",
                  "personal_email": "greg@gmail.com",
                  "mobile_phone_number": "+1234567890",
                  "employments": [
                    "foo"
                  ],
                  "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                  "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                  "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                  "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                  "ssn": "1234567890",
                  "gender": "MALE",
                  "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                  "marital_status": "SINGLE",
                  "date_of_birth": "1990-11-10T00:00:00Z",
                  "hire_date": "2020-10-10T00:00:00Z",
                  "start_date": "2020-10-11T00:00:00Z",
                  "remote_created_at": "2020-10-11T00:00:00Z",
                  "employment_status": "ACTIVE",
                  "termination_date": "2021-10-12T00:00:00Z",
                  "avatar": "http://alturl.com/h2h8m",
                  "custom_fields": {},
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Ignores a specific row based on the `model_id` in the url. These records will have their properties set to null, and will not be updated in future syncs. The \"reason\" and \"message\" fields in the request body will be stored for audit purposes.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "ignoreCreate",
          "originalEndpointId": "employees.ignoreCreate",
          "name": "Ignore Create",
          "path": {
            "pathParameters": [
              {
                "key": "model_id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employees/ignore/"
              },
              {
                "type": "pathParameter",
                "value": "model_id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "IgnoreCommonModelRequest"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employees/ignore/",
              "pathParameters": {
                "model_id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "requestBody": {
                "reason": "GENERAL_CUSTOMER_REQUEST"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "reason": "GENERAL_CUSTOMER_REQUEST"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns metadata for `Employee` POSTs.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "metaPostRetrieve",
          "originalEndpointId": "employees.metaPostRetrieve",
          "name": "Meta Post Retrieve",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employees/meta/post"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "MetaResponse"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employees/meta/post",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "request_schema": {},
                  "remote_field_classes": {},
                  "status": {
                    "linked_account_status": "foo",
                    "can_make_request": true
                  },
                  "has_conditional_params": true,
                  "has_required_linked_account_params": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "request_schema": {},
                  "remote_field_classes": {},
                  "status": {
                    "linked_account_status": "foo",
                    "can_make_request": true
                  },
                  "has_conditional_params": true,
                  "has_required_linked_account_params": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_employments": {
      "subpackageId": "subpackage_employments",
      "name": "employments",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `Employment` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "employments.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employments"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return employments for this employee.",
              "key": "employee_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentsGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Overrides the default ordering for this endpoint.",
              "key": "order_by",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentsGetParametersSchema"
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentsGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentsGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedEmploymentList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employments",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "employee_id": "foo",
                "expand": "employee,pay_group",
                "remote_fields": "employment_type,flsa_status,pay_frequency,pay_period",
                "show_enum_origins": "employment_type,flsa_status,pay_frequency,pay_period"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                      "remote_id": "19202938",
                      "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "job_title": "Executive Assistant to Tom Wambsgans",
                      "pay_rate": "50000.00",
                      "pay_period": "HOUR",
                      "pay_frequency": "WEEKLY",
                      "pay_currency": "XUA",
                      "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                      "flsa_status": "EXEMPT",
                      "effective_date": "2023-10-06T18:42:34Z",
                      "employment_type": "FULL_TIME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                      "remote_id": "19202938",
                      "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "job_title": "Executive Assistant to Tom Wambsgans",
                      "pay_rate": "50000.00",
                      "pay_period": "HOUR",
                      "pay_frequency": "WEEKLY",
                      "pay_currency": "XUA",
                      "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                      "flsa_status": "EXEMPT",
                      "effective_date": "2023-10-06T18:42:34Z",
                      "employment_type": "FULL_TIME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns an `Employment` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "employments.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/employments/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "EmploymentsIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Employment"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/employments/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "employee,pay_group",
                "remote_fields": "employment_type,flsa_status,pay_frequency,pay_period",
                "show_enum_origins": "employment_type,flsa_status,pay_frequency,pay_period"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                  "remote_id": "19202938",
                  "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                  "job_title": "Executive Assistant to Tom Wambsgans",
                  "pay_rate": "50000.00",
                  "pay_period": "HOUR",
                  "pay_frequency": "WEEKLY",
                  "pay_currency": "XUA",
                  "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                  "flsa_status": "EXEMPT",
                  "effective_date": "2023-10-06T18:42:34Z",
                  "employment_type": "FULL_TIME",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                  "remote_id": "19202938",
                  "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                  "job_title": "Executive Assistant to Tom Wambsgans",
                  "pay_rate": "50000.00",
                  "pay_period": "HOUR",
                  "pay_frequency": "WEEKLY",
                  "pay_currency": "XUA",
                  "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                  "flsa_status": "EXEMPT",
                  "effective_date": "2023-10-06T18:42:34Z",
                  "employment_type": "FULL_TIME",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_generateKey": {
      "subpackageId": "subpackage_generateKey",
      "name": "generateKey",
      "endpoints": [
        {
          "auth": true,
          "description": "Create a remote key.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "generate-key.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/generate-key"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "GenerateRemoteKeyRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RemoteKey"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/generate-key",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "Remote Deployment Key 1"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "Remote Deployment Key 1"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Remote Deployment Key 1",
                  "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Remote Deployment Key 1",
                  "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_groups": {
      "subpackageId": "subpackage_groups",
      "name": "groups",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `Group` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "groups.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/groups"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupsGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupsGetParametersSchema"
                }
              }
            },
            {
              "description": "If provided, will only return groups of these types. Multiple values can be separated by commas.",
              "key": "types",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedGroupList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/groups",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "remote_fields": "type",
                "show_enum_origins": "type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                      "remote_id": "800293",
                      "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                      "name": "COST_CENTER_US",
                      "type": "TEAM",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                      "remote_id": "800293",
                      "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                      "name": "COST_CENTER_US",
                      "type": "TEAM",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `Group` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "groups.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/groups/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "GroupsIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Group"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/groups/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "remote_fields": "type",
                "show_enum_origins": "type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                  "remote_id": "800293",
                  "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                  "name": "COST_CENTER_US",
                  "type": "TEAM",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                  "remote_id": "800293",
                  "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                  "name": "COST_CENTER_US",
                  "type": "TEAM",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_issues": {
      "subpackageId": "subpackage_issues",
      "name": "issues",
      "endpoints": [
        {
          "auth": true,
          "description": "Gets issues.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "issues.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/issues"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "account_token",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If included, will only include issues whose most recent action occurred before this time",
              "key": "end_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "end_user_organization_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return issues whose first incident time was after this datetime.",
              "key": "first_incident_time_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return issues whose first incident time was before this datetime.",
              "key": "first_incident_time_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If True, will include muted issues",
              "key": "include_muted",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "integration_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return issues whose last incident time was after this datetime.",
              "key": "last_incident_time_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return issues whose last incident time was before this datetime.",
              "key": "last_incident_time_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "If included, will only include issues whose most recent action occurred after this time",
              "key": "start_date",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "IssuesGetParametersSchema"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedIssueList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/issues",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "status": "ONGOING",
                      "error_description": "string",
                      "end_user": {},
                      "first_incident_time": "2022-12-05T16:19:15.161Z",
                      "last_incident_time": "2022-12-05T16:19:15.161Z",
                      "is_muted": true,
                      "error_details": [
                        "foo"
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "status": "ONGOING",
                      "error_description": "string",
                      "end_user": {},
                      "first_incident_time": "2022-12-05T16:19:15.161Z",
                      "last_incident_time": "2022-12-05T16:19:15.161Z",
                      "is_muted": true,
                      "error_details": [
                        "foo"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get a specific issue.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "issues.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/issues/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Issue"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/issues/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "status": "ONGOING",
                  "error_description": "string",
                  "end_user": {},
                  "first_incident_time": "2022-12-05T16:19:15.161Z",
                  "last_incident_time": "2022-12-05T16:19:15.161Z",
                  "is_muted": true,
                  "error_details": [
                    "foo"
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                  "status": "ONGOING",
                  "error_description": "string",
                  "end_user": {},
                  "first_incident_time": "2022-12-05T16:19:15.161Z",
                  "last_incident_time": "2022-12-05T16:19:15.161Z",
                  "is_muted": true,
                  "error_details": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_linkToken": {
      "subpackageId": "subpackage_linkToken",
      "name": "linkToken",
      "endpoints": [
        {
          "auth": true,
          "description": "Creates a link token to be used when linking a new end user.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "link-token.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/link-token"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "EndUserDetailsRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "LinkToken"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/link-token",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "end_user_email_address": "foo",
                "end_user_organization_name": "foo",
                "end_user_origin_id": "foo",
                "categories": [
                  "hris"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "end_user_email_address": "foo",
                  "end_user_organization_name": "foo",
                  "end_user_origin_id": "foo",
                  "categories": [
                    "hris"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "link_token": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                  "integration_name": "Lever",
                  "magic_link_url": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "link_token": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                  "integration_name": "Lever",
                  "magic_link_url": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_linkedAccounts": {
      "subpackageId": "subpackage_linkedAccounts",
      "name": "linkedAccounts",
      "endpoints": [
        {
          "auth": true,
          "description": "List linked accounts for your organization.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "linked-accounts.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/linked-accounts"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Options: ('hris', 'ats', 'accounting', 'ticketing', 'crm', 'mktg', 'filestorage')\n\n* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
              "key": "category",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LinkedAccountsGetParametersSchema"
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return linked accounts associated with the given email address.",
              "key": "end_user_email_address",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return linked accounts associated with the given organization name.",
              "key": "end_user_organization_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return linked accounts associated with the given origin ID.",
              "key": "end_user_origin_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once.",
              "key": "end_user_origin_ids",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "key": "id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            },
            {
              "description": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once.",
              "key": "ids",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account.",
              "key": "include_duplicates",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return linked accounts associated with the given integration name.",
              "key": "integration_name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts.",
              "key": "is_test_account",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedAccountDetailsAndActionsList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/linked-accounts",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                      "category": "hris",
                      "status": "COMPLETE",
                      "status_detail": "foo",
                      "end_user_origin_id": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                      "end_user_organization_name": "Foo Bar, LLC",
                      "end_user_email_address": "hradmin@foobar.dev",
                      "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                      "is_duplicate": true,
                      "integration": {
                        "name": "foo",
                        "categories": [
                          "hris"
                        ],
                        "image": "foo",
                        "square_image": "foo",
                        "color": "foo",
                        "slug": "foo",
                        "passthrough_available": true,
                        "available_model_operations": [
                          {
                            "model_name": "Candidate",
                            "available_operations": [
                              "foo"
                            ],
                            "required_post_parameters": [
                              "foo"
                            ],
                            "supported_fields": [
                              "foo"
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                      "category": "hris",
                      "status": "COMPLETE",
                      "status_detail": "foo",
                      "end_user_origin_id": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                      "end_user_organization_name": "Foo Bar, LLC",
                      "end_user_email_address": "hradmin@foobar.dev",
                      "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                      "is_duplicate": true,
                      "integration": {
                        "name": "foo",
                        "categories": [
                          "hris"
                        ],
                        "image": "foo",
                        "square_image": "foo",
                        "color": "foo",
                        "slug": "foo",
                        "passthrough_available": true,
                        "available_model_operations": [
                          {
                            "model_name": "Candidate",
                            "available_operations": [
                              "foo"
                            ],
                            "required_post_parameters": [
                              "foo"
                            ],
                            "supported_fields": [
                              "foo"
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_locations": {
      "subpackageId": "subpackage_locations",
      "name": "locations",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `Location` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "locations.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/locations"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocationsGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocationsGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedLocationList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/locations",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "remote_fields": "location_type",
                "show_enum_origins": "location_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                      "remote_id": "93018402",
                      "name": "NYC Office",
                      "phone_number": "+1111111111",
                      "street_1": "2920 Broadway",
                      "street_2": "2nd Floor",
                      "city": "New York ",
                      "state": "NY",
                      "zip_code": "10027",
                      "country": "AF",
                      "location_type": "HOME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                      "remote_id": "93018402",
                      "name": "NYC Office",
                      "phone_number": "+1111111111",
                      "street_1": "2920 Broadway",
                      "street_2": "2nd Floor",
                      "city": "New York ",
                      "state": "NY",
                      "zip_code": "10027",
                      "country": "AF",
                      "location_type": "HOME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `Location` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "locations.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/locations/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocationsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "LocationsIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Location"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/locations/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "remote_fields": "location_type",
                "show_enum_origins": "location_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                  "remote_id": "93018402",
                  "name": "NYC Office",
                  "phone_number": "+1111111111",
                  "street_1": "2920 Broadway",
                  "street_2": "2nd Floor",
                  "city": "New York ",
                  "state": "NY",
                  "zip_code": "10027",
                  "country": "AF",
                  "location_type": "HOME",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                  "remote_id": "93018402",
                  "name": "NYC Office",
                  "phone_number": "+1111111111",
                  "street_1": "2920 Broadway",
                  "street_2": "2nd Floor",
                  "city": "New York ",
                  "state": "NY",
                  "zip_code": "10027",
                  "country": "AF",
                  "location_type": "HOME",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_passthrough": {
      "subpackageId": "subpackage_passthrough",
      "name": "passthrough",
      "endpoints": [
        {
          "auth": true,
          "description": "Pull data from an endpoint not currently supported by Merge.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "passthrough.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/passthrough"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "DataPassthroughRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RemoteResponse"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/passthrough",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "requestBody": {
                "method": "GET",
                "path": "/scooters"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "method": "GET",
                  "path": "/scooters"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "method": "GET",
                  "path": "/scooters",
                  "status": 200,
                  "response": null,
                  "response_headers": {},
                  "response_type": "JSON",
                  "headers": {}
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "method": "GET",
                  "path": "/scooters",
                  "status": 200,
                  "response": null,
                  "response_headers": {},
                  "response_type": "JSON",
                  "headers": {}
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_payGroups": {
      "subpackageId": "subpackage_payGroups",
      "name": "payGroups",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `PayGroup` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "pay-groups.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pay-groups"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedPayGroupList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pay-groups",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "800293",
                      "pay_group_name": "contractor",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "800293",
                      "pay_group_name": "contractor",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `PayGroup` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "pay-groups.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pay-groups/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PayGroup"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pay-groups/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                  "remote_id": "800293",
                  "pay_group_name": "contractor",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                  "remote_id": "800293",
                  "pay_group_name": "contractor",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_payrollRuns": {
      "subpackageId": "subpackage_payrollRuns",
      "name": "payrollRuns",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `PayrollRun` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "payroll-runs.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payroll-runs"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return payroll runs ended after this datetime.",
              "key": "ended_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return payroll runs ended before this datetime.",
              "key": "ended_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunsGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
              "key": "run_type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunsGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunsGetParametersSchema"
                }
              }
            },
            {
              "description": "If provided, will only return payroll runs started after this datetime.",
              "key": "started_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return payroll runs started before this datetime.",
              "key": "started_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedPayrollRunList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/payroll-runs",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "remote_fields": "run_state,run_type",
                "show_enum_origins": "run_state,run_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                      "remote_id": "19202938",
                      "run_state": "PAID",
                      "run_type": "REGULAR",
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-15T00:00:00Z",
                      "check_date": "2020-11-15T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                      "remote_id": "19202938",
                      "run_state": "PAID",
                      "run_type": "REGULAR",
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-15T00:00:00Z",
                      "check_date": "2020-11-15T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `PayrollRun` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "payroll-runs.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/payroll-runs/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PayrollRunsIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PayrollRun"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/payroll-runs/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "remote_fields": "run_state,run_type",
                "show_enum_origins": "run_state,run_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                  "remote_id": "19202938",
                  "run_state": "PAID",
                  "run_type": "REGULAR",
                  "start_date": "2020-11-08T00:00:00Z",
                  "end_date": "2020-11-15T00:00:00Z",
                  "check_date": "2020-11-15T00:00:00Z",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                  "remote_id": "19202938",
                  "run_state": "PAID",
                  "run_type": "REGULAR",
                  "start_date": "2020-11-08T00:00:00Z",
                  "end_date": "2020-11-15T00:00:00Z",
                  "check_date": "2020-11-15T00:00:00Z",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_regenerateKey": {
      "subpackageId": "subpackage_regenerateKey",
      "name": "regenerateKey",
      "endpoints": [
        {
          "auth": true,
          "description": "Exchange remote keys.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "regenerate-key.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/regenerate-key"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "RemoteKeyForRegenerationRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "RemoteKey"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/regenerate-key",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "Remote Deployment Key 1"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "Remote Deployment Key 1"
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "name": "Remote Deployment Key 1",
                  "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "name": "Remote Deployment Key 1",
                  "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_selectiveSync": {
      "subpackageId": "subpackage_selectiveSync",
      "name": "selectiveSync",
      "endpoints": [
        {
          "auth": true,
          "description": "Get a linked account's selective syncs.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "configurationsList",
          "originalEndpointId": "selective-sync.configurationsList",
          "name": "Configurations List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/selective-sync/configurations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "LinkedAccountSelectiveSyncConfiguration"
                }
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/selective-sync/configurations",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "linked_account_conditions": [
                      {
                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                        "common_model": "hris.Employee",
                        "native_name": "Started At",
                        "operator": "GREATER_THAN_OR_EQUAL",
                        "value": null,
                        "field_name": "start_date"
                      }
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "linked_account_conditions": [
                      {
                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                        "common_model": "hris.Employee",
                        "native_name": "Started At",
                        "operator": "GREATER_THAN_OR_EQUAL",
                        "value": null,
                        "field_name": "start_date"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Replace a linked account's selective syncs.",
          "method": "PUT",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "configurationsUpdate",
          "originalEndpointId": "selective-sync.configurationsUpdate",
          "name": "Configurations Update",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/selective-sync/configurations"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "LinkedAccountSelectiveSyncConfigurationListRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "LinkedAccountSelectiveSyncConfiguration"
                }
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/selective-sync/configurations",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "requestBody": {
                "sync_configurations": [
                  {
                    "linked_account_conditions": [
                      {
                        "condition_schema_id": "foo",
                        "operator": "foo",
                        "value": null
                      }
                    ]
                  }
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "sync_configurations": [
                    {
                      "linked_account_conditions": [
                        {
                          "condition_schema_id": "foo",
                          "operator": "foo",
                          "value": null
                        }
                      ]
                    }
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "linked_account_conditions": [
                      {
                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                        "common_model": "hris.Employee",
                        "native_name": "Started At",
                        "operator": "GREATER_THAN_OR_EQUAL",
                        "value": null,
                        "field_name": "start_date"
                      }
                    ]
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "linked_account_conditions": [
                      {
                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                        "common_model": "hris.Employee",
                        "native_name": "Started At",
                        "operator": "GREATER_THAN_OR_EQUAL",
                        "value": null,
                        "field_name": "start_date"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Get metadata for the conditions available to a linked account.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "metaList",
          "originalEndpointId": "selective-sync.metaList",
          "name": "Meta List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/selective-sync/meta"
              }
            ]
          },
          "queryParameters": [
            {
              "key": "common_model",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedConditionSchemaList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/selective-sync/meta",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426655440000",
                      "common_model": "hris.Employee",
                      "native_name": "Started At",
                      "field_name": "start_date",
                      "is_unique": true,
                      "condition_type": "DATE_TIME",
                      "operators": [
                        {
                          "operator": "GREATER_THAN_OR_EQUAL",
                          "is_unique": true
                        },
                        {
                          "operator": "LESS_THAN_OR_EQUAL",
                          "is_unique": true
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426655440000",
                      "common_model": "hris.Employee",
                      "native_name": "Started At",
                      "field_name": "start_date",
                      "is_unique": true,
                      "condition_type": "DATE_TIME",
                      "operators": [
                        {
                          "operator": "GREATER_THAN_OR_EQUAL",
                          "is_unique": true
                        },
                        {
                          "operator": "LESS_THAN_OR_EQUAL",
                          "is_unique": true
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_syncStatus": {
      "subpackageId": "subpackage_syncStatus",
      "name": "syncStatus",
      "endpoints": [
        {
          "auth": true,
          "description": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "sync-status.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sync-status"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedSyncStatusList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/sync-status",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "model_name": "Employee",
                      "model_id": "hris.Employee",
                      "last_sync_start": "2021-03-30T19:44:18.695973Z",
                      "next_sync_start": "2021-03-30T20:44:18.662942Z",
                      "status": "SYNCING",
                      "is_initial_sync": true,
                      "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "model_name": "Employee",
                      "model_id": "hris.Employee",
                      "last_sync_start": "2021-03-30T19:44:18.695973Z",
                      "next_sync_start": "2021-03-30T20:44:18.662942Z",
                      "status": "SYNCING",
                      "is_initial_sync": true,
                      "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_forceResync": {
      "subpackageId": "subpackage_forceResync",
      "name": "forceResync",
      "endpoints": [
        {
          "auth": true,
          "description": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Core, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "sync_status_resync_create",
          "originalEndpointId": "force-resync.sync_status_resync_create",
          "name": "Sync Status Resync Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/sync-status/resync"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "SyncStatus"
                }
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/sync-status/resync",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "model_name": "Employee",
                    "model_id": "hris.Employee",
                    "last_sync_start": "2021-03-30T19:44:18.695973Z",
                    "next_sync_start": "2021-03-30T20:44:18.662942Z",
                    "status": "SYNCING",
                    "is_initial_sync": true,
                    "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "model_name": "Employee",
                    "model_id": "hris.Employee",
                    "last_sync_start": "2021-03-30T19:44:18.695973Z",
                    "next_sync_start": "2021-03-30T20:44:18.662942Z",
                    "status": "SYNCING",
                    "is_initial_sync": true,
                    "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_teams": {
      "subpackageId": "subpackage_teams",
      "name": "teams",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `Team` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "teams.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/teams"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TeamsGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return teams with this parent team.",
              "key": "parent_team_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedTeamList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/teams",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "expand": "parent_team",
                "parent_team_id": "foo"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                      "remote_id": "19202938",
                      "name": "Engineering",
                      "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                      "remote_id": "19202938",
                      "name": "Engineering",
                      "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `Team` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "teams.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/teams/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TeamsIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Team"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/teams/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "parent_team"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                  "remote_id": "19202938",
                  "name": "Engineering",
                  "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                  "remote_id": "19202938",
                  "name": "Engineering",
                  "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_timeOff": {
      "subpackageId": "subpackage_timeOff",
      "name": "timeOff",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `TimeOff` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "time-off.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-off"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return time off for this approver.",
              "key": "approver_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return time off for this employee.",
              "key": "employee_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
              "key": "request_type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffGetParametersSchema"
                }
              }
            },
            {
              "description": "If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedTimeOffList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-off",
              "pathParameters": {},
              "queryParameters": {
                "approver_id": "foo",
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "employee_id": "foo",
                "expand": "employee,approver",
                "remote_fields": "request_type,status,units",
                "show_enum_origins": "request_type,status,units"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "status": "REQUESTED",
                      "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                      "units": "HOURS",
                      "amount": 3,
                      "request_type": "VACATION",
                      "start_time": "2020-11-10T00:00:00Z",
                      "end_time": "2020-11-17T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "status": "REQUESTED",
                      "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                      "units": "HOURS",
                      "amount": 3,
                      "request_type": "VACATION",
                      "start_time": "2020-11-10T00:00:00Z",
                      "end_time": "2020-11-17T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Creates a `TimeOff` object with the given values.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "time-off.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-off"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Whether to include debug fields (such as log file links) in the response.",
              "key": "is_debug_mode",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether or not third-party updates should be run asynchronously.",
              "key": "run_async",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "TimeOffEndpointRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TimeOffResponse"
              }
            },
            "statusCode": 201,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-off",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "requestBody": {
                "model": {}
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "model": {}
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "model": {
                    "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                    "remote_id": "19202938",
                    "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "status": "REQUESTED",
                    "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                    "units": "HOURS",
                    "amount": 3,
                    "request_type": "VACATION",
                    "start_time": "2020-11-10T00:00:00Z",
                    "end_time": "2020-11-17T00:00:00Z",
                    "remote_was_deleted": true,
                    "modified_at": "2021-10-16T00:00:00Z",
                    "field_mappings": {},
                    "remote_data": [
                      {
                        "path": "foo",
                        "data": {}
                      }
                    ]
                  },
                  "warnings": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Unrecognized Field",
                      "detail": "An unrecognized field, age, was passed in with request data.",
                      "problem_type": "UNRECOGNIZED_FIELD"
                    }
                  ],
                  "errors": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Missing Required Field",
                      "detail": "custom_fields is a required field on model.",
                      "problem_type": "MISSING_REQUIRED_FIELD"
                    }
                  ],
                  "logs": [
                    {
                      "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                      "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                      "log_summary": {
                        "url": "https://harvest.greenhouse.io/v1/candidates/",
                        "method": "POST",
                        "status_code": 200
                      }
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "model": {
                    "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                    "remote_id": "19202938",
                    "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                    "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                    "status": "REQUESTED",
                    "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                    "units": "HOURS",
                    "amount": 3,
                    "request_type": "VACATION",
                    "start_time": "2020-11-10T00:00:00Z",
                    "end_time": "2020-11-17T00:00:00Z",
                    "remote_was_deleted": true,
                    "modified_at": "2021-10-16T00:00:00Z",
                    "field_mappings": {},
                    "remote_data": [
                      {
                        "path": "foo",
                        "data": {}
                      }
                    ]
                  },
                  "warnings": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Unrecognized Field",
                      "detail": "An unrecognized field, age, was passed in with request data.",
                      "problem_type": "UNRECOGNIZED_FIELD"
                    }
                  ],
                  "errors": [
                    {
                      "source": {
                        "pointer": "foo"
                      },
                      "title": "Missing Required Field",
                      "detail": "custom_fields is a required field on model.",
                      "problem_type": "MISSING_REQUIRED_FIELD"
                    }
                  ],
                  "logs": [
                    {
                      "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                      "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                      "log_summary": {
                        "url": "https://harvest.greenhouse.io/v1/candidates/",
                        "method": "POST",
                        "status_code": 200
                      }
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `TimeOff` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "time-off.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-off/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TimeOff"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-off/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "employee,approver",
                "remote_fields": "request_type,status,units",
                "show_enum_origins": "request_type,status,units"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                  "status": "REQUESTED",
                  "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                  "units": "HOURS",
                  "amount": 3,
                  "request_type": "VACATION",
                  "start_time": "2020-11-10T00:00:00Z",
                  "end_time": "2020-11-17T00:00:00Z",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                  "status": "REQUESTED",
                  "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                  "units": "HOURS",
                  "amount": 3,
                  "request_type": "VACATION",
                  "start_time": "2020-11-10T00:00:00Z",
                  "end_time": "2020-11-17T00:00:00Z",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns metadata for `TimeOff` POSTs.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "metaPostRetrieve",
          "originalEndpointId": "time-off.metaPostRetrieve",
          "name": "Meta Post Retrieve",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-off/meta/post"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "MetaResponse"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-off/meta/post",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "request_schema": {},
                  "remote_field_classes": {},
                  "status": {
                    "linked_account_status": "foo",
                    "can_make_request": true
                  },
                  "has_conditional_params": true,
                  "has_required_linked_account_params": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "request_schema": {},
                  "remote_field_classes": {},
                  "status": {
                    "linked_account_status": "foo",
                    "can_make_request": true
                  },
                  "has_conditional_params": true,
                  "has_required_linked_account_params": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_timeOffBalances": {
      "subpackageId": "subpackage_timeOffBalances",
      "name": "timeOffBalances",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `TimeOffBalance` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "time-off-balances.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-off-balances"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "If provided, will only return objects created after this datetime.",
              "key": "created_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return objects created before this datetime.",
              "key": "created_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "The pagination cursor value.",
              "key": "cursor",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return time off balances for this employee.",
              "key": "employee_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancesGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include data that was marked as deleted by third party webhooks.",
              "key": "include_deleted_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge after this date time will be returned.",
              "key": "modified_after",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "If provided, only objects synced by Merge before this date time will be returned.",
              "key": "modified_before",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            },
            {
              "description": "Number of results to return per page.",
              "key": "page_size",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            {
              "description": "If provided, will only return TimeOffBalance with this policy type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
              "key": "policy_type",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancesGetParametersSchema"
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancesGetParametersSchema"
                }
              }
            },
            {
              "description": "The API provider's ID for the given object.",
              "key": "remote_id",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancesGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "PaginatedTimeOffBalanceList"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-off-balances",
              "pathParameters": {},
              "queryParameters": {
                "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                "employee_id": "foo",
                "expand": "employee",
                "remote_fields": "policy_type",
                "show_enum_origins": "policy_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "balance": "60.0",
                      "used": "45.0",
                      "policy_type": "VACATION",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                  "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                  "results": [
                    {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "balance": "60.0",
                      "used": "45.0",
                      "policy_type": "VACATION",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "foo",
                          "data": {}
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a `TimeOffBalance` object with the given `id`.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "retrieve",
          "originalEndpointId": "time-off-balances.retrieve",
          "name": "Retrieve",
          "path": {
            "pathParameters": [
              {
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/time-off-balances/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "key": "expand",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancesIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "key": "include_remote_data",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "boolean"
                  }
                }
              }
            },
            {
              "description": "Deprecated. Use show_enum_origins.",
              "key": "remote_fields",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancesIdGetParametersSchema"
                }
              }
            },
            {
              "description": "Which fields should be returned in non-normalized form.",
              "key": "show_enum_origins",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "TimeOffBalancesIdGetParametersSchema"
                }
              }
            }
          ],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "TimeOffBalance"
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/time-off-balances/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {
                "expand": "employee",
                "remote_fields": "policy_type",
                "show_enum_origins": "policy_type"
              },
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "balance": "60.0",
                  "used": "45.0",
                  "policy_type": "VACATION",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                  "remote_id": "19202938",
                  "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                  "balance": "60.0",
                  "used": "45.0",
                  "policy_type": "VACATION",
                  "remote_was_deleted": true,
                  "modified_at": "2021-10-16T00:00:00Z",
                  "field_mappings": {},
                  "remote_data": [
                    {
                      "path": "foo",
                      "data": {}
                    }
                  ]
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_webhookReceivers": {
      "subpackageId": "subpackage_webhookReceivers",
      "name": "webhookReceivers",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a list of `WebhookReceiver` objects.",
          "method": "GET",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "list",
          "originalEndpointId": "webhook-receivers.list",
          "name": "List",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhook-receivers"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "WebhookReceiver"
                }
              }
            },
            "statusCode": 200,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/webhook-receivers",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "event": "foo",
                    "is_active": true,
                    "key": "foo"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "event": "foo",
                    "is_active": true,
                    "key": "foo"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Creates a `WebhookReceiver` object with the given values.",
          "method": "POST",
          "defaultEnvironment": "Production",
          "environments": [
            {
              "id": "Production",
              "baseUrl": "https://api.merge.dev/api/hris/v1"
            },
            {
              "id": "Sandbox",
              "baseUrl": "https://api-sandbox.merge.dev/api/hris/v1"
            }
          ],
          "id": "create",
          "originalEndpointId": "webhook-receivers.create",
          "name": "Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/webhook-receivers"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "Token identifying the end user.",
              "key": "X-Account-Token",
              "type": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "WebhookReceiverRequest"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "WebhookReceiver"
              }
            },
            "statusCode": 201,
            "description": ""
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/webhook-receivers",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "X-Account-Token": "foo"
              },
              "requestBody": {
                "event": "foo",
                "is_active": true
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "event": "foo",
                  "is_active": true
                }
              },
              "responseStatusCode": 201,
              "responseBody": {
                "type": "json",
                "value": {
                  "event": "foo",
                  "is_active": true,
                  "key": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "event": "foo",
                  "is_active": true,
                  "key": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "websockets": [],
    "types": [
      "AccountDetails",
      "AccountDetailsAndActions",
      "AccountDetailsAndActionsIntegration",
      "AccountDetailsAndActionsStatusEnum",
      "AccountIntegration",
      "AccountToken",
      "AccountTypeEnum",
      "AvailableActions",
      "BankInfo",
      "Benefit",
      "CategoriesEnum",
      "CategoryEnum",
      "CommonModelScopesBodyRequest",
      "Company",
      "ConditionSchema",
      "ConditionTypeEnum",
      "CountryEnum",
      "DataPassthroughRequest",
      "DebugModeLog",
      "DebugModelLogSummary",
      "Deduction",
      "Earning",
      "EarningTypeEnum",
      "Employee",
      "EmployeeEndpointRequest",
      "EmployeePayrollRun",
      "EmployeeRequest",
      "EmployeeResponse",
      "Employment",
      "EmploymentStatusEnum",
      "EmploymentTypeEnum",
      "EnabledActionsEnum",
      "EncodingEnum",
      "EndUserDetailsRequest",
      "ErrorValidationProblem",
      "EthnicityEnum",
      "FlsaStatusEnum",
      "GenderEnum",
      "GenerateRemoteKeyRequest",
      "Group",
      "GroupTypeEnum",
      "IgnoreCommonModelRequest",
      "Issue",
      "IssueStatusEnum",
      "LinkToken",
      "LinkedAccountCondition",
      "LinkedAccountConditionRequest",
      "LinkedAccountSelectiveSyncConfiguration",
      "LinkedAccountSelectiveSyncConfigurationListRequest",
      "LinkedAccountSelectiveSyncConfigurationRequest",
      "LinkedAccountStatus",
      "Location",
      "LocationTypeEnum",
      "MaritalStatusEnum",
      "MetaResponse",
      "MethodEnum",
      "ModelOperation",
      "MultipartFormFieldRequest",
      "OperatorSchema",
      "PaginatedAccountDetailsAndActionsList",
      "PaginatedBankInfoList",
      "PaginatedBenefitList",
      "PaginatedCompanyList",
      "PaginatedConditionSchemaList",
      "PaginatedEmployeeList",
      "PaginatedEmployeePayrollRunList",
      "PaginatedEmploymentList",
      "PaginatedGroupList",
      "PaginatedIssueList",
      "PaginatedLocationList",
      "PaginatedPayGroupList",
      "PaginatedPayrollRunList",
      "PaginatedSyncStatusList",
      "PaginatedTeamList",
      "PaginatedTimeOffBalanceList",
      "PaginatedTimeOffList",
      "PayCurrencyEnum",
      "PayFrequencyEnum",
      "PayGroup",
      "PayPeriodEnum",
      "PayrollRun",
      "PolicyTypeEnum",
      "ReasonEnum",
      "RemoteData",
      "RemoteKey",
      "RemoteKeyForRegenerationRequest",
      "RemoteResponse",
      "RequestFormatEnum",
      "RequestTypeEnum",
      "ResponseTypeEnum",
      "RunStateEnum",
      "RunTypeEnum",
      "SelectiveSyncConfigurationsUsageEnum",
      "SyncStatus",
      "SyncStatusStatusEnum",
      "Tax",
      "Team",
      "TimeOff",
      "TimeOffBalance",
      "TimeOffEndpointRequest",
      "TimeOffRequest",
      "TimeOffResponse",
      "TimeOffStatusEnum",
      "UnitsEnum",
      "ValidationProblemSource",
      "WarningValidationProblem",
      "WebhookReceiver",
      "WebhookReceiverRequest"
    ],
    "subpackages": [
      "subpackage_accountDetails",
      "subpackage_accountToken",
      "subpackage_availableActions",
      "subpackage_bankInfo",
      "subpackage_benefits",
      "subpackage_companies",
      "subpackage_deleteAccount",
      "subpackage_employeePayrollRuns",
      "subpackage_employees",
      "subpackage_employments",
      "subpackage_generateKey",
      "subpackage_groups",
      "subpackage_issues",
      "subpackage_linkToken",
      "subpackage_linkedAccounts",
      "subpackage_locations",
      "subpackage_passthrough",
      "subpackage_payGroups",
      "subpackage_payrollRuns",
      "subpackage_regenerateKey",
      "subpackage_selectiveSync",
      "subpackage_syncStatus",
      "subpackage_forceResync",
      "subpackage_teams",
      "subpackage_timeOff",
      "subpackage_timeOffBalances",
      "subpackage_webhookReceivers"
    ]
  },
  "auth": {
    "type": "header",
    "headerWireValue": "Authorization",
    "nameOverride": "Authorization"
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}