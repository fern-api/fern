{
  "types": {
    "OrderStatus": {
      "description": "Order Status",
      "name": "OrderStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "placed"
          },
          {
            "value": "approved"
          },
          {
            "value": "delivered"
          }
        ]
      }
    },
    "Order": {
      "name": "Order",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "petId",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "quantity",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "shipDate",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "description": "Order Status",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "OrderStatus"
              }
            }
          },
          {
            "key": "complete",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      }
    },
    "Category": {
      "name": "Category",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "User": {
      "name": "User",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "username",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "firstName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "lastName",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "email",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "password",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "phone",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "User Status",
            "key": "userStatus",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          }
        ]
      }
    },
    "Tag": {
      "name": "Tag",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PetStatus": {
      "description": "pet status in the store",
      "name": "PetStatus",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "available"
          },
          {
            "value": "pending"
          },
          {
            "value": "sold"
          }
        ]
      }
    },
    "Pet": {
      "name": "Pet",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "key": "category",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "Category"
              }
            }
          },
          {
            "key": "photoUrls",
            "valueType": {
              "type": "list",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Tag"
                }
              }
            }
          },
          {
            "description": "pet status in the store",
            "key": "status",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "PetStatus"
              }
            }
          }
        ]
      }
    },
    "ApiResponse": {
      "name": "ApiResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "code",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "message",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "PetFindByStatusGetParametersSchema": {
      "name": "PetFindByStatusGetParametersSchema",
      "shape": {
        "type": "enum",
        "default": "available",
        "values": [
          {
            "value": "available"
          },
          {
            "value": "pending"
          },
          {
            "value": "sold"
          }
        ]
      }
    }
  },
  "subpackages": {
    "subpackage_petsV1": {
      "subpackageId": "subpackage_petsV1",
      "name": "petsV1",
      "endpoints": [],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": [
        "subpackage_petsV1.petsV1",
        "subpackage_petsV1.pet",
        "subpackage_petsV1.store",
        "subpackage_petsV1.user"
      ]
    },
    "subpackage_petsV1.petsV1": {
      "subpackageId": "subpackage_petsV1.petsV1",
      "name": "petsV1",
      "endpoints": [],
      "webhooks": [],
      "websockets": [],
      "types": [
        "Order",
        "Category",
        "User",
        "Tag",
        "Pet",
        "ApiResponse"
      ],
      "subpackages": []
    },
    "subpackage_petsV1.pet": {
      "subpackageId": "subpackage_petsV1.pet",
      "name": "pet",
      "endpoints": [
        {
          "auth": true,
          "description": "Add a new pet to the store.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "addPet",
          "originalEndpointId": "petsV1.pet.addPet",
          "name": "Add a new pet to the store.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Pet"
                }
              },
              "description": "Create a new pet in the store"
            },
            "description": "Create a new pet in the store"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "Successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "doggie",
                "photoUrls": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "doggie",
                  "photoUrls": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update an existing pet by Id.",
          "method": "PUT",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "updatePet",
          "originalEndpointId": "petsV1.pet.updatePet",
          "name": "Update an existing pet.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Pet"
                }
              },
              "description": "Update an existent pet in the store"
            },
            "description": "Update an existent pet in the store"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "Successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "doggie",
                "photoUrls": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "doggie",
                  "photoUrls": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Multiple status values can be provided with comma separated strings.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "findPetsByStatus",
          "originalEndpointId": "petsV1.pet.findPetsByStatus",
          "name": "Finds Pets by status.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/findByStatus"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Status values that need to be considered for filter",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PetFindByStatusGetParametersSchema"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Pet"
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/findByStatus",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "findPetsByTags",
          "originalEndpointId": "petsV1.pet.findPetsByTags",
          "name": "Finds Pets by tags.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/findByTags"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Tags to filter by",
              "key": "tags",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Pet"
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/findByTags",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a single pet.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getPetById",
          "originalEndpointId": "petsV1.pet.getPetById",
          "name": "Find pet by ID.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of pet to return",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Updates a pet resource based on the form data.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "updatePetWithForm",
          "originalEndpointId": "petsV1.pet.updatePetWithForm",
          "name": "Updates a pet in the store with form data.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of pet that needs to be updated",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Name of pet that needs to be updated",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Status of pet that needs to be updated",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a pet.",
          "method": "DELETE",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "deletePet",
          "originalEndpointId": "petsV1.pet.deletePet",
          "name": "Deletes a pet.",
          "path": {
            "pathParameters": [
              {
                "description": "Pet id to delete",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "",
              "key": "api_key",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Upload image of the pet.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "uploadFile",
          "originalEndpointId": "petsV1.pet.uploadFile",
          "name": "Uploads an image.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of pet to update",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": "/uploadImage"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Additional Metadata",
              "key": "additionalMetadata",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ApiResponse"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "code": 42,
                  "type": "foo",
                  "message": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "code": 42,
                  "type": "foo",
                  "message": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_petsV1.store": {
      "subpackageId": "subpackage_petsV1.store",
      "name": "store",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a map of status codes to quantities.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getInventory",
          "originalEndpointId": "petsV1.store.getInventory",
          "name": "Returns pet inventories by status.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/inventory"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/inventory",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Place a new order in the store.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "placeOrder",
          "originalEndpointId": "petsV1.store.placeOrder",
          "name": "Place an order for a pet.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/order"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Order"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Order"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/order",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getOrderById",
          "originalEndpointId": "petsV1.store.getOrderById",
          "name": "Find purchase order by ID.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of order that needs to be fetched",
                "key": "orderId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/order/"
              },
              {
                "type": "pathParameter",
                "value": "orderId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Order"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/order/",
              "pathParameters": {
                "orderId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or non-integers will generate API errors.",
          "method": "DELETE",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "deleteOrder",
          "originalEndpointId": "petsV1.store.deleteOrder",
          "name": "Delete purchase order by identifier.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of the order that needs to be deleted",
                "key": "orderId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/order/"
              },
              {
                "type": "pathParameter",
                "value": "orderId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/order/",
              "pathParameters": {
                "orderId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_petsV1.user": {
      "subpackageId": "subpackage_petsV1.user",
      "name": "user",
      "endpoints": [
        {
          "auth": false,
          "description": "This can only be done by the logged in user.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "createUser",
          "originalEndpointId": "petsV1.user.createUser",
          "name": "Create user.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "User"
                }
              },
              "description": "Created user object"
            },
            "description": "Created user object"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Creates list of users with given input array.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "createUsersWithListInput",
          "originalEndpointId": "petsV1.user.createUsersWithListInput",
          "name": "Creates list of users with given input array.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/createWithList"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "User"
                  }
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "Successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/createWithList",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {}
              ],
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {}
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Log into the system.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "loginUser",
          "originalEndpointId": "petsV1.user.loginUser",
          "name": "Logs user into the system.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/login"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The user name for login",
              "key": "username",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The password for login in clear text",
              "key": "password",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/login",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": "foo"
              },
              "responseBodyV3": {
                "type": "json",
                "value": "foo"
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Log user out of the system.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "logoutUser",
          "originalEndpointId": "petsV1.user.logoutUser",
          "name": "Logs out current logged in user session.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/logout"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/logout",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Get user detail based on username.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getUserByName",
          "originalEndpointId": "petsV1.user.getUserByName",
          "name": "Get user by user name.",
          "path": {
            "pathParameters": [
              {
                "description": "The name that needs to be fetched. Use user1 for testing",
                "key": "username",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/"
              },
              {
                "type": "pathParameter",
                "value": "username"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/",
              "pathParameters": {
                "username": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "This can only be done by the logged in user.",
          "method": "PUT",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "updateUser",
          "originalEndpointId": "petsV1.user.updateUser",
          "name": "Update user resource.",
          "path": {
            "pathParameters": [
              {
                "description": "name that need to be deleted",
                "key": "username",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/"
              },
              {
                "type": "pathParameter",
                "value": "username"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "User"
                }
              },
              "description": "Update an existent user in the store"
            },
            "description": "Update an existent user in the store"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/",
              "pathParameters": {
                "username": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "This can only be done by the logged in user.",
          "method": "DELETE",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "deleteUser",
          "originalEndpointId": "petsV1.user.deleteUser",
          "name": "Delete user resource.",
          "path": {
            "pathParameters": [
              {
                "description": "The name that needs to be deleted",
                "key": "username",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/"
              },
              {
                "type": "pathParameter",
                "value": "username"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/",
              "pathParameters": {
                "username": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_petsV2": {
      "subpackageId": "subpackage_petsV2",
      "name": "petsV2",
      "endpoints": [],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": [
        "subpackage_petsV2.petsV2",
        "subpackage_petsV2.pet",
        "subpackage_petsV2.store",
        "subpackage_petsV2.user"
      ]
    },
    "subpackage_petsV2.petsV2": {
      "subpackageId": "subpackage_petsV2.petsV2",
      "name": "petsV2",
      "endpoints": [],
      "webhooks": [],
      "websockets": [],
      "types": [
        "Order",
        "Category",
        "User",
        "Tag",
        "Pet",
        "ApiResponse"
      ],
      "subpackages": []
    },
    "subpackage_petsV2.pet": {
      "subpackageId": "subpackage_petsV2.pet",
      "name": "pet",
      "endpoints": [
        {
          "auth": true,
          "description": "Add a new pet to the store.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "addPet",
          "originalEndpointId": "petsV2.pet.addPet",
          "name": "Add a new pet to the store.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Pet"
                }
              },
              "description": "Create a new pet in the store"
            },
            "description": "Create a new pet in the store"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "Successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "doggie",
                "photoUrls": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "doggie",
                  "photoUrls": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update an existing pet by Id.",
          "method": "PUT",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "updatePet",
          "originalEndpointId": "petsV2.pet.updatePet",
          "name": "Update an existing pet.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Pet"
                }
              },
              "description": "Update an existent pet in the store"
            },
            "description": "Update an existent pet in the store"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "Successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "name": "doggie",
                "photoUrls": [
                  "foo"
                ]
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "name": "doggie",
                  "photoUrls": [
                    "foo"
                  ]
                }
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Multiple status values can be provided with comma separated strings.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "findPetsByStatus",
          "originalEndpointId": "petsV2.pet.findPetsByStatus",
          "name": "Finds Pets by status.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/findByStatus"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Status values that need to be considered for filter",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "id",
                  "value": "PetFindByStatusGetParametersSchema"
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Pet"
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/findByStatus",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "findPetsByTags",
          "originalEndpointId": "petsV2.pet.findPetsByTags",
          "name": "Finds Pets by tags.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/findByTags"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Tags to filter by",
              "key": "tags",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "list",
                  "itemType": {
                    "type": "primitive",
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "Pet"
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/findByTags",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              },
              "responseBodyV3": {
                "type": "json",
                "value": [
                  {
                    "id": 10,
                    "name": "doggie",
                    "category": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "photoUrls": [
                      "foo"
                    ],
                    "tags": [
                      {
                        "id": 42,
                        "name": "foo"
                      }
                    ],
                    "status": "available"
                  }
                ]
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Returns a single pet.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getPetById",
          "originalEndpointId": "petsV2.pet.getPetById",
          "name": "Find pet by ID.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of pet to return",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Updates a pet resource based on the form data.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "updatePetWithForm",
          "originalEndpointId": "petsV2.pet.updatePetWithForm",
          "name": "Updates a pet in the store with form data.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of pet that needs to be updated",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Name of pet that needs to be updated",
              "key": "name",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "Status of pet that needs to be updated",
              "key": "status",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Pet"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "name": "doggie",
                  "category": {
                    "id": 1,
                    "name": "Dogs"
                  },
                  "photoUrls": [
                    "foo"
                  ],
                  "tags": [
                    {
                      "id": 42,
                      "name": "foo"
                    }
                  ],
                  "status": "available"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a pet.",
          "method": "DELETE",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "deletePet",
          "originalEndpointId": "petsV2.pet.deletePet",
          "name": "Deletes a pet.",
          "path": {
            "pathParameters": [
              {
                "description": "Pet id to delete",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "description": "",
              "key": "api_key",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Upload image of the pet.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "uploadFile",
          "originalEndpointId": "petsV2.pet.uploadFile",
          "name": "Uploads an image.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of pet to update",
                "key": "petId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/pet/"
              },
              {
                "type": "pathParameter",
                "value": "petId"
              },
              {
                "type": "literal",
                "value": "/uploadImage"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "Additional Metadata",
              "key": "additionalMetadata",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "ApiResponse"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/pet/",
              "pathParameters": {
                "petId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "code": 42,
                  "type": "foo",
                  "message": "foo"
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "code": 42,
                  "type": "foo",
                  "message": "foo"
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_petsV2.store": {
      "subpackageId": "subpackage_petsV2.store",
      "name": "store",
      "endpoints": [
        {
          "auth": true,
          "description": "Returns a map of status codes to quantities.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getInventory",
          "originalEndpointId": "petsV2.store.getInventory",
          "name": "Returns pet inventories by status.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/inventory"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "map",
                "keyType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                },
                "valueType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/inventory",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {}
              },
              "responseBodyV3": {
                "type": "json",
                "value": {}
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Place a new order in the store.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "placeOrder",
          "originalEndpointId": "petsV2.store.placeOrder",
          "name": "Place an order for a pet.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/order"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "Order"
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Order"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/order",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getOrderById",
          "originalEndpointId": "petsV2.store.getOrderById",
          "name": "Find purchase order by ID.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of order that needs to be fetched",
                "key": "orderId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/order/"
              },
              {
                "type": "pathParameter",
                "value": "orderId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "Order"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/order/",
              "pathParameters": {
                "orderId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "petId": 198772,
                  "quantity": 7,
                  "shipDate": "foo",
                  "status": "placed",
                  "complete": true
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or non-integers will generate API errors.",
          "method": "DELETE",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "deleteOrder",
          "originalEndpointId": "petsV2.store.deleteOrder",
          "name": "Delete purchase order by identifier.",
          "path": {
            "pathParameters": [
              {
                "description": "ID of the order that needs to be deleted",
                "key": "orderId",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "long"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/store/order/"
              },
              {
                "type": "pathParameter",
                "value": "orderId"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/store/order/",
              "pathParameters": {
                "orderId": 42
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "subpackage_petsV2.user": {
      "subpackageId": "subpackage_petsV2.user",
      "name": "user",
      "endpoints": [
        {
          "auth": false,
          "description": "This can only be done by the logged in user.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "createUser",
          "originalEndpointId": "petsV2.user.createUser",
          "name": "Create user.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "User"
                }
              },
              "description": "Created user object"
            },
            "description": "Created user object"
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Creates list of users with given input array.",
          "method": "POST",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "createUsersWithListInput",
          "originalEndpointId": "petsV2.user.createUsersWithListInput",
          "name": "Creates list of users with given input array.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/createWithList"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "list",
                  "itemType": {
                    "type": "id",
                    "value": "User"
                  }
                }
              }
            }
          },
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "Successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/createWithList",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": [
                {}
              ],
              "requestBodyV3": {
                "type": "json",
                "value": [
                  {}
                ]
              },
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Log into the system.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "loginUser",
          "originalEndpointId": "petsV2.user.loginUser",
          "name": "Logs user into the system.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/login"
              }
            ]
          },
          "queryParameters": [
            {
              "description": "The user name for login",
              "key": "username",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "description": "The password for login in clear text",
              "key": "password",
              "type": {
                "type": "optional",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/login",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": "foo"
              },
              "responseBodyV3": {
                "type": "json",
                "value": "foo"
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Log user out of the system.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "logoutUser",
          "originalEndpointId": "petsV2.user.logoutUser",
          "name": "Logs out current logged in user session.",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/logout"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/logout",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "Get user detail based on username.",
          "method": "GET",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "getUserByName",
          "originalEndpointId": "petsV2.user.getUserByName",
          "name": "Get user by user name.",
          "path": {
            "pathParameters": [
              {
                "description": "The name that needs to be fetched. Use user1 for testing",
                "key": "username",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/"
              },
              {
                "type": "pathParameter",
                "value": "username"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "response": {
            "type": {
              "type": "reference",
              "value": {
                "type": "id",
                "value": "User"
              }
            },
            "statusCode": 200,
            "description": "successful operation"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/",
              "pathParameters": {
                "username": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200,
              "responseBody": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              },
              "responseBodyV3": {
                "type": "json",
                "value": {
                  "id": 10,
                  "username": "theUser",
                  "firstName": "John",
                  "lastName": "James",
                  "email": "john@email.com",
                  "password": "12345",
                  "phone": "12345",
                  "userStatus": 1
                }
              }
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "This can only be done by the logged in user.",
          "method": "PUT",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "updateUser",
          "originalEndpointId": "petsV2.user.updateUser",
          "name": "Update user resource.",
          "path": {
            "pathParameters": [
              {
                "description": "name that need to be deleted",
                "key": "username",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/"
              },
              {
                "type": "pathParameter",
                "value": "username"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "User"
                }
              },
              "description": "Update an existent user in the store"
            },
            "description": "Update an existent user in the store"
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/",
              "pathParameters": {
                "username": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBody": {},
              "requestBodyV3": {
                "type": "json",
                "value": {}
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": false,
          "description": "This can only be done by the logged in user.",
          "method": "DELETE",
          "defaultEnvironment": "/api/v3",
          "environments": [
            {
              "id": "/api/v3",
              "baseUrl": "/api/v3"
            }
          ],
          "id": "deleteUser",
          "originalEndpointId": "petsV2.user.deleteUser",
          "name": "Delete user resource.",
          "path": {
            "pathParameters": [
              {
                "description": "The name that needs to be deleted",
                "key": "username",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/user/"
              },
              {
                "type": "pathParameter",
                "value": "username"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/user/",
              "pathParameters": {
                "username": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "websockets": [],
    "types": [],
    "subpackages": [
      "subpackage_petsV1",
      "subpackage_petsV2"
    ]
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}