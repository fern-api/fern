{
  "types": {
    "APIKey": {
      "name": "APIKey",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "API key",
            "key": "api_key",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Creation time of the key",
            "key": "created_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "description": "ID of the key",
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "description": "Name of the key",
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Last updated time of the key",
            "key": "updated_at",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "description": "User ID to whom the key belongs",
            "key": "user_id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "AccessTokenScope": {
      "description": "The scope, or a space-delimited list of scopes the token is issued for",
      "name": "AccessTokenScope",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "audio:speech"
          },
          {
            "value": "audio:stream"
          },
          {
            "value": "audio:all"
          },
          {
            "value": "voices:read"
          },
          {
            "value": "voices:create"
          },
          {
            "value": "voices:delete"
          },
          {
            "value": "voices:all"
          }
        ]
      }
    },
    "AccessTokenTokenType": {
      "description": "Token type",
      "name": "AccessTokenTokenType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "bearer"
          }
        ]
      }
    },
    "AccessToken": {
      "name": "AccessToken",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "access_token",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Expiration time, in seconds from the issue time",
            "key": "expires_in",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "description": "The scope, or a space-delimited list of scopes the token is issued for",
            "key": "scope",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AccessTokenScope"
              }
            }
          },
          {
            "description": "Token type",
            "key": "token_type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "AccessTokenTokenType"
              }
            }
          }
        ]
      }
    },
    "CreateAccessTokenRequestGrantType": {
      "description": "in: body",
      "name": "CreateAccessTokenRequestGrantType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "client_credentials"
          }
        ]
      }
    },
    "CreateAccessTokenRequestScope": {
      "description": "The scope, or a space-delimited list of scopes the token is requested for\nin: body",
      "name": "CreateAccessTokenRequestScope",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "audio:speech"
          },
          {
            "value": "audio:stream"
          },
          {
            "value": "audio:all"
          },
          {
            "value": "voices:read"
          },
          {
            "value": "voices:create"
          },
          {
            "value": "voices:delete"
          },
          {
            "value": "voices:all"
          }
        ]
      }
    },
    "CreateAccessTokenRequest": {
      "name": "CreateAccessTokenRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "in: body",
            "key": "grant_type",
            "valueType": {
              "type": "id",
              "value": "CreateAccessTokenRequestGrantType"
            }
          },
          {
            "description": "The scope, or a space-delimited list of scopes the token is requested for\nin: body",
            "key": "scope",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CreateAccessTokenRequestScope"
              }
            }
          }
        ]
      }
    },
    "CreateVoiceLanguage": {
      "name": "CreateVoiceLanguage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "locale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "preview_audio",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "CreateVoiceModelName": {
      "name": "CreateVoiceModelName",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "simba-base"
          },
          {
            "value": "simba-english"
          },
          {
            "value": "simba-multilingual"
          },
          {
            "value": "simba-turbo"
          }
        ]
      }
    },
    "CreateVoiceModel": {
      "name": "CreateVoiceModel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "languages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CreateVoiceLanguage"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CreateVoiceModelName"
              }
            }
          }
        ]
      }
    },
    "CreatedVoiceType": {
      "name": "CreatedVoiceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shared"
          },
          {
            "value": "personal"
          }
        ]
      }
    },
    "CreatedVoice": {
      "name": "CreatedVoice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "display_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "models",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "CreateVoiceModel"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "CreatedVoiceType"
              }
            }
          }
        ]
      }
    },
    "ExperimentalStreamRequestModel": {
      "description": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "name": "ExperimentalStreamRequestModel",
      "shape": {
        "type": "enum",
        "default": "simba-base",
        "values": [
          {
            "value": "simba-base"
          },
          {
            "value": "simba-english"
          },
          {
            "value": "simba-multilingual"
          },
          {
            "value": "simba-turbo"
          }
        ]
      }
    },
    "ExperimentalStreamRequest": {
      "description": "ExperimentalStreamRequest is the wrapper for request parameters to the client",
      "name": "ExperimentalStreamRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
            "key": "language",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
            "key": "model",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "ExperimentalStreamRequestModel"
              }
            }
          },
          {
            "description": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
            "key": "voice_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "ExperimentalStreamResponse": {
      "description": "ExperimentalStreamResponse represents generated audio stream info",
      "name": "ExperimentalStreamResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "URL to the synthesized audio file. It includes the expiration time and a signature in the query params.\nThe audio file will be available for download until the expiration time.\nFor the URL to work correctly, it must be used verbatim, with all the query parameters.",
            "key": "audio_url",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Expiry time of the audio file, in ISO-8601 format.",
            "key": "expires",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetSpeechOptionsRequest": {
      "description": "GetSpeechOptionsRequest is the wrapper for request parameters to the client",
      "name": "GetSpeechOptionsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Determines whether to normalize the audio loudness to a standard level.\nWhen enabled, loudness normalization aligns the audio output to the following standards:\nIntegrated loudness: -14 LUFS\nTrue peak: -2 dBTP\nLoudness range: 7 LU\nIf disabled, the audio loudness will match the original loudness of the selected voice, which may vary significantly and be either too quiet or too loud.\nEnabling loudness normalization can increase latency due to additional processing required for audio level adjustments.",
            "key": "loudness_normalization",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ]
      }
    },
    "GetSpeechRequestAudioFormat": {
      "description": "The format for the output audio. Note, that the current default is \"wav\", but there's no guarantee it will not change in the future. We recommend always passing the specific param you expect.",
      "name": "GetSpeechRequestAudioFormat",
      "shape": {
        "type": "enum",
        "default": "wav",
        "values": [
          {
            "value": "wav"
          },
          {
            "value": "mp3"
          },
          {
            "value": "ogg"
          },
          {
            "value": "aac"
          }
        ]
      }
    },
    "GetSpeechRequestModel": {
      "description": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "name": "GetSpeechRequestModel",
      "shape": {
        "type": "enum",
        "default": "simba-base",
        "values": [
          {
            "value": "simba-base"
          },
          {
            "value": "simba-english"
          },
          {
            "value": "simba-multilingual"
          },
          {
            "value": "simba-turbo"
          }
        ]
      }
    },
    "GetSpeechRequest": {
      "description": "GetSpeechRequest is the wrapper for request parameters to the client",
      "name": "GetSpeechRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "The format for the output audio. Note, that the current default is \"wav\", but there's no guarantee it will not change in the future. We recommend always passing the specific param you expect.",
            "key": "audio_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetSpeechRequestAudioFormat"
              }
            }
          },
          {
            "description": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
            "key": "language",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
            "key": "model",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetSpeechRequestModel"
              }
            }
          },
          {
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetSpeechOptionsRequest"
              }
            }
          },
          {
            "description": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
            "key": "voice_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "GetSpeechResponseAudioFormat": {
      "description": "The format of the audio data",
      "name": "GetSpeechResponseAudioFormat",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "wav"
          },
          {
            "value": "mp3"
          },
          {
            "value": "ogg"
          },
          {
            "value": "aac"
          }
        ]
      }
    },
    "GetSpeechResponse": {
      "name": "GetSpeechResponse",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Synthesized speech audio, Base64-encoded",
            "key": "audio_data",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          {
            "description": "The format of the audio data",
            "key": "audio_format",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetSpeechResponseAudioFormat"
              }
            }
          },
          {
            "description": "The number of billable characters processed in the request.",
            "key": "billable_characters_count",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "speech_marks",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "SpeechMarks"
              }
            }
          }
        ]
      }
    },
    "GetStreamOptionsRequest": {
      "description": "GetStreamOptionsRequest is the wrapper for request parameters to the client",
      "name": "GetStreamOptionsRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Determines whether to normalize the audio loudness to a standard level.\nWhen enabled, loudness normalization aligns the audio output to the following standards:\nIntegrated loudness: -14 LUFS\nTrue peak: -2 dBTP\nLoudness range: 7 LU\nIf disabled, the audio loudness will match the original loudness of the selected voice, which may vary significantly and be either too quiet or too loud.\nEnabling loudness normalization can increase latency due to additional processing required for audio level adjustments.",
            "key": "loudness_normalization",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ]
      }
    },
    "GetStreamRequestModel": {
      "description": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "name": "GetStreamRequestModel",
      "shape": {
        "type": "enum",
        "default": "simba-base",
        "values": [
          {
            "value": "simba-base"
          },
          {
            "value": "simba-english"
          },
          {
            "value": "simba-multilingual"
          },
          {
            "value": "simba-turbo"
          }
        ]
      }
    },
    "GetStreamRequest": {
      "description": "GetStreamRequest is the wrapper for request parameters to the client",
      "name": "GetStreamRequest",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
            "key": "input",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          },
          {
            "description": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
            "key": "language",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "description": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
            "key": "model",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetStreamRequestModel"
              }
            }
          },
          {
            "key": "options",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetStreamOptionsRequest"
              }
            }
          },
          {
            "description": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
            "key": "voice_id",
            "valueType": {
              "type": "primitive",
              "value": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "GetVoiceGender": {
      "name": "GetVoiceGender",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "male"
          },
          {
            "value": "female"
          },
          {
            "value": "notSpecified"
          }
        ]
      }
    },
    "GetVoiceType": {
      "name": "GetVoiceType",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "shared"
          },
          {
            "value": "personal"
          }
        ]
      }
    },
    "GetVoice": {
      "name": "GetVoice",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "avatar_image",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "display_name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "gender",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetVoiceGender"
              }
            }
          },
          {
            "key": "id",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "models",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetVoicesModel"
                }
              }
            }
          },
          {
            "key": "preview_audio",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "tags",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetVoiceType"
              }
            }
          }
        ]
      }
    },
    "GetVoiceLanguage": {
      "name": "GetVoiceLanguage",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "locale",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "preview_audio",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "GetVoicesModelName": {
      "name": "GetVoicesModelName",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "simba-base"
          },
          {
            "value": "simba-english"
          },
          {
            "value": "simba-multilingual"
          },
          {
            "value": "simba-turbo"
          }
        ]
      }
    },
    "GetVoicesModel": {
      "name": "GetVoicesModel",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "languages",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "GetVoiceLanguage"
                }
              }
            }
          },
          {
            "key": "name",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "GetVoicesModelName"
              }
            }
          }
        ]
      }
    },
    "NestedChunk": {
      "description": "It details the type of segment, its start and end points in the text, and its start and end times in the synthesized speech audio.",
      "name": "NestedChunk",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "OAuthErrorError": {
      "name": "OAuthErrorError",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "invalid_client"
          },
          {
            "value": "unauthorized_client"
          },
          {
            "value": "invalid_request"
          },
          {
            "value": "unsupported_grant_type"
          },
          {
            "value": "invalid_scope"
          }
        ]
      }
    },
    "OAuthError": {
      "name": "OAuthError",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "key": "error",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "id",
                "value": "OAuthErrorError"
              }
            }
          },
          {
            "key": "error_description",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "SpeechMarks": {
      "description": "It is used to annotate the audio data with metadata about the synthesis process, like word timing or phoneme details.",
      "name": "SpeechMarks",
      "shape": {
        "type": "object",
        "extends": [],
        "properties": [
          {
            "description": "Array of NestedChunk, each providing detailed segment information within the synthesized speech.",
            "key": "chunks",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "list",
                "itemType": {
                  "type": "id",
                  "value": "NestedChunk"
                }
              }
            }
          },
          {
            "key": "end",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "end_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "start",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "long"
                }
              }
            }
          },
          {
            "key": "start_time",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "double"
                }
              }
            }
          },
          {
            "key": "type",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          },
          {
            "key": "value",
            "valueType": {
              "type": "optional",
              "itemType": {
                "type": "primitive",
                "value": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    },
    "V1AudioStreamPostParametersSchema": {
      "name": "V1AudioStreamPostParametersSchema",
      "shape": {
        "type": "enum",
        "values": [
          {
            "value": "audio/mpeg"
          },
          {
            "value": "audio/ogg"
          },
          {
            "value": "audio/aac"
          }
        ]
      }
    }
  },
  "subpackages": {
    "audio": {
      "subpackageId": "audio",
      "name": "audio",
      "endpoints": [
        {
          "auth": true,
          "description": "Gets the stream speech for the given input",
          "method": "POST",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "ExperimentalStreamCreate",
          "originalEndpointId": "audio.ExperimentalStreamCreate",
          "name": "Experimental Stream Create",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/experimental/audio/stream"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "ExperimentalStreamRequest"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/experimental/audio/stream",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "input": "foo",
                "voice_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "input": "foo",
                  "voice_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Gets the speech data for the given input",
          "method": "POST",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "GetSpeech",
          "originalEndpointId": "audio.GetSpeech",
          "name": "Get Speech",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/audio/speech"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "GetSpeechRequest"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/audio/speech",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "input": "foo",
                "voice_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "input": "foo",
                  "voice_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Gets the stream speech for the given input",
          "method": "POST",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "GetStream",
          "originalEndpointId": "audio.GetStream",
          "name": "Get Stream",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/audio/stream"
              }
            ]
          },
          "queryParameters": [],
          "headers": [
            {
              "key": "Accept",
              "type": {
                "type": "id",
                "value": "V1AudioStreamPostParametersSchema"
              }
            }
          ],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "GetStreamRequest"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/audio/stream",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {
                "Accept": "audio/mpeg"
              },
              "requestBody": {
                "input": "foo",
                "voice_id": "foo"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "input": "foo",
                  "voice_id": "foo"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "auth": {
      "subpackageId": "auth",
      "name": "auth",
      "endpoints": [
        {
          "auth": true,
          "description": "Create a new API token for the logged in user",
          "method": "POST",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "CreateAccessToken",
          "originalEndpointId": "auth.CreateAccessToken",
          "name": "Create Access Token",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/auth/token"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "id",
                  "value": "CreateAccessTokenRequest"
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/auth/token",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBody": {
                "grant_type": "client_credentials"
              },
              "requestBodyV3": {
                "type": "json",
                "value": {
                  "grant_type": "client_credentials"
                }
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "apikey": {
      "subpackageId": "apikey",
      "name": "apikey",
      "endpoints": [
        {
          "auth": true,
          "description": "Fetches all the API keys for the logged in user",
          "method": "GET",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "ListAPIKeys",
          "originalEndpointId": "apikey.ListAPIKeys",
          "name": "List API Keys",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/token"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/token",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a new API key for the logged in user",
          "method": "POST",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "CreateAPIKey",
          "originalEndpointId": "apikey.CreateAPIKey",
          "name": "Create API Key",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/token"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/token",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Deletes the given API key for the logged in user",
          "method": "DELETE",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "DeleteAPIKey",
          "originalEndpointId": "apikey.DeleteAPIKey",
          "name": "Delete API Key",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the API key to delete",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/token/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/token/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Update API key name for the logged in user",
          "method": "PATCH",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "UpdateApiKey",
          "originalEndpointId": "apikey.UpdateApiKey",
          "name": "Update Api Key",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the key to edit",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/token/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "json",
              "contentType": "application/json",
              "shape": {
                "type": "reference",
                "value": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/token/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "requestBodyV3": {
                "type": "json"
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    },
    "voices": {
      "subpackageId": "voices",
      "name": "voices",
      "endpoints": [
        {
          "auth": true,
          "description": "Gets the list of voices available for the user",
          "method": "GET",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "GetVoices",
          "originalEndpointId": "voices.GetVoices",
          "name": "Get Voices",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/voices"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/voices",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Create a personal (cloned) voice for the user",
          "method": "POST",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "CreateVoice",
          "originalEndpointId": "voices.CreateVoice",
          "name": "Create Voice",
          "path": {
            "pathParameters": [],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/voices"
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "request": {
            "type": {
              "type": "fileUpload",
              "value": {
                "name": "voices_CreateVoice_Request",
                "properties": [
                  {
                    "type": "bodyProperty",
                    "key": "name",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "description": "Name of the personal voice",
                    "exploded": false
                  },
                  {
                    "type": "file",
                    "value": {
                      "type": "file",
                      "key": "sample",
                      "isOptional": false,
                      "contentType": "multipart/form-data",
                      "description": "Audio sample file"
                    }
                  },
                  {
                    "type": "bodyProperty",
                    "key": "consent",
                    "valueType": {
                      "type": "primitive",
                      "value": {
                        "type": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "description": "User consent information in JSON format: {\"fullName\": \"\", \"email\": \"\"}\nFor example, {\"fullName\": \"John Doe\", \"email\": \"john@example.com\"}\nThis should include the fullName and email of the consenting individual.",
                    "exploded": false
                  }
                ]
              },
              "contentType": "multipart/form-data"
            }
          },
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/voices",
              "pathParameters": {},
              "queryParameters": {},
              "headers": {},
              "requestBodyV3": {
                "type": "form",
                "value": {}
              },
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        },
        {
          "auth": true,
          "description": "Delete a personal (cloned) voice",
          "method": "DELETE",
          "defaultEnvironment": "https://api.sws.speechify.com",
          "environments": [
            {
              "id": "https://api.sws.speechify.com",
              "baseUrl": "https://api.sws.speechify.com"
            }
          ],
          "id": "DeleteVoice",
          "originalEndpointId": "voices.DeleteVoice",
          "name": "Delete Voice",
          "path": {
            "pathParameters": [
              {
                "description": "The ID of the voice to delete",
                "key": "id",
                "type": {
                  "type": "primitive",
                  "value": {
                    "type": "string"
                  }
                }
              }
            ],
            "parts": [
              {
                "type": "literal",
                "value": ""
              },
              {
                "type": "literal",
                "value": "/v1/voices/"
              },
              {
                "type": "pathParameter",
                "value": "id"
              },
              {
                "type": "literal",
                "value": ""
              }
            ]
          },
          "queryParameters": [],
          "headers": [],
          "errorsV2": [],
          "examples": [
            {
              "name": "",
              "description": "",
              "path": "/v1/voices/",
              "pathParameters": {
                "id": "foo"
              },
              "queryParameters": {},
              "headers": {},
              "responseStatusCode": 200
            }
          ],
          "protocol": {
            "type": "rest"
          }
        }
      ],
      "webhooks": [],
      "websockets": [],
      "types": [],
      "subpackages": []
    }
  },
  "rootPackage": {
    "endpoints": [],
    "webhooks": [],
    "websockets": [],
    "types": [
      "APIKey",
      "AccessToken",
      "CreateAccessTokenRequest",
      "CreateVoiceLanguage",
      "CreateVoiceModel",
      "CreatedVoice",
      "ExperimentalStreamRequest",
      "ExperimentalStreamResponse",
      "GetSpeechOptionsRequest",
      "GetSpeechRequest",
      "GetSpeechResponse",
      "GetStreamOptionsRequest",
      "GetStreamRequest",
      "GetVoice",
      "GetVoiceLanguage",
      "GetVoicesModel",
      "NestedChunk",
      "OAuthError",
      "SpeechMarks"
    ],
    "subpackages": [
      "audio",
      "auth",
      "apikey",
      "voices"
    ]
  },
  "snippetsConfiguration": {},
  "globalHeaders": []
}