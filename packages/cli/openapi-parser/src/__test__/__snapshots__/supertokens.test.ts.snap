// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser supertokens parse open api 1`] = `
{
  "description": "This is the API exposed by the SuperTokens Core. To be consumed by your backend only.",
  "endpoints": [
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Add a TOTP device for a user and enable TOTP if not already enabled.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "deviceName": {
                "primitive": {
                  "string": "My Authy App",
                  "type": "string",
                },
                "type": "primitive",
              },
              "period": {
                "primitive": {
                  "double": 30,
                  "type": "double",
                },
                "type": "primitive",
              },
              "skew": {
                "primitive": {
                  "double": 0,
                  "type": "double",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "secret": {
                  "primitive": {
                    "string": "JBSWY3DPEHPK3PXP",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "CreateTotpDeviceRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateTotpDeviceRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateTotpDeviceRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateTotpDeviceRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateTotpDeviceRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateTotpDeviceRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateTotpDeviceRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createTotpDevice",
      "path": "/recipe/totp/device",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateTotpDeviceRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createTotpDeviceRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "CreateTotpDeviceRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createTotpDeviceRequestDeviceName",
              "key": "deviceName",
              "schema": {
                "description": undefined,
                "generatedName": "CreateTotpDeviceRequestDeviceName",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createTotpDeviceRequestSkew",
              "key": "skew",
              "schema": {
                "description": undefined,
                "generatedName": "CreateTotpDeviceRequestSkew",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createTotpDeviceRequestPeriod",
              "key": "period",
              "schema": {
                "description": undefined,
                "generatedName": "CreateTotpDeviceRequestPeriod",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status and secret properties",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "CreateTotpDeviceResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "DEVICE_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateTotpDeviceResponseDeviceAlreadyExistsError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateTotpDeviceResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "createTotpDeviceResponseOkSecret",
                    "key": "secret",
                    "schema": {
                      "description": undefined,
                      "generatedName": "createTotpDeviceResponseOkSecret",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "CreateTotpDeviceResponseOkSecret",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update the name of a TOTP device for a user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "existingDeviceName": {
                "primitive": {
                  "string": "My Authy App",
                  "type": "string",
                },
                "type": "primitive",
              },
              "newDeviceName": {
                "primitive": {
                  "string": "A better name for my TOTP device",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "UpdateTotpDeviceNameRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UpdateTotpDeviceNameRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UpdateTotpDeviceNameRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UpdateTotpDeviceNameRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UpdateTotpDeviceNameRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UpdateTotpDeviceNameRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UpdateTotpDeviceNameRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "updateTotpDeviceName",
      "path": "/recipe/totp/device",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UpdateTotpDeviceNameRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "updateTotpDeviceNameRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "updateTotpDeviceNameRequestExistingDeviceName",
              "key": "existingDeviceName",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameRequestExistingDeviceName",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "updateTotpDeviceNameRequestNewDeviceName",
              "key": "newDeviceName",
              "schema": {
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameRequestNewDeviceName",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UpdateTotpDeviceNameResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "DEVICE_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseDeviceAlreadyExistsError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseTotpNotEnabledError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_DEVICE_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateTotpDeviceNameResponseUnknownDeviceError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve a list of TOTP devices for a user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "userId",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "devices": {
                  "array": [
                    {
                      "properties": {
                        "name": {
                          "primitive": {
                            "string": "name",
                            "type": "string",
                          },
                          "type": "primitive",
                        },
                        "period": {
                          "primitive": {
                            "double": 1.1,
                            "type": "double",
                          },
                          "type": "primitive",
                        },
                        "skew": {
                          "primitive": {
                            "double": 1.1,
                            "type": "double",
                          },
                          "type": "primitive",
                        },
                        "verified": {
                          "primitive": {
                            "boolean": true,
                            "type": "boolean",
                          },
                          "type": "primitive",
                        },
                      },
                      "type": "object",
                    },
                  ],
                  "type": "array",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetTotpDevicesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetTotpDevicesRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetTotpDevicesRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetTotpDevicesRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetTotpDevicesRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetTotpDevicesRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetTotpDevicesRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getTotpDevices",
      "path": "/recipe/totp/device/list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetTotpDevicesRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Retrives all TOTP devices",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetTotpDevicesResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTotpDevicesResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getTotpDevicesResponseOkDevices",
                    "key": "devices",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getTotpDevicesResponseOkDevices",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetTotpDevicesResponseOkDevices",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "array",
                        "value": {
                          "allOf": [],
                          "allOfPropertyConflicts": [],
                          "description": undefined,
                          "generatedName": "GetTotpDevicesResponseOkDevicesItem",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "properties": [
                            {
                              "audiences": [],
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemName",
                              "key": "name",
                              "schema": {
                                "description": undefined,
                                "generatedName": "getTotpDevicesResponseOkDevicesItemName",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "generatedName": "GetTotpDevicesResponseOkDevicesItemName",
                                  "groupName": undefined,
                                  "nameOverride": undefined,
                                  "schema": {
                                    "maxLength": undefined,
                                    "minLength": undefined,
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                            {
                              "audiences": [],
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemPeriod",
                              "key": "period",
                              "schema": {
                                "description": undefined,
                                "generatedName": "getTotpDevicesResponseOkDevicesItemPeriod",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "generatedName": "GetTotpDevicesResponseOkDevicesItemPeriod",
                                  "groupName": undefined,
                                  "nameOverride": undefined,
                                  "schema": {
                                    "type": "double",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                            {
                              "audiences": [],
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemSkew",
                              "key": "skew",
                              "schema": {
                                "description": undefined,
                                "generatedName": "getTotpDevicesResponseOkDevicesItemSkew",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "generatedName": "GetTotpDevicesResponseOkDevicesItemSkew",
                                  "groupName": undefined,
                                  "nameOverride": undefined,
                                  "schema": {
                                    "type": "double",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                            {
                              "audiences": [],
                              "conflict": {},
                              "generatedName": "getTotpDevicesResponseOkDevicesItemVerified",
                              "key": "verified",
                              "schema": {
                                "description": undefined,
                                "generatedName": "getTotpDevicesResponseOkDevicesItemVerified",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "type": "optional",
                                "value": {
                                  "description": undefined,
                                  "generatedName": "GetTotpDevicesResponseOkDevicesItemVerified",
                                  "groupName": undefined,
                                  "nameOverride": undefined,
                                  "schema": {
                                    "type": "boolean",
                                  },
                                  "type": "primitive",
                                },
                              },
                            },
                          ],
                          "type": "object",
                        },
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTotpDevicesResponseTotpNotEnabledError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Remove a TOTP device for a user. If all devices are removed, TOTP is disabled for the user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "deviceName": {
                "primitive": {
                  "string": "My Authy App",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "didDeviceExist": {
                  "primitive": {
                    "boolean": true,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "RemoveTotpDeviceRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveTotpDeviceRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveTotpDeviceRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveTotpDeviceRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveTotpDeviceRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveTotpDeviceRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveTotpDeviceRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeTotpDevice",
      "path": "/recipe/totp/device/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveTotpDeviceRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeTotpDeviceRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveTotpDeviceRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeTotpDeviceRequestDeviceName",
              "key": "deviceName",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveTotpDeviceRequestDeviceName",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RemoveTotpDeviceResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveTotpDeviceResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "removeTotpDeviceResponseOkDidDeviceExist",
                    "key": "didDeviceExist",
                    "schema": {
                      "description": undefined,
                      "generatedName": "removeTotpDeviceResponseOkDidDeviceExist",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RemoveTotpDeviceResponseOkDidDeviceExist",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveTotpDeviceResponseTotpNotEnabledError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Check if a TOTP code is valid against any of the TOTP devices for a user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "allowUnverifiedDevices": {
                "primitive": {
                  "boolean": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "totp": {
                "primitive": {
                  "string": "123456",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "VerifyTotpCodeRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyTotpCodeRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyTotpCodeRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyTotpCodeRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyTotpCodeRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyTotpCodeRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyTotpCodeRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifyTotpCode",
      "path": "/recipe/totp/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifyTotpCodeRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifyTotpCodeRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpCodeRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifyTotpCodeRequestTotp",
              "key": "totp",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpCodeRequestTotp",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifyTotpCodeRequestAllowUnverifiedDevices",
              "key": "allowUnverifiedDevices",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpCodeRequestAllowUnverifiedDevices",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifyTotpCodeResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "INVALID_TOTP_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseInvalidTotpError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "LIMIT_REACHED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseLimitReachedError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "verifyTotpCodeResponseLimitReachedErrorRetryAfterMs",
                    "key": "retryAfterMs",
                    "schema": {
                      "description": undefined,
                      "generatedName": "verifyTotpCodeResponseLimitReachedErrorRetryAfterMs",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifyTotpCodeResponseLimitReachedErrorRetryAfterMs",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpCodeResponseTotpNotEnabledError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Mark a TOTP device as verified if the given TOTP code is valid for that device.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "deviceName": {
                "primitive": {
                  "string": "My Authy App",
                  "type": "string",
                },
                "type": "primitive",
              },
              "totp": {
                "primitive": {
                  "string": "123456",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "wasAlreadyVerified": {
                  "primitive": {
                    "boolean": false,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "VerifyTotpDeviceRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyTotpDeviceRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyTotpDeviceRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyTotpDeviceRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyTotpDeviceRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyTotpDeviceRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyTotpDeviceRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifyTotpDevice",
      "path": "/recipe/totp/device/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifyTotpDeviceRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifyTotpDeviceRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpDeviceRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifyTotpDeviceRequestDeviceName",
              "key": "deviceName",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpDeviceRequestDeviceName",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifyTotpDeviceRequestTotp",
              "key": "totp",
              "schema": {
                "description": undefined,
                "generatedName": "VerifyTotpDeviceRequestTotp",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifyTotpDeviceResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "INVALID_TOTP_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseInvalidTotpError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "LIMIT_REACHED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseLimitReachedError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "verifyTotpDeviceResponseLimitReachedErrorRetryAfterMs",
                    "key": "retryAfterMs",
                    "schema": {
                      "description": undefined,
                      "generatedName": "verifyTotpDeviceResponseLimitReachedErrorRetryAfterMs",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifyTotpDeviceResponseLimitReachedErrorRetryAfterMs",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "verifyTotpDeviceResponseOkWasAlreadyVerified",
                    "key": "wasAlreadyVerified",
                    "schema": {
                      "description": undefined,
                      "generatedName": "verifyTotpDeviceResponseOkWasAlreadyVerified",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifyTotpDeviceResponseOkWasAlreadyVerified",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOTP_NOT_ENABLED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseTotpNotEnabledError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_DEVICE_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyTotpDeviceResponseUnknownDeviceError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Totp Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve a UserIdMapping
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "userId",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "externalUserId": {
                  "primitive": {
                    "string": "externalId",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "externalUserIdInfo": {
                  "primitive": {
                    "string": "Info about external userId",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "superTokensUserId": {
                  "primitive": {
                    "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "UserIdMappingGetMappingRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingGetMappingRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingGetMappingRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingGetMappingRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingGetMappingRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingGetMappingRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingGetMappingRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "userIdMappingGetMapping",
      "path": "/recipe/userid/map",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingGetMappingRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": undefined,
          "name": "userIdType",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingGetMappingRequestUserIdType",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingGetMappingRequestUserIdType",
              "groupName": undefined,
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "SUPERTOKENS",
                  "nameOverride": undefined,
                  "value": "SUPERTOKENS",
                },
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "EXTERNAL",
                  "nameOverride": undefined,
                  "value": "EXTERNAL",
                },
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "ANY",
                  "nameOverride": undefined,
                  "value": "ANY",
                },
              ],
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Retrives a userId mapping",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UserIdMappingGetMappingResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingGetMappingResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "userIdMappingGetMappingResponseOkSuperTokensUserId",
                    "key": "superTokensUserId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "UserIdMappingGetMappingResponseOkSuperTokensUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "userId",
                      "type": "reference",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "userIdMappingGetMappingResponseOkExternalUserId",
                    "key": "externalUserId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "UserIdMappingGetMappingResponseOkExternalUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": {
                        "maxLength": undefined,
                        "minLength": undefined,
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "userIdMappingGetMappingResponseOkExternalUserIdInfo",
                    "key": "externalUserIdInfo",
                    "schema": {
                      "description": undefined,
                      "generatedName": "userIdMappingGetMappingResponseOkExternalUserIdInfo",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UserIdMappingGetMappingResponseOkExternalUserIdInfo",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_MAPPING_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingGetMappingResponseUnknownMappingError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a mapping between a SuperTokens userId and an external userId.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "externalUserId": {
                "primitive": {
                  "string": "externalId",
                  "type": "string",
                },
                "type": "primitive",
              },
              "externalUserIdInfo": {
                "primitive": {
                  "string": "Info about external userId",
                  "type": "string",
                },
                "type": "primitive",
              },
              "superTokensUserId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "UserIdMappingCreateMappingRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingCreateMappingRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingCreateMappingRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingCreateMappingRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingCreateMappingRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingCreateMappingRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingCreateMappingRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userIdMappingCreateMapping",
      "path": "/recipe/userid/map",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingCreateMappingRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestSuperTokensUserId",
              "key": "superTokensUserId",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingRequestSuperTokensUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestExternalUserId",
              "key": "externalUserId",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingRequestExternalUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestExternalUserIdInfo",
              "key": "externalUserIdInfo",
              "schema": {
                "description": undefined,
                "generatedName": "userIdMappingCreateMappingRequestExternalUserIdInfo",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingCreateMappingRequestExternalUserIdInfo",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingCreateMappingRequestForce",
              "key": "force",
              "schema": {
                "description": undefined,
                "generatedName": "userIdMappingCreateMappingRequestForce",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingCreateMappingRequestForce",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UserIdMappingCreateMappingResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_SUPERTOKENS_USER_ID_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingResponseUnknownSupertokensUserIdError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "USER_ID_MAPPING_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingCreateMappingResponseUserIdMappingAlreadyExistsError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "userIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesSuperTokensUserIdExist",
                    "key": "doesSuperTokensUserIdExist",
                    "schema": {
                      "description": undefined,
                      "generatedName": "userIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesSuperTokensUserIdExist",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UserIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesSuperTokensUserIdExist",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "userIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesExternalUserIdExist",
                    "key": "doesExternalUserIdExist",
                    "schema": {
                      "description": undefined,
                      "generatedName": "userIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesExternalUserIdExist",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UserIdMappingCreateMappingResponseUserIdMappingAlreadyExistsErrorDoesExternalUserIdExist",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete a mapping between a SuperTokens userId and an external userId.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "didMappingExist": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UserIdMappingRemoveMappingRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingRemoveMappingRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingRemoveMappingRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingRemoveMappingRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingRemoveMappingRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingRemoveMappingRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingRemoveMappingRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userIdMappingRemoveMapping",
      "path": "/recipe/userid/map/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingRemoveMappingRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingRemoveMappingRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingRequestUserIdType",
              "key": "userIdType",
              "schema": {
                "description": undefined,
                "generatedName": "userIdMappingRemoveMappingRequestUserIdType",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingRemoveMappingRequestUserIdType",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "SUPERTOKENS",
                      "nameOverride": undefined,
                      "value": "SUPERTOKENS",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "EXTERNAL",
                      "nameOverride": undefined,
                      "value": "EXTERNAL",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "ANY",
                      "nameOverride": undefined,
                      "value": "ANY",
                    },
                  ],
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingRequestForce",
              "key": "force",
              "schema": {
                "description": undefined,
                "generatedName": "userIdMappingRemoveMappingRequestForce",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingRemoveMappingRequestForce",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingRemoveMappingResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "userIdMappingRemoveMappingResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingRemoveMappingResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingRemoveMappingResponseDidMappingExist",
              "key": "didMappingExist",
              "schema": {
                "description": undefined,
                "generatedName": "userIdMappingRemoveMappingResponseDidMappingExist",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingRemoveMappingResponseDidMappingExist",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update or delete externalUserIdInfo
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "externalUserIdInfo": {
                "primitive": {
                  "string": "new external userId info",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "UserIdMappingUpateExternalUserIdInfoRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "userIdMappingUpateExternalUserIdInfo",
      "path": "/recipe/userid/external-user-id-info",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserIdMappingUpateExternalUserIdInfoRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingUpateExternalUserIdInfoRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingUpateExternalUserIdInfoRequestUserIdType",
              "key": "userIdType",
              "schema": {
                "description": undefined,
                "generatedName": "userIdMappingUpateExternalUserIdInfoRequestUserIdType",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestUserIdType",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "SUPERTOKENS",
                      "nameOverride": undefined,
                      "value": "SUPERTOKENS",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "EXTERNAL",
                      "nameOverride": undefined,
                      "value": "EXTERNAL",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "ANY",
                      "nameOverride": undefined,
                      "value": "ANY",
                    },
                  ],
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userIdMappingUpateExternalUserIdInfoRequestExternalUserIdInfo",
              "key": "externalUserIdInfo",
              "schema": {
                "description": undefined,
                "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestExternalUserIdInfo",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "nullable",
                "value": {
                  "description": undefined,
                  "generatedName": "UserIdMappingUpateExternalUserIdInfoRequestExternalUserIdInfo",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UserIdMappingUpateExternalUserIdInfoResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingUpateExternalUserIdInfoResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_MAPPING_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UserIdMappingUpateExternalUserIdInfoResponseUnknownMappingError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "UserIdMapping Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Tries to consume the passed userInputCode+deviceId combo or the linkCode to sign the user in
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "linkCode": {
                "primitive": {
                  "string": "b10lbT_SnDC4flA6Fn7pE5TtG5k5NfigLef4QMBeGA8",
                  "type": "string",
                },
                "type": "primitive",
              },
              "preAuthSessionId": {
                "primitive": {
                  "string": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs=",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "createdNewUser": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "user": {
                "properties": {
                  "email": {
                    "primitive": {
                      "string": "johndoe@gmail.com",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "id": {
                    "primitive": {
                      "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "phoneNumber": {
                    "primitive": {
                      "string": "+14155552671",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "timeJoined": {
                    "primitive": {
                      "double": 1623918032231,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PasswordlessTryUseCodeRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessTryUseCodeRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessTryUseCodeRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessTryUseCodeRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessTryUseCodeRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessTryUseCodeRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessTryUseCodeRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessTryUseCode",
      "path": "/recipe/signinup/code/consume",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessTryUseCodeRequestBody",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeRequestBodyLinkCode",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyLinkCodePreAuthSessionId",
                    "key": "preAuthSessionId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyLinkCodePreAuthSessionId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "preAuthSessionId",
                      "type": "reference",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyLinkCodeLinkCode",
                    "key": "linkCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyLinkCodeLinkCode",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "linkCode",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceId",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyDeviceIdPreAuthSessionId",
                    "key": "preAuthSessionId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceIdPreAuthSessionId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "preAuthSessionId",
                      "type": "reference",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyDeviceIdDeviceId",
                    "key": "deviceId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceIdDeviceId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "deviceId",
                      "type": "reference",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeRequestBodyDeviceIdUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessTryUseCodeRequestBodyDeviceIdUserInputCode",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "userInputCode",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessTryUseCodeResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeResponseCreatedNewUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseCreatedNewUserStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserCreatedNewUser",
                    "key": "createdNewUser",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserCreatedNewUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseCreatedNewUserCreatedNewUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessTryUseCodeResponseCreatedNewUserUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseCreatedNewUserUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "passwordlessUser",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeResponseFailedCodeInputAttemptCount",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseFailedCodeInputAttemptCountStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "INCORRECT_USER_INPUT_CODE_ERROR",
                            "nameOverride": undefined,
                            "value": "INCORRECT_USER_INPUT_CODE_ERROR",
                          },
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "EXPIRED_USER_INPUT_CODE_ERROR",
                            "nameOverride": undefined,
                            "value": "EXPIRED_USER_INPUT_CODE_ERROR",
                          },
                        ],
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountFailedCodeInputAttemptCount",
                    "key": "failedCodeInputAttemptCount",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountFailedCodeInputAttemptCount",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseFailedCodeInputAttemptCountFailedCodeInputAttemptCount",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountMaximumCodeInputAttempts",
                    "key": "maximumCodeInputAttempts",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessTryUseCodeResponseFailedCodeInputAttemptCountMaximumCodeInputAttempts",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseFailedCodeInputAttemptCountMaximumCodeInputAttempts",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessTryUseCodeResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessTryUseCodeResponseStatusStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessTryUseCodeResponseStatusStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessTryUseCodeResponseStatusStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "literal",
                        "value": {
                          "string": "RESTART_FLOW_ERROR",
                          "type": "string",
                        },
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Starts a sign in process by requesting a linkCode and a deviceId + userInputCode combination the user can use to sign in.
Passing the optional deviceId signifies a resend code flow.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "test@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "codeId": {
                "primitive": {
                  "string": "QZ0Mx9zG9cfqNXmPI0I/67r9bpKghUBDQZeMMbayi+I=",
                  "type": "string",
                },
                "type": "primitive",
              },
              "codeLifetime": {
                "primitive": {
                  "double": 900000,
                  "type": "double",
                },
                "type": "primitive",
              },
              "deviceId": {
                "primitive": {
                  "string": "TU/52WOcktSv99zqaAZuWJG9BSoS0aRLfCbep8rFEwk=",
                  "type": "string",
                },
                "type": "primitive",
              },
              "linkCode": {
                "primitive": {
                  "string": "b10lbT_SnDC4flA6Fn7pE5TtG5k5NfigLef4QMBeGA8",
                  "type": "string",
                },
                "type": "primitive",
              },
              "preAuthSessionId": {
                "primitive": {
                  "string": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs=",
                  "type": "string",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "timeCreated": {
                "primitive": {
                  "double": 1637262633029,
                  "type": "double",
                },
                "type": "primitive",
              },
              "userInputCode": {
                "primitive": {
                  "string": "userInputCode",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PasswordlessStartSignInRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessStartSignInRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessStartSignInRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessStartSignInRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessStartSignInRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessStartSignInRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessStartSignInRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessStartSignIn",
      "path": "/recipe/signinup/code",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessStartSignInRequestBody",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInRequestBodyEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyEmailEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessStartSignInRequestBodyEmailEmail",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "email",
                      "type": "reference",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyEmailUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInRequestBodyEmailUserInputCode",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInRequestBodyEmailUserInputCode",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInRequestBodyPhoneNumber",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyPhoneNumberPhoneNumber",
                    "key": "phoneNumber",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessStartSignInRequestBodyPhoneNumberPhoneNumber",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "phoneNumber",
                      "type": "reference",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyPhoneNumberUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInRequestBodyPhoneNumberUserInputCode",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInRequestBodyPhoneNumberUserInputCode",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInRequestBodyDeviceId",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyDeviceIdDeviceId",
                    "key": "deviceId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessStartSignInRequestBodyDeviceIdDeviceId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "deviceId",
                      "type": "reference",
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInRequestBodyDeviceIdUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInRequestBodyDeviceIdUserInputCode",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInRequestBodyDeviceIdUserInputCode",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Starts the passwordless login process",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessStartSignInResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInResponseCodeId",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdPreAuthSessionId",
                    "key": "preAuthSessionId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdPreAuthSessionId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdPreAuthSessionId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "preAuthSessionId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdCodeId",
                    "key": "codeId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdCodeId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdCodeId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "codeId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdDeviceId",
                    "key": "deviceId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdDeviceId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdDeviceId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "deviceId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdUserInputCode",
                    "key": "userInputCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdUserInputCode",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdUserInputCode",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userInputCode",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdLinkCode",
                    "key": "linkCode",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdLinkCode",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdLinkCode",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "linkCode",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdTimeCreated",
                    "key": "timeCreated",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdTimeCreated",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdTimeCreated",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "timeCreated",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseCodeIdCodeLifetime",
                    "key": "codeLifetime",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseCodeIdCodeLifetime",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseCodeIdCodeLifetime",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "codeLifetime",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessStartSignInResponseOne",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessStartSignInResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessStartSignInResponseOneStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessStartSignInResponseOneStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "RESTART_FLOW_ERROR",
                            "nameOverride": undefined,
                            "value": "RESTART_FLOW_ERROR",
                          },
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "USER_INPUT_CODE_ALREADY_USED_ERROR",
                            "nameOverride": undefined,
                            "value": "USER_INPUT_CODE_ALREADY_USED_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Revokes a code by id
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "codeId": {
                "primitive": {
                  "string": "QZ0Mx9zG9cfqNXmPI0I/67r9bpKghUBDQZeMMbayi+I=",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PasswordlessRevokeCodeRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeCodeRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessRevokeCodeRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeCodeRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessRevokeCodeRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeCodeRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessRevokeCodeRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessRevokeCode",
      "path": "/recipe/signinup/code/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessRevokeCodeRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessRevokeCodeRequestCodeId",
              "key": "codeId",
              "schema": {
                "description": undefined,
                "generatedName": "PasswordlessRevokeCodeRequestCodeId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "codeId",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessRevokeCodeResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessRevokeCodeResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "passwordlessRevokeCodeResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessRevokeCodeResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Lists all active passwordless codes of the user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "phoneNumber",
              "value": {
                "primitive": {
                  "string": "+14155552671",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "deviceId",
              "value": {
                "primitive": {
                  "string": "TU/52WOcktSv99zqaAZuWJG9BSoS0aRLfCbep8rFEwk=",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "preAuthSessionId",
              "value": {
                "primitive": {
                  "string": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs=",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "devices": {
                "array": [
                  {
                    "properties": {
                      "codes": {
                        "array": [
                          {
                            "properties": {
                              "codeId": {
                                "primitive": {
                                  "string": "QZ0Mx9zG9cfqNXmPI0I/67r9bpKghUBDQZeMMbayi+I=",
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                              "codeLifetime": {
                                "primitive": {
                                  "double": 900000,
                                  "type": "double",
                                },
                                "type": "primitive",
                              },
                              "timeCreated": {
                                "primitive": {
                                  "double": 1637262633029,
                                  "type": "double",
                                },
                                "type": "primitive",
                              },
                            },
                            "type": "object",
                          },
                        ],
                        "type": "array",
                      },
                      "email": {
                        "primitive": {
                          "string": "johndoe@gmail.com",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "failedCodeInputAttemptCount": {
                        "primitive": {
                          "double": 2,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                      "phoneNumber": {
                        "primitive": {
                          "string": "+14155552671",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "preAuthSessionId": {
                        "primitive": {
                          "string": "kFmkPQEAJtACiT2w/K8fndEuNm+XozJXSZSlWEr+iGs=",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PasswordlessListCodesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessListCodesRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessListCodesRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessListCodesRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "passwordlessListCodes",
      "path": "/recipe/signinup/codes",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Use this parameter to get information about all devices associated with an email (without the other query params)",
          "name": "email",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessListCodesRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Use this parameter to get information about all devices associated with a phoneNumber (without the other query params)",
          "name": "phoneNumber",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessListCodesRequestPhoneNumber",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestPhoneNumber",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "phoneNumber",
              "type": "reference",
            },
          },
        },
        {
          "description": "Use this parameter to get information about a single device (without the other query params)",
          "name": "deviceId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessListCodesRequestDeviceId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestDeviceId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "deviceId",
              "type": "reference",
            },
          },
        },
        {
          "description": "Use this parameter to get information about a single device (without the other query params)",
          "name": "preAuthSessionId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessListCodesRequestPreAuthSessionId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessListCodesRequestPreAuthSessionId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "preAuthSessionId",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "List of all active passwordless codes of the user",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessListCodesResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessListCodesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "passwordlessListCodesResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessListCodesResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessListCodesResponseDevices",
              "key": "devices",
              "schema": {
                "description": undefined,
                "generatedName": "passwordlessListCodesResponseDevices",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessListCodesResponseDevices",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "PasswordlessListCodesResponseDevicesItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemPreAuthSessionId",
                        "key": "preAuthSessionId",
                        "schema": {
                          "description": undefined,
                          "generatedName": "passwordlessListCodesResponseDevicesItemPreAuthSessionId",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemPreAuthSessionId",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": "preAuthSessionId",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemFailedCodeInputAttemptCount",
                        "key": "failedCodeInputAttemptCount",
                        "schema": {
                          "description": undefined,
                          "generatedName": "passwordlessListCodesResponseDevicesItemFailedCodeInputAttemptCount",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemFailedCodeInputAttemptCount",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemEmail",
                        "key": "email",
                        "schema": {
                          "description": undefined,
                          "generatedName": "passwordlessListCodesResponseDevicesItemEmail",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemEmail",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": "email",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemPhoneNumber",
                        "key": "phoneNumber",
                        "schema": {
                          "description": undefined,
                          "generatedName": "passwordlessListCodesResponseDevicesItemPhoneNumber",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemPhoneNumber",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": "phoneNumber",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "passwordlessListCodesResponseDevicesItemCodes",
                        "key": "codes",
                        "schema": {
                          "description": undefined,
                          "generatedName": "passwordlessListCodesResponseDevicesItemCodes",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "PasswordlessListCodesResponseDevicesItemCodes",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "type": "array",
                            "value": {
                              "allOf": [],
                              "allOfPropertyConflicts": [],
                              "description": undefined,
                              "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItem",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "properties": [
                                {
                                  "audiences": [],
                                  "conflict": {},
                                  "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemCodeId",
                                  "key": "codeId",
                                  "schema": {
                                    "description": undefined,
                                    "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemCodeId",
                                    "groupName": undefined,
                                    "nameOverride": undefined,
                                    "type": "optional",
                                    "value": {
                                      "description": undefined,
                                      "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItemCodeId",
                                      "groupName": undefined,
                                      "nameOverride": undefined,
                                      "schema": "codeId",
                                      "type": "reference",
                                    },
                                  },
                                },
                                {
                                  "audiences": [],
                                  "conflict": {},
                                  "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemTimeCreated",
                                  "key": "timeCreated",
                                  "schema": {
                                    "description": undefined,
                                    "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemTimeCreated",
                                    "groupName": undefined,
                                    "nameOverride": undefined,
                                    "type": "optional",
                                    "value": {
                                      "description": undefined,
                                      "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItemTimeCreated",
                                      "groupName": undefined,
                                      "nameOverride": undefined,
                                      "schema": "timeCreated",
                                      "type": "reference",
                                    },
                                  },
                                },
                                {
                                  "audiences": [],
                                  "conflict": {},
                                  "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemCodeLifetime",
                                  "key": "codeLifetime",
                                  "schema": {
                                    "description": undefined,
                                    "generatedName": "passwordlessListCodesResponseDevicesItemCodesItemCodeLifetime",
                                    "groupName": undefined,
                                    "nameOverride": undefined,
                                    "type": "optional",
                                    "value": {
                                      "description": undefined,
                                      "generatedName": "PasswordlessListCodesResponseDevicesItemCodesItemCodeLifetime",
                                      "groupName": undefined,
                                      "nameOverride": undefined,
                                      "schema": "codeLifetime",
                                      "type": "reference",
                                    },
                                  },
                                },
                              ],
                              "type": "object",
                            },
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Revokes all codes issued for the user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PasswordlessRevokeAllCodesOfUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeAllCodesOfUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessRevokeAllCodesOfUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeAllCodesOfUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessRevokeAllCodesOfUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeAllCodesOfUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessRevokeAllCodesOfUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "passwordlessRevokeAllCodesOfUser",
      "path": "/recipe/signinup/codes/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBody",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessRevokeAllCodesOfUserRequestBodyEmailEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyEmailEmail",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "email",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyPhoneNumber",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessRevokeAllCodesOfUserRequestBodyPhoneNumberPhoneNumber",
                    "key": "phoneNumber",
                    "schema": {
                      "description": undefined,
                      "generatedName": "PasswordlessRevokeAllCodesOfUserRequestBodyPhoneNumberPhoneNumber",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "phoneNumber",
                      "type": "reference",
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessRevokeAllCodesOfUserResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessRevokeAllCodesOfUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "passwordlessRevokeAllCodesOfUserResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessRevokeAllCodesOfUserResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a user's information.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-9253-0fde890c576",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "email",
              "value": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "phoneNumber",
              "value": {
                "primitive": {
                  "string": "+14155552671",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "user": {
                "properties": {
                  "email": {
                    "primitive": {
                      "string": "johndoe@gmail.com",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "id": {
                    "primitive": {
                      "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "phoneNumber": {
                    "primitive": {
                      "string": "+14155552671",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "timeJoined": {
                    "primitive": {
                      "double": 1623918032231,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PasswordlessGetUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "passwordlessGetUser",
      "path": "/recipe/user⠀⠀",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Use exactly one of phoneNumber, email or userId",
          "name": "email",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "description": "Use exactly one of phoneNumber, email or userId",
          "name": "phoneNumber",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserRequestPhoneNumber",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessGetUserRequestPhoneNumber",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "phoneNumber",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get a user's information.",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "PasswordlessGetUserResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessGetUserResponseUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessGetUserResponseUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessGetUserResponseUserStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessGetUserResponseUserStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessGetUserResponseUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessGetUserResponseUserUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessGetUserResponseUserUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "passwordlessUser",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "PasswordlessGetUserResponseOne",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "passwordlessGetUserResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "passwordlessGetUserResponseOneStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "PasswordlessGetUserResponseOneStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "UNKNOWN_USER_ID_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_USER_ID_ERROR",
                          },
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "UNKNOWN_EMAIL_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_EMAIL_ERROR",
                          },
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "UNKNOWN_PHONE_NUMBER_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_PHONE_NUMBER_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update a user's information. 
If the email or phoneNumber is set to null the previous value will be deleted. If they are not set (i.e., undefined/missing from the request), they are left as-is.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "enum": "OK",
                "type": "enum",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PasswordlessPutUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessPutUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessPutUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessPutUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessPutUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PasswordlessPutUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessPutUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "passwordlessPutUser",
      "path": "/recipe/user⠀⠀",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessPutUserRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessPutUserRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "PasswordlessPutUserRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessPutUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "passwordlessPutUserRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "allOf": [
                    {
                      "description": undefined,
                      "generatedName": "Email",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "email",
                      "type": "reference",
                    },
                  ],
                  "allOfPropertyConflicts": [],
                  "description": undefined,
                  "generatedName": "PasswordlessPutUserRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "properties": [],
                  "type": "object",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessPutUserRequestPhoneNumber",
              "key": "phoneNumber",
              "schema": {
                "description": undefined,
                "generatedName": "passwordlessPutUserRequestPhoneNumber",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "allOf": [
                    {
                      "description": undefined,
                      "generatedName": "PhoneNumber",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "phoneNumber",
                      "type": "reference",
                    },
                  ],
                  "allOfPropertyConflicts": [],
                  "description": undefined,
                  "generatedName": "PasswordlessPutUserRequestPhoneNumber",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "properties": [],
                  "type": "object",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "update user's information",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PasswordlessPutUserResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "passwordlessPutUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "passwordlessPutUserResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PasswordlessPutUserResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "OK",
                      "nameOverride": undefined,
                      "value": "OK",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "UNKNOWN_USER_ID_ERROR",
                      "nameOverride": undefined,
                      "value": "UNKNOWN_USER_ID_ERROR",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "EMAIL_ALREADY_EXISTS_ERROR",
                      "nameOverride": undefined,
                      "value": "EMAIL_ALREADY_EXISTS_ERROR",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "PHONE_NUMBER_ALREADY_EXISTS_ERROR",
                      "nameOverride": undefined,
                      "value": "PHONE_NUMBER_ALREADY_EXISTS_ERROR",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Passwordless Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signin a user with email ID and password
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "password": {
                "primitive": {
                  "string": "password123",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "user": {
                  "properties": {
                    "email": {
                      "primitive": {
                        "string": "johndoe@gmail.com",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "id": {
                      "primitive": {
                        "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "timeJoined": {
                      "primitive": {
                        "double": 1623918032231,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordSigninRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordSigninRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordSigninRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordSigninRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordSigninRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordSigninRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordSigninRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordSignin",
      "path": "/recipe/signin",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordSigninRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordSigninRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordSigninRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSigninRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordSigninRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordSigninRequestPassword",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSigninRequestPassword",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "password",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "signin response",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordSigninResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordSigninResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailPasswordSigninResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailPasswordSigninResponseOkUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordSigninResponseOkUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "user",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "WRONG_CREDENTIALS_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasWrongCredentialsResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "wrongCredentialsResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signup a user with email ID and password
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "password": {
                "primitive": {
                  "string": "password123",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "user": {
                  "properties": {
                    "email": {
                      "primitive": {
                        "string": "johndoe@gmail.com",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "id": {
                      "primitive": {
                        "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "timeJoined": {
                      "primitive": {
                        "double": 1623918032231,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordSignupRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordSignupRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordSignupRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordSignupRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordSignupRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordSignupRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordSignupRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordSignup",
      "path": "/recipe/signup",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordSignupRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordSignupRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordSignupRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSignupRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordSignupRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordSignupRequestPassword",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordSignupRequestPassword",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "password",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "signup response",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordSignupResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordSignupResponseEmailAlreadyExistsError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordSignupResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailPasswordSignupResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailPasswordSignupResponseOkUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordSignupResponseOkUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "user",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a user's information
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "email",
              "value": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "user": {
                "properties": {
                  "email": {
                    "primitive": {
                      "string": "johndoe@gmail.com",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "id": {
                    "primitive": {
                      "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "timeJoined": {
                    "primitive": {
                      "double": 1623918032231,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordGetUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailPasswordGetUser",
      "path": "/recipe/user",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "use either email or userId, not both",
          "name": "email",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserRequestEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "description": "use either email or userId, not both",
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get user's information",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetUserResponseUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailPasswordGetUserResponseUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailPasswordGetUserResponseUserStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetUserResponseUserStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailPasswordGetUserResponseUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailPasswordGetUserResponseUserUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetUserResponseUserUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "user",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetUserResponseOne",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailPasswordGetUserResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailPasswordGetUserResponseOneStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetUserResponseOneStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "UNKNOWN_USER_ID_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_USER_ID_ERROR",
                          },
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "UNKNOWN_EMAIL_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_EMAIL_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update a user's information
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "password": {
                "primitive": {
                  "string": "password123",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "enum": "OK",
                "type": "enum",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordPutUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordPutUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordPutUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordPutUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordPutUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordPutUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordPutUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "emailPasswordPutUser",
      "path": "/recipe/user",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordPutUserRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordPutUserRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordPutUserRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordPutUserRequestUserId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordPutUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordPutUserRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordPutUserRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordPutUserRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordPutUserRequestPassword",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordPutUserRequestPassword",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "password",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "update user's information",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordPutUserResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordPutUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordPutUserResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordPutUserResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "OK",
                      "nameOverride": undefined,
                      "value": "OK",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "UNKNOWN_USER_ID_ERROR",
                      "nameOverride": undefined,
                      "value": "UNKNOWN_USER_ID_ERROR",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "EMAIL_ALREADY_EXISTS_ERROR",
                      "nameOverride": undefined,
                      "value": "EMAIL_ALREADY_EXISTS_ERROR",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Generate a new reset password token for this user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "token": {
                  "primitive": {
                    "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordGetPasswordResetTokenRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetPasswordResetTokenRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetPasswordResetTokenRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetPasswordResetTokenRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetPasswordResetTokenRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetPasswordResetTokenRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetPasswordResetTokenRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordGetPasswordResetToken",
      "path": "/recipe/user/password/reset/token",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetPasswordResetTokenRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetTokenRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetPasswordResetTokenRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetPasswordResetTokenRequestUserId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Generate a new reset password token for this user",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordGetPasswordResetTokenResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetPasswordResetTokenResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailPasswordGetPasswordResetTokenResponseOkToken",
                    "key": "token",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailPasswordGetPasswordResetTokenResponseOkToken",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetPasswordResetTokenResponseOkToken",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "token",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_USER_ID_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownUserIdResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unknownUserIdResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "User Pagination API
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "nextPaginationToken": {
                "primitive": {
                  "string": "ZmE3YTA4ND...OzE2MjM5MTgwMzIyMzE=",
                  "type": "string",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "users": {
                "array": [
                  {
                    "properties": {
                      "email": {
                        "primitive": {
                          "string": "johndoe@gmail.com",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "id": {
                        "primitive": {
                          "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "timeJoined": {
                        "primitive": {
                          "double": 1623918032231,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordGetUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUsersRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUsersRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUsersRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUsersRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUsersRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUsersRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailPasswordGetUsers",
      "path": "/recipe/users",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "paginationToken",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUsersRequestPaginationToken",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUsersRequestPaginationToken",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "limit",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUsersRequestLimit",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUsersRequestLimit",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "timeJoinedOrder",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUsersRequestTimeJoinedOrder",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUsersRequestTimeJoinedOrder",
              "groupName": undefined,
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "ASC",
                  "nameOverride": undefined,
                  "value": "ASC",
                },
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "DESC",
                  "nameOverride": undefined,
                  "value": "DESC",
                },
              ],
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get user's information",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetUsersResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetUsersResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUsersResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetUsersResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetUsersResponseUsers",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUsersResponseUsers",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "EmailPasswordGetUsersResponseUsersItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": "user",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetUsersResponseNextPaginationToken",
              "key": "nextPaginationToken",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetUsersResponseNextPaginationToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUsersResponseNextPaginationToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "paginationToken",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Reset a password using password reset token
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "newPassword": {
                "primitive": {
                  "string": "newpassword123",
                  "type": "string",
                },
                "type": "primitive",
              },
              "token": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "userId": {
                  "primitive": {
                    "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordGetPasswordResetRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetPasswordResetRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetPasswordResetRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetPasswordResetRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetPasswordResetRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetPasswordResetRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetPasswordResetRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailPasswordGetPasswordReset",
      "path": "/recipe/user/password/reset",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetPasswordResetRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetRequestMethod",
              "key": "method",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetPasswordResetRequestMethod",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetPasswordResetRequestMethod",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "literal",
                  "value": {
                    "string": "token",
                    "type": "string",
                  },
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetRequestToken",
              "key": "token",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetPasswordResetRequestToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetPasswordResetRequestToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetPasswordResetRequestNewPassword",
              "key": "newPassword",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetPasswordResetRequestNewPassword",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetPasswordResetRequestNewPassword",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Reset a password using password reset token",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailPasswordGetPasswordResetResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetPasswordResetResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailPasswordGetPasswordResetResponseOkUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailPasswordGetPasswordResetResponseOkUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailPasswordGetPasswordResetResponseOkUserId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "RESET_PASSWORD_INVALID_TOKEN_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailPasswordGetPasswordResetResponseResetPasswordInvalidTokenError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of users
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "count": {
                "primitive": {
                  "double": 10,
                  "type": "double",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EmailPasswordGetUserCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserCountRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserCountRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserCountRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserCountRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailPasswordGetUserCountRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailPasswordGetUserCountRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailPasswordGetUserCount",
      "path": "/recipe/users/count",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of users",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailPasswordGetUserCountResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetUserCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetUserCountResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUserCountResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailPasswordGetUserCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "generatedName": "emailPasswordGetUserCountResponseCount",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailPasswordGetUserCountResponseCount",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Import a user with email ID and password hash
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "passwordHash": {
                "primitive": {
                  "string": "passwordHash",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "didUserAlreadyExist": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "user": {
                "properties": {
                  "email": {
                    "primitive": {
                      "string": "johndoe@gmail.com",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "id": {
                    "primitive": {
                      "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "timeJoined": {
                    "primitive": {
                      "double": 1623918032231,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UserImportRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserImportRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserImportRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserImportRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserImportRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserImportRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserImportRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userImport",
      "path": "/recipe/user/passwordhash/import",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserImportRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userImportRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "userImportRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "email",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userImportRequestPasswordHash",
              "key": "passwordHash",
              "schema": {
                "description": undefined,
                "generatedName": "userImportRequestPasswordHash",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportRequestPasswordHash",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userImportRequestHashingAlgorithm",
              "key": "hashingAlgorithm",
              "schema": {
                "description": undefined,
                "generatedName": "userImportRequestHashingAlgorithm",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportRequestHashingAlgorithm",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "enum",
                  "values": [
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "argon2",
                      "nameOverride": undefined,
                      "value": "argon2",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "bcrypt",
                      "nameOverride": undefined,
                      "value": "bcrypt",
                    },
                    {
                      "casing": {
                        "camel": undefined,
                        "pascal": undefined,
                        "screamingSnake": undefined,
                        "snake": undefined,
                      },
                      "description": undefined,
                      "generatedName": "firebase_scrypt",
                      "nameOverride": undefined,
                      "value": "firebase_scrypt",
                    },
                  ],
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "import user response",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserImportResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userImportResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "userImportResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userImportResponseUser",
              "key": "user",
              "schema": {
                "description": undefined,
                "generatedName": "userImportResponseUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportResponseUser",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "user",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userImportResponseDidUserAlreadyExist",
              "key": "didUserAlreadyExist",
              "schema": {
                "description": undefined,
                "generatedName": "userImportResponseDidUserAlreadyExist",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserImportResponseDidUserAlreadyExist",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailPassword Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signin/up a user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "thirdPartyId": {
                "primitive": {
                  "string": "google",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "createdNewUser": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "user": {
                "properties": {
                  "email": {
                    "primitive": {
                      "string": "johndoe@gmail.com",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "id": {
                    "primitive": {
                      "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "thirdParty": {
                    "properties": {
                      "id": {
                        "primitive": {
                          "string": "google",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "userId": {
                        "primitive": {
                          "string": "userId",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                  "timeJoined": {
                    "primitive": {
                      "double": 1623918032231,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ThirdPartySigninupRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartySigninupRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartySigninupRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartySigninupRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartySigninupRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartySigninupRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartySigninupRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "thirdPartySigninup",
      "path": "/recipe/signinup",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartySigninupRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartySigninupRequestThirdPartyId",
              "key": "thirdPartyId",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartySigninupRequestThirdPartyId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupRequestThirdPartyId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "thirdPartyId",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartySigninupRequestThirdPartyUserId",
              "key": "thirdPartyUserId",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartySigninupRequestThirdPartyUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupRequestThirdPartyUserId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "thirdPartyUserId",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartySigninupRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartySigninupRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "thirdPartyEmail",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Signin/up a user",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartySigninupResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartySigninupResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartySigninupResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartySigninupResponseCreatedNewUser",
              "key": "createdNewUser",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartySigninupResponseCreatedNewUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupResponseCreatedNewUser",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartySigninupResponseUser",
              "key": "user",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartySigninupResponseUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartySigninupResponseUser",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "thirdPartyUser",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a user's information.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-9253-0fde890c576",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "thirdPartyId",
              "value": {
                "primitive": {
                  "string": "google",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "user": {
                "properties": {
                  "email": {
                    "primitive": {
                      "string": "johndoe@gmail.com",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "id": {
                    "primitive": {
                      "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "thirdParty": {
                    "properties": {
                      "id": {
                        "primitive": {
                          "string": "google",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "userId": {
                        "primitive": {
                          "string": "userId",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                  "timeJoined": {
                    "primitive": {
                      "double": 1623918032231,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ThirdPartyGetUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUser",
      "path": "/recipe/user⠀",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Either use userId or thirdPartyId and thirdPartyUserId",
          "name": "thirdPartyId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserRequestThirdPartyId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestThirdPartyId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "thirdPartyId",
              "type": "reference",
            },
          },
        },
        {
          "description": "Either use userId or thirdPartyId and thirdPartyUserId",
          "name": "thirdPartyUserId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserRequestThirdPartyUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserRequestThirdPartyUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "thirdPartyUserId",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get a user's information.",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "ThirdPartyGetUserResponseUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "thirdPartyGetUserResponseUserStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "thirdPartyGetUserResponseUserStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "ThirdPartyGetUserResponseUserStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "statusOK",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "thirdPartyGetUserResponseUserUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "thirdPartyGetUserResponseUserUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "ThirdPartyGetUserResponseUserUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "thirdPartyUser",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "ThirdPartyGetUserResponseOne",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "thirdPartyGetUserResponseOneStatus",
                    "key": "status",
                    "schema": {
                      "description": undefined,
                      "generatedName": "thirdPartyGetUserResponseOneStatus",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "ThirdPartyGetUserResponseOneStatus",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "enum",
                        "values": [
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "UNKNOWN_USER_ID_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_USER_ID_ERROR",
                          },
                          {
                            "casing": {
                              "camel": undefined,
                              "pascal": undefined,
                              "screamingSnake": undefined,
                              "snake": undefined,
                            },
                            "description": undefined,
                            "generatedName": "UNKNOWN_THIRD_PARTY_USER_ERROR",
                            "nameOverride": undefined,
                            "value": "UNKNOWN_THIRD_PARTY_USER_ERROR",
                          },
                        ],
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get all users accounts associated with given email
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "email",
              "value": {
                "primitive": {
                  "string": "john.doe@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "users": {
                "array": [
                  {
                    "properties": {
                      "email": {
                        "primitive": {
                          "string": "johndoe@gmail.com",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "id": {
                        "primitive": {
                          "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "thirdParty": {
                        "properties": {
                          "id": {
                            "primitive": {
                              "string": "google",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                        "type": "object",
                      },
                      "timeJoined": {
                        "primitive": {
                          "double": 1623918032231,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ThirdPartyGetUsersByEmailRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersByEmailRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersByEmailRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersByEmailRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersByEmailRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersByEmailRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersByEmailRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUsersByEmail",
      "path": "/recipe/users/by-email",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "User's email",
          "name": "email",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersByEmailRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get all users associated with given email",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartyGetUsersByEmailResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartyGetUsersByEmailResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartyGetUsersByEmailResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersByEmailResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartyGetUsersByEmailResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartyGetUsersByEmailResponseUsers",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersByEmailResponseUsers",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "ThirdPartyGetUsersByEmailResponseUsersItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": "thirdPartyUser",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get User Pagination data.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "nextPaginationToken": {
                "primitive": {
                  "string": "ZmE3YTA4ND...OzE2MjM5MTgwMzIyMzE=",
                  "type": "string",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "user": {
                "array": [
                  {
                    "properties": {
                      "email": {
                        "primitive": {
                          "string": "johndoe@gmail.com",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "id": {
                        "primitive": {
                          "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "thirdParty": {
                        "properties": {
                          "id": {
                            "primitive": {
                              "string": "google",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                        "type": "object",
                      },
                      "timeJoined": {
                        "primitive": {
                          "double": 1623918032231,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ThirdPartyGetUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUsers",
      "path": "/recipe/users⠀",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "paginationToken",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersRequestPaginationToken",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersRequestPaginationToken",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "timeJoinedOrder",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersRequestTimeJoinedOrder",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersRequestTimeJoinedOrder",
              "groupName": undefined,
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "ASC",
                  "nameOverride": undefined,
                  "value": "ASC",
                },
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "DESC",
                  "nameOverride": undefined,
                  "value": "DESC",
                },
              ],
            },
          },
        },
        {
          "description": undefined,
          "name": "limit",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUsersRequestLimit",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUsersRequestLimit",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get user's information.",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartyGetUsersResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartyGetUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartyGetUsersResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartyGetUsersResponseUser",
              "key": "user",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartyGetUsersResponseUser",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersResponseUser",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "ThirdPartyGetUsersResponseUserItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": "thirdPartyUser",
                    "type": "reference",
                  },
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartyGetUsersResponseNextPaginationToken",
              "key": "nextPaginationToken",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartyGetUsersResponseNextPaginationToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUsersResponseNextPaginationToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "paginationToken",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of users.
Note that there is an invisible character at the end of the path, this was to avoid a conflict with the OpenAPI spec
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "count": {
                "primitive": {
                  "double": 10,
                  "type": "double",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ThirdPartyGetUserCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserCountRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserCountRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserCountRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserCountRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "ThirdPartyGetUserCountRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyGetUserCountRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "thirdPartyGetUserCount",
      "path": "/recipe/users/count⠀",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of users",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "ThirdPartyGetUserCountResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartyGetUserCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartyGetUserCountResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUserCountResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "thirdPartyGetUserCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "generatedName": "thirdPartyGetUserCountResponseCount",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "ThirdPartyGetUserCountResponseCount",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "ThirdParty Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Generate a new email verification token for this user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "token": {
                  "primitive": {
                    "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyTokenRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyTokenRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyTokenRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyTokenRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerifyToken",
      "path": "/recipe/user/email/verify/token",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "description": undefined,
          "generatedName": "EmailVerificationVerifyTokenRequestBody",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "emailVerificationVerifyTokenRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Generate a new email verification token for this user",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailVerificationVerifyTokenResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_VERIFIED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyTokenResponseEmailAlreadyVerifiedError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyTokenResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailVerificationVerifyTokenResponseOkToken",
                    "key": "token",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailVerificationVerifyTokenResponseOkToken",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailVerificationVerifyTokenResponseOkToken",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "token",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Remove all unused email verification tokens for this user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyTokenRemoveRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyTokenRemoveRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRemoveRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyTokenRemoveRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRemoveRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyTokenRemoveRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRemoveRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerifyTokenRemove",
      "path": "/recipe/user/email/verify/token/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "description": undefined,
          "generatedName": "EmailVerificationVerifyTokenRemoveRequestBody",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "emailVerificationVerifyTokenRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "OK response",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyTokenRemoveResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailVerificationVerifyTokenRemoveResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "emailVerificationVerifyTokenRemoveResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyTokenRemoveResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "literal",
                  "value": {
                    "string": "OK",
                    "type": "string",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Check if an email is verified
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-9253-0fde890c576",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "email",
              "value": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "isVerified": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyGetRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyGetRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyGetRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyGetRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyGetRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyGetRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyGetRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "emailVerificationVerifyGet",
      "path": "/recipe/user/email/verify",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyGetRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyGetRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "email",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyGetRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyGetRequestEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Verify an email",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyGetResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailVerificationVerifyGetResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "emailVerificationVerifyGetResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyGetResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailVerificationVerifyGetResponseIsVerified",
              "key": "isVerified",
              "schema": {
                "description": undefined,
                "generatedName": "emailVerificationVerifyGetResponseIsVerified",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyGetResponseIsVerified",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "isVerified",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Verify an email
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "token": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "email": {
                  "primitive": {
                    "string": "johndoe@gmail.com",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "userId": {
                  "primitive": {
                    "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerify",
      "path": "/recipe/user/email/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailVerificationVerifyRequestMethod",
              "key": "method",
              "schema": {
                "description": undefined,
                "generatedName": "emailVerificationVerifyRequestMethod",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyRequestMethod",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "literal",
                  "value": {
                    "string": "token",
                    "type": "string",
                  },
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailVerificationVerifyRequestToken",
              "key": "token",
              "schema": {
                "description": undefined,
                "generatedName": "emailVerificationVerifyRequestToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyRequestToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Verify an email",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "EmailVerificationVerifyResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_VERIFICATION_INVALID_TOKEN_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyResponseEmailVerificationInvalidTokenError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "EmailVerificationVerifyResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailVerificationVerifyResponseOkUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailVerificationVerifyResponseOkUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailVerificationVerifyResponseOkUserId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "emailVerificationVerifyResponseOkEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "generatedName": "emailVerificationVerifyResponseOkEmail",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "EmailVerificationVerifyResponseOkEmail",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "email",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Unverify an email
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "johndoe@gmail.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "EmailVerificationVerifyRemoveRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyRemoveRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyRemoveRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyRemoveRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyRemoveRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "EmailVerificationVerifyRemoveRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyRemoveRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "emailVerificationVerifyRemove",
      "path": "/recipe/user/email/verify/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "description": undefined,
          "generatedName": "EmailVerificationVerifyRemoveRequestBody",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "emailVerificationVerifyTokenRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "OK response",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "EmailVerificationVerifyRemoveResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "emailVerificationVerifyRemoveResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "emailVerificationVerifyRemoveResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "EmailVerificationVerifyRemoveResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "literal",
                  "value": {
                    "string": "OK",
                    "type": "string",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "EmailVerification Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Gets the stored metadata object of the user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-9253-0fde890c576",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "metadata": {
                "map": [
                  {
                    "key": {
                      "string": "metadata",
                      "type": "string",
                    },
                    "value": {
                      "map": [
                        {
                          "key": {
                            "string": "key",
                            "type": "string",
                          },
                          "value": {
                            "primitive": {
                              "string": "value",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      ],
                      "type": "map",
                    },
                  },
                ],
                "type": "map",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UserMetadataReadRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataReadRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataReadRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataReadRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataReadRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataReadRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataReadRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "userMetadataRead",
      "path": "/recipe/user/metadata",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataReadRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataReadResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataReadResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataReadResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataReadResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataReadResponseMetadata",
              "key": "metadata",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataReadResponseMetadata",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataReadResponseMetadata",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userMetadata",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Metadata Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Updates the metadata object stored about the user by doing a shallow merge of the stored and the update JSONs
and removing properties set to null on the root level of the update object. The merged object is then reserialized and stored.

e.g.:
  - stored: \`{ "preferences": { "theme":"dark" }, "notifications": { "email": true }, "todos": ["example"] }\`

  - update: \`{ "notifications": { "sms": true }, "todos": null }\`

  - result: \`{ "preferences": { "theme":"dark" }, "notifications": { "sms": true } }\`
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "metadata": {
                "map": [
                  {
                    "key": {
                      "string": "metadata",
                      "type": "string",
                    },
                    "value": {
                      "map": [
                        {
                          "key": {
                            "string": "key",
                            "type": "string",
                          },
                          "value": {
                            "primitive": {
                              "string": "value",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      ],
                      "type": "map",
                    },
                  },
                ],
                "type": "map",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UserMetadataUpdateRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataUpdateRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataUpdateRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataUpdateRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataUpdateRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataUpdateRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataUpdateRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "userMetadataUpdate",
      "path": "/recipe/user/metadata",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataUpdateRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataUpdateRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataUpdateRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateRequestUserId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataUpdateRequestMetadataUpdate",
              "key": "metadataUpdate",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataUpdateRequestMetadataUpdate",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateRequestMetadataUpdate",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userMetadataUpdate",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataUpdateResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataUpdateResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataUpdateResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataUpdateResponseMetadata",
              "key": "metadata",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataUpdateResponseMetadata",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataUpdateResponseMetadata",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userMetadata",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Metadata Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Removes the entire metadata JSON stored about the user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UserMetadataDeleteRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataDeleteRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataDeleteRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataDeleteRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataDeleteRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UserMetadataDeleteRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UserMetadataDeleteRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "userMetadataDelete",
      "path": "/recipe/user/metadata/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataDeleteRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataDeleteRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataDeleteRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataDeleteRequestUserId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "UserMetadataDeleteResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "userMetadataDeleteResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "userMetadataDeleteResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "UserMetadataDeleteResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Metadata Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Creates a User Role mapping
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "role": {
                "primitive": {
                  "string": "admin",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "didUserAlreadyHaveRole": {
                  "primitive": {
                    "boolean": true,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "AddUserRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "AddUserRoleRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "AddUserRoleRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "AddUserRoleRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "AddUserRoleRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "AddUserRoleRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "AddUserRoleRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "addUserRole",
      "path": "/recipe/user/role",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "AddUserRoleRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "addUserRoleRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "AddUserRoleRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "addUserRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "AddUserRoleRequestRole",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "AddUserRoleResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "AddUserRoleResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "addUserRoleResponseOkDidUserAlreadyHaveRole",
                    "key": "didUserAlreadyHaveRole",
                    "schema": {
                      "description": undefined,
                      "generatedName": "addUserRoleResponseOkDidUserAlreadyHaveRole",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "AddUserRoleResponseOkDidUserAlreadyHaveRole",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Removes a User Role mapping
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "role": {
                "primitive": {
                  "string": "admin",
                  "type": "string",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "didUserHaveRole": {
                  "primitive": {
                    "boolean": true,
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "RemoveUserRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveUserRoleRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveUserRoleRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveUserRoleRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveUserRoleRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveUserRoleRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveUserRoleRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeUserRole",
      "path": "/recipe/user/role/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveUserRoleRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeUserRoleRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveUserRoleRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "userId",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeUserRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveUserRoleRequestRole",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RemoveUserRoleResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveUserRoleResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "removeUserRoleResponseOkDidUserHaveRole",
                    "key": "didUserHaveRole",
                    "schema": {
                      "description": undefined,
                      "generatedName": "removeUserRoleResponseOkDidUserHaveRole",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RemoveUserRoleResponseOkDidUserHaveRole",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the roles associated with the user.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-9253-0fde890c576",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "roles": {
                "array": [
                  {
                    "primitive": {
                      "string": "admin",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetUserRolesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserRolesRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUserRolesRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserRolesRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUserRolesRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserRolesRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUserRolesRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUserRoles",
      "path": "/recipe/user/roles",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserRolesRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUserRolesResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUserRolesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getUserRolesResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUserRolesResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUserRolesResponseRoles",
              "key": "roles",
              "schema": {
                "description": undefined,
                "generatedName": "getUserRolesResponseRoles",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUserRolesResponseRoles",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "GetUserRolesResponseRolesItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": "role",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the users associated with the role.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "role",
              "value": {
                "primitive": {
                  "string": "admin",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "users": {
                  "array": [
                    {
                      "primitive": {
                        "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  ],
                  "type": "array",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetRoleUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRoleUsersRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRoleUsersRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRoleUsersRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRoleUsersRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRoleUsersRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRoleUsersRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getRoleUsers",
      "path": "/recipe/role/users",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "role",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRoleUsersRequestRole",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetRoleUsersResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetRoleUsersResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getRoleUsersResponseOkUsers",
                    "key": "users",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getRoleUsersResponseOkUsers",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetRoleUsersResponseOkUsers",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "array",
                        "value": {
                          "description": undefined,
                          "generatedName": "GetRoleUsersResponseOkUsersItem",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "schema": "userId",
                          "type": "reference",
                        },
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Creates a role with permissions, can also be used to add permissions to a role
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "permissions": {
                "array": [
                  {
                    "primitive": {
                      "string": "permission",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "role": {
                "primitive": {
                  "string": "admin",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "createdNewRole": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PutRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutRoleRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutRoleRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutRoleRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutRoleRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutRoleRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutRoleRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putRole",
      "path": "/recipe/role",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutRoleRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "PutRoleRequestRole",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putRoleRequestPermissions",
              "key": "permissions",
              "schema": {
                "description": undefined,
                "generatedName": "putRoleRequestPermissions",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutRoleRequestPermissions",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "PutRoleRequestPermissionsItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutRoleResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putRoleResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "putRoleResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutRoleResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putRoleResponseCreatedNewRole",
              "key": "createdNewRole",
              "schema": {
                "description": undefined,
                "generatedName": "putRoleResponseCreatedNewRole",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutRoleResponseCreatedNewRole",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the permissions associated with a role
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "role",
              "value": {
                "primitive": {
                  "string": "admin",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "permissions": {
                  "array": [
                    {
                      "primitive": {
                        "string": "permission",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  ],
                  "type": "array",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetRolePermissionsRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRolePermissionsRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRolePermissionsRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRolePermissionsRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRolePermissionsRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRolePermissionsRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRolePermissionsRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getRolePermissions",
      "path": "/recipe/role/permissions",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "role",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRolePermissionsRequestRole",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetRolePermissionsResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetRolePermissionsResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getRolePermissionsResponseOkPermissions",
                    "key": "permissions",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getRolePermissionsResponseOkPermissions",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetRolePermissionsResponseOkPermissions",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "type": "array",
                        "value": {
                          "description": undefined,
                          "generatedName": "GetRolePermissionsResponseOkPermissionsItem",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "schema": {
                            "maxLength": undefined,
                            "minLength": undefined,
                            "type": "string",
                          },
                          "type": "primitive",
                        },
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Removes permissions mapped to a role, if no permissions are passed all permissions mapped to the role are removed
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "permissions": {
                "array": [
                  {
                    "primitive": {
                      "string": "permission",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "role": {
                "primitive": {
                  "string": "admin",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "RemoveRolePermissionsRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveRolePermissionsRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveRolePermissionsRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveRolePermissionsRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveRolePermissionsRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveRolePermissionsRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveRolePermissionsRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeRolePermissions",
      "path": "/recipe/role/permissions/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveRolePermissionsRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeRolePermissionsRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveRolePermissionsRequestRole",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeRolePermissionsRequestPermissions",
              "key": "permissions",
              "schema": {
                "description": undefined,
                "generatedName": "removeRolePermissionsRequestPermissions",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RemoveRolePermissionsRequestPermissions",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "RemoveRolePermissionsRequestPermissionsItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RemoveRolePermissionsResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RemoveRolePermissionsResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "UNKNOWN_ROLE_ERROR": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnknownRoleResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unknownRoleResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive the roles associated with the permission
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "permission",
              "value": {
                "primitive": {
                  "string": "permission",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "roles": {
                "array": [
                  {
                    "primitive": {
                      "string": "admin",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetPermissionRolesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetPermissionRolesRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetPermissionRolesRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetPermissionRolesRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetPermissionRolesRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetPermissionRolesRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetPermissionRolesRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getPermissionRoles",
      "path": "/recipe/permission/roles",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "permission",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetPermissionRolesRequestPermission",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "maxLength": undefined,
              "minLength": undefined,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetPermissionRolesResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getPermissionRolesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getPermissionRolesResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetPermissionRolesResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getPermissionRolesResponseRoles",
              "key": "roles",
              "schema": {
                "description": undefined,
                "generatedName": "getPermissionRolesResponseRoles",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetPermissionRolesResponseRoles",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "GetPermissionRolesResponseRolesItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Deletes a role
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "role": {
                "primitive": {
                  "string": "admin",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "didRoleExist": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RemoveRoleRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveRoleRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveRoleRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveRoleRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveRoleRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RemoveRoleRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RemoveRoleRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "removeRole",
      "path": "/recipe/role/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveRoleRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeRoleRequestRole",
              "key": "role",
              "schema": {
                "description": undefined,
                "generatedName": "RemoveRoleRequestRole",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "role",
                "type": "reference",
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RemoveRoleResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeRoleResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "removeRoleResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RemoveRoleResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "removeRoleResponseDidRoleExist",
              "key": "didRoleExist",
              "schema": {
                "description": undefined,
                "generatedName": "removeRoleResponseDidRoleExist",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RemoveRoleResponseDidRoleExist",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrive all created roles
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "roles": {
                "array": [
                  {
                    "primitive": {
                      "string": "admin",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetRolesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRolesRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRolesRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRolesRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRolesRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetRolesRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetRolesRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getRoles",
      "path": "/recipe/roles",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetRolesResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getRolesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getRolesResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetRolesResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getRolesResponseRoles",
              "key": "roles",
              "schema": {
                "description": undefined,
                "generatedName": "getRolesResponseRoles",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetRolesResponseRoles",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "GetRolesResponseRolesItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "User Roles Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get user and session information for a given session handle
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "sessionHandle",
              "value": {
                "primitive": {
                  "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "expiry": {
                  "primitive": {
                    "double": 1637262633029,
                    "type": "double",
                  },
                  "type": "primitive",
                },
                "sessionHandle": {
                  "primitive": {
                    "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "timeCreated": {
                  "primitive": {
                    "double": 1637262633029,
                    "type": "double",
                  },
                  "type": "primitive",
                },
                "userDataInDatabase": {
                  "map": [
                    {
                      "key": {
                        "string": "string",
                        "type": "string",
                      },
                      "value": {
                        "map": [
                          {
                            "key": {
                              "string": "key",
                              "type": "string",
                            },
                            "value": {
                              "primitive": {
                                "string": "value",
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "map",
                      },
                    },
                  ],
                  "type": "map",
                },
                "userDataInJWT": {
                  "map": [
                    {
                      "key": {
                        "string": "string",
                        "type": "string",
                      },
                      "value": {
                        "map": [
                          {
                            "key": {
                              "string": "key",
                              "type": "string",
                            },
                            "value": {
                              "primitive": {
                                "string": "value",
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "map",
                      },
                    },
                  ],
                  "type": "map",
                },
                "userId": {
                  "primitive": {
                    "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetSessionInfoRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionInfoRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionInfoRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionInfoRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionInfoRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionInfoRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionInfoRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getSessionInfo",
      "path": "/recipe/session",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "sessionHandle",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionInfoRequestSessionHandle",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionInfoRequestSessionHandle",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get user and session information for a given session handle",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetSessionInfoResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetSessionInfoResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkUserDataInDatabase",
                    "key": "userDataInDatabase",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getSessionInfoResponseOkUserDataInDatabase",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkUserDataInDatabase",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userDataInDatabase",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkUserDataInJwt",
                    "key": "userDataInJWT",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getSessionInfoResponseOkUserDataInJwt",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkUserDataInJwt",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userDataInJWT",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getSessionInfoResponseOkUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkUserId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkExpiry",
                    "key": "expiry",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getSessionInfoResponseOkExpiry",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkExpiry",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "expiry",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkTimeCreated",
                    "key": "timeCreated",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getSessionInfoResponseOkTimeCreated",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkTimeCreated",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "timeCreated",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getSessionInfoResponseOkSessionHandle",
                    "key": "sessionHandle",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getSessionInfoResponseOkSessionHandle",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionInfoResponseOkSessionHandle",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "handle",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a new Session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "enableAntiCsrf": {
                "primitive": {
                  "boolean": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "useDynamicSigningKey": {
                "primitive": {
                  "boolean": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "accessToken": {
                "properties": {
                  "createdTime": {
                    "primitive": {
                      "double": 1637262633029,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                  "expiry": {
                    "primitive": {
                      "double": 1637262633029,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                  "token": {
                    "primitive": {
                      "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
              "antiCsrfToken": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
              "refreshToken": {
                "properties": {
                  "createdTime": {
                    "primitive": {
                      "double": 1637262633029,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                  "expiry": {
                    "primitive": {
                      "double": 1637262633029,
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                  "token": {
                    "primitive": {
                      "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
              "session": {
                "properties": {
                  "handle": {
                    "primitive": {
                      "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "userDataInJWT": {
                    "map": [
                      {
                        "key": {
                          "string": "userDataInJWT",
                          "type": "string",
                        },
                        "value": {
                          "map": [
                            {
                              "key": {
                                "string": "key",
                                "type": "string",
                              },
                              "value": {
                                "primitive": {
                                  "string": "value",
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          ],
                          "type": "map",
                        },
                      },
                    ],
                    "type": "map",
                  },
                  "userId": {
                    "primitive": {
                      "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
                "type": "object",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "CreateNewSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateNewSessionRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateNewSessionRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateNewSessionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateNewSessionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateNewSessionRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateNewSessionRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createNewSession",
      "path": "/recipe/session",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateNewSessionRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestUserId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionRequestUserDataInJwt",
              "key": "userDataInJWT",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionRequestUserDataInJwt",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestUserDataInJwt",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userDataInJWT",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionRequestUserDataInDatabase",
              "key": "userDataInDatabase",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionRequestUserDataInDatabase",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestUserDataInDatabase",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userDataInDatabase",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionRequestEnableAntiCsrf",
              "key": "enableAntiCsrf",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionRequestEnableAntiCsrf",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionRequestEnableAntiCsrf",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "enableAntiCsrf",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionRequestUseDynamicSigningKey",
              "key": "useDynamicSigningKey",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionRequestUseDynamicSigningKey",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": "Decides if the token should be signed with a dynamic or static key, defaults to true",
                  "generatedName": "CreateNewSessionRequestUseDynamicSigningKey",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Create a new Session",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateNewSessionResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionResponseSession",
              "key": "session",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionResponseSession",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseSession",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "session",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionResponseAccessToken",
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionResponseAccessToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseAccessToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "cookieInfo",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionResponseRefreshToken",
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionResponseRefreshToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseRefreshToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "cookieInfo",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createNewSessionResponseAntiCsrfToken",
              "key": "antiCsrfToken",
              "schema": {
                "description": undefined,
                "generatedName": "createNewSessionResponseAntiCsrfToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateNewSessionResponseAntiCsrfToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete a sesion
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "sessionHandles": {
                "array": [
                  {
                    "primitive": {
                      "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "sessionHandlesRevoked": {
                "array": [
                  {
                    "primitive": {
                      "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DeleteSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteSessionRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteSessionRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteSessionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteSessionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteSessionRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteSessionRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "deleteSession",
      "path": "/recipe/session/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "DeleteSessionRequestBody",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "DeleteSessionRequestBodySessionHandles",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "deleteSessionRequestBodySessionHandlesSessionHandles",
                    "key": "sessionHandles",
                    "schema": {
                      "description": undefined,
                      "generatedName": "deleteSessionRequestBodySessionHandlesSessionHandles",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "DeleteSessionRequestBodySessionHandlesSessionHandles",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "sessionHandles",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "DeleteSessionRequestBodyUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "deleteSessionRequestBodyUserIdUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "deleteSessionRequestBodyUserIdUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "DeleteSessionRequestBodyUserIdUserId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userId",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Delete a session",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteSessionResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "deleteSessionResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "deleteSessionResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteSessionResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "deleteSessionResponseSessionHandlesRevoked",
              "key": "sessionHandlesRevoked",
              "schema": {
                "description": undefined,
                "generatedName": "deleteSessionResponseSessionHandlesRevoked",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteSessionResponseSessionHandlesRevoked",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "sessionHandles",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Verify a Session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "accessToken": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
              "antiCsrfToken": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
              "checkDatabase": {
                "primitive": {
                  "boolean": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "doAntiCsrfCheck": {
                "primitive": {
                  "boolean": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "enableAntiCsrf": {
                "primitive": {
                  "boolean": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "accessToken": {
                  "properties": {
                    "createdTime": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "expiry": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "token": {
                      "primitive": {
                        "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
                "session": {
                  "properties": {
                    "handle": {
                      "primitive": {
                        "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "userDataInJWT": {
                      "map": [
                        {
                          "key": {
                            "string": "userDataInJWT",
                            "type": "string",
                          },
                          "value": {
                            "map": [
                              {
                                "key": {
                                  "string": "key",
                                  "type": "string",
                                },
                                "value": {
                                  "primitive": {
                                    "string": "value",
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "map",
                          },
                        },
                      ],
                      "type": "map",
                    },
                    "userId": {
                      "primitive": {
                        "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "VerifySessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifySessionRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifySessionRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifySessionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifySessionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifySessionRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifySessionRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifySession",
      "path": "/recipe/session/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifySessionRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifySessionRequestAccessToken",
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "generatedName": "verifySessionRequestAccessToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifySessionRequestAccessToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifySessionRequestEnableAntiCsrf",
              "key": "enableAntiCsrf",
              "schema": {
                "description": undefined,
                "generatedName": "verifySessionRequestEnableAntiCsrf",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifySessionRequestEnableAntiCsrf",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "enableAntiCsrf",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifySessionRequestDoAntiCsrfCheck",
              "key": "doAntiCsrfCheck",
              "schema": {
                "description": undefined,
                "generatedName": "verifySessionRequestDoAntiCsrfCheck",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifySessionRequestDoAntiCsrfCheck",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifySessionRequestCheckDatabase",
              "key": "checkDatabase",
              "schema": {
                "description": undefined,
                "generatedName": "verifySessionRequestCheckDatabase",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": "Decides if we always check if the session exists in the DB or just do token validation, defaults to false.",
                  "generatedName": "VerifySessionRequestCheckDatabase",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifySessionRequestAntiCsrfToken",
              "key": "antiCsrfToken",
              "schema": {
                "description": undefined,
                "generatedName": "verifySessionRequestAntiCsrfToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifySessionRequestAntiCsrfToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Verify a session",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifySessionResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifySessionResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "verifySessionResponseOkSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "generatedName": "verifySessionResponseOkSession",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifySessionResponseOkSession",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "session",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "verifySessionResponseOkAccessToken",
                    "key": "accessToken",
                    "schema": {
                      "description": undefined,
                      "generatedName": "verifySessionResponseOkAccessToken",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifySessionResponseOkAccessToken",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TRY_REFRESH_TOKEN": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifySessionResponseTryRefreshToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "verifySessionResponseTryRefreshTokenMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "generatedName": "verifySessionResponseTryRefreshTokenMessage",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifySessionResponseTryRefreshTokenMessage",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "message",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Refresh a Session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "antiCsrfToken": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
              "enableAntiCsrf": {
                "primitive": {
                  "boolean": false,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "refreshToken": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "accessToken": {
                  "properties": {
                    "createdTime": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "expiry": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "token": {
                      "primitive": {
                        "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
                "antiCsrfToken": {
                  "primitive": {
                    "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "refreshToken": {
                  "properties": {
                    "createdTime": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "expiry": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "token": {
                      "primitive": {
                        "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
                "session": {
                  "properties": {
                    "handle": {
                      "primitive": {
                        "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "userDataInJWT": {
                      "map": [
                        {
                          "key": {
                            "string": "userDataInJWT",
                            "type": "string",
                          },
                          "value": {
                            "map": [
                              {
                                "key": {
                                  "string": "key",
                                  "type": "string",
                                },
                                "value": {
                                  "primitive": {
                                    "string": "value",
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "map",
                          },
                        },
                      ],
                      "type": "map",
                    },
                    "userId": {
                      "primitive": {
                        "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "RefreshSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RefreshSessionRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RefreshSessionRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RefreshSessionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RefreshSessionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RefreshSessionRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RefreshSessionRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "refreshSession",
      "path": "/recipe/session/refresh",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RefreshSessionRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "refreshSessionRequestRefreshToken",
              "key": "refreshToken",
              "schema": {
                "description": undefined,
                "generatedName": "RefreshSessionRequestRefreshToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "token",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "refreshSessionRequestEnableAntiCsrf",
              "key": "enableAntiCsrf",
              "schema": {
                "description": undefined,
                "generatedName": "RefreshSessionRequestEnableAntiCsrf",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "enableAntiCsrf",
                "type": "reference",
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "refreshSessionRequestAntiCsrfToken",
              "key": "antiCsrfToken",
              "schema": {
                "description": undefined,
                "generatedName": "refreshSessionRequestAntiCsrfToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RefreshSessionRequestAntiCsrfToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Refresh a session",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RefreshSessionResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RefreshSessionResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "generatedName": "refreshSessionResponseOkSession",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkSession",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "session",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkAccessToken",
                    "key": "accessToken",
                    "schema": {
                      "description": undefined,
                      "generatedName": "refreshSessionResponseOkAccessToken",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkAccessToken",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkRefreshToken",
                    "key": "refreshToken",
                    "schema": {
                      "description": undefined,
                      "generatedName": "refreshSessionResponseOkRefreshToken",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkRefreshToken",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "refreshSessionResponseOkAntiCsrfToken",
                    "key": "antiCsrfToken",
                    "schema": {
                      "description": undefined,
                      "generatedName": "refreshSessionResponseOkAntiCsrfToken",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseOkAntiCsrfToken",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "token",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "TOKEN_THEFT_DETECTED": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RefreshSessionResponseTokenTheftDetected",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "refreshSessionResponseTokenTheftDetectedSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "generatedName": "refreshSessionResponseTokenTheftDetectedSession",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "allOfPropertyConflicts": [],
                        "description": undefined,
                        "generatedName": "RefreshSessionResponseTokenTheftDetectedSession",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "refreshSessionResponseTokenTheftDetectedSessionHandle",
                            "key": "handle",
                            "schema": {
                              "description": undefined,
                              "generatedName": "refreshSessionResponseTokenTheftDetectedSessionHandle",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "RefreshSessionResponseTokenTheftDetectedSessionHandle",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": "handle",
                                "type": "reference",
                              },
                            },
                          },
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "refreshSessionResponseTokenTheftDetectedSessionUserId",
                            "key": "userId",
                            "schema": {
                              "description": undefined,
                              "generatedName": "refreshSessionResponseTokenTheftDetectedSessionUserId",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "RefreshSessionResponseTokenTheftDetectedSessionUserId",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": "userId",
                                "type": "reference",
                              },
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get session handles for a user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-9253-0fde890c576",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "sessionHandles": {
                "array": [
                  {
                    "primitive": {
                      "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetUserSessionHandlesRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserSessionHandlesRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUserSessionHandlesRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserSessionHandlesRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUserSessionHandlesRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserSessionHandlesRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUserSessionHandlesRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUserSessionHandles",
      "path": "/recipe/session/user",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUserSessionHandlesRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUserSessionHandlesRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get user Session Handles",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUserSessionHandlesResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUserSessionHandlesResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getUserSessionHandlesResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUserSessionHandlesResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUserSessionHandlesResponseSessionHandles",
              "key": "sessionHandles",
              "schema": {
                "description": undefined,
                "generatedName": "getUserSessionHandlesResponseSessionHandles",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUserSessionHandlesResponseSessionHandles",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "sessionHandles",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Regenerate a session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "accessToken": {
                "primitive": {
                  "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "accessToken": {
                  "properties": {
                    "createdTime": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "expiry": {
                      "primitive": {
                        "double": 1637262633029,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "token": {
                      "primitive": {
                        "string": "ZTRiOTBjNz...jI5MTZlODkxw",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
                "session": {
                  "properties": {
                    "handle": {
                      "primitive": {
                        "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "userDataInJWT": {
                      "map": [
                        {
                          "key": {
                            "string": "userDataInJWT",
                            "type": "string",
                          },
                          "value": {
                            "map": [
                              {
                                "key": {
                                  "string": "key",
                                  "type": "string",
                                },
                                "value": {
                                  "primitive": {
                                    "string": "value",
                                    "type": "string",
                                  },
                                  "type": "primitive",
                                },
                              },
                            ],
                            "type": "map",
                          },
                        },
                      ],
                      "type": "map",
                    },
                    "userId": {
                      "primitive": {
                        "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "RegenerateSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RegenerateSessionRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RegenerateSessionRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RegenerateSessionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RegenerateSessionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RegenerateSessionRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RegenerateSessionRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "regenerateSession",
      "path": "/recipe/session/regenerate",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RegenerateSessionRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "regenerateSessionRequestAccessToken",
              "key": "accessToken",
              "schema": {
                "description": undefined,
                "generatedName": "regenerateSessionRequestAccessToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RegenerateSessionRequestAccessToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "token",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "regenerateSessionRequestUserDataInJwt",
              "key": "userDataInJWT",
              "schema": {
                "description": undefined,
                "generatedName": "regenerateSessionRequestUserDataInJwt",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RegenerateSessionRequestUserDataInJwt",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userDataInJWT",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Regenerate user session",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "RegenerateSessionResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "RegenerateSessionResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "regenerateSessionResponseOkSession",
                    "key": "session",
                    "schema": {
                      "description": undefined,
                      "generatedName": "regenerateSessionResponseOkSession",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RegenerateSessionResponseOkSession",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "session",
                        "type": "reference",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "regenerateSessionResponseOkAccessToken",
                    "key": "accessToken",
                    "schema": {
                      "description": undefined,
                      "generatedName": "regenerateSessionResponseOkAccessToken",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "RegenerateSessionResponseOkAccessToken",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "cookieInfo",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get session data
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "sessionHandle",
              "value": {
                "primitive": {
                  "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "userDataInDatabase": {
                  "map": [
                    {
                      "key": {
                        "string": "string",
                        "type": "string",
                      },
                      "value": {
                        "map": [
                          {
                            "key": {
                              "string": "key",
                              "type": "string",
                            },
                            "value": {
                              "primitive": {
                                "string": "value",
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "map",
                      },
                    },
                  ],
                  "type": "map",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetSessionDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionDataRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionDataRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionDataRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionDataRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionDataRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionDataRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getSessionData",
      "path": "/recipe/session/data",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Users session handle",
          "name": "sessionHandle",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSessionDataRequestSessionHandle",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSessionDataRequestSessionHandle",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get Session Data",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetSessionDataResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetSessionDataResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getSessionDataResponseOkUserDataInDatabase",
                    "key": "userDataInDatabase",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getSessionDataResponseOkUserDataInDatabase",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetSessionDataResponseOkUserDataInDatabase",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userDataInDatabase",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Change session data
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PutSessionDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutSessionDataRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutSessionDataRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutSessionDataRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutSessionDataRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutSessionDataRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutSessionDataRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putSessionData",
      "path": "/recipe/session/data",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutSessionDataRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putSessionDataRequestSessionHandle",
              "key": "sessionHandle",
              "schema": {
                "description": undefined,
                "generatedName": "putSessionDataRequestSessionHandle",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutSessionDataRequestSessionHandle",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "handle",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putSessionDataRequestUserDataInDatabase",
              "key": "userDataInDatabase",
              "schema": {
                "description": undefined,
                "generatedName": "putSessionDataRequestUserDataInDatabase",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutSessionDataRequestUserDataInDatabase",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userDataInDatabase",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Change Session Data",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "PutSessionDataResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "description": undefined,
                "generatedName": "ComponentsSchemasStatusOkResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "statusOKResponse",
                "type": "reference",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a signed JWT
",
      "errorStatusCode": [
        400,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "jwksDomain": {
                "primitive": {
                  "string": "https://api.test.com/",
                  "type": "string",
                },
                "type": "primitive",
              },
              "useStaticSigningKey": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "validity": {
                "primitive": {
                  "double": 86400,
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "jwt": {
                  "primitive": {
                    "string": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "CreateSignedJwtRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateSignedJwtRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateSignedJwtRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateSignedJwtRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateSignedJwtRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateSignedJwtRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateSignedJwtRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createSignedJWT",
      "path": "/recipe/jwt",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateSignedJwtRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createSignedJwtRequestPayload",
              "key": "payload",
              "schema": {
                "description": undefined,
                "generatedName": "createSignedJwtRequestPayload",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestPayload",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "createJWTPayload",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createSignedJwtRequestAlgorithm",
              "key": "algorithm",
              "schema": {
                "description": undefined,
                "generatedName": "createSignedJwtRequestAlgorithm",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestAlgorithm",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "createJWTAlgorithm",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createSignedJwtRequestJwksDomain",
              "key": "jwksDomain",
              "schema": {
                "description": undefined,
                "generatedName": "createSignedJwtRequestJwksDomain",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestJwksDomain",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "jwksDomain",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createSignedJwtRequestValidity",
              "key": "validity",
              "schema": {
                "description": undefined,
                "generatedName": "createSignedJwtRequestValidity",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateSignedJwtRequestValidity",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "jwtValidity",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createSignedJwtRequestUseStaticSigningKey",
              "key": "useStaticSigningKey",
              "schema": {
                "description": undefined,
                "generatedName": "createSignedJwtRequestUseStaticSigningKey",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": "Decides if the token should be signed with a dynamic or static key, defaults to true",
                  "generatedName": "CreateSignedJwtRequestUseStaticSigningKey",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Create a signed JWT",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "CreateSignedJwtResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateSignedJwtResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "createSignedJwtResponseOkJwt",
                    "key": "jwt",
                    "schema": {
                      "description": undefined,
                      "generatedName": "createSignedJwtResponseOkJwt",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "CreateSignedJwtResponseOkJwt",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNSUPPORTED_ALGORITHM_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateSignedJwtResponseUnsupportedAlgorithmError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "JWT Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve JWKs for JWT verification, containing both static and dynamic keys.
",
      "errorStatusCode": [
        400,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "keys": {
                "array": [
                  {
                    "properties": {
                      "alg": {
                        "literal": {
                          "string": "RS256",
                          "type": "string",
                        },
                        "type": "literal",
                      },
                      "kid": {
                        "primitive": {
                          "string": "kid",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "kty": {
                        "primitive": {
                          "string": "RSA",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "use": {
                        "primitive": {
                          "string": "sig",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "x5c": {
                        "array": [
                          {
                            "primitive": {
                              "string": "x5c",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        ],
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RetrieveJwksRequest",
      "headers": [],
      "internal": undefined,
      "method": "GET",
      "operationId": "retrieveJwks",
      "path": "/.well-known/jwks.jsonx",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Retrieve JWKs for JWT verification, containing both static and dynamic keys.",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RetrieveJwksResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "retrieveJwksResponseKeys",
              "key": "keys",
              "schema": {
                "description": undefined,
                "generatedName": "retrieveJwksResponseKeys",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RetrieveJwksResponseKeys",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "RetrieveJwksResponseKeysItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": "jwk",
                    "type": "reference",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get JWT data for a session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "sessionHandle",
              "value": {
                "primitive": {
                  "string": "68en6gd6-865b-4af6-ba00-96e5c153257d",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "userDataInJWT": {
                  "map": [
                    {
                      "key": {
                        "string": "string",
                        "type": "string",
                      },
                      "value": {
                        "map": [
                          {
                            "key": {
                              "string": "key",
                              "type": "string",
                            },
                            "value": {
                              "primitive": {
                                "string": "value",
                                "type": "string",
                              },
                              "type": "primitive",
                            },
                          },
                        ],
                        "type": "map",
                      },
                    },
                  ],
                  "type": "map",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetJwtDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetJwtDataRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetJwtDataRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetJwtDataRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetJwtDataRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetJwtDataRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetJwtDataRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getJWTData",
      "path": "/recipe/jwt/data",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Users session handle",
          "name": "sessionHandle",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetJwtDataRequestSessionHandle",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetJwtDataRequestSessionHandle",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get JWT Data",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetJwtDataResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetJwtDataResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getJwtDataResponseOkUserDataInJwt",
                    "key": "userDataInJWT",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getJwtDataResponseOkUserDataInJwt",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetJwtDataResponseOkUserDataInJwt",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": "userDataInJWT",
                        "type": "reference",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Change JWT data for a session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "PutJwtDataRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutJwtDataRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutJwtDataRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutJwtDataRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutJwtDataRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "PutJwtDataRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "PutJwtDataRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putJWTData",
      "path": "/recipe/jwt/data",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "PutJwtDataRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putJwtDataRequestSessionHandle",
              "key": "sessionHandle",
              "schema": {
                "description": undefined,
                "generatedName": "putJwtDataRequestSessionHandle",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutJwtDataRequestSessionHandle",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "handle",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "putJwtDataRequestUserDataInJwt",
              "key": "userDataInJWT",
              "schema": {
                "description": undefined,
                "generatedName": "putJwtDataRequestUserDataInJwt",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "PutJwtDataRequestUserDataInJwt",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userDataInJWT",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Change JWT Data for a session",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "PutJwtDataResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "OK": {
                "description": undefined,
                "generatedName": "ComponentsSchemasStatusOkResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "statusOKResponse",
                "type": "reference",
              },
              "UNAUTHORISED": {
                "description": undefined,
                "generatedName": "ComponentsSchemasUnauthorisedMessageResponse",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": "unauthorisedMessageResponse",
                "type": "reference",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Session Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Create a dashboard user
",
      "errorStatusCode": [
        400,
        401,
        402,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "test@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "password": {
                "primitive": {
                  "string": "password@123",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "user": {
                  "properties": {
                    "email": {
                      "primitive": {
                        "string": "test@example.com",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "timeCreated": {
                      "primitive": {
                        "double": 1231321231,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "userId": {
                      "primitive": {
                        "string": "example-userid",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "CreateDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateDashboardUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateDashboardUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateDashboardUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateDashboardUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "CreateDashboardUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "CreateDashboardUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "createDashboardUser",
      "path": "/recipe/dashboard/user",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "CreateDashboardUserRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createDashboardUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "createDashboardUserRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateDashboardUserRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "createDashboardUserRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "generatedName": "createDashboardUserRequestPassword",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "CreateDashboardUserRequestPassword",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "CreateDashboardUserResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponseEmailAlreadyExistsError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "INVALID_EMAIL_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponseInvalidEmailError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "createDashboardUserResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "createDashboardUserResponseOkUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "allOfPropertyConflicts": [],
                        "description": undefined,
                        "generatedName": "CreateDashboardUserResponseOkUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "createDashboardUserResponseOkUserUserId",
                            "key": "userId",
                            "schema": {
                              "description": undefined,
                              "generatedName": "createDashboardUserResponseOkUserUserId",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "CreateDashboardUserResponseOkUserUserId",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": {
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "createDashboardUserResponseOkUserEmail",
                            "key": "email",
                            "schema": {
                              "description": undefined,
                              "generatedName": "createDashboardUserResponseOkUserEmail",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "CreateDashboardUserResponseOkUserEmail",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": {
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "createDashboardUserResponseOkUserTimeCreated",
                            "key": "timeCreated",
                            "schema": {
                              "description": undefined,
                              "generatedName": "createDashboardUserResponseOkUserTimeCreated",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "CreateDashboardUserResponseOkUserTimeCreated",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": {
                                  "type": "double",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "PASSWORD_WEAK_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "CreateDashboardUserResponsePasswordWeakError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "createDashboardUserResponsePasswordWeakErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "generatedName": "createDashboardUserResponsePasswordWeakErrorMessage",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "CreateDashboardUserResponsePasswordWeakErrorMessage",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Update a user's email or password
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "test@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "newEmail": {
                "primitive": {
                  "string": "test2@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "newPassword": {
                "primitive": {
                  "string": "password@123",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "user": {
                  "properties": {
                    "email": {
                      "primitive": {
                        "string": "test@example.com",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                    "timeCreated": {
                      "primitive": {
                        "double": 391238234792,
                        "type": "double",
                      },
                      "type": "primitive",
                    },
                    "userId": {
                      "primitive": {
                        "string": "r23r-f235th54-g3413gf-r32dr2",
                        "type": "string",
                      },
                      "type": "primitive",
                    },
                  },
                  "type": "object",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "UpdateDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UpdateDashboardUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UpdateDashboardUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UpdateDashboardUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UpdateDashboardUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "UpdateDashboardUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "UpdateDashboardUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "updateDashboardUser",
      "path": "/recipe/dashboard/user",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "UpdateDashboardUserRequestBody",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserRequestBodyEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyEmailEmail",
                    "key": "email",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserRequestBodyEmailEmail",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserRequestBodyEmailEmail",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyEmailNewPassword",
                    "key": "newPassword",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserRequestBodyEmailNewPassword",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserRequestBodyEmailNewPassword",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyEmailNewEmail",
                    "key": "newEmail",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserRequestBodyEmailNewEmail",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserRequestBodyEmailNewEmail",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserRequestBodyUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyUserIdUserId",
                    "key": "userId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserRequestBodyUserIdUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserRequestBodyUserIdUserId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyUserIdNewPassword",
                    "key": "newPassword",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserRequestBodyUserIdNewPassword",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserRequestBodyUserIdNewPassword",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserRequestBodyUserIdNewEmail",
                    "key": "newEmail",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserRequestBodyUserIdNewEmail",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserRequestBodyUserIdNewEmail",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "UpdateDashboardUserResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "EMAIL_ALREADY_EXISTS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseEmailAlreadyExistsError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "INVALID_EMAIL_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseInvalidEmailError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserResponseOkUser",
                    "key": "user",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserResponseOkUser",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "allOf": [],
                        "allOfPropertyConflicts": [],
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserResponseOkUser",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "properties": [
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "updateDashboardUserResponseOkUserUserId",
                            "key": "userId",
                            "schema": {
                              "description": undefined,
                              "generatedName": "updateDashboardUserResponseOkUserUserId",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "UpdateDashboardUserResponseOkUserUserId",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": {
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "updateDashboardUserResponseOkUserEmail",
                            "key": "email",
                            "schema": {
                              "description": undefined,
                              "generatedName": "updateDashboardUserResponseOkUserEmail",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "UpdateDashboardUserResponseOkUserEmail",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": {
                                  "maxLength": undefined,
                                  "minLength": undefined,
                                  "type": "string",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                          {
                            "audiences": [],
                            "conflict": {},
                            "generatedName": "updateDashboardUserResponseOkUserTimeCreated",
                            "key": "timeCreated",
                            "schema": {
                              "description": undefined,
                              "generatedName": "updateDashboardUserResponseOkUserTimeCreated",
                              "groupName": undefined,
                              "nameOverride": undefined,
                              "type": "optional",
                              "value": {
                                "description": undefined,
                                "generatedName": "UpdateDashboardUserResponseOkUserTimeCreated",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": {
                                  "type": "double",
                                },
                                "type": "primitive",
                              },
                            },
                          },
                        ],
                        "type": "object",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "PASSWORD_WEAK_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponsePasswordWeakError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "updateDashboardUserResponsePasswordWeakErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "generatedName": "updateDashboardUserResponsePasswordWeakErrorMessage",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "UpdateDashboardUserResponsePasswordWeakErrorMessage",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "UNKNOWN_USER_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "UpdateDashboardUserResponseUnknownUserError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete a dashboard user with their userId or email
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "email",
              "value": {
                "primitive": {
                  "string": "test@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "ue1231-f32f290f2-f23r23f-323f2",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "didUserExist": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DeleteDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteDashboardUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteDashboardUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteDashboardUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteDashboardUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteDashboardUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteDashboardUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "deleteDashboardUser",
      "path": "/recipe/dashboard/user",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "email",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteDashboardUserRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteDashboardUserRequestEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteDashboardUserRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteDashboardUserRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteDashboardUserResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "deleteDashboardUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "deleteDashboardUserResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteDashboardUserResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "deleteDashboardUserResponseDidUserExist",
              "key": "didUserExist",
              "schema": {
                "description": undefined,
                "generatedName": "deleteDashboardUserResponseDidUserExist",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteDashboardUserResponseDidUserExist",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "boolean",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of call the dashboard users
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "users": {
                "array": [
                  {
                    "properties": {
                      "email": {
                        "primitive": {
                          "string": "test@example.com",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "isSuspended": {
                        "primitive": {
                          "boolean": false,
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                      "timeCreated": {
                        "primitive": {
                          "double": 16382348324,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                      "userId": {
                        "primitive": {
                          "string": "uf2323-f223r233-f23-f23-f2f32",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetAllDashboardUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetAllDashboardUsersRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetAllDashboardUsersRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetAllDashboardUsersRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetAllDashboardUsersRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetAllDashboardUsersRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetAllDashboardUsersRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getAllDashboardUsers",
      "path": "/recipe/dashboard/users",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get a list of dashboard users",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetAllDashboardUsersResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getAllDashboardUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getAllDashboardUsersResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetAllDashboardUsersResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "literal",
                  "value": {
                    "string": "OK",
                    "type": "string",
                  },
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getAllDashboardUsersResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "generatedName": "getAllDashboardUsersResponseUsers",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetAllDashboardUsersResponseUsers",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "GetAllDashboardUsersResponseUsersItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemEmail",
                        "key": "email",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllDashboardUsersResponseUsersItemEmail",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllDashboardUsersResponseUsersItemEmail",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemUserId",
                        "key": "userId",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllDashboardUsersResponseUsersItemUserId",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllDashboardUsersResponseUsersItemUserId",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemTimeCreated",
                        "key": "timeCreated",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllDashboardUsersResponseUsersItemTimeCreated",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllDashboardUsersResponseUsersItemTimeCreated",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllDashboardUsersResponseUsersItemIsSuspended",
                        "key": "isSuspended",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllDashboardUsersResponseUsersItemIsSuspended",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllDashboardUsersResponseUsersItemIsSuspended",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "type": "boolean",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Verify a Dashboard user's sessionId
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "sessionId": {
                "primitive": {
                  "string": "rf32f-f32342f-32f-323r2f3-23",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "VerifyDashboardUserSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyDashboardUserSessionRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyDashboardUserSessionRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyDashboardUserSessionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyDashboardUserSessionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "VerifyDashboardUserSessionRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "VerifyDashboardUserSessionRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "verifyDashboardUserSession",
      "path": "/recipe/dashboard/session/verify",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "VerifyDashboardUserSessionRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "verifyDashboardUserSessionRequestSessionId",
              "key": "sessionId",
              "schema": {
                "description": undefined,
                "generatedName": "verifyDashboardUserSessionRequestSessionId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "VerifyDashboardUserSessionRequestSessionId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "VerifyDashboardUserSessionResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "INVAlID_SESSION_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyDashboardUserSessionResponseInvAlIdSessionError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyDashboardUserSessionResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "USER_SUSPENDED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "VerifyDashboardUserSessionResponseUserSuspendedError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "verifyDashboardUserSessionResponseUserSuspendedErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "generatedName": "verifyDashboardUserSessionResponseUserSuspendedErrorMessage",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "VerifyDashboardUserSessionResponseUserSuspendedErrorMessage",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Revoke a Dashboard user's session
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "sessionId",
              "value": {
                "primitive": {
                  "string": "ue1231-f32f290f2-f23r23f-323f2",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevokeDashboardUsersSessionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RevokeDashboardUsersSessionRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RevokeDashboardUsersSessionRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RevokeDashboardUsersSessionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RevokeDashboardUsersSessionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RevokeDashboardUsersSessionRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RevokeDashboardUsersSessionRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "RevokeDashboardUsersSession",
      "path": "/recipe/dashboard/session",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "sessionId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "RevokeDashboardUsersSessionRequestSessionId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "RevokeDashboardUsersSessionRequestSessionId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "RevokeDashboardUsersSessionResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "revokeDashboardUsersSessionResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "revokeDashboardUsersSessionResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "RevokeDashboardUsersSessionResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Signin a Dashboard user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "email": {
                "primitive": {
                  "string": "test@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
              "password": {
                "primitive": {
                  "string": "password@123",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "sessionId": {
                  "primitive": {
                    "string": "string",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "SignInDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "SignInDashboardUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SignInDashboardUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "SignInDashboardUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SignInDashboardUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "SignInDashboardUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SignInDashboardUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "signInDashboardUser",
      "path": "/recipe/dashboard/signin",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "SignInDashboardUserRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "signInDashboardUserRequestEmail",
              "key": "email",
              "schema": {
                "description": undefined,
                "generatedName": "signInDashboardUserRequestEmail",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SignInDashboardUserRequestEmail",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "signInDashboardUserRequestPassword",
              "key": "password",
              "schema": {
                "description": undefined,
                "generatedName": "signInDashboardUserRequestPassword",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SignInDashboardUserRequestPassword",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Indicates success with the status property",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "SignInDashboardUserResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "INVAlID_CREDENTIALS_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SignInDashboardUserResponseInvAlIdCredentialsError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SignInDashboardUserResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "signInDashboardUserResponseOkSessionId",
                    "key": "sessionId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "signInDashboardUserResponseOkSessionId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "SignInDashboardUserResponseOkSessionId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              "USER_SUSPENDED_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SignInDashboardUserResponseUserSuspendedError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "signInDashboardUserResponseUserSuspendedErrorMessage",
                    "key": "message",
                    "schema": {
                      "description": undefined,
                      "generatedName": "signInDashboardUserResponseUserSuspendedErrorMessage",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "SignInDashboardUserResponseUserSuspendedErrorMessage",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of the sessions for the dashboard user
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "userId",
              "value": {
                "primitive": {
                  "string": "ue1231-f32f290f2-f23r23f-323f2",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "sessions": {
                "array": [
                  {
                    "properties": {
                      "expiry": {
                        "primitive": {
                          "double": 16382348324,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                      "sessionId": {
                        "primitive": {
                          "string": "fni29f-f23f23-f2fq32qt-h35evf",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                      "timeCreated": {
                        "primitive": {
                          "double": 16382348324,
                          "type": "double",
                        },
                        "type": "primitive",
                      },
                      "userId": {
                        "primitive": {
                          "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetAllSessionsForDashboardUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "rid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetAllSessionsForDashboardUserRequestRid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetAllSessionsForDashboardUserRequestRid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetAllSessionsForDashboardUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetAllSessionsForDashboardUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetAllSessionsForDashboardUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetAllSessionsForDashboardUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getAllSessionsForDashboardUser",
      "path": "/recipe/dashboard/user/sessions",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "userId",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetAllSessionsForDashboardUserRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetAllSessionsForDashboardUserRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get a list of sessions for dashboard user",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetAllSessionsForDashboardUserResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getAllSessionsForDashboardUserResponseSessions",
              "key": "sessions",
              "schema": {
                "description": undefined,
                "generatedName": "getAllSessionsForDashboardUserResponseSessions",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetAllSessionsForDashboardUserResponseSessions",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "GetAllSessionsForDashboardUserResponseSessionsItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemUserId",
                        "key": "userId",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemUserId",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllSessionsForDashboardUserResponseSessionsItemUserId",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": "userId",
                            "type": "reference",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemSessionId",
                        "key": "sessionId",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemSessionId",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllSessionsForDashboardUserResponseSessionsItemSessionId",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "maxLength": undefined,
                              "minLength": undefined,
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemTimeCreated",
                        "key": "timeCreated",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemTimeCreated",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllSessionsForDashboardUserResponseSessionsItemTimeCreated",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemExpiry",
                        "key": "expiry",
                        "schema": {
                          "description": undefined,
                          "generatedName": "getAllSessionsForDashboardUserResponseSessionsItemExpiry",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "optional",
                          "value": {
                            "description": undefined,
                            "generatedName": "GetAllSessionsForDashboardUserResponseSessionsItemExpiry",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schema": {
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Dashboard Recipe",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of compatible CDI versions
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "versions": {
                "array": [
                  {
                    "primitive": {
                      "string": "versions",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetApiVersionRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetApiVersionRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetApiVersionRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getApiVersion",
      "path": "/apiversion",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get api version",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetApiVersionResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getApiVersionResponseVersions",
              "key": "versions",
              "schema": {
                "description": undefined,
                "generatedName": "getApiVersionResponseVersions",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetApiVersionResponseVersions",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "GetApiVersionResponseVersionsItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get path to the loaded config file
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "path": {
                  "primitive": {
                    "string": "/usr/lib/supertokens/config.yaml",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetConfigRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetConfigRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetConfigRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetConfigRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetConfigRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getConfig",
      "path": "/config",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "pid",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetConfigRequestPid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetConfigRequestPid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "get api version",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetConfigResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "NOT_ALLOWED": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetConfigResponseNotAllowed",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetConfigResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getConfigResponseOkPath",
                    "key": "path",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getConfigResponseOkPath",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetConfigResponseOkPath",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": {
              "string": "Hello",
              "type": "string",
            },
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "GetHelloOnRootPathRequest",
      "headers": [],
      "internal": undefined,
      "method": "GET",
      "operationId": "getHelloOnRootPath",
      "path": "",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "GetHelloOnRootPathResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": {
              "string": "Hello",
              "type": "string",
            },
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "GetHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "GET",
      "operationId": "getHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "GetHelloResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": {
              "string": "Hello",
              "type": "string",
            },
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "PostHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "POST",
      "operationId": "postHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "PostHelloResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": {
              "string": "Hello",
              "type": "string",
            },
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "PutHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "PUT",
      "operationId": "putHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "PutHelloResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Return a simple hello message
",
      "errorStatusCode": [
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "literal": {
              "string": "Hello",
              "type": "string",
            },
            "type": "literal",
          },
        },
      ],
      "generatedRequestName": "DeleteHelloRequest",
      "headers": [],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "deleteHello",
      "path": "/hello",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "return a simple hello message",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "description": undefined,
          "generatedName": "DeleteHelloResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "schema": "helloResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Returns the telemetryID if it exists
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "exists": {
                "primitive": {
                  "boolean": true,
                  "type": "boolean",
                },
                "type": "primitive",
              },
              "telemetryId": {
                "primitive": {
                  "string": "99c87c72-1807-22d-9b39-7a88f95re56c",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetTelemetryRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetTelemetryRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetTelemetryRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetTelemetryRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetTelemetryRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getTelemetry",
      "path": "/telemetry",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Returns the telemetryID if it exists",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "description": undefined,
            "generatedName": "GetTelemetryResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": [
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTelemetryResponseTelemetryId",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getTelemetryResponseTelemetryIdExists",
                    "key": "exists",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getTelemetryResponseTelemetryIdExists",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetTelemetryResponseTelemetryIdExists",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getTelemetryResponseTelemetryIdTelemetryId",
                    "key": "telemetryId",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getTelemetryResponseTelemetryIdTelemetryId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetTelemetryResponseTelemetryIdTelemetryId",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
              {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetTelemetryResponseOne",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getTelemetryResponseOneExists",
                    "key": "exists",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getTelemetryResponseOneExists",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetTelemetryResponseOneExists",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "type": "boolean",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            ],
            "type": "undisciminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of users.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "includeRecipeIds",
              "value": {
                "primitive": {
                  "string": "val1,val2,val3..",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "count": {
                "primitive": {
                  "double": 1000000,
                  "type": "double",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetUsersCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersCountRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersCountRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersCountRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersCountRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUsersCount",
      "path": "/users/count",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The param should take an array of comma seperated strings",
          "name": "includeRecipeIds",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersCountRequestIncludeRecipeIds",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersCountRequestIncludeRecipeIds",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of users",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUsersCountResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUsersCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getUsersCountResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersCountResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUsersCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "generatedName": "getUsersCountResponseCount",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersCountResponseCount",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get number of active users.
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "since",
              "value": {
                "primitive": {
                  "double": 1679875200000,
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "count": {
                "primitive": {
                  "double": 100000,
                  "type": "double",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetActiveUsersCountRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetActiveUsersCountRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetActiveUsersCountRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetActiveUsersCountRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetActiveUsersCountRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getActiveUsersCount",
      "path": "/users/count/active",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": undefined,
          "name": "since",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetActiveUsersCountRequestSince",
            "groupName": undefined,
            "nameOverride": undefined,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Get number of active users",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetActiveUsersCountResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getActiveUsersCountResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getActiveUsersCountResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetActiveUsersCountResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getActiveUsersCountResponseCount",
              "key": "count",
              "schema": {
                "description": undefined,
                "generatedName": "getActiveUsersCountResponseCount",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetActiveUsersCountResponseCount",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "User Pagination
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "includeRecipeIds",
              "value": {
                "primitive": {
                  "string": "val1,val2,val3..",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "email",
              "value": {
                "primitive": {
                  "string": "test@example.com",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "phone",
              "value": {
                "primitive": {
                  "double": 911234567890,
                  "type": "double",
                },
                "type": "primitive",
              },
            },
            {
              "name": "recipe",
              "value": {
                "primitive": {
                  "string": "emailpassword",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            {
              "name": "provider",
              "value": {
                "primitive": {
                  "string": "google",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          ],
          "request": undefined,
          "response": {
            "properties": {
              "nextPaginationToken": {
                "primitive": {
                  "string": "ZmE3YTA4ND...OzE2MjM5MTgwMzIyMzE=",
                  "type": "string",
                },
                "type": "primitive",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "users": {
                "array": [
                  {
                    "properties": {
                      "recipeId": {
                        "enum": "emailpassword",
                        "type": "enum",
                      },
                      "user": {
                        "properties": {
                          "email": {
                            "primitive": {
                              "string": "johndoe@gmail.com",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                          "id": {
                            "primitive": {
                              "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                          "timeJoined": {
                            "primitive": {
                              "double": 1623918032231,
                              "type": "double",
                            },
                            "type": "primitive",
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetUsersRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getUsers",
      "path": "/users",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The param should take an array of comma seperated strings",
          "name": "includeRecipeIds",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestIncludeRecipeIds",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestIncludeRecipeIds",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "paginationToken",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestPaginationToken",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestPaginationToken",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "limit",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestLimit",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestLimit",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "timeJoinedOrder",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestTimeJoinedOrder",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestTimeJoinedOrder",
              "groupName": undefined,
              "nameOverride": undefined,
              "type": "enum",
              "values": [
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "ASC",
                  "nameOverride": undefined,
                  "value": "ASC",
                },
                {
                  "casing": {
                    "camel": undefined,
                    "pascal": undefined,
                    "screamingSnake": undefined,
                    "snake": undefined,
                  },
                  "description": undefined,
                  "generatedName": "DESC",
                  "nameOverride": undefined,
                  "value": "DESC",
                },
              ],
            },
          },
        },
        {
          "description": undefined,
          "name": "email",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "phone",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestPhone",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestPhone",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "recipe",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestRecipe",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestRecipe",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": undefined,
          "name": "provider",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetUsersRequestProvider",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetUsersRequestProvider",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "User Pagination",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetUsersResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUsersResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getUsersResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUsersResponseUsers",
              "key": "users",
              "schema": {
                "description": undefined,
                "generatedName": "getUsersResponseUsers",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersResponseUsers",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "allOf": [],
                    "allOfPropertyConflicts": [],
                    "description": undefined,
                    "generatedName": "GetUsersResponseUsersItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "properties": [
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getUsersResponseUsersItemRecipeId",
                        "key": "recipeId",
                        "schema": {
                          "description": undefined,
                          "generatedName": "GetUsersResponseUsersItemRecipeId",
                          "groupName": undefined,
                          "nameOverride": undefined,
                          "type": "enum",
                          "values": [
                            {
                              "casing": {
                                "camel": undefined,
                                "pascal": undefined,
                                "screamingSnake": undefined,
                                "snake": undefined,
                              },
                              "description": undefined,
                              "generatedName": "emailpassword",
                              "nameOverride": undefined,
                              "value": "emailpassword",
                            },
                            {
                              "casing": {
                                "camel": undefined,
                                "pascal": undefined,
                                "screamingSnake": undefined,
                                "snake": undefined,
                              },
                              "description": undefined,
                              "generatedName": "thirdparty",
                              "nameOverride": undefined,
                              "value": "thirdparty",
                            },
                            {
                              "casing": {
                                "camel": undefined,
                                "pascal": undefined,
                                "screamingSnake": undefined,
                                "snake": undefined,
                              },
                              "description": undefined,
                              "generatedName": "passwordless",
                              "nameOverride": undefined,
                              "value": "passwordless",
                            },
                          ],
                        },
                      },
                      {
                        "audiences": [],
                        "conflict": {},
                        "generatedName": "getUsersResponseUsersItemUser",
                        "key": "user",
                        "schema": {
                          "oneOf": {
                            "description": undefined,
                            "generatedName": "GetUsersResponseUsersItemUser",
                            "groupName": undefined,
                            "nameOverride": undefined,
                            "schemas": [
                              {
                                "description": undefined,
                                "generatedName": "GetUsersResponseUsersItemUserZero",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": "user",
                                "type": "reference",
                              },
                              {
                                "description": undefined,
                                "generatedName": "GetUsersResponseUsersItemUserOne",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": "thirdPartyUser",
                                "type": "reference",
                              },
                              {
                                "description": undefined,
                                "generatedName": "GetUsersResponseUsersItemUserTwo",
                                "groupName": undefined,
                                "nameOverride": undefined,
                                "schema": "passwordlessUser",
                                "type": "reference",
                              },
                            ],
                            "type": "undisciminated",
                          },
                          "type": "oneOf",
                        },
                      },
                    ],
                    "type": "object",
                  },
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getUsersResponseNextPaginationToken",
              "key": "nextPaginationToken",
              "schema": {
                "description": undefined,
                "generatedName": "getUsersResponseNextPaginationToken",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetUsersResponseNextPaginationToken",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "paginationToken",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete user
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "userId": {
                "primitive": {
                  "string": "fa7a0841-b533-4478-95533-0fde890c3483",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DeleteUserRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteUserRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteUserRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteUserRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteUserRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "POST",
      "operationId": "deleteUser",
      "path": "/user/remove",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteUserRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "deleteUserRequestUserId",
              "key": "userId",
              "schema": {
                "description": undefined,
                "generatedName": "deleteUserRequestUserId",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteUserRequestUserId",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "userId",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "Returns OK if the operation succeeded (even if the user didn't exist before the call)",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteUserResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "deleteUserResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "deleteUserResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteUserResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve available tags for search
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "tags": {
                "array": [
                  {
                    "primitive": {
                      "string": "tags",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetSearchTagsRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSearchTagsRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSearchTagsRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetSearchTagsRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetSearchTagsRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getSearchTags",
      "path": "/user/search/tags",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "Returns available tags for search",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetSearchTagsResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getSearchTagsResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getSearchTagsResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetSearchTagsResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getSearchTagsResponseTags",
              "key": "tags",
              "schema": {
                "description": undefined,
                "generatedName": "getSearchTagsResponseTags",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetSearchTagsResponseTags",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "GetSearchTagsResponseTagsItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Get a list of the enabled enterprise features
",
      "errorStatusCode": [
        400,
        401,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "features": {
                "array": [
                  {
                    "primitive": {
                      "string": "features",
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                ],
                "type": "array",
              },
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
              "usageStats": {
                "map": [
                  {
                    "key": {
                      "string": "usageStats",
                      "type": "string",
                    },
                    "value": {
                      "map": [
                        {
                          "key": {
                            "string": "key",
                            "type": "string",
                          },
                          "value": {
                            "primitive": {
                              "string": "value",
                              "type": "string",
                            },
                            "type": "primitive",
                          },
                        },
                      ],
                      "type": "map",
                    },
                  },
                ],
                "type": "map",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GetFeatureFlagRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetFeatureFlagRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetFeatureFlagRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetFeatureFlagRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetFeatureFlagRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getFeatureFlag",
      "path": "/ee/featureflag",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "GetFeatureFlagResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getFeatureFlagResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "getFeatureFlagResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetFeatureFlagResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getFeatureFlagResponseFeatures",
              "key": "features",
              "schema": {
                "description": undefined,
                "generatedName": "getFeatureFlagResponseFeatures",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetFeatureFlagResponseFeatures",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "type": "array",
                  "value": {
                    "description": undefined,
                    "generatedName": "GetFeatureFlagResponseFeaturesItem",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "getFeatureFlagResponseUsageStats",
              "key": "usageStats",
              "schema": {
                "description": undefined,
                "generatedName": "getFeatureFlagResponseUsageStats",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "GetFeatureFlagResponseUsageStats",
                  "groupName": undefined,
                  "key": {
                    "description": undefined,
                    "generatedName": "GetFeatureFlagResponseUsageStatsKey",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "schema": {
                      "maxLength": undefined,
                      "minLength": undefined,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                  "nameOverride": undefined,
                  "type": "map",
                  "value": {
                    "generatedName": "GetFeatureFlagResponseUsageStatsValue",
                    "nameOverride": undefined,
                    "type": "unknown",
                  },
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Retrieve license key
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "oneOf": {
              "discriminated": {
                "licenseKey": {
                  "primitive": {
                    "string": "eyJhbGciOiJIUzI1NiIsIn...",
                    "type": "string",
                  },
                  "type": "primitive",
                },
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "GetLicenseRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetLicenseRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetLicenseRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "GetLicenseRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "GetLicenseRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "GET",
      "operationId": "getLicense",
      "path": "/ee/license",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "GetLicenseResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "NO_LICENSE_KEY_FOUND_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetLicenseResponseNoLicenseKeyFoundError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "GetLicenseResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [
                  {
                    "audiences": [],
                    "conflict": {},
                    "generatedName": "getLicenseResponseOkLicenseKey",
                    "key": "licenseKey",
                    "schema": {
                      "description": undefined,
                      "generatedName": "getLicenseResponseOkLicenseKey",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "type": "optional",
                      "value": {
                        "description": undefined,
                        "generatedName": "GetLicenseResponseOkLicenseKey",
                        "groupName": undefined,
                        "nameOverride": undefined,
                        "schema": {
                          "maxLength": undefined,
                          "minLength": undefined,
                          "type": "string",
                        },
                        "type": "primitive",
                      },
                    },
                  },
                ],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Set or sync license key
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "licenseKey": {
                "primitive": {
                  "string": "eyJhbGciOiJIUzI1NiIsIn...",
                  "type": "string",
                },
                "type": "primitive",
              },
            },
            "type": "object",
          },
          "response": {
            "oneOf": {
              "discriminated": {
                "status": {
                  "primitive": {
                    "string": "OK",
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
              "type": "discriminated",
            },
            "type": "oneOf",
          },
        },
      ],
      "generatedRequestName": "SetLicenseRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "SetLicenseRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SetLicenseRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "SetLicenseRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "SetLicenseRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "PUT",
      "operationId": "setLicense",
      "path": "/ee/license",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": undefined,
        "description": undefined,
        "fullExamples": [],
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "SetLicenseRequest",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "setLicenseRequestLicenseKey",
              "key": "licenseKey",
              "schema": {
                "description": undefined,
                "generatedName": "setLicenseRequestLicenseKey",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "SetLicenseRequestLicenseKey",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": {
                    "maxLength": undefined,
                    "minLength": undefined,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "oneOf": {
            "commonProperties": [],
            "description": undefined,
            "discriminantProperty": "status",
            "generatedName": "SetLicenseResponse",
            "groupName": undefined,
            "nameOverride": undefined,
            "schemas": {
              "INVALID_LICENSE_KEY_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SetLicenseResponseInvalidLicenseKeyError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "MISSING_EE_FOLDER_ERROR": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SetLicenseResponseMissingEeFolderError",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
              "OK": {
                "allOf": [],
                "allOfPropertyConflicts": [],
                "description": undefined,
                "generatedName": "SetLicenseResponseOk",
                "groupName": undefined,
                "nameOverride": undefined,
                "properties": [],
                "type": "object",
              },
            },
            "type": "discriminated",
          },
          "type": "oneOf",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
    {
      "audiences": [],
      "authed": false,
      "availability": undefined,
      "description": "Delete license key
",
      "errorStatusCode": [
        400,
        401,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": undefined,
          "headers": [],
          "name": undefined,
          "pathParameters": [],
          "queryParameters": [],
          "request": undefined,
          "response": {
            "properties": {
              "status": {
                "literal": {
                  "string": "OK",
                  "type": "string",
                },
                "type": "literal",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DeleteLicenseRequest",
      "headers": [
        {
          "description": undefined,
          "name": "api-key",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteLicenseRequestApiKey",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteLicenseRequestApiKey",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "X.Y of the X.Y.Z CDI version.",
          "name": "cdi-version",
          "parameterNameOverride": undefined,
          "schema": {
            "description": undefined,
            "generatedName": "DeleteLicenseRequestCdiVersion",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "nullable",
            "value": {
              "description": undefined,
              "generatedName": "DeleteLicenseRequestCdiVersion",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "internal": undefined,
      "method": "DELETE",
      "operationId": "deleteLicense",
      "path": "/ee/license",
      "pathParameters": [],
      "queryParameters": [],
      "request": undefined,
      "requestNameOverride": undefined,
      "response": {
        "description": "The operation was successful",
        "fullExamples": [],
        "responseProperty": undefined,
        "schema": {
          "allOf": [],
          "allOfPropertyConflicts": [],
          "description": undefined,
          "generatedName": "DeleteLicenseResponse",
          "groupName": undefined,
          "nameOverride": undefined,
          "properties": [
            {
              "audiences": [],
              "conflict": {},
              "generatedName": "deleteLicenseResponseStatus",
              "key": "status",
              "schema": {
                "description": undefined,
                "generatedName": "deleteLicenseResponseStatus",
                "groupName": undefined,
                "nameOverride": undefined,
                "type": "optional",
                "value": {
                  "description": undefined,
                  "generatedName": "DeleteLicenseResponseStatus",
                  "groupName": undefined,
                  "nameOverride": undefined,
                  "schema": "statusOK",
                  "type": "reference",
                },
              },
            },
          ],
          "type": "object",
        },
        "type": "json",
      },
      "sdkName": undefined,
      "server": [],
      "summary": undefined,
      "tags": [
        "Core",
      ],
    },
  ],
  "errors": {
    "400": {
      "description": undefined,
      "generatedName": "BadRequestError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "generatedName": "BadRequestErrorBody",
        "groupName": undefined,
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "401": {
      "description": undefined,
      "generatedName": "UnauthorizedError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "generatedName": "UnauthorizedErrorBody",
        "groupName": undefined,
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "404": {
      "description": undefined,
      "generatedName": "NotFoundError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "generatedName": "NotFoundErrorBody",
        "groupName": undefined,
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "500": {
      "description": undefined,
      "generatedName": "InternalServerError",
      "nameOverride": null,
      "schema": {
        "description": undefined,
        "example": undefined,
        "generatedName": "InternalServerErrorBody",
        "groupName": undefined,
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
  },
  "globalHeaders": undefined,
  "hasEndpointsMarkedInternal": false,
  "nonRequestReferencedSchemas": [
    "userId",
    "statusOK",
    "preAuthSessionId",
    "linkCode",
    "deviceId",
    "userInputCode",
    "passwordlessUser",
    "email",
    "phoneNumber",
    "codeId",
    "timeCreated",
    "codeLifetime",
    "password",
    "user",
    "token",
    "paginationToken",
    "thirdPartyId",
    "thirdPartyUserId",
    "thirdPartyEmail",
    "thirdPartyUser",
    "isVerified",
    "userMetadata",
    "userMetadataUpdate",
    "role",
    "handle",
    "userDataInDatabase",
    "userDataInJWT",
    "expiry",
    "enableAntiCsrf",
    "session",
    "cookieInfo",
    "sessionHandles",
    "tryRefreshTokenResponse",
    "message",
    "tokenTheftResponse",
    "createJWTPayload",
    "createJWTAlgorithm",
    "jwksDomain",
    "jwtValidity",
    "jwk",
    "helloResponse",
    "timeJoined",
    "unauthorisedResponse",
    "emailVerificationVerifyTokenRequest",
  ],
  "schemas": {
    "codeId": {
      "description": "Uniquely identifies a code",
      "generatedName": "CodeId",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "codeLifetime": {
      "description": "The maximum lifetime of the code in milliseconds",
      "generatedName": "CodeLifetime",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "cookieInfo": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "CookieInfo",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "cookieInfoToken",
          "key": "token",
          "schema": {
            "description": undefined,
            "generatedName": "cookieInfoToken",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "CookieInfoToken",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "token",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "cookieInfoExpiry",
          "key": "expiry",
          "schema": {
            "description": undefined,
            "generatedName": "cookieInfoExpiry",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "CookieInfoExpiry",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "expiry",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "cookieInfoCreatedTime",
          "key": "createdTime",
          "schema": {
            "description": undefined,
            "generatedName": "cookieInfoCreatedTime",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "CookieInfoCreatedTime",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "timeCreated",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "createJWTAlgorithm": {
      "description": "The algorithm to use when creating the JWT.",
      "generatedName": "CreateJwtAlgorithm",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "RS256",
        "type": "string",
      },
    },
    "createJWTPayload": {
      "description": "The payload of the JWT, should be a JSON object.",
      "generatedName": "CreateJwtPayload",
      "groupName": undefined,
      "key": {
        "description": undefined,
        "generatedName": "CreateJwtPayloadKey",
        "groupName": undefined,
        "nameOverride": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "nameOverride": undefined,
      "type": "map",
      "value": {
        "generatedName": "CreateJwtPayloadValue",
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "deviceId": {
      "description": "A random identifier that should be stored on the device that started the sign in process.",
      "generatedName": "DeviceId",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "email": {
      "description": undefined,
      "generatedName": "Email",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "emailVerificationVerifyTokenRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "EmailVerificationVerifyTokenRequest",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailVerificationVerifyTokenRequestUserId",
          "key": "userId",
          "schema": {
            "description": undefined,
            "generatedName": "emailVerificationVerifyTokenRequestUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRequestUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "emailVerificationVerifyTokenRequestEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "generatedName": "emailVerificationVerifyTokenRequestEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "EmailVerificationVerifyTokenRequestEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "enableAntiCsrf": {
      "description": undefined,
      "generatedName": "EnableAntiCsrf",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "type": "boolean",
      },
      "type": "primitive",
    },
    "expiry": {
      "description": undefined,
      "generatedName": "Expiry",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "handle": {
      "description": undefined,
      "generatedName": "Handle",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "helloResponse": {
      "description": undefined,
      "generatedName": "HelloResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "Hello",
        "type": "string",
      },
    },
    "internalError": {
      "description": undefined,
      "generatedName": "InternalError",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "Internal Error",
        "type": "string",
      },
    },
    "invalidJSON": {
      "description": undefined,
      "generatedName": "InvalidJson",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "isVerified": {
      "description": undefined,
      "generatedName": "IsVerified",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "type": "boolean",
      },
      "type": "primitive",
    },
    "jwk": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A JWK that can be used to verify a JWT",
      "generatedName": "Jwk",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "jwkAlg",
          "key": "alg",
          "schema": {
            "description": undefined,
            "generatedName": "jwkAlg",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "JwkAlg",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "createJWTAlgorithm",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "jwkKty",
          "key": "kty",
          "schema": {
            "description": undefined,
            "generatedName": "jwkKty",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "JwkKty",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "jwkUse",
          "key": "use",
          "schema": {
            "description": undefined,
            "generatedName": "jwkUse",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "JwkUse",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "jwkKid",
          "key": "kid",
          "schema": {
            "description": undefined,
            "generatedName": "jwkKid",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": "Unique identifier for the JWK",
              "generatedName": "JwkKid",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": {
                "maxLength": undefined,
                "minLength": undefined,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "jwkX5C",
          "key": "x5c",
          "schema": {
            "description": undefined,
            "generatedName": "jwkX5C",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": "X.509 Certificate Chain",
              "generatedName": "JwkX5C",
              "groupName": undefined,
              "nameOverride": undefined,
              "type": "array",
              "value": {
                "description": undefined,
                "generatedName": "JwkX5CItem",
                "groupName": undefined,
                "nameOverride": undefined,
                "schema": {
                  "maxLength": undefined,
                  "minLength": undefined,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "jwksDomain": {
      "description": "This is used as the value for the issuer claim in the JWT payload.",
      "generatedName": "JwksDomain",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "jwtValidity": {
      "description": "Duration in seconds, used to calculate JWT expiry",
      "generatedName": "JwtValidity",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "linkCode": {
      "description": "URL-safe string that can be used to authenticate the user, without the deviceId",
      "generatedName": "LinkCode",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "message": {
      "description": undefined,
      "generatedName": "Message",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "methodNotSupported": {
      "description": undefined,
      "generatedName": "MethodNotSupported",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "Method not supported",
        "type": "string",
      },
    },
    "notFound": {
      "description": undefined,
      "generatedName": "NotFound",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "Not Found",
        "type": "string",
      },
    },
    "paginationToken": {
      "description": undefined,
      "generatedName": "PaginationToken",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "password": {
      "description": undefined,
      "generatedName": "Password",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "passwordlessUser": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "PasswordlessUser",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "passwordlessUserId",
          "key": "id",
          "schema": {
            "description": undefined,
            "generatedName": "passwordlessUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "passwordlessUserEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "generatedName": "passwordlessUserEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "passwordlessUserPhoneNumber",
          "key": "phoneNumber",
          "schema": {
            "description": undefined,
            "generatedName": "passwordlessUserPhoneNumber",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserPhoneNumber",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "phoneNumber",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "passwordlessUserTimeJoined",
          "key": "timeJoined",
          "schema": {
            "description": undefined,
            "generatedName": "passwordlessUserTimeJoined",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "PasswordlessUserTimeJoined",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "timeJoined",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "phoneNumber": {
      "description": undefined,
      "generatedName": "PhoneNumber",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "preAuthSessionId": {
      "description": "A random identifier that can be used to identify the login attempt/device.",
      "generatedName": "PreAuthSessionId",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "requestUnauthorised": {
      "description": undefined,
      "generatedName": "RequestUnauthorised",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "Invalid API key",
        "type": "string",
      },
    },
    "role": {
      "description": undefined,
      "generatedName": "Role",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "session": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "Session",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sessionHandle",
          "key": "handle",
          "schema": {
            "description": undefined,
            "generatedName": "sessionHandle",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "SessionHandle",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "handle",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sessionUserId",
          "key": "userId",
          "schema": {
            "description": undefined,
            "generatedName": "sessionUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "SessionUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sessionUserDataInJwt",
          "key": "userDataInJWT",
          "schema": {
            "description": undefined,
            "generatedName": "sessionUserDataInJwt",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "SessionUserDataInJwt",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "userDataInJWT",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "sessionHandles": {
      "description": undefined,
      "generatedName": "SessionHandles",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "array",
      "value": {
        "description": undefined,
        "generatedName": "SessionHandlesItem",
        "groupName": undefined,
        "nameOverride": undefined,
        "schema": "handle",
        "type": "reference",
      },
    },
    "statusOK": {
      "description": undefined,
      "generatedName": "StatusOk",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "OK",
        "type": "string",
      },
    },
    "statusOKResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "StatusOkResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
    "thirdPartyEmail": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "ThirdPartyEmail",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "thirdPartyEmailId",
          "key": "id",
          "schema": {
            "description": undefined,
            "generatedName": "thirdPartyEmailId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyEmailId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "thirdPartyId": {
      "description": undefined,
      "generatedName": "ThirdPartyId",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "thirdPartyUser": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "ThirdPartyUser",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "thirdPartyUserId",
          "key": "id",
          "schema": {
            "description": undefined,
            "generatedName": "thirdPartyUserId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyUserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "thirdPartyUserTimeJoined",
          "key": "timeJoined",
          "schema": {
            "description": undefined,
            "generatedName": "thirdPartyUserTimeJoined",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyUserTimeJoined",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "timeJoined",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "thirdPartyUserEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "generatedName": "thirdPartyUserEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "ThirdPartyUserEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "thirdPartyUserThirdParty",
          "key": "thirdParty",
          "schema": {
            "description": undefined,
            "generatedName": "thirdPartyUserThirdParty",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "allOf": [],
              "allOfPropertyConflicts": [],
              "description": undefined,
              "generatedName": "ThirdPartyUserThirdParty",
              "groupName": undefined,
              "nameOverride": undefined,
              "properties": [
                {
                  "audiences": [],
                  "conflict": {},
                  "generatedName": "thirdPartyUserThirdPartyId",
                  "key": "id",
                  "schema": {
                    "description": undefined,
                    "generatedName": "thirdPartyUserThirdPartyId",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "generatedName": "ThirdPartyUserThirdPartyId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "thirdPartyId",
                      "type": "reference",
                    },
                  },
                },
                {
                  "audiences": [],
                  "conflict": {},
                  "generatedName": "thirdPartyUserThirdPartyUserId",
                  "key": "userId",
                  "schema": {
                    "description": undefined,
                    "generatedName": "thirdPartyUserThirdPartyUserId",
                    "groupName": undefined,
                    "nameOverride": undefined,
                    "type": "optional",
                    "value": {
                      "description": undefined,
                      "generatedName": "ThirdPartyUserThirdPartyUserId",
                      "groupName": undefined,
                      "nameOverride": undefined,
                      "schema": "thirdPartyUserId",
                      "type": "reference",
                    },
                  },
                },
              ],
              "type": "object",
            },
          },
        },
      ],
      "type": "object",
    },
    "thirdPartyUserId": {
      "description": undefined,
      "generatedName": "ThirdPartyUserId",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "timeCreated": {
      "description": undefined,
      "generatedName": "TimeCreated",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "timeJoined": {
      "description": undefined,
      "generatedName": "TimeJoined",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "type": "double",
      },
      "type": "primitive",
    },
    "token": {
      "description": undefined,
      "generatedName": "Token",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "tokenTheftResponse": {
      "description": undefined,
      "generatedName": "TokenTheftResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "TOKEN_THEFT_DETECTED",
        "type": "string",
      },
    },
    "tryRefreshTokenResponse": {
      "description": undefined,
      "generatedName": "TryRefreshTokenResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "TRY_REFRESH_TOKEN",
        "type": "string",
      },
    },
    "unauthorisedMessageResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "UnauthorisedMessageResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "unauthorisedMessageResponseMessage",
          "key": "message",
          "schema": {
            "description": undefined,
            "generatedName": "unauthorisedMessageResponseMessage",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "UnauthorisedMessageResponseMessage",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "message",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "unauthorisedResponse": {
      "description": undefined,
      "generatedName": "UnauthorisedResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "type": "literal",
      "value": {
        "string": "UNAUTHORISED",
        "type": "string",
      },
    },
    "unknownRoleResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "UnknownRoleResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
    "unknownUserIdResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "UnknownUserIdResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
    "user": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "User",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userId",
          "key": "id",
          "schema": {
            "description": undefined,
            "generatedName": "userId",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "UserId",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "userId",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userEmail",
          "key": "email",
          "schema": {
            "description": undefined,
            "generatedName": "userEmail",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "UserEmail",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "email",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userTimeJoined",
          "key": "timeJoined",
          "schema": {
            "description": undefined,
            "generatedName": "userTimeJoined",
            "groupName": undefined,
            "nameOverride": undefined,
            "type": "optional",
            "value": {
              "description": undefined,
              "generatedName": "UserTimeJoined",
              "groupName": undefined,
              "nameOverride": undefined,
              "schema": "timeJoined",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "userDataInDatabase": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "generatedName": "UserDataInDatabase",
      "groupName": undefined,
      "key": {
        "description": undefined,
        "generatedName": "UserDataInDatabaseKey",
        "groupName": undefined,
        "nameOverride": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "nameOverride": undefined,
      "type": "map",
      "value": {
        "generatedName": "UserDataInDatabaseValue",
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "userDataInJWT": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "generatedName": "UserDataInJwt",
      "groupName": undefined,
      "key": {
        "description": undefined,
        "generatedName": "UserDataInJwtKey",
        "groupName": undefined,
        "nameOverride": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "nameOverride": undefined,
      "type": "map",
      "value": {
        "generatedName": "UserDataInJwtValue",
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "userId": {
      "description": undefined,
      "generatedName": "UserId",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "userInputCode": {
      "description": "This can be used to authenticate the user when paired with the deviceId",
      "generatedName": "UserInputCode",
      "groupName": undefined,
      "nameOverride": undefined,
      "schema": {
        "maxLength": undefined,
        "minLength": undefined,
        "type": "string",
      },
      "type": "primitive",
    },
    "userMetadata": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "generatedName": "UserMetadata",
      "groupName": undefined,
      "key": {
        "description": undefined,
        "generatedName": "UserMetadataKey",
        "groupName": undefined,
        "nameOverride": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "nameOverride": undefined,
      "type": "map",
      "value": {
        "generatedName": "UserMetadataValue",
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "userMetadataUpdate": {
      "description": "should be a JSON object (not a JSON literal nor an array)",
      "generatedName": "UserMetadataUpdate",
      "groupName": undefined,
      "key": {
        "description": undefined,
        "generatedName": "UserMetadataUpdateKey",
        "groupName": undefined,
        "nameOverride": undefined,
        "schema": {
          "maxLength": undefined,
          "minLength": undefined,
          "type": "string",
        },
        "type": "primitive",
      },
      "nameOverride": undefined,
      "type": "map",
      "value": {
        "generatedName": "UserMetadataUpdateValue",
        "nameOverride": undefined,
        "type": "unknown",
      },
    },
    "wrongCredentialsResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": undefined,
      "generatedName": "WrongCredentialsResponse",
      "groupName": undefined,
      "nameOverride": undefined,
      "properties": [],
      "type": "object",
    },
  },
  "securitySchemes": {},
  "servers": [],
  "tags": {
    "orderedTagIds": [
      "EmailPassword Recipe",
      "ThirdParty Recipe",
      "Passwordless Recipe",
      "EmailVerification Recipe",
      "User Metadata Recipe",
      "User Roles Recipe",
      "UserIdMapping Recipe",
      "Session Recipe",
      "Core",
      "Dashboard Recipe",
      "Totp Recipe",
    ],
    "tagsById": {
      "Core": {
        "description": undefined,
        "id": "Core",
      },
      "Dashboard Recipe": {
        "description": undefined,
        "id": "Dashboard Recipe",
      },
      "EmailPassword Recipe": {
        "description": undefined,
        "id": "EmailPassword Recipe",
      },
      "EmailVerification Recipe": {
        "description": undefined,
        "id": "EmailVerification Recipe",
      },
      "Passwordless Recipe": {
        "description": undefined,
        "id": "Passwordless Recipe",
      },
      "Session Recipe": {
        "description": undefined,
        "id": "Session Recipe",
      },
      "ThirdParty Recipe": {
        "description": undefined,
        "id": "ThirdParty Recipe",
      },
      "Totp Recipe": {
        "description": undefined,
        "id": "Totp Recipe",
      },
      "User Metadata Recipe": {
        "description": undefined,
        "id": "User Metadata Recipe",
      },
      "User Roles Recipe": {
        "description": undefined,
        "id": "User Roles Recipe",
      },
      "UserIdMapping Recipe": {
        "description": undefined,
        "id": "UserIdMapping Recipe",
      },
    },
  },
  "title": "Core Driver Interface",
  "variables": {},
  "webhooks": [],
}
`;
