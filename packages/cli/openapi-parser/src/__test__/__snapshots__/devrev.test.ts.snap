// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser devrev parse open api 1`] = `
{
  "channel": [],
  "description": "DevRev's REST API.",
  "endpoints": [
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the download URL for the artifact.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:artifact/<artifact-id>",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "expires_at": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00.000Z",
                },
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsLocateRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "artifacts-locate",
      "path": "/artifacts.locate",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the artifact to get the URL for.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "ArtifactsLocateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsLocateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-locate-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates an artifact and generates an upload URL for its data.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "file_name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "file_name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "form_data": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "key": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "key",
                        },
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:artifact/<artifact-id>",
                },
              },
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ArtifactsPrepareRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "artifacts-prepare",
      "path": "/artifacts.prepare",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsPrepareRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-prepare-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ArtifactsPrepareResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "artifacts-prepare-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "artifacts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a JWT corresponding to the requested token type for the
authenticated user.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": {
            "properties": {
              "access_token": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "access_token",
                },
              },
              "client_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "client_id",
                },
              },
              "expires_in": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 1,
                },
              },
              "refresh_token": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "refresh_token",
                },
              },
              "scope": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "scope",
                },
              },
              "token_type": {
                "type": "literal",
                "value": {
                  "type": "string",
                  "value": "bearer",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-create",
      "path": "/auth-tokens.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Revokes the token that matches the given token ID issued under the
given Dev organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "AuthTokensDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-delete",
      "path": "/auth-tokens.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the token metadata corresponding to the given token ID under the
given Dev organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "token_id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "token_id",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "token": {
                "properties": {
                  "client_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "client_id",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "expires_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "issued_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "requested_token_type": {
                    "type": "enum",
                    "value": "urn:devrev:params:oauth:token-type:aat",
                  },
                  "scopes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "scopes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "subject": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subject",
                    },
                  },
                  "token_hint": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "token_hint",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "auth-tokens-get",
      "path": "/auth-tokens.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The unique identifier of the token under a given Dev organization.
",
          "name": "token_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensGetRequestTokenId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the token metadata for all the tokens corresponding to the given
token type issued for a given subject.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "tokens": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "client_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "client_id",
                        },
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "expires_at": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "issued_at": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "requested_token_type": {
                        "type": "enum",
                        "value": "urn:devrev:params:oauth:token-type:aat",
                      },
                      "scopes": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "scopes",
                            },
                          },
                        ],
                      },
                      "status": {
                        "type": "enum",
                        "value": "active",
                      },
                      "subject": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "subject",
                        },
                      },
                      "token_hint": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "token_hint",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "auth-tokens-list",
      "path": "/auth-tokens.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "An identifier that represents the application, which requested the
token. Only relevant for application access tokens.
",
          "name": "client_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensListRequestClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListRequestClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The type of the requested token. If no value is specified, the
response will include tokens of all the types.
",
          "name": "requested_token_type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensListRequestRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListRequestRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
        {
          "description": "The subject associated with the token. In the absence of this
parameter, the ID of the authenticated entity is treated as the
subject.
",
          "name": "subject",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "AuthTokensListRequestSubject",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListRequestSubject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Revokes all the tokens that matches the given token type created by the
authenticated user.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {},
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "AuthTokensSelfDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-self-delete",
      "path": "/auth-tokens.self.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensSelfDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-self-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates token metadata of a token issued under a given Dev
organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "token_hint": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "token_hint",
                },
              },
              "token_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "token_id",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "token": {
                "properties": {
                  "client_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "client_id",
                    },
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "expires_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "issued_at": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "requested_token_type": {
                    "type": "enum",
                    "value": "urn:devrev:params:oauth:token-type:aat",
                  },
                  "scopes": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "scopes",
                        },
                      },
                    ],
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "subject": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "subject",
                    },
                  },
                  "token_hint": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "token_hint",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "AuthTokensUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "auth-tokens-update",
      "path": "/auth-tokens.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "AuthTokensUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "auth-tokens-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-tokens",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new enterprise authentication connection for a Dev
organization. This authentication connection will not be enabled by
default for the organization and the user will need to explicitly
enable this. Keep in mind that at a time, only one authentication
connection can be enabled for a Dev organization. At present, only 5
enterprise connections can be created by an organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "DevOrgAuthConnectionsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-create",
      "path": "/dev-orgs.auth-connections.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes an authentication connection. Only enterprise connections which
are explicitly set up for a Dev organization can be deleted. Default
connections can not be deleted using this method.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "DevOrgAuthConnectionsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-delete",
      "path": "/dev-orgs.auth-connections.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves the details for an authentication connection.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "DevOrgAuthConnectionsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-org-auth-connections-get",
      "path": "/dev-orgs.auth-connections.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID of the authentication connection.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists all the authentication connections available for a Dev
organization. This list will include both social and enterprise
connections which are either available by default or are explicitly
created by the user.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "auth_connections": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevOrgAuthConnectionsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-org-auth-connections-list",
      "path": "/dev-orgs.auth-connections.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Enable or disable an authentication connection for a Dev organization.
Currently, only 1 authentication connection can be enabled at a time.
When a new authentication connection is enabled, the connection which
is currently enabled for the Dev organization is automatically
disabled.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "DevOrgAuthConnectionsToggleRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-toggle",
      "path": "/dev-orgs.auth-connections.toggle",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsToggleRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-toggle-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates an authentication connection.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "DevOrgAuthConnectionsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "dev-org-auth-connections-update",
      "path": "/dev-orgs.auth-connections.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevOrgAuthConnectionsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-org-auth-connections-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "auth-connection",
        "dev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists users within your organization.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "dev_users": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "display_picture": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "email": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "email",
                        },
                      },
                      "external_identities": {
                        "type": "array",
                        "value": [
                          {
                            "type": "map",
                            "value": [],
                          },
                        ],
                      },
                      "full_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "full_name",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "phone_numbers": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "phone_numbers",
                            },
                          },
                        ],
                      },
                      "state": {
                        "type": "enum",
                        "value": "active",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-users-list",
      "path": "/dev-users.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters Dev users based on email addresses.",
          "name": "email",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestEmail",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestEmailItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of Dev users to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Fields to sort the Dev users by and the direction to sort them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters Dev users based on state.",
          "name": "state",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DevUsersListRequestState",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DevUsersListRequestState",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUsersListRequestStateItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "user-state",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the authenticated user's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "dev_user": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "display_picture": {
                    "properties": {
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                    },
                    "type": "object",
                  },
                  "email": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "email",
                    },
                  },
                  "external_identities": {
                    "type": "array",
                    "value": [
                      {
                        "type": "map",
                        "value": [],
                      },
                    ],
                  },
                  "full_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "full_name",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "phone_numbers": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "phone_numbers",
                        },
                      },
                    ],
                  },
                  "state": {
                    "type": "enum",
                    "value": "active",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DevUsersSelfRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "dev-users-self",
      "path": "/dev-users.self",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DevUsersSelfResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "dev-users-self-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "dev-users",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates new [part](https://devrev.ai/docs/product/parts).",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "PartsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-create",
      "path": "/parts.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a [part](https://devrev.ai/docs/product/parts).",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "PartsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-delete",
      "path": "/parts.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a [part's](https://devrev.ai/docs/product/parts) information.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "PartsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "parts-get",
      "path": "/parts.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the part to retrieve.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of [parts](https://devrev.ai/docs/product/parts).
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "parts": {
                "type": "array",
                "value": [],
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "PartsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "parts-list",
      "path": "/parts.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for parts created by any of these users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of parts to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for parts of the provided name(s).",
          "name": "name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for parts owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for parts of the provided type(s).",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "PartsListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "PartsListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "part-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a [part's](https://devrev.ai/docs/product/parts) information.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "PartsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "parts-update",
      "path": "/parts.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "PartsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "PartsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "parts-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "parts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a Rev organization in the authenticated user's Dev
organization.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "display_name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "display_name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_org": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-create",
      "path": "/rev-orgs.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes the Rev organization.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "RevOrgsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-delete",
      "path": "/rev-orgs.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Retrieves the Rev organization's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "rev_org": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "rev-orgs-get",
      "path": "/rev-orgs.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the required Rev organization.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the list of Rev organizations' information belonging to the
authenticated user's Dev Organization which the user is also authorized
to access.
",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "rev_orgs": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "display_name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_name",
                        },
                      },
                      "domain": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "domain",
                        },
                      },
                      "external_ref": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_ref",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "rev-orgs-list",
      "path": "/rev-orgs.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters by creator.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "created_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCreatedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCreatedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "created_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCreatedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCreatedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "List of external refs to filter Rev organizations for.",
          "name": "external_ref",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestExternalRefItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of Rev organizations to be retrieved per page.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for objects created after the provided timestamp (inclusive).
",
          "name": "modified_date.after",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestModifiedDateAfter",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestModifiedDateAfter",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for objects created before the provided timestamp
(inclusive).
",
          "name": "modified_date.before",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestModifiedDateBefore",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestModifiedDateBefore",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Fields to sort the Rev organizations by and the direction to sort
them.
",
          "name": "sort_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "RevOrgsListRequestSortBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListRequestSortBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RevOrgsListRequestSortByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the Rev organization's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:identity:devo/<dev-org-id>:revo/<rev-org-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "rev_org": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "display_name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_name",
                    },
                  },
                  "domain": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "domain",
                    },
                  },
                  "external_ref": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "external_ref",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RevOrgsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "rev-orgs-update",
      "path": "/rev-orgs.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RevOrgsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "rev-orgs-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "rev-orgs",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new tag, which is used to create associations between objects
and a logical concept denoted by the tag's name.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "tag": {
                "properties": {
                  "allowed_values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "allowed_values",
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-create",
      "path": "/tags.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a tag.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "TagsDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-delete",
      "path": "/tags.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a tag's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "tag": {
                "properties": {
                  "allowed_values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "allowed_values",
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "tags-get",
      "path": "/tags.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The requested tag's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the available tags.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "tags": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "allowed_values": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "allowed_values",
                            },
                          },
                        ],
                      },
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "description": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "description",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "name": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "name",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "tags-list",
      "path": "/tags.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of tags to return. The default is '50'.",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TagsListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TagsListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a tag's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:tag/<tag-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "tag": {
                "properties": {
                  "allowed_values": {
                    "type": "array",
                    "value": [
                      {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "allowed_values",
                        },
                      },
                    ],
                  },
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "description": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "description",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TagsUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "tags-update",
      "path": "/tags.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TagsUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TagsUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "tags-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "tags",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new entry on an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "TimelineEntriesCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "timeline-entries-create",
      "path": "/timeline-entries.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets an entry on an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "TimelineEntriesGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "timeline-entries-get",
      "path": "/timeline-entries.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the timeline entry to get.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the timeline entries for an object.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "object",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:<part-type>/<part-id>",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "timeline_entries": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "TimelineEntriesListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "timeline-entries-list",
      "path": "/timeline-entries.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The ID of the object to list timeline entries for.",
          "name": "object",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestObject",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The maximum number of entries to return. If not set, then this
defaults to \`50\`.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates an entry on an object's timeline.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "TimelineEntriesUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "timeline-entries-update",
      "path": "/timeline-entries.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "TimelineEntriesUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entries-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "timeline-entries",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates a new webhook target.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "url": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "url",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "webhook": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "event_types": {
                    "type": "array",
                    "value": [
                      {
                        "type": "enum",
                        "value": "part_created",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "secret": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "secret",
                    },
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-create",
      "path": "/webhooks.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes the requested webhook.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "WebhooksDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-delete",
      "path": "/webhooks.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets the requested webhook's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                },
              },
            },
          ],
          "request": null,
          "response": {
            "properties": {
              "webhook": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "event_types": {
                    "type": "array",
                    "value": [
                      {
                        "type": "enum",
                        "value": "part_created",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "secret": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "secret",
                    },
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "webhooks-get",
      "path": "/webhooks.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "ID for the webhook.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WebhooksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists the webhooks.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "webhooks": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "created_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "display_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "display_id",
                        },
                      },
                      "event_types": {
                        "type": "array",
                        "value": [
                          {
                            "type": "enum",
                            "value": "part_created",
                          },
                        ],
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "modified_date": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "secret": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "secret",
                        },
                      },
                      "status": {
                        "type": "enum",
                        "value": "active",
                      },
                      "url": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "url",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "webhooks-list",
      "path": "/webhooks.list",
      "pathParameters": [],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates the requested webhook.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:integration:devo/<dev-org-id>:webhook/<webhook-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "webhook": {
                "properties": {
                  "created_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "display_id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "display_id",
                    },
                  },
                  "event_types": {
                    "type": "array",
                    "value": [
                      {
                        "type": "enum",
                        "value": "part_created",
                      },
                    ],
                  },
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "modified_date": {
                    "type": "primitive",
                    "value": {
                      "type": "datetime",
                      "value": "2024-01-15T09:30:00.000Z",
                    },
                  },
                  "secret": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "secret",
                    },
                  },
                  "status": {
                    "type": "enum",
                    "value": "active",
                  },
                  "url": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "url",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WebhooksUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "webhooks-update",
      "path": "/webhooks.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WebhooksUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "webhooks-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "webhooks",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Creates new work ([issue](https://devrev.ai/docs/product/build),
[ticket](https://devrev.ai/docs/product/support)) item.
",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "WorksCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-create",
      "path": "/works.create",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-create-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-create-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Deletes a work item.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "don:<partition>:core:devo/<dev-org-id>:<work-type>/<work-id>",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "type": "map",
            "value": [
              {
                "key": {
                  "type": "string",
                  "value": "string",
                },
                "value": {
                  "type": "map",
                  "value": [
                    {
                      "key": {
                        "type": "string",
                        "value": "key",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                  ],
                },
              },
            ],
          },
        },
      ],
      "generatedRequestName": "WorksDeleteRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-delete",
      "path": "/works.delete",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksDeleteRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-delete-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksDeleteResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-delete-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Exports a collection of work items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "works": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WorksExportRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "works-export",
      "path": "/works.export",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for work belonging to any of the provided parts.",
          "name": "applies_to_part",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestAppliesToPartItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work created by any of these users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The number of work items to return. The default is '50', the maximum
is '5000'.
",
          "name": "first",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestFirst",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestFirst",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided priorities.",
          "name": "issue.priority",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestIssuePriorityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "issue-priority",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided Rev organizations.
",
          "name": "issue.rev_orgs",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestIssueRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestIssueRevOrgs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestIssueRevOrgsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records in the provided stage(s).",
          "name": "stage.name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestStageName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestStageName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestStageNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
          "name": "ticket.rev_org",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided severities.",
          "name": "ticket.severity",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTicketSeverityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-severity",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for work of the provided types.",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksExportRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksExportRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksExportRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "work-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksExportResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-export-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Gets a work item's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "WorksGetRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "works-get",
      "path": "/works.get",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "The work's ID.",
          "name": "id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksGetRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksGetResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-get-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Lists a collection of work items.",
      "errorStatusCode": [
        400,
        401,
        403,
        429,
        500,
        503,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "next_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "next_cursor",
                },
              },
              "prev_cursor": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "prev_cursor",
                },
              },
              "works": {
                "type": "array",
                "value": [],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "WorksListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "works-list",
      "path": "/works.list",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filters for work belonging to any of the provided parts.",
          "name": "applies_to_part",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestAppliesToPartItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for work created by any of these users.",
          "name": "created_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestCreatedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The cursor to resume iteration from. If not provided, then iteration
starts from the beginning.
",
          "name": "cursor",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided priorities.",
          "name": "issue.priority",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestIssuePriorityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "issue-priority",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for issues with any of the provided Rev organizations.
",
          "name": "issue.rev_orgs",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestIssueRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestIssueRevOrgs",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestIssueRevOrgsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "The maximum number of works to return. The default is '50'.
",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The iteration mode to use, otherwise if not set, then "after" is
used.
",
          "name": "mode",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestMode",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestMode",
              "groupName": null,
              "nameOverride": null,
              "schema": "list-mode",
              "type": "reference",
            },
          },
        },
        {
          "description": "Filters for work owned by any of these users.",
          "name": "owned_by",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for records in the provided stage(s).",
          "name": "stage.name",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestStageName",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestStageName",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestStageNameItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets that are associated with any of the provided Rev
organizations.
",
          "name": "ticket.rev_org",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketRevOrgItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "description": "Filters for tickets with any of the provided severities.",
          "name": "ticket.severity",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTicketSeverityItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ticket-severity",
                "type": "reference",
              },
            },
          },
        },
        {
          "description": "Filters for work of the provided types.",
          "name": "type",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "WorksListRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorksListRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksListRequestTypeItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "work-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-list-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "Updates a work item's information.",
      "errorStatusCode": [
        400,
        401,
        403,
        404,
        429,
        500,
        503,
      ],
      "examples": [],
      "generatedRequestName": "WorksUpdateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "works-update",
      "path": "/works.update",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "WorksUpdateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-update-request",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "Success.",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "WorksUpdateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "works-update-response",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "works",
      ],
    },
  ],
  "errors": {
    "400": {
      "description": null,
      "generatedName": "BadRequestError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "BadRequestErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-bad-request",
        "type": "reference",
      },
    },
    "401": {
      "description": null,
      "generatedName": "UnauthorizedError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "UnauthorizedErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-unauthorized",
        "type": "reference",
      },
    },
    "403": {
      "description": null,
      "generatedName": "ForbiddenError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "ForbiddenErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-forbidden",
        "type": "reference",
      },
    },
    "404": {
      "description": null,
      "generatedName": "NotFoundError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "NotFoundErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-not-found",
        "type": "reference",
      },
    },
    "429": {
      "description": null,
      "generatedName": "TooManyRequestsError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "TooManyRequestsErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-too-many-requests",
        "type": "reference",
      },
    },
    "500": {
      "description": null,
      "generatedName": "InternalServerError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "InternalServerErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-internal-server-error",
        "type": "reference",
      },
    },
    "503": {
      "description": null,
      "generatedName": "ServiceUnavailableError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "ServiceUnavailableErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "error-service-unavailable",
        "type": "reference",
      },
    },
  },
  "globalHeaders": null,
  "hasEndpointsMarkedInternal": false,
  "nonRequestReferencedSchemas": [
    "artifacts-locate-response",
    "artifacts-prepare-response",
    "auth-tokens-create-response",
    "auth-tokens-get-response",
    "auth-token-requested-token-type",
    "auth-tokens-list-response",
    "auth-tokens-update-response",
    "dev-org-auth-connections-create-response",
    "dev-org-auth-connections-get-response",
    "dev-org-auth-connections-list-response",
    "dev-org-auth-connections-update-response",
    "list-mode",
    "user-state",
    "dev-users-list-response",
    "dev-users-self-response",
    "parts-create-response",
    "parts-delete-response",
    "parts-get-response",
    "part-type",
    "parts-list-response",
    "parts-update-response",
    "rev-orgs-create-response",
    "rev-orgs-delete-response",
    "rev-orgs-get-response",
    "rev-orgs-list-response",
    "rev-orgs-update-response",
    "tags-create-response",
    "tags-delete-response",
    "tags-get-response",
    "tags-list-response",
    "tags-update-response",
    "timeline-entries-create-response",
    "timeline-entries-get-response",
    "timeline-entries-list-response",
    "timeline-entries-update-response",
    "webhooks-create-response",
    "webhooks-delete-response",
    "webhooks-get-response",
    "webhooks-list-response",
    "webhooks-update-response",
    "works-create-response",
    "works-delete-response",
    "issue-priority",
    "ticket-severity",
    "work-type",
    "works-export-response",
    "works-get-response",
    "works-list-response",
    "works-update-response",
    "atom-base-summary",
    "artifacts-prepare-response-form-data",
    "user-summary",
    "atom-base",
    "auth-token-status",
    "auth-token-grant-type",
    "auth-tokens-rev-info",
    "auth-token-subject-token-type",
    "auth-token-token-type",
    "auth-token",
    "auth-tokens-org-traits",
    "auth-tokens-user-traits",
    "part-base",
    "part-base-summary",
    "auth-connection",
    "auth-connection-toggle",
    "artifact-summary",
    "user-base",
    "external-identity",
    "user-base-summary",
    "dev-user",
    "tag-with-value",
    "error-base",
    "part",
    "rev-org",
    "tag",
    "timeline-entry",
    "webhook",
    "work",
    "part-summary",
    "stage",
    "work-base",
    "parts-update-request-owned-by",
    "org-base",
    "org-base-summary",
    "org-environment",
    "org-summary",
    "tag-summary",
    "tags-update-allowed-values",
    "group-summary",
    "timeline-entry-base",
    "timeline-comment-body-type",
    "timeline-entry-visibility",
    "timeline-entries-update-request-timeline-comment-artifacts",
    "webhook-event-type",
    "webhook-status",
    "event-part-created",
    "event-part-deleted",
    "event-part-updated",
    "event-rev-org-created",
    "event-rev-org-deleted",
    "event-rev-org-updated",
    "event-tag-created",
    "event-tag-deleted",
    "event-tag-updated",
    "event-timeline-entry-created",
    "event-timeline-entry-deleted",
    "event-timeline-entry-updated",
    "webhook-event-verify",
    "event-webhook-created",
    "event-webhook-deleted",
    "event-webhook-updated",
    "event-work-created",
    "event-work-deleted",
    "event-work-updated",
    "webhooks-update-action",
    "webhooks-update-request-event-types",
    "stage-init",
    "set-tag-with-value",
    "works-update-request-artifact-ids",
    "works-update-request-owned-by",
    "works-update-request-reported-by",
    "stage-update",
    "works-update-request-tags",
    "error-bad-request",
    "error-unauthorized",
    "error-forbidden",
    "error-not-found",
    "error-too-many-requests",
    "error-internal-server-error",
    "error-service-unavailable",
  ],
  "schemas": {
    "artifact-summary": {
      "description": null,
      "generatedName": "ArtifactSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "artifacts-locate-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting an artifact's download URL.",
      "generatedName": "ArtifactsLocateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsLocateResponseExpiresAt",
          "key": "expires_at",
          "schema": {
            "description": null,
            "generatedName": "artifactsLocateResponseExpiresAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expiration timestamp of the URL.",
              "generatedName": "ArtifactsLocateResponseExpiresAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsLocateResponseUrl",
          "key": "url",
          "schema": {
            "description": "The artifact's download URL.",
            "generatedName": "ArtifactsLocateResponseUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-prepare-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to prepare a URL to upload a file.",
      "generatedName": "ArtifactsPrepareRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareRequestFileName",
          "key": "file_name",
          "schema": {
            "description": "The name of the file that's being uploaded.",
            "generatedName": "ArtifactsPrepareRequestFileName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-prepare-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to preparing a URL to upload a file.",
      "generatedName": "ArtifactsPrepareResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseFormData",
          "key": "form_data",
          "schema": {
            "description": "The POST policy form data.",
            "generatedName": "ArtifactsPrepareResponseFormData",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ArtifactsPrepareResponseFormDataItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifacts-prepare-response-form-data",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseId",
          "key": "id",
          "schema": {
            "description": "The generated artifact's ID.",
            "generatedName": "ArtifactsPrepareResponseId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseUrl",
          "key": "url",
          "schema": {
            "description": "The URL that the file's data should be uploaded to.",
            "generatedName": "ArtifactsPrepareResponseUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "artifacts-prepare-response-form-data": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ArtifactsPrepareResponseFormData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseFormDataKey",
          "key": "key",
          "schema": {
            "description": "Key of the form field.",
            "generatedName": "ArtifactsPrepareResponseFormDataKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "artifactsPrepareResponseFormDataValue",
          "key": "value",
          "schema": {
            "description": "Value corresponding to the key.",
            "generatedName": "ArtifactsPrepareResponseFormDataValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "atom-base": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AtomBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseCreatedBy",
          "key": "created_by",
          "schema": {
            "description": null,
            "generatedName": "atomBaseCreatedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AtomBaseCreatedBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseCreatedDate",
          "key": "created_date",
          "schema": {
            "description": null,
            "generatedName": "atomBaseCreatedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the object was created.",
              "generatedName": "AtomBaseCreatedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseDisplayId",
          "key": "display_id",
          "schema": {
            "description": null,
            "generatedName": "atomBaseDisplayId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable object ID unique to the Dev organization.",
              "generatedName": "AtomBaseDisplayId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseId",
          "key": "id",
          "schema": {
            "description": "Globally unique object ID.",
            "generatedName": "AtomBaseId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseModifiedBy",
          "key": "modified_by",
          "schema": {
            "description": null,
            "generatedName": "atomBaseModifiedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AtomBaseModifiedBy",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseModifiedDate",
          "key": "modified_date",
          "schema": {
            "description": null,
            "generatedName": "atomBaseModifiedDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the object was last modified.",
              "generatedName": "AtomBaseModifiedDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "atom-base-summary": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AtomBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseSummaryDisplayId",
          "key": "display_id",
          "schema": {
            "description": null,
            "generatedName": "atomBaseSummaryDisplayId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Human-readable object ID unique to the Dev organization.",
              "generatedName": "AtomBaseSummaryDisplayId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "atomBaseSummaryId",
          "key": "id",
          "schema": {
            "description": "Globally unique object ID.",
            "generatedName": "AtomBaseSummaryId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "auth-connection": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "display_name",
            "schema": {
              "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
              "generatedName": "AuthConnectionDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                "generatedName": "AuthConnectionDisplayName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "enabled",
            "schema": {
              "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
              "generatedName": "AuthConnectionEnabled",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Whether the authentication connection is enabled or disabled. If
set to false, the authentication connection will not show up on the
login screen as a login option.
",
                "generatedName": "AuthConnectionEnabled",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "boolean",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "ID of the authentication connection.",
              "generatedName": "AuthConnectionId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": "Connection object that specifies the configuration for an
authentication connection that is set up for a Dev organization.
",
        "discriminantProperty": "type",
        "generatedName": "AuthConnection",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "google_apps": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-google-apps",
            "type": "reference",
          },
          "oidc": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-oidc",
            "type": "reference",
          },
          "samlp": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-saml",
            "type": "reference",
          },
          "social": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSocial",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-social",
            "type": "reference",
          },
          "waad": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-azure-ad",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "auth-connection-options-azure-ad": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for an Azure AD
authentication connection.
",
      "generatedName": "AuthConnectionOptionsAzureAd",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsAzureAdClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsAzureAdClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client ID for the Azure authentication connection.",
              "generatedName": "AuthConnectionOptionsAzureAdClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsAzureAdClientSecret",
          "key": "client_secret",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsAzureAdClientSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client secret for the Azure authentication connection.",
              "generatedName": "AuthConnectionOptionsAzureAdClientSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsAzureAdDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsAzureAdDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Domain URL of the Azure authentication connection.",
              "generatedName": "AuthConnectionOptionsAzureAdDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-google-apps": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for a Google Apps
authentication connection.
",
      "generatedName": "AuthConnectionOptionsGoogleApps",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsGoogleAppsClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsGoogleAppsClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client ID for the Google Apps authentication connection.",
              "generatedName": "AuthConnectionOptionsGoogleAppsClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsGoogleAppsClientSecret",
          "key": "client_secret",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsGoogleAppsClientSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client secret for the Google Apps authentication connection.
",
              "generatedName": "AuthConnectionOptionsGoogleAppsClientSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsGoogleAppsTenantDomain",
          "key": "tenant_domain",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsGoogleAppsTenantDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tenant domain URL of the Google Apps authentication connection.
",
              "generatedName": "AuthConnectionOptionsGoogleAppsTenantDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-oidc": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for an OIDC
authentication connection.
",
      "generatedName": "AuthConnectionOptionsOidc",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsOidcClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsOidcClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client ID for the OIDC authentication connection.",
              "generatedName": "AuthConnectionOptionsOidcClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsOidcClientSecret",
          "key": "client_secret",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsOidcClientSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Client secret for the OIDC authentication connection.",
              "generatedName": "AuthConnectionOptionsOidcClientSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsOidcIssuer",
          "key": "issuer",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsOidcIssuer",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Issuer URL of the OIDC authentication connection.",
              "generatedName": "AuthConnectionOptionsOidcIssuer",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-saml": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Object encapsulating the configuration parameters for a SAML
authentication connection.
",
      "generatedName": "AuthConnectionOptionsSaml",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsSamlSignInEndpoint",
          "key": "sign_in_endpoint",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsSamlSignInEndpoint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sign In endpoint for the SAML authentication connection.",
              "generatedName": "AuthConnectionOptionsSamlSignInEndpoint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authConnectionOptionsSamlSigningCert",
          "key": "signing_cert",
          "schema": {
            "description": null,
            "generatedName": "authConnectionOptionsSamlSigningCert",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Signing certificate for the SAML authentication connection.
",
              "generatedName": "AuthConnectionOptionsSamlSigningCert",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-connection-options-social": {
      "description": null,
      "generatedName": "AuthConnectionOptionsSocial",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "AuthConnectionOptionsSocialKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "AuthConnectionOptionsSocialValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "auth-connection-toggle": {
      "description": null,
      "generatedName": "AuthConnectionToggle",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "disable",
          "nameOverride": null,
          "value": "disable",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enable",
          "nameOverride": null,
          "value": "enable",
        },
      ],
    },
    "auth-connection-type": {
      "description": "Defines the type for the authentication connection. The configuration
for each authentication connection will depend on the type value.
",
      "generatedName": "AuthConnectionType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "google_apps",
          "nameOverride": null,
          "value": "google_apps",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "oidc",
          "nameOverride": null,
          "value": "oidc",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "samlp",
          "nameOverride": null,
          "value": "samlp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "social",
          "nameOverride": null,
          "value": "social",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "waad",
          "nameOverride": null,
          "value": "waad",
        },
      ],
    },
    "auth-token": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "AuthToken",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authTokenClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier that represents the application that requested the
token. Only applicable for application access tokens.
",
              "generatedName": "AuthTokenClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenExpiresAt",
          "key": "expires_at",
          "schema": {
            "description": null,
            "generatedName": "authTokenExpiresAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time at which the token expires.",
              "generatedName": "AuthTokenExpiresAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenIssuedAt",
          "key": "issued_at",
          "schema": {
            "description": null,
            "generatedName": "authTokenIssuedAt",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The time at which the token was issued.",
              "generatedName": "AuthTokenIssuedAt",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenRequestedTokenType",
          "key": "requested_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokenRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokenRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenScopes",
          "key": "scopes",
          "schema": {
            "description": null,
            "generatedName": "authTokenScopes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The scopes associated with the issued token.",
              "generatedName": "AuthTokenScopes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AuthTokenScopesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "authTokenStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokenStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-status",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenSubject",
          "key": "subject",
          "schema": {
            "description": null,
            "generatedName": "authTokenSubject",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The subject of the token.",
              "generatedName": "AuthTokenSubject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokenTokenHint",
          "key": "token_hint",
          "schema": {
            "description": null,
            "generatedName": "authTokenTokenHint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A hint that identifies the token.",
              "generatedName": "AuthTokenTokenHint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-token-grant-type": {
      "description": "Specifies the process of obtaining a token.",
      "generatedName": "AuthTokenGrantType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthGrantTypeTokenIssue",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:grant-type:token-issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnIetfParamsOauthGrantTypeTokenExchange",
          "nameOverride": null,
          "value": "urn:ietf:params:oauth:grant-type:token-exchange",
        },
      ],
    },
    "auth-token-requested-token-type": {
      "description": "The type of the requested token.",
      "generatedName": "AuthTokenRequestedTokenType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeAat",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:aat",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeAatPublic",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:aat:public",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeDev",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:dev",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypePat",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:pat",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeRev",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:rev",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSession",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:session",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSessionDev0",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:session:dev0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSys",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:sys",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
          "nameOverride": null,
          "value": "urn:ietf:params:oauth:token-type:jwt",
        },
      ],
    },
    "auth-token-status": {
      "description": "The status of the token.",
      "generatedName": "AuthTokenStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "active",
          "nameOverride": null,
          "value": "active",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "expired",
          "nameOverride": null,
          "value": "expired",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "revoked",
          "nameOverride": null,
          "value": "revoked",
        },
      ],
    },
    "auth-token-subject-token-type": {
      "description": "The type of the subject token.",
      "generatedName": "AuthTokenSubjectTokenType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeJwtAuth0",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:jwt:auth0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeJwtDev",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:jwt:dev",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeRevinfo",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:revinfo",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeSysu",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:sysu",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfo",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:userinfo",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnDevrevParamsOauthTokenTypeUserinfoProfile",
          "nameOverride": null,
          "value": "urn:devrev:params:oauth:token-type:userinfo:profile",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UrnIetfParamsOauthTokenTypeJwt",
          "nameOverride": null,
          "value": "urn:ietf:params:oauth:token-type:jwt",
        },
      ],
    },
    "auth-token-token-type": {
      "description": "The type of the issued token. Bearer is the only supported token type.
",
      "generatedName": "AuthTokenTokenType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "bearer",
      },
    },
    "auth-tokens-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to create a new token corresponding to the requested token
type.
",
      "generatedName": "AuthTokensCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestAud",
          "key": "aud",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestAud",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expected audience values with respect to the token.",
              "generatedName": "AuthTokensCreateRequestAud",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "AuthTokensCreateRequestAudItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier that represents the application which is requesting
the token. If no client_id is present in the request to generate an
application access token (AAT), DevRev will generate a client_id.
This client_id is only associated with an AAT.
",
              "generatedName": "AuthTokensCreateRequestClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestExpiresIn",
          "key": "expires_in",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestExpiresIn",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The expected validity lifetime of the token in number of days.
",
              "generatedName": "AuthTokensCreateRequestExpiresIn",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestGrantType",
          "key": "grant_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestGrantType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestGrantType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-grant-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestRequestedTokenType",
          "key": "requested_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestRevInfo",
          "key": "rev_info",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestRevInfo",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestRevInfo",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-tokens-rev-info",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestScope",
          "key": "scope",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestScope",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The requested set of scopes associated with the issued token. A
space-delimited list of values in which the order of values does
not matter.
",
              "generatedName": "AuthTokensCreateRequestScope",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestSubjectToken",
          "key": "subject_token",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestSubjectToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Represents the entity that requests the token. Not required when
requesting an application access token (AAT).
",
              "generatedName": "AuthTokensCreateRequestSubjectToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestSubjectTokenType",
          "key": "subject_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestSubjectTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensCreateRequestSubjectTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-subject-token-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateRequestTokenHint",
          "key": "token_hint",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateRequestTokenHint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A hint that identifies the token.",
              "generatedName": "AuthTokensCreateRequestTokenHint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to create a new token corresponding to the
requested token type.
",
      "generatedName": "AuthTokensCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseAccessToken",
          "key": "access_token",
          "schema": {
            "description": "The issued JSON Web Token (JWT) corresponding to the requested
token type.
",
            "generatedName": "AuthTokensCreateResponseAccessToken",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseClientId",
          "key": "client_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateResponseClientId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier that represents the application which is requesting
the token. Only present in a response corresponding to an
application access token (AAT).
",
              "generatedName": "AuthTokensCreateResponseClientId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseExpiresIn",
          "key": "expires_in",
          "schema": {
            "description": "The validity lifetime of the token specified in seconds since Unix
epoch.
",
            "generatedName": "AuthTokensCreateResponseExpiresIn",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseRefreshToken",
          "key": "refresh_token",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateResponseRefreshToken",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A token to refresh the issued token.",
              "generatedName": "AuthTokensCreateResponseRefreshToken",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseScope",
          "key": "scope",
          "schema": {
            "description": null,
            "generatedName": "authTokensCreateResponseScope",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The scopes associated with the issued token. A space-delimited list
of values in which the order of values does not matter.
",
              "generatedName": "AuthTokensCreateResponseScope",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensCreateResponseTokenType",
          "key": "token_type",
          "schema": {
            "description": null,
            "generatedName": "AuthTokensCreateResponseTokenType",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-token-token-type",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to revoke the token.",
      "generatedName": "AuthTokensDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensDeleteRequestTokenId",
          "key": "token_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensDeleteRequestTokenId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The unique identifier for the token under a given Dev organization.
If no token ID is provided, then the token ID will be set from the
JTI claim of the token in the authorization header.
",
              "generatedName": "AuthTokensDeleteRequestTokenId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to get the token metadata.",
      "generatedName": "AuthTokensGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensGetResponseToken",
          "key": "token",
          "schema": {
            "description": null,
            "generatedName": "AuthTokensGetResponseToken",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-token",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to list the token metadata.",
      "generatedName": "AuthTokensListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensListResponseTokens",
          "key": "tokens",
          "schema": {
            "description": "The list of token metadata.",
            "generatedName": "AuthTokensListResponseTokens",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "AuthTokensListResponseTokensItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-org-traits": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Carries Rev org info.",
      "generatedName": "AuthTokensOrgTraits",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The display name of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensOrgTraitsDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "authTokensOrgTraitsDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The domain of the Rev org.",
              "generatedName": "AuthTokensOrgTraitsDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-rev-info": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Carries info corresponding to the Rev user to be provisioned and/or
issue a Rev session token.
",
      "generatedName": "AuthTokensRevInfo",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoOrgRef",
          "key": "org_ref",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoOrgRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An identifier which uniquely identifies a Rev org.",
              "generatedName": "AuthTokensRevInfoOrgRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoOrgTraits",
          "key": "org_traits",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoOrgTraits",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensRevInfoOrgTraits",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-tokens-org-traits",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoRevUserId",
          "key": "rev_user_id",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoRevUserId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The unique ID of the Rev user.",
              "generatedName": "AuthTokensRevInfoRevUserId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoUserRef",
          "key": "user_ref",
          "schema": {
            "description": "An identifier which uniquely identifies a Rev user.",
            "generatedName": "AuthTokensRevInfoUserRef",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensRevInfoUserTraits",
          "key": "user_traits",
          "schema": {
            "description": null,
            "generatedName": "authTokensRevInfoUserTraits",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensRevInfoUserTraits",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-tokens-user-traits",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-self-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete all the tokens created by the authenticated user,
that match with the provided token type.
",
      "generatedName": "AuthTokensSelfDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensSelfDeleteRequestRequestedTokenType",
          "key": "requested_token_type",
          "schema": {
            "description": null,
            "generatedName": "authTokensSelfDeleteRequestRequestedTokenType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "AuthTokensSelfDeleteRequestRequestedTokenType",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-token-requested-token-type",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "A request to update the token metadata.",
      "generatedName": "AuthTokensUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUpdateRequestTokenHint",
          "key": "token_hint",
          "schema": {
            "description": "A hint that identifies the token.",
            "generatedName": "AuthTokensUpdateRequestTokenHint",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUpdateRequestTokenId",
          "key": "token_id",
          "schema": {
            "description": "The unique identifier of the token under a given Dev organization.
",
            "generatedName": "AuthTokensUpdateRequestTokenId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to update the token metadata.",
      "generatedName": "AuthTokensUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUpdateResponseToken",
          "key": "token",
          "schema": {
            "description": null,
            "generatedName": "AuthTokensUpdateResponseToken",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-token",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "auth-tokens-user-traits": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Carries Rev user info.",
      "generatedName": "AuthTokensUserTraits",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The display name of the Rev user.",
              "generatedName": "AuthTokensUserTraitsDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The email address of the Rev user.",
              "generatedName": "AuthTokensUserTraitsEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "authTokensUserTraitsFullName",
          "key": "full_name",
          "schema": {
            "description": null,
            "generatedName": "authTokensUserTraitsFullName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The full name of the Rev user.",
              "generatedName": "AuthTokensUserTraitsFullName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "capability": {
      "description": null,
      "generatedName": "Capability",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base",
      "type": "reference",
    },
    "capability-summary": {
      "description": null,
      "generatedName": "CapabilitySummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "dev-org-auth-connections-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "display_name",
            "schema": {
              "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
              "generatedName": "DevOrgAuthConnectionsCreateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Display name of the authentication connection. This name will be
visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                "generatedName": "DevOrgAuthConnectionsCreateRequestDisplayName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        ],
        "description": "Request to create a new enterprise authentication connection.
",
        "discriminantProperty": "type",
        "generatedName": "DevOrgAuthConnectionsCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "google_apps": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-google-apps",
            "type": "reference",
          },
          "oidc": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-oidc",
            "type": "reference",
          },
          "samlp": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-saml",
            "type": "reference",
          },
          "waad": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-azure-ad",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "dev-org-auth-connections-create-request-type": {
      "description": "Defines the type for the authentication connection. Different types of
authentication connections have different configuration parameters.
",
      "generatedName": "DevOrgAuthConnectionsCreateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "google_apps",
          "nameOverride": null,
          "value": "google_apps",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "oidc",
          "nameOverride": null,
          "value": "oidc",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "samlp",
          "nameOverride": null,
          "value": "samlp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "waad",
          "nameOverride": null,
          "value": "waad",
        },
      ],
    },
    "dev-org-auth-connections-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to create a new enterprise authentication
connection.
",
      "generatedName": "DevOrgAuthConnectionsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsCreateResponseAuthConnection",
          "key": "auth_connection",
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsCreateResponseAuthConnection",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to delete an enterprise authentication connection for a Dev
organization. A default connection and a connection which is currently
enabled cannot be deleted.
",
      "generatedName": "DevOrgAuthConnectionsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "ID of the authentication connection to be deleted.",
            "generatedName": "DevOrgAuthConnectionsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object encapsulating the configuration details of an
authentication connection.
",
      "generatedName": "DevOrgAuthConnectionsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsGetResponseAuthConnection",
          "key": "auth_connection",
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsGetResponseAuthConnection",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object for the request to list all the social and enterprise
authentication connections configured for a Dev organization.
",
      "generatedName": "DevOrgAuthConnectionsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsListResponseAuthConnections",
          "key": "auth_connections",
          "schema": {
            "description": "List of all the authentication connections currently configured for
a Dev organization.
",
            "generatedName": "DevOrgAuthConnectionsListResponseAuthConnections",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "DevOrgAuthConnectionsListResponseAuthConnectionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-connection",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-toggle-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request to enable or disable an authentication connection for a Dev
organization.
",
      "generatedName": "DevOrgAuthConnectionsToggleRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsToggleRequestId",
          "key": "id",
          "schema": {
            "description": "ID of the authentication connection to be toggled.",
            "generatedName": "DevOrgAuthConnectionsToggleRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsToggleRequestToggle",
          "key": "toggle",
          "schema": {
            "description": null,
            "generatedName": "devOrgAuthConnectionsToggleRequestToggle",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "DevOrgAuthConnectionsToggleRequestToggle",
              "groupName": null,
              "nameOverride": null,
              "schema": "auth-connection-toggle",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-org-auth-connections-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "display_name",
            "schema": {
              "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
              "generatedName": "DevOrgAuthConnectionsUpdateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "New display name of the authentication connection. This name will
be visible to all the users when they sign in to this Dev
organization. For example, if the display_name is 'abclogin', then
it would appear on the login button as 'Log in to abclogin'.
",
                "generatedName": "DevOrgAuthConnectionsUpdateRequestDisplayName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "ID of the authentication connection which is to be updated.
",
              "generatedName": "DevOrgAuthConnectionsUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": "Request to update an enterprise authentication connection for a Dev
organization.
",
        "discriminantProperty": "type",
        "generatedName": "DevOrgAuthConnectionsUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "google_apps": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsGoogleApps",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-google-apps",
            "type": "reference",
          },
          "none": {
            "description": null,
            "generatedName": "ComponentsSchemasEmpty",
            "groupName": null,
            "nameOverride": null,
            "schema": "empty",
            "type": "reference",
          },
          "oidc": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsOidc",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-oidc",
            "type": "reference",
          },
          "samlp": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsSaml",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-saml",
            "type": "reference",
          },
          "waad": {
            "description": null,
            "generatedName": "ComponentsSchemasAuthConnectionOptionsAzureAd",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection-options-azure-ad",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "dev-org-auth-connections-update-request-type": {
      "description": "Specifies the type for the authentication connection. Different types
of authentication connections have different configuration parameters
that can be updated.
",
      "generatedName": "DevOrgAuthConnectionsUpdateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "google_apps",
          "nameOverride": null,
          "value": "google_apps",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "none",
          "nameOverride": null,
          "value": "none",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "oidc",
          "nameOverride": null,
          "value": "oidc",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "samlp",
          "nameOverride": null,
          "value": "samlp",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "waad",
          "nameOverride": null,
          "value": "waad",
        },
      ],
    },
    "dev-org-auth-connections-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response for the request to update an enterprise authentication
connection.
",
      "generatedName": "DevOrgAuthConnectionsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devOrgAuthConnectionsUpdateResponseAuthConnection",
          "key": "auth_connection",
          "schema": {
            "description": null,
            "generatedName": "DevOrgAuthConnectionsUpdateResponseAuthConnection",
            "groupName": null,
            "nameOverride": null,
            "schema": "auth-connection",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "dev-user": {
      "allOf": [
        {
          "description": null,
          "generatedName": "UserBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "user-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DevUser",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUserExternalIdentities",
          "key": "external_identities",
          "schema": {
            "description": null,
            "generatedName": "devUserExternalIdentities",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "IDs of the Dev User outside the DevRev SOR.",
              "generatedName": "DevUserExternalIdentities",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "DevUserExternalIdentitiesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "external-identity",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-user-summary": {
      "description": null,
      "generatedName": "DevUserSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "user-base-summary",
      "type": "reference",
    },
    "dev-users-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the Dev users.",
      "generatedName": "DevUsersListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListResponseDevUsers",
          "key": "dev_users",
          "schema": {
            "description": "The list of Dev users.",
            "generatedName": "DevUsersListResponseDevUsers",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "DevUsersListResponseDevUsersItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "dev-user",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "devUsersListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "DevUsersListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "devUsersListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "DevUsersListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "dev-users-self-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting the information for the authenticated user.
",
      "generatedName": "DevUsersSelfResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "devUsersSelfResponseDevUser",
          "key": "dev_user",
          "schema": {
            "description": null,
            "generatedName": "DevUsersSelfResponseDevUser",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "empty": {
      "description": null,
      "generatedName": "Empty",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "EmptyKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": "empty",
      "type": "map",
      "value": {
        "generatedName": "EmptyValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "enhancement": {
      "allOf": [
        {
          "description": null,
          "generatedName": "PartBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "part-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Enhancement",
      "groupName": null,
      "nameOverride": "enhancement",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enhancementTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "enhancementTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the enhancement is expected to be closed.",
              "generatedName": "EnhancementTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "enhancement-summary": {
      "description": null,
      "generatedName": "EnhancementSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "error-bad-request": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-bad-request-bad-request": {
      "description": null,
      "generatedName": "ErrorBadRequestBadRequest",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorBadRequestBadRequestKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorBadRequestBadRequestValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-bad-request-invalid-enum-value": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestInvalidEnumValue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidEnumValueAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": "The allowed values for the field.",
            "generatedName": "ErrorBadRequestInvalidEnumValueAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ErrorBadRequestInvalidEnumValueAllowedValuesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidEnumValueFieldName",
          "key": "field_name",
          "schema": {
            "description": "The field whose enum value is invalid.",
            "generatedName": "ErrorBadRequestInvalidEnumValueFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestInvalidEnumValueValue",
          "key": "value",
          "schema": {
            "description": "The value that was received.",
            "generatedName": "ErrorBadRequestInvalidEnumValueValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-missing-required-field": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestMissingRequiredField",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestMissingRequiredFieldFieldName",
          "key": "field_name",
          "schema": {
            "description": "The missing field's name.",
            "generatedName": "ErrorBadRequestMissingRequiredFieldFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "error-bad-request-parse-error": {
      "description": null,
      "generatedName": "ErrorBadRequestParseError",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorBadRequestParseErrorKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorBadRequestParseErrorValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-bad-request-type": {
      "description": null,
      "generatedName": "ErrorBadRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "bad_request",
          "nameOverride": null,
          "value": "bad_request",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "invalid_enum_value",
          "nameOverride": null,
          "value": "invalid_enum_value",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "missing_required_field",
          "nameOverride": null,
          "value": "missing_required_field",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "parse_error",
          "nameOverride": null,
          "value": "parse_error",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "value_not_permitted",
          "nameOverride": null,
          "value": "value_not_permitted",
        },
      ],
    },
    "error-bad-request-value-not-permitted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBadRequestValueNotPermitted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestValueNotPermittedFieldName",
          "key": "field_name",
          "schema": {
            "description": "The field whose value is not permitted.",
            "generatedName": "ErrorBadRequestValueNotPermittedFieldName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBadRequestValueNotPermittedReason",
          "key": "reason",
          "schema": {
            "description": null,
            "generatedName": "errorBadRequestValueNotPermittedReason",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The reason the value isn't permitted.",
              "generatedName": "ErrorBadRequestValueNotPermittedReason",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "error-base": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "errorBaseMessage",
          "key": "message",
          "schema": {
            "description": null,
            "generatedName": "errorBaseMessage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The message associated with the error.",
              "generatedName": "ErrorBaseMessage",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "error-forbidden": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorForbidden",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-forbidden-forbidden": {
      "description": null,
      "generatedName": "ErrorForbiddenForbidden",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorForbiddenForbiddenKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorForbiddenForbiddenValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-forbidden-type": {
      "description": null,
      "generatedName": "ErrorForbiddenType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "forbidden",
      },
    },
    "error-internal-server-error": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorInternalServerError",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-internal-server-error-internal-error": {
      "description": null,
      "generatedName": "ErrorInternalServerErrorInternalError",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorInternalServerErrorInternalErrorKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorInternalServerErrorInternalErrorValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-internal-server-error-type": {
      "description": null,
      "generatedName": "ErrorInternalServerErrorType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "internal_error",
      },
    },
    "error-not-found": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorNotFound",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-not-found-not-found": {
      "description": null,
      "generatedName": "ErrorNotFoundNotFound",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorNotFoundNotFoundKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorNotFoundNotFoundValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-not-found-type": {
      "description": null,
      "generatedName": "ErrorNotFoundType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "not_found",
      },
    },
    "error-service-unavailable": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorServiceUnavailable",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-service-unavailable-service-unavailable": {
      "description": null,
      "generatedName": "ErrorServiceUnavailableServiceUnavailable",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorServiceUnavailableServiceUnavailableKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorServiceUnavailableServiceUnavailableValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-service-unavailable-type": {
      "description": null,
      "generatedName": "ErrorServiceUnavailableType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "service_unavailable",
      },
    },
    "error-too-many-requests": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorTooManyRequests",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-too-many-requests-too-many-requests": {
      "description": null,
      "generatedName": "ErrorTooManyRequestsTooManyRequests",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorTooManyRequestsTooManyRequestsKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorTooManyRequestsTooManyRequestsValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "error-too-many-requests-type": {
      "description": null,
      "generatedName": "ErrorTooManyRequestsType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "too_many_requests",
      },
    },
    "error-unauthorized": {
      "allOf": [
        {
          "description": null,
          "generatedName": "ErrorBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "error-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ErrorUnauthorized",
      "groupName": null,
      "nameOverride": null,
      "properties": [],
      "type": "object",
    },
    "error-unauthorized-type": {
      "description": null,
      "generatedName": "ErrorUnauthorizedType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "unauthenticated",
      },
    },
    "error-unauthorized-unauthenticated": {
      "description": null,
      "generatedName": "ErrorUnauthorizedUnauthenticated",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ErrorUnauthorizedUnauthenticatedKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ErrorUnauthorizedUnauthenticatedValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "event-part-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventPartCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventPartCreatedPart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "EventPartCreatedPart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-part-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventPartDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventPartDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the part that was deleted.",
            "generatedName": "EventPartDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-part-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventPartUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventPartUpdatedPart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "EventPartUpdatedPart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-org-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevOrgCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevOrgCreatedRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "EventRevOrgCreatedRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-org-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevOrgDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevOrgDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the Rev organization that was deleted.",
            "generatedName": "EventRevOrgDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-rev-org-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventRevOrgUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventRevOrgUpdatedRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "EventRevOrgUpdatedRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-tag-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTagCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTagCreatedTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "EventTagCreatedTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-tag-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTagDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTagDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag that was deleted.",
            "generatedName": "EventTagDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-tag-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTagUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTagUpdatedTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "EventTagUpdatedTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-timeline-entry-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTimelineEntryCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTimelineEntryCreatedEntry",
          "key": "entry",
          "schema": {
            "description": null,
            "generatedName": "EventTimelineEntryCreatedEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-timeline-entry-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTimelineEntryDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTimelineEntryDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the timeline entry that was deleted.",
            "generatedName": "EventTimelineEntryDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-timeline-entry-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventTimelineEntryUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventTimelineEntryUpdatedEntry",
          "key": "entry",
          "schema": {
            "description": null,
            "generatedName": "EventTimelineEntryUpdatedEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-webhook-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWebhookCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWebhookCreatedWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "EventWebhookCreatedWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-webhook-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWebhookDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWebhookDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the webhook that was deleted.",
            "generatedName": "EventWebhookDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-webhook-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWebhookUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWebhookUpdatedWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "EventWebhookUpdatedWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-work-created": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWorkCreated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWorkCreatedWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "EventWorkCreatedWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "event-work-deleted": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWorkDeleted",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWorkDeletedId",
          "key": "id",
          "schema": {
            "description": "The ID of the work that was deleted.",
            "generatedName": "EventWorkDeletedId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "event-work-updated": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EventWorkUpdated",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "eventWorkUpdatedWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "EventWorkUpdatedWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "external-identity": {
      "description": "External identity of a user.",
      "generatedName": "ExternalIdentity",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "ExternalIdentityKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "ExternalIdentityValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "feature": {
      "description": null,
      "generatedName": "Feature",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base",
      "type": "reference",
    },
    "feature-summary": {
      "description": null,
      "generatedName": "FeatureSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "group-summary": {
      "description": null,
      "generatedName": "GroupSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base-summary",
      "type": "reference",
    },
    "issue": {
      "allOf": [
        {
          "description": null,
          "generatedName": "WorkBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "work-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Issue",
      "groupName": null,
      "nameOverride": "issue",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "issuePriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "issuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "IssuePriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "issue-priority",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "issue-priority": {
      "description": "Priority of the work based upon impact and criticality.",
      "generatedName": "IssuePriority",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p0",
          "nameOverride": null,
          "value": "p0",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p1",
          "nameOverride": null,
          "value": "p1",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p2",
          "nameOverride": null,
          "value": "p2",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "p3",
          "nameOverride": null,
          "value": "p3",
        },
      ],
    },
    "list-mode": {
      "description": "The iteration mode to use. If "after", then entries after the provided
cursor will be returned, or if no cursor is provided, then from the
beginning. If "before", then entries before the provided cursor will be
returned, or if no cursor is provided, then from the end. Entries will
always be returned in the specified sort-by order.
",
      "generatedName": "ListMode",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "after",
          "nameOverride": null,
          "value": "after",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "before",
          "nameOverride": null,
          "value": "before",
        },
      ],
    },
    "org-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgBaseDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "orgBaseDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the Organization.",
              "generatedName": "OrgBaseDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "org-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "OrgBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "orgBaseSummaryDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "orgBaseSummaryDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Name of the Organization.",
              "generatedName": "OrgBaseSummaryDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "org-environment": {
      "description": "The environment of the Org. Defaults to 'production' if not specified.
",
      "generatedName": "OrgEnvironment",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "production",
          "nameOverride": null,
          "value": "production",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "staging",
          "nameOverride": null,
          "value": "staging",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "test",
          "nameOverride": null,
          "value": "test",
        },
      ],
    },
    "org-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "OrgSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "rev_org": {
            "description": null,
            "generatedName": "ComponentsSchemasRevOrgSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "org-type": {
      "description": null,
      "generatedName": "OrgType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "rev_org",
      },
    },
    "part": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "Part",
        "groupName": null,
        "nameOverride": "part",
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasCapability",
            "groupName": null,
            "nameOverride": null,
            "schema": "capability",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasEnhancement",
            "groupName": null,
            "nameOverride": null,
            "schema": "enhancement",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasFeature",
            "groupName": null,
            "nameOverride": null,
            "schema": "feature",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasProduct",
            "groupName": null,
            "nameOverride": null,
            "schema": "product",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "part-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "partBaseArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The attached artifacts.",
              "generatedName": "PartBaseArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartBaseArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "partBaseDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the part.",
              "generatedName": "PartBaseDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseName",
          "key": "name",
          "schema": {
            "description": "Name of the part.",
            "generatedName": "PartBaseName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": "The users that own the part.",
            "generatedName": "PartBaseOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartBaseOwnedByItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "partBaseTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the object.",
              "generatedName": "PartBaseTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartBaseTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "part-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partBaseSummaryName",
          "key": "name",
          "schema": {
            "description": "Name of the part.",
            "generatedName": "PartBaseSummaryName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "part-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "PartSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasCapabilitySummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "capability-summary",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasEnhancementSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "enhancement-summary",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasFeatureSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "feature-summary",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasProductSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "product-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "part-type": {
      "description": null,
      "generatedName": "PartType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "capability",
          "nameOverride": null,
          "value": "capability",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "enhancement",
          "nameOverride": null,
          "value": "enhancement",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "feature",
          "nameOverride": null,
          "value": "feature",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "product",
          "nameOverride": null,
          "value": "product",
        },
      ],
    },
    "parts-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "description",
            "schema": {
              "description": "Description of the part.",
              "generatedName": "PartsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Description of the part.",
                "generatedName": "PartsCreateRequestDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "name",
            "schema": {
              "description": "Name of the part.",
              "generatedName": "PartsCreateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": "The users that own the part.",
              "generatedName": "PartsCreateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsCreateRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "PartsCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestCapability",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-capability",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestEnhancement",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-enhancement",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestFeature",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-feature",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsCreateRequestProduct",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-create-request-product",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "parts-create-request-capability": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateRequestCapability",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestCapabilityParentPart",
          "key": "parent_part",
          "schema": {
            "description": "ID of the parent product for the capability.",
            "generatedName": "PartsCreateRequestCapabilityParentPart",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsCreateRequestCapabilityParentPartItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-create-request-enhancement": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateRequestEnhancement",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestEnhancementParentPart",
          "key": "parent_part",
          "schema": {
            "description": "ID of the parent part on which the enhancement is to be created.
",
            "generatedName": "PartsCreateRequestEnhancementParentPart",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsCreateRequestEnhancementParentPartItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestEnhancementTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "partsCreateRequestEnhancementTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Target close date by which enhancement is expected to be closed.
",
              "generatedName": "PartsCreateRequestEnhancementTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-create-request-feature": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateRequestFeature",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateRequestFeatureParentPart",
          "key": "parent_part",
          "schema": {
            "description": "ID of the parent capability/feature for the feature.",
            "generatedName": "PartsCreateRequestFeatureParentPart",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsCreateRequestFeatureParentPartItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-create-request-product": {
      "description": null,
      "generatedName": "PartsCreateRequestProduct",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsCreateRequestProductKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsCreateRequestProductValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsCreateResponsePart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "PartsCreateResponsePart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "parts-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the part to delete.",
            "generatedName": "PartsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "parts-delete-response": {
      "description": null,
      "generatedName": "PartsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsGetResponsePart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "PartsGetResponsePart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "parts-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "partsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "PartsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListResponseParts",
          "key": "parts",
          "schema": {
            "description": "The list of parts.",
            "generatedName": "PartsListResponseParts",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PartsListResponsePartsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "part",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "partsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "PartsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "description",
            "schema": {
              "description": "The updated description of the part.",
              "generatedName": "PartsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The updated description of the part.",
                "generatedName": "PartsUpdateRequestDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "The ID of the part to update.",
              "generatedName": "PartsUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "name",
            "schema": {
              "description": "The updated name of the part.",
              "generatedName": "PartsUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The updated name of the part.",
                "generatedName": "PartsUpdateRequestName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": null,
              "generatedName": "PartsUpdateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PartsUpdateRequestOwnedBy",
                "groupName": null,
                "nameOverride": null,
                "schema": "parts-update-request-owned-by",
                "type": "reference",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "PartsUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "capability": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestCapability",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-capability",
            "type": "reference",
          },
          "enhancement": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestEnhancement",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-enhancement",
            "type": "reference",
          },
          "feature": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestFeature",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-feature",
            "type": "reference",
          },
          "none": {
            "description": null,
            "generatedName": "ComponentsSchemasEmpty",
            "groupName": null,
            "nameOverride": null,
            "schema": "empty",
            "type": "reference",
          },
          "product": {
            "description": null,
            "generatedName": "ComponentsSchemasPartsUpdateRequestProduct",
            "groupName": null,
            "nameOverride": null,
            "schema": "parts-update-request-product",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "parts-update-request-capability": {
      "description": null,
      "generatedName": "PartsUpdateRequestCapability",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsUpdateRequestCapabilityKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsUpdateRequestCapabilityValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-update-request-enhancement": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsUpdateRequestEnhancement",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateRequestEnhancementTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "partsUpdateRequestEnhancementTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the target close date of the enhancement.",
              "generatedName": "PartsUpdateRequestEnhancementTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-update-request-feature": {
      "description": null,
      "generatedName": "PartsUpdateRequestFeature",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsUpdateRequestFeatureKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsUpdateRequestFeatureValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-update-request-owned-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsUpdateRequestOwnedBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateRequestOwnedBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "partsUpdateRequestOwnedBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
              "generatedName": "PartsUpdateRequestOwnedBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PartsUpdateRequestOwnedBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "parts-update-request-product": {
      "description": null,
      "generatedName": "PartsUpdateRequestProduct",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "PartsUpdateRequestProductKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "PartsUpdateRequestProductValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "parts-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PartsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "partsUpdateResponsePart",
          "key": "part",
          "schema": {
            "description": null,
            "generatedName": "PartsUpdateResponsePart",
            "groupName": null,
            "nameOverride": null,
            "schema": "part",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "product": {
      "description": null,
      "generatedName": "Product",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base",
      "type": "reference",
    },
    "product-summary": {
      "description": null,
      "generatedName": "ProductSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "part-base-summary",
      "type": "reference",
    },
    "rev-org": {
      "allOf": [
        {
          "description": null,
          "generatedName": "OrgBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "org-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevOrg",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revOrgDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev organization.",
              "generatedName": "RevOrgDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "revOrgDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Company's domain name. Example - 'devrev.ai'.",
              "generatedName": "RevOrgDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revOrgExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a unique identifier for the Rev (customer)
organization from your primary customer system of records. If none
is specified, a system-generated identifier will be assigned to the
organization.
",
              "generatedName": "RevOrgExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-org-summary": {
      "description": null,
      "generatedName": "RevOrgSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "org-base-summary",
      "type": "reference",
    },
    "rev-orgs-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to create a new Rev organization in the Dev
organization.
",
      "generatedName": "RevOrgsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev organization.",
              "generatedName": "RevOrgsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": "Name of the Rev organization.",
            "generatedName": "RevOrgsCreateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Company's domain name. Example - 'devrev.ai'.",
              "generatedName": "RevOrgsCreateRequestDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestEnvironment",
          "key": "environment",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestEnvironment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsCreateRequestEnvironment",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-environment",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
              "generatedName": "RevOrgsCreateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateRequestTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "revOrgsCreateRequestTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The tier of the RevOrg.",
              "generatedName": "RevOrgsCreateRequestTier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object for request to create a new Rev organization.
",
      "generatedName": "RevOrgsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsCreateResponseRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "RevOrgsCreateResponseRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to delete a Rev organization.",
      "generatedName": "RevOrgsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of Rev organization to delete.",
            "generatedName": "RevOrgsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-delete-response": {
      "description": "The response to deleting a Rev organization.",
      "generatedName": "RevOrgsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "RevOrgsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "RevOrgsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "rev-orgs-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a Rev organization's information.",
      "generatedName": "RevOrgsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsGetResponseRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "RevOrgsGetResponseRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a list of Rev organizations' information.
",
      "generatedName": "RevOrgsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "RevOrgsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "revOrgsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "RevOrgsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsListResponseRevOrgs",
          "key": "rev_orgs",
          "schema": {
            "description": "List with all of the Rev organizations' information.",
            "generatedName": "RevOrgsListResponseRevOrgs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RevOrgsListResponseRevOrgsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "rev-org",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Request object to update information of the Rev organization.
",
      "generatedName": "RevOrgsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Description of the Rev organization.",
              "generatedName": "RevOrgsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Customer chosen name for the Rev organization.",
              "generatedName": "RevOrgsUpdateRequestDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestDomain",
          "key": "domain",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestDomain",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Company's domain name. Example - 'devrev.ai'.",
              "generatedName": "RevOrgsUpdateRequestDomain",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestEnvironment",
          "key": "environment",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestEnvironment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevOrgsUpdateRequestEnvironment",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-environment",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a custom unique identifier which is a reference to
an unique id for this organization's data in some system of
records.
",
              "generatedName": "RevOrgsUpdateRequestExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of Rev organization to update.",
            "generatedName": "RevOrgsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateRequestTier",
          "key": "tier",
          "schema": {
            "description": null,
            "generatedName": "revOrgsUpdateRequestTier",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The tier of the RevOrg.",
              "generatedName": "RevOrgsUpdateRequestTier",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "rev-orgs-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Response object to updating Rev organization's information.",
      "generatedName": "RevOrgsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revOrgsUpdateResponseRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "RevOrgsUpdateResponseRevOrg",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-org",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "rev-user-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "UserBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "user-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RevUserSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserSummaryExternalRef",
          "key": "external_ref",
          "schema": {
            "description": null,
            "generatedName": "revUserSummaryExternalRef",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "External ref is a mutable unique identifier for a user within the
Rev organization from your primary customer record. If none is
available, a good alternative is the email address/phone number
which could uniquely identify the user. If none is specified, a
system-generated identifier will be assigned to the user.
",
              "generatedName": "RevUserSummaryExternalRef",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "revUserSummaryRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "revUserSummaryRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RevUserSummaryRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-summary",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "set-tag-with-value": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SetTagWithValue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setTagWithValueId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag.",
            "generatedName": "SetTagWithValueId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "setTagWithValueValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "setTagWithValueValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The value for the object's association with the tag. If specified,
the value must be one that's specified in the tag's allowed values.
",
              "generatedName": "SetTagWithValueValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "stage": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Describes the current stage of a work item.",
      "generatedName": "Stage",
      "groupName": null,
      "nameOverride": "stage",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stageName",
          "key": "name",
          "schema": {
            "description": "Current stage name of the work item.",
            "generatedName": "StageName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "stage-init": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Sets an object's initial stage.",
      "generatedName": "StageInit",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stageInitName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "stageInitName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the stage.",
              "generatedName": "StageInitName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "stage-update": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Updates an object's stage.",
      "generatedName": "StageUpdate",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "stageUpdateName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "stageUpdateName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated name of the stage, otherwise unchanged if not set.
",
              "generatedName": "StageUpdateName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "sys-user-summary": {
      "description": null,
      "generatedName": "SysUserSummary",
      "groupName": null,
      "nameOverride": null,
      "schema": "user-base-summary",
      "type": "reference",
    },
    "tag": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Tag",
      "groupName": null,
      "nameOverride": "tag",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": null,
            "generatedName": "tagAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the tag, where a value is provided when a
tag is associated with an object. If empty, then no value should be
provided when the association is made.
",
              "generatedName": "TagAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagAllowedValuesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "tagDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An informative description for the tag that should provide context
on the tag's purpose and usage.
",
              "generatedName": "TagDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagName",
          "key": "name",
          "schema": {
            "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
            "generatedName": "TagName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tag-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TagSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagSummaryName",
          "key": "name",
          "schema": {
            "description": "The name of the tag, which denotes the logical concept by which all
tagged objects will be associated. The name is guaranteed to be
unique.
",
            "generatedName": "TagSummaryName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tag-with-value": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TagWithValue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagWithValueTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagWithValueTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag-summary",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagWithValueValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "tagWithValueValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The value for the object's association with the tag.",
              "generatedName": "TagWithValueValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to create a new tag.",
      "generatedName": "TagsCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateRequestAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": null,
            "generatedName": "tagsCreateRequestAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The allowed values for the tag, or empty if no values are
permitted.
",
              "generatedName": "TagsCreateRequestAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsCreateRequestAllowedValuesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "tagsCreateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The description for the tag.",
              "generatedName": "TagsCreateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateRequestName",
          "key": "name",
          "schema": {
            "description": "The name for the tag, which must be unique across all tags.
",
            "generatedName": "TagsCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tags-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a new tag.",
      "generatedName": "TagsCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsCreateResponseTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagsCreateResponseTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "tags-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete a tag.",
      "generatedName": "TagsDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag to delete.",
            "generatedName": "TagsDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "tags-delete-response": {
      "description": "The response for deleting a tag.",
      "generatedName": "TagsDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "TagsDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "TagsDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "tags-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting a tag's information.",
      "generatedName": "TagsGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsGetResponseTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagsGetResponseTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "tags-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the tags.",
      "generatedName": "TagsListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "tagsListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "TagsListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "tagsListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "TagsListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsListResponseTags",
          "key": "tags",
          "schema": {
            "description": "The list of tags.",
            "generatedName": "TagsListResponseTags",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "TagsListResponseTagsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "tag",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-update-allowed-values": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "Specifies an update to a tag's allowed values.",
      "generatedName": "TagsUpdateAllowedValues",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateAllowedValuesSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateAllowedValuesSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the allowed values for the tag.",
              "generatedName": "TagsUpdateAllowedValuesSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TagsUpdateAllowedValuesSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to update a tag.",
      "generatedName": "TagsUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestAllowedValues",
          "key": "allowed_values",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateRequestAllowedValues",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TagsUpdateRequestAllowedValues",
              "groupName": null,
              "nameOverride": null,
              "schema": "tags-update-allowed-values",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestDescription",
          "key": "description",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateRequestDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated description of the tag.",
              "generatedName": "TagsUpdateRequestDescription",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "The ID of the tag to update.",
            "generatedName": "TagsUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateRequestName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "tagsUpdateRequestName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated name of the tag. The name must be unique across all
tags.
",
              "generatedName": "TagsUpdateRequestName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "tags-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response for updating a tag.",
      "generatedName": "TagsUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "tagsUpdateResponseTag",
          "key": "tag",
          "schema": {
            "description": null,
            "generatedName": "TagsUpdateResponseTag",
            "groupName": null,
            "nameOverride": null,
            "schema": "tag",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "ticket": {
      "allOf": [
        {
          "description": null,
          "generatedName": "WorkBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "work-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Ticket",
      "groupName": null,
      "nameOverride": "ticket",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "ticketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": "group-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "ticketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": "org-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "ticketSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "ticketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "schema": "ticket-severity",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "ticket-severity": {
      "description": "Severity of the ticket.",
      "generatedName": "TicketSeverity",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "blocker",
          "nameOverride": null,
          "value": "blocker",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "high",
          "nameOverride": null,
          "value": "high",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "low",
          "nameOverride": null,
          "value": "low",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "medium",
          "nameOverride": null,
          "value": "medium",
        },
      ],
    },
    "timeline-comment": {
      "allOf": [
        {
          "description": null,
          "generatedName": "TimelineEntryBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "timeline-entry-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineComment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifacts for the comment.",
              "generatedName": "TimelineCommentArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineCommentArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The comment's body. If the comment has been deleted, then no body
will appear in the response.
",
              "generatedName": "TimelineCommentBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentBodyType",
          "key": "body_type",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentBodyType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineCommentBodyType",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-comment-body-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineCommentSnapKitBody",
          "key": "snap_kit_body",
          "schema": {
            "description": null,
            "generatedName": "timelineCommentSnapKitBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SnapKit Body of the comment.",
              "generatedName": "TimelineCommentSnapKitBody",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "TimelineCommentSnapKitBodyKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "TimelineCommentSnapKitBodyValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-comment-body-type": {
      "description": "The type of the body to use for the comment.",
      "generatedName": "TimelineCommentBodyType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "snap_kit",
          "nameOverride": null,
          "value": "snap_kit",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "text",
          "nameOverride": null,
          "value": "text",
        },
      ],
    },
    "timeline-entries-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "object",
            "schema": {
              "description": "The ID of the object to create the timeline entry for.",
              "generatedName": "TimelineEntriesCreateRequestObject",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "visibility",
            "schema": {
              "description": null,
              "generatedName": "TimelineEntriesCreateRequestVisibility",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesCreateRequestVisibility",
                "groupName": null,
                "nameOverride": null,
                "schema": "timeline-entry-visibility",
                "type": "reference",
              },
            },
          },
        ],
        "description": "The request to create a timeline entry for an object.",
        "discriminantProperty": "type",
        "generatedName": "TimelineEntriesCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "timeline_comment": {
            "description": null,
            "generatedName": "ComponentsSchemasTimelineEntriesCreateRequestTimelineComment",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entries-create-request-timeline-comment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "timeline-entries-create-request-timeline-comment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntriesCreateRequestTimelineComment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The IDs of the artifacts attached to the comment.",
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The comment's body.",
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentBodyType",
          "key": "body_type",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentBodyType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentBodyType",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-comment-body-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapKitBody",
          "key": "snap_kit_body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesCreateRequestTimelineCommentSnapKitBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SnapKit body of the comment.",
              "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapKitBody",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapKitBodyKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "TimelineEntriesCreateRequestTimelineCommentSnapKitBodyValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-create-request-type": {
      "description": null,
      "generatedName": "TimelineEntriesCreateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "timeline_comment",
      },
    },
    "timeline-entries-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a timeline entry for an object.",
      "generatedName": "TimelineEntriesCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesCreateResponseTimelineEntry",
          "key": "timeline_entry",
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesCreateResponseTimelineEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to getting a timeline entry.",
      "generatedName": "TimelineEntriesGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesGetResponseTimelineEntry",
          "key": "timeline_entry",
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesGetResponseTimelineEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing timeline entries for an object.",
      "generatedName": "TimelineEntriesListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "TimelineEntriesListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "TimelineEntriesListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesListResponseTimelineEntries",
          "key": "timeline_entries",
          "schema": {
            "description": "The timeline entries for the object.",
            "generatedName": "TimelineEntriesListResponseTimelineEntries",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesListResponseTimelineEntriesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-entry",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "id",
            "schema": {
              "description": "The ID of the timeline entry to update.",
              "generatedName": "TimelineEntriesUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": "The request to update a timeline entry.",
        "discriminantProperty": "type",
        "generatedName": "TimelineEntriesUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "timeline_comment": {
            "description": null,
            "generatedName": "ComponentsSchemasTimelineEntriesUpdateRequestTimelineComment",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entries-update-request-timeline-comment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "timeline-entries-update-request-timeline-comment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntriesUpdateRequestTimelineComment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-entries-update-request-timeline-comment-artifacts",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated comment's body.",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentBodyType",
          "key": "body_type",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentBodyType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentBodyType",
              "groupName": null,
              "nameOverride": null,
              "schema": "timeline-comment-body-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentSnapKitBody",
          "key": "snap_kit_body",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentSnapKitBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The SnapKit body of the comment.",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentSnapKitBody",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentSnapKitBodyKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentSnapKitBodyValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-update-request-timeline-comment-artifacts": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifacts",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
          "key": "add",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Adds the provided artifacts to the comment. An artifact cannot be
added more than once, i.e. nothing is done if the artifact is
already attached. Mutually exclusive with \`set\`.
",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsAdd",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsAddItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
          "key": "remove",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Removes the provided artifacts from the comment. If an artifact is
not present, then it's ignored. Mututally exclusive with \`set\`.
",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsRemove",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsRemoveItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "timelineEntriesUpdateRequestTimelineCommentArtifactsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the field to the provided artifacts.",
              "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "TimelineEntriesUpdateRequestTimelineCommentArtifactsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "timeline-entries-update-request-type": {
      "description": null,
      "generatedName": "TimelineEntriesUpdateRequestType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "timeline_comment",
      },
    },
    "timeline-entries-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to updating a timeline entry.",
      "generatedName": "TimelineEntriesUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "timelineEntriesUpdateResponseTimelineEntry",
          "key": "timeline_entry",
          "schema": {
            "description": null,
            "generatedName": "TimelineEntriesUpdateResponseTimelineEntry",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-entry",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "timeline-entry": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "TimelineEntry",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "timeline_comment": {
            "description": null,
            "generatedName": "ComponentsSchemasTimelineComment",
            "groupName": null,
            "nameOverride": null,
            "schema": "timeline-comment",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "timeline-entry-base": {
      "description": null,
      "generatedName": "TimelineEntryBase",
      "groupName": null,
      "nameOverride": null,
      "schema": "atom-base",
      "type": "reference",
    },
    "timeline-entry-type": {
      "description": null,
      "generatedName": "TimelineEntryType",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "timeline_comment",
      },
    },
    "timeline-entry-visibility": {
      "description": "The visibility of the entry. If 'private', then the entry is only
visible to the creator, otherwise if not set, then the entry has
default visibility.
",
      "generatedName": "TimelineEntryVisibility",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "private",
      },
    },
    "user-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UserBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The user's display name. The name is non-unique and mutable.
",
              "generatedName": "UserBaseDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseDisplayPicture",
          "key": "display_picture",
          "schema": {
            "description": null,
            "generatedName": "userBaseDisplayPicture",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseDisplayPicture",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifact-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "userBaseEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Email address of the user.",
              "generatedName": "UserBaseEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseFullName",
          "key": "full_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseFullName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Full name of the user.",
              "generatedName": "UserBaseFullName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBasePhoneNumbers",
          "key": "phone_numbers",
          "schema": {
            "description": null,
            "generatedName": "userBasePhoneNumbers",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Phone numbers of the user.",
              "generatedName": "UserBasePhoneNumbers",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "UserBasePhoneNumbersItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "userBaseState",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseState",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-state",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "user-base-summary": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBaseSummary",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base-summary",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UserBaseSummary",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryDisplayName",
          "key": "display_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryDisplayName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The user's display name. The name is non-unique and mutable.
",
              "generatedName": "UserBaseSummaryDisplayName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryDisplayPicture",
          "key": "display_picture",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryDisplayPicture",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseSummaryDisplayPicture",
              "groupName": null,
              "nameOverride": null,
              "schema": "artifact-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryEmail",
          "key": "email",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryEmail",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Email address of the user.",
              "generatedName": "UserBaseSummaryEmail",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryFullName",
          "key": "full_name",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryFullName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Full name of the user.",
              "generatedName": "UserBaseSummaryFullName",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "userBaseSummaryState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "userBaseSummaryState",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UserBaseSummaryState",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-state",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "user-state": {
      "description": "State of the user.",
      "generatedName": "UserState",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "active",
          "nameOverride": null,
          "value": "active",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "deactivated",
          "nameOverride": null,
          "value": "deactivated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "locked",
          "nameOverride": null,
          "value": "locked",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "shadow",
          "nameOverride": null,
          "value": "shadow",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "unassigned",
          "nameOverride": null,
          "value": "unassigned",
        },
      ],
    },
    "user-summary": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "UserSummary",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "dev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasDevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "dev-user-summary",
            "type": "reference",
          },
          "rev_user": {
            "description": null,
            "generatedName": "ComponentsSchemasRevUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "rev-user-summary",
            "type": "reference",
          },
          "sys_user": {
            "description": null,
            "generatedName": "ComponentsSchemasSysUserSummary",
            "groupName": null,
            "nameOverride": null,
            "schema": "sys-user-summary",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "user-type": {
      "description": null,
      "generatedName": "UserType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "dev_user",
          "nameOverride": null,
          "value": "dev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_user",
          "nameOverride": null,
          "value": "rev_user",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "sys_user",
          "nameOverride": null,
          "value": "sys_user",
        },
      ],
    },
    "webhook": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Webhook",
      "groupName": null,
      "nameOverride": "webhook",
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventTypes",
          "key": "event_types",
          "schema": {
            "description": null,
            "generatedName": "webhookEventTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types that the webhook will receive.",
              "generatedName": "WebhookEventTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhookEventTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookSecret",
          "key": "secret",
          "schema": {
            "description": "The secret to use for verifying webhook events.",
            "generatedName": "WebhookSecret",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "WebhookStatus",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook-status",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookUrl",
          "key": "url",
          "schema": {
            "description": "The URL of the webhook endpoint.",
            "generatedName": "WebhookUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhook-event-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhookEventRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestId",
          "key": "id",
          "schema": {
            "description": "The event's ID.",
            "generatedName": "WebhookEventRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestPartCreated",
          "key": "part_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestPartCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestPartCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-part-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestPartDeleted",
          "key": "part_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestPartDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestPartDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-part-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestPartUpdated",
          "key": "part_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestPartUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestPartUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-part-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevOrgCreated",
          "key": "rev_org_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevOrgCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevOrgCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-org-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevOrgDeleted",
          "key": "rev_org_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevOrgDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevOrgDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-org-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestRevOrgUpdated",
          "key": "rev_org_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestRevOrgUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestRevOrgUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-rev-org-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTagCreated",
          "key": "tag_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTagCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTagCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-tag-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTagDeleted",
          "key": "tag_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTagDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTagDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-tag-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTagUpdated",
          "key": "tag_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTagUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTagUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-tag-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimelineEntryCreated",
          "key": "timeline_entry_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimelineEntryCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTimelineEntryCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-timeline-entry-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimelineEntryDeleted",
          "key": "timeline_entry_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimelineEntryDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTimelineEntryDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-timeline-entry-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimelineEntryUpdated",
          "key": "timeline_entry_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimelineEntryUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestTimelineEntryUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-timeline-entry-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestTimestamp",
          "key": "timestamp",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestTimestamp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp of the webhook's invocation for the event. Note this
should be used to protect against replay attacks, where the event
should only be processed if the timestamp isn't stale by several
seconds.
",
              "generatedName": "WebhookEventRequestTimestamp",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestType",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhook-event-type",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestVerify",
          "key": "verify",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestVerify",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestVerify",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhook-event-verify",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookCreated",
          "key": "webhook_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWebhookCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWebhookCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-webhook-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookDeleted",
          "key": "webhook_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWebhookDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWebhookDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-webhook-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookId",
          "key": "webhook_id",
          "schema": {
            "description": "ID of the webhook for the event.",
            "generatedName": "WebhookEventRequestWebhookId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWebhookUpdated",
          "key": "webhook_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWebhookUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWebhookUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-webhook-updated",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWorkCreated",
          "key": "work_created",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWorkCreated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWorkCreated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-work-created",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWorkDeleted",
          "key": "work_deleted",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWorkDeleted",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWorkDeleted",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-work-deleted",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventRequestWorkUpdated",
          "key": "work_updated",
          "schema": {
            "description": null,
            "generatedName": "webhookEventRequestWorkUpdated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhookEventRequestWorkUpdated",
              "groupName": null,
              "nameOverride": null,
              "schema": "event-work-updated",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhook-event-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhookEventResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventResponseChallenge",
          "key": "challenge",
          "schema": {
            "description": null,
            "generatedName": "webhookEventResponseChallenge",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The challenge from the "verify" request, otherwise this should not
be set for other request types.
",
              "generatedName": "WebhookEventResponseChallenge",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhook-event-type": {
      "description": "The event types that the webhook will receive.",
      "generatedName": "WebhookEventType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "part_created",
          "nameOverride": null,
          "value": "part_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "part_deleted",
          "nameOverride": null,
          "value": "part_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "part_updated",
          "nameOverride": null,
          "value": "part_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org_created",
          "nameOverride": null,
          "value": "rev_org_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org_deleted",
          "nameOverride": null,
          "value": "rev_org_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "rev_org_updated",
          "nameOverride": null,
          "value": "rev_org_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag_created",
          "nameOverride": null,
          "value": "tag_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag_deleted",
          "nameOverride": null,
          "value": "tag_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "tag_updated",
          "nameOverride": null,
          "value": "tag_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_entry_created",
          "nameOverride": null,
          "value": "timeline_entry_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_entry_deleted",
          "nameOverride": null,
          "value": "timeline_entry_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "timeline_entry_updated",
          "nameOverride": null,
          "value": "timeline_entry_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "verify",
          "nameOverride": null,
          "value": "verify",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "webhook_created",
          "nameOverride": null,
          "value": "webhook_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "webhook_deleted",
          "nameOverride": null,
          "value": "webhook_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "webhook_updated",
          "nameOverride": null,
          "value": "webhook_updated",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "work_created",
          "nameOverride": null,
          "value": "work_created",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "work_deleted",
          "nameOverride": null,
          "value": "work_deleted",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "work_updated",
          "nameOverride": null,
          "value": "work_updated",
        },
      ],
    },
    "webhook-event-verify": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhookEventVerify",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhookEventVerifyChallenge",
          "key": "challenge",
          "schema": {
            "description": "The challenge that must be echoed in the response.",
            "generatedName": "WebhookEventVerifyChallenge",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhook-status": {
      "description": "The status of the webhook.",
      "generatedName": "WebhookStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "active",
          "nameOverride": null,
          "value": "active",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "inactive",
          "nameOverride": null,
          "value": "inactive",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "unverified",
          "nameOverride": null,
          "value": "unverified",
        },
      ],
    },
    "webhooks-create-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to create a new webhook.",
      "generatedName": "WebhooksCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateRequestEventTypes",
          "key": "event_types",
          "schema": {
            "description": null,
            "generatedName": "webhooksCreateRequestEventTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types that the webhook endpoint will receive.",
              "generatedName": "WebhooksCreateRequestEventTypes",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksCreateRequestEventTypesItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateRequestSecret",
          "key": "secret",
          "schema": {
            "description": null,
            "generatedName": "webhooksCreateRequestSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The secret to use when verifying webhook events. If provided, the
secret must be between 8 and 32 bytes (inclusive). If not set, a
secret will be automatically generated and provided in the
response.
",
              "generatedName": "WebhooksCreateRequestSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateRequestUrl",
          "key": "url",
          "schema": {
            "description": "The URL of the webhook endpoint.",
            "generatedName": "WebhooksCreateRequestUrl",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to creating a new webhook.",
      "generatedName": "WebhooksCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksCreateResponseWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "WebhooksCreateResponseWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to delete a webhook.",
      "generatedName": "WebhooksDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "ID for the webhook.",
            "generatedName": "WebhooksDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-delete-response": {
      "description": "The response to deleting the webhook.",
      "generatedName": "WebhooksDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "WebhooksDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "WebhooksDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "webhooks-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to getting the information for the webhook.",
      "generatedName": "WebhooksGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksGetResponseWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "WebhooksGetResponseWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "webhooks-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to listing the webhooks.",
      "generatedName": "WebhooksListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksListResponseWebhooks",
          "key": "webhooks",
          "schema": {
            "description": "The list of webhooks.",
            "generatedName": "WebhooksListResponseWebhooks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WebhooksListResponseWebhooksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhook",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhooks-update-action": {
      "description": "The action to update the webhook's status.",
      "generatedName": "WebhooksUpdateAction",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "activate",
          "nameOverride": null,
          "value": "activate",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "deactivate",
          "nameOverride": null,
          "value": "deactivate",
        },
      ],
    },
    "webhooks-update-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The request to update a webhook.",
      "generatedName": "WebhooksUpdateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestAction",
          "key": "action",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestAction",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhooksUpdateRequestAction",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhooks-update-action",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypes",
          "key": "event_types",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypes",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WebhooksUpdateRequestEventTypes",
              "groupName": null,
              "nameOverride": null,
              "schema": "webhooks-update-request-event-types",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestId",
          "key": "id",
          "schema": {
            "description": "ID for the webhook.",
            "generatedName": "WebhooksUpdateRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestSecret",
          "key": "secret",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestSecret",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "If provided, updates the secret that's used when verifying webhook
events, which must be between 8 and 32 bytes (inclusive). Otherwise
if empty, then a new secret is generated. If the webhook is active,
then its status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
              "generatedName": "WebhooksUpdateRequestSecret",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestUrl",
          "key": "url",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestUrl",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The webhook's updated URL. If the webhook is active, then the
webhook's status will transition to the 'unverified' state and it
won't receive any object events until successfully verified.
",
              "generatedName": "WebhooksUpdateRequestUrl",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "webhooks-update-request-event-types": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WebhooksUpdateRequestEventTypes",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypesAdd",
          "key": "add",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypesAdd",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types to add. If a provided event type is already set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
              "generatedName": "WebhooksUpdateRequestEventTypesAdd",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksUpdateRequestEventTypesAddItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypesRemove",
          "key": "remove",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypesRemove",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The event types to remove. If a provided event type isn't set for
the webhook, then nothing is done. Note this is mutually exclusive
with 'set'.
",
              "generatedName": "WebhooksUpdateRequestEventTypesRemove",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksUpdateRequestEventTypesRemoveItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateRequestEventTypesSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "webhooksUpdateRequestEventTypesSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The updated event types, which will replace the webhook's current
event types. Note this is mutually exclusive with 'add' and
'remove'.
",
              "generatedName": "WebhooksUpdateRequestEventTypesSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WebhooksUpdateRequestEventTypesSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "webhook-event-type",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "webhooks-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": "The response to updating the webhook.",
      "generatedName": "WebhooksUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "webhooksUpdateResponseWebhook",
          "key": "webhook",
          "schema": {
            "description": null,
            "generatedName": "WebhooksUpdateResponseWebhook",
            "groupName": null,
            "nameOverride": null,
            "schema": "webhook",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "work": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "Work",
        "groupName": null,
        "nameOverride": "work",
        "schemas": {
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasIssue",
            "groupName": null,
            "nameOverride": null,
            "schema": "issue",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasTicket",
            "groupName": null,
            "nameOverride": null,
            "schema": "ticket",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "work-base": {
      "allOf": [
        {
          "description": null,
          "generatedName": "AtomBase",
          "groupName": null,
          "nameOverride": null,
          "schema": "atom-base",
        },
      ],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkBase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseAppliesToPart",
          "key": "applies_to_part",
          "schema": {
            "description": null,
            "generatedName": "workBaseAppliesToPart",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkBaseAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "schema": "part-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseArtifacts",
          "key": "artifacts",
          "schema": {
            "description": null,
            "generatedName": "workBaseArtifacts",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The artifacts attached to the work item.",
              "generatedName": "WorkBaseArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorkBaseArtifactsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "artifact-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseBody",
          "key": "body",
          "schema": {
            "description": null,
            "generatedName": "workBaseBody",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Body of the work object.",
              "generatedName": "WorkBaseBody",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseOwnedBy",
          "key": "owned_by",
          "schema": {
            "description": "The users that own the work.",
            "generatedName": "WorkBaseOwnedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorkBaseOwnedByItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "user-summary",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseReportedBy",
          "key": "reported_by",
          "schema": {
            "description": null,
            "generatedName": "workBaseReportedBy",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Users that reported the work.",
              "generatedName": "WorkBaseReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorkBaseReportedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "user-summary",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseStage",
          "key": "stage",
          "schema": {
            "description": null,
            "generatedName": "workBaseStage",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkBaseStage",
              "groupName": null,
              "nameOverride": null,
              "schema": "stage",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseTags",
          "key": "tags",
          "schema": {
            "description": null,
            "generatedName": "workBaseTags",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Tags associated with the object.",
              "generatedName": "WorkBaseTags",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorkBaseTagsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "tag-with-value",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseTargetCloseDate",
          "key": "target_close_date",
          "schema": {
            "description": null,
            "generatedName": "workBaseTargetCloseDate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Timestamp when the work is expected to be complete.",
              "generatedName": "WorkBaseTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "datetime",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workBaseTitle",
          "key": "title",
          "schema": {
            "description": "Title of the work object.",
            "generatedName": "WorkBaseTitle",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "work-type": {
      "description": null,
      "generatedName": "WorkType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "issue",
          "nameOverride": null,
          "value": "issue",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ticket",
          "nameOverride": null,
          "value": "ticket",
        },
      ],
    },
    "works-create-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "applies_to_part",
            "schema": {
              "description": "The [part](https://devrev.ai/docs/product/parts) that the work
applies to. Specifying a part is required when creating tickets and
issues.
",
              "generatedName": "WorksCreateRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "artifacts",
            "schema": {
              "description": "The IDs of the artifacts to associate with the work item.
",
              "generatedName": "WorksCreateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The IDs of the artifacts to associate with the work item.
",
                "generatedName": "WorksCreateRequestArtifacts",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksCreateRequestArtifactsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "body",
            "schema": {
              "description": "Body of the work object.",
              "generatedName": "WorksCreateRequestBody",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Body of the work object.",
                "generatedName": "WorksCreateRequestBody",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": "The users that own the work.",
              "generatedName": "WorksCreateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestOwnedByItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "reported_by",
            "schema": {
              "description": "The users that reported the work.",
              "generatedName": "WorksCreateRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The users that reported the work.",
                "generatedName": "WorksCreateRequestReportedBy",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksCreateRequestReportedByItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "key": "stage",
            "schema": {
              "description": null,
              "generatedName": "WorksCreateRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksCreateRequestStage",
                "groupName": null,
                "nameOverride": null,
                "schema": "stage-init",
                "type": "reference",
              },
            },
          },
          {
            "key": "tags",
            "schema": {
              "description": "Tags associated with the work item.",
              "generatedName": "WorksCreateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Tags associated with the work item.",
                "generatedName": "WorksCreateRequestTags",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorksCreateRequestTagsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "set-tag-with-value",
                  "type": "reference",
                },
              },
            },
          },
          {
            "key": "target_close_date",
            "schema": {
              "description": "Timestamp for when the work is expected to be complete.",
              "generatedName": "WorksCreateRequestTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Timestamp for when the work is expected to be complete.",
                "generatedName": "WorksCreateRequestTargetCloseDate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "title",
            "schema": {
              "description": "Title of the work object.",
              "generatedName": "WorksCreateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorksCreateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksCreateRequestIssue",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-create-request-issue",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksCreateRequestTicket",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-create-request-ticket",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "works-create-request-issue": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateRequestIssue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestIssuePriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksCreateRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "issue-priority",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestIssueSprint",
          "key": "sprint",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestIssueSprint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The sprint that the issue belongs to.",
              "generatedName": "WorksCreateRequestIssueSprint",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-create-request-ticket": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateRequestTicket",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The group that the ticket is associated with.",
              "generatedName": "WorksCreateRequestTicketGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The Rev organization that the ticket is associated with.",
              "generatedName": "WorksCreateRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateRequestTicketSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "worksCreateRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksCreateRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "schema": "ticket-severity",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-create-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksCreateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksCreateResponseWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "WorksCreateResponseWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "works-delete-request": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksDeleteRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksDeleteRequestId",
          "key": "id",
          "schema": {
            "description": "The work's ID.",
            "generatedName": "WorksDeleteRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "works-delete-response": {
      "description": null,
      "generatedName": "WorksDeleteResponse",
      "groupName": null,
      "key": {
        "description": null,
        "generatedName": "WorksDeleteResponseKey",
        "groupName": null,
        "nameOverride": null,
        "schema": {
          "maxLength": null,
          "minLength": null,
          "type": "string",
        },
      },
      "nameOverride": null,
      "type": "map",
      "value": {
        "generatedName": "WorksDeleteResponseValue",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "works-export-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksExportResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksExportResponseWorks",
          "key": "works",
          "schema": {
            "description": "The resulting collection of work items.",
            "generatedName": "WorksExportResponseWorks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorksExportResponseWorksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "work",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-get-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksGetResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksGetResponseWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "WorksGetResponseWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "works-list-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksListResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListResponseNextCursor",
          "key": "next_cursor",
          "schema": {
            "description": null,
            "generatedName": "worksListResponseNextCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate subsequent results in accordance to the
sort order. If not set, then no later elements exist.
",
              "generatedName": "WorksListResponseNextCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListResponsePrevCursor",
          "key": "prev_cursor",
          "schema": {
            "description": null,
            "generatedName": "worksListResponsePrevCursor",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The cursor used to iterate preceding results in accordance to the
sort order. If not set, then no prior elements exist.
",
              "generatedName": "WorksListResponsePrevCursor",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksListResponseWorks",
          "key": "works",
          "schema": {
            "description": "The list of works.",
            "generatedName": "WorksListResponseWorks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorksListResponseWorksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "work",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request": {
      "type": "oneOf",
      "value": {
        "commonProperties": [
          {
            "key": "applies_to_part",
            "schema": {
              "description": "Updates the part that the work applies to.",
              "generatedName": "WorksUpdateRequestAppliesToPart",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the part that the work applies to.",
                "generatedName": "WorksUpdateRequestAppliesToPart",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "artifacts",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestArtifacts",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestArtifacts",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-artifact-ids",
                "type": "reference",
              },
            },
          },
          {
            "key": "body",
            "schema": {
              "description": "Updated body of the work object, or unchanged if not provided.
",
              "generatedName": "WorksUpdateRequestBody",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updated body of the work object, or unchanged if not provided.
",
                "generatedName": "WorksUpdateRequestBody",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "id",
            "schema": {
              "description": "The work's ID.",
              "generatedName": "WorksUpdateRequestId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
          {
            "key": "owned_by",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestOwnedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestOwnedBy",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-owned-by",
                "type": "reference",
              },
            },
          },
          {
            "key": "reported_by",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestReportedBy",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestReportedBy",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-reported-by",
                "type": "reference",
              },
            },
          },
          {
            "key": "stage",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestStage",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestStage",
                "groupName": null,
                "nameOverride": null,
                "schema": "stage-update",
                "type": "reference",
              },
            },
          },
          {
            "key": "tags",
            "schema": {
              "description": null,
              "generatedName": "WorksUpdateRequestTags",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestTags",
                "groupName": null,
                "nameOverride": null,
                "schema": "works-update-request-tags",
                "type": "reference",
              },
            },
          },
          {
            "key": "target_close_date",
            "schema": {
              "description": "Updates the timestamp for when the work is expected to be complete.
",
              "generatedName": "WorksUpdateRequestTargetCloseDate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the timestamp for when the work is expected to be complete.
",
                "generatedName": "WorksUpdateRequestTargetCloseDate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
          {
            "key": "title",
            "schema": {
              "description": "Updated title of the work object, or unchanged if not provided.
",
              "generatedName": "WorksUpdateRequestTitle",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updated title of the work object, or unchanged if not provided.
",
                "generatedName": "WorksUpdateRequestTitle",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        ],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorksUpdateRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "issue": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksUpdateRequestIssue",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-update-request-issue",
            "type": "reference",
          },
          "none": {
            "description": null,
            "generatedName": "ComponentsSchemasEmpty",
            "groupName": null,
            "nameOverride": null,
            "schema": "empty",
            "type": "reference",
          },
          "ticket": {
            "description": null,
            "generatedName": "ComponentsSchemasWorksUpdateRequestTicket",
            "groupName": null,
            "nameOverride": null,
            "schema": "works-update-request-ticket",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "works-update-request-artifact-ids": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestArtifactIds",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestArtifactIdsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestArtifactIdsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the IDs to the provided artifact IDs.",
              "generatedName": "WorksUpdateRequestArtifactIdsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestArtifactIdsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-issue": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestIssue",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestIssuePriority",
          "key": "priority",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestIssuePriority",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestIssuePriority",
              "groupName": null,
              "nameOverride": null,
              "schema": "issue-priority",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestIssueSprint",
          "key": "sprint",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestIssueSprint",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the sprint that the issue belongs to.",
              "generatedName": "WorksUpdateRequestIssueSprint",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the sprint that the issue belongs to.",
                "generatedName": "WorksUpdateRequestIssueSprint",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-owned-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestOwnedBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestOwnedBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestOwnedBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the owner IDs to the provided user IDs. This must not be
empty.
",
              "generatedName": "WorksUpdateRequestOwnedBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestOwnedBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-reported-by": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestReportedBy",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestReportedBySet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestReportedBySet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the users that reported the work to the provided user IDs.
",
              "generatedName": "WorksUpdateRequestReportedBySet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestReportedBySetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-tags": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestTags",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTagsSet",
          "key": "set",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTagsSet",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Sets the provided tags on the work item.",
              "generatedName": "WorksUpdateRequestTagsSet",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "WorksUpdateRequestTagsSetItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "set-tag-with-value",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-request-ticket": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateRequestTicket",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketGroup",
          "key": "group",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketGroup",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The group that the ticket is associated with.",
              "generatedName": "WorksUpdateRequestTicketGroup",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketRevOrg",
          "key": "rev_org",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketRevOrg",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Updates the Rev organization that the ticket is associated with.
",
              "generatedName": "WorksUpdateRequestTicketRevOrg",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Updates the Rev organization that the ticket is associated with.
",
                "generatedName": "WorksUpdateRequestTicketRevOrg",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateRequestTicketSeverity",
          "key": "severity",
          "schema": {
            "description": null,
            "generatedName": "worksUpdateRequestTicketSeverity",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorksUpdateRequestTicketSeverity",
              "groupName": null,
              "nameOverride": null,
              "schema": "ticket-severity",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "works-update-response": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorksUpdateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "worksUpdateResponseWork",
          "key": "work",
          "schema": {
            "description": null,
            "generatedName": "WorksUpdateResponseWork",
            "groupName": null,
            "nameOverride": null,
            "schema": "work",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
  },
  "securitySchemes": {
    "auth-token": {
      "headerEnvVar": null,
      "headerName": "Authorization",
      "headerVariableName": null,
      "prefix": null,
      "type": "header",
    },
  },
  "servers": [
    {
      "description": "DevRev API endpoint.",
      "name": null,
      "url": "https://api.devrev.ai",
    },
  ],
  "tags": {
    "orderedTagIds": [
      "artifacts",
      "auth-connection",
      "auth-tokens",
      "dev-orgs",
      "dev-users",
      "parts",
      "rev-orgs",
      "tags",
      "timeline-entries",
      "webhooks",
      "works",
    ],
    "tagsById": {
      "artifacts": {
        "description": "Artifact (file) management APIs.",
        "id": "artifacts",
      },
      "auth-connection": {
        "description": "Auth Connections of DevOrg.",
        "id": "auth-connection",
      },
      "auth-tokens": {
        "description": "Security token interactions.",
        "id": "auth-tokens",
      },
      "dev-orgs": {
        "description": "Dev organization interactions.",
        "id": "dev-orgs",
      },
      "dev-users": {
        "description": "Dev user interactions.",
        "id": "dev-users",
      },
      "parts": {
        "description": "DevRev part interactions.",
        "id": "parts",
      },
      "rev-orgs": {
        "description": "Rev organization interactions.",
        "id": "rev-orgs",
      },
      "tags": {
        "description": "DevRev tag interactions.",
        "id": "tags",
      },
      "timeline-entries": {
        "description": "APIs to manage timeline entries for objects.",
        "id": "timeline-entries",
      },
      "webhooks": {
        "description": "Webhook event APIs.",
        "id": "webhooks",
      },
      "works": {
        "description": "DevRev work interactions.",
        "id": "works",
      },
    },
  },
  "title": "DevRev REST API",
  "variables": {},
  "webhooks": [],
}
`;
