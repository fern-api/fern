// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`open api parser vellum parse open api 1`] = `
{
  "channel": [],
  "description": "
## Vellum API Documentation

### Welcome ðŸ‘‹
Welcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,
as well as the parameters and responses that they accept and return.

We will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform
via the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.

### API Stability
Some of the APIs documented within are undergoing active development. Use the
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>
and
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>
tags to differentiate between those that are stable and those that are not.

### Base URLs
Some endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is
the case, they will say so in their description.

Unless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.

### Official API Clients:
Vellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact
with all stable endpoints. You can find them here:
- [Python](https://github.com/vellum-ai/vellum-client-python)
- [Node/Typescript](https://github.com/vellum-ai/vellum-client-node)
",
  "endpoints": [
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a deployment given its ID or name.
",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "active_model_version_ids": {
                "type": "array",
                "value": [
                  {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "active_model_version_ids",
                    },
                  },
                ],
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00.000Z",
                },
              },
              "environment": {
                "type": "enum",
                "value": "DEVELOPMENT",
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "last_deployed_on": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00.000Z",
                },
              },
              "model_type": {
                "type": "enum",
                "value": "GENERATE",
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "status": {
                "type": "enum",
                "value": "ACTIVE",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DeploymentsRetrieveRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "deployments_retrieve",
      "path": "/v1/deployments/{id}",
      "pathParameters": [
        {
          "description": "Either the Deployment's ID or its unique name",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "DeploymentsRetrieveRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DeploymentsRetrieveResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "DeploymentRead",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "deployments",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Creates a new document index.",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": "Index Using Instructor Model",
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "indexing_config": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "chunking",
                    },
                    "value": {
                      "type": "unknown",
                      "value": {
                        "type": "map",
                        "value": [
                          {
                            "key": {
                              "type": "string",
                              "value": "chunker_name",
                            },
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string",
                                "value": "sentence-chunker",
                              },
                            },
                          },
                          {
                            "key": {
                              "type": "string",
                              "value": "chunker_config",
                            },
                            "value": {
                              "type": "map",
                              "value": [
                                {
                                  "key": {
                                    "type": "string",
                                    "value": "character_limit",
                                  },
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "int",
                                      "value": 1000,
                                    },
                                  },
                                },
                                {
                                  "key": {
                                    "type": "string",
                                    "value": "min_overlap_ratio",
                                  },
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "double",
                                      "value": 0.5,
                                    },
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  },
                  {
                    "key": {
                      "type": "string",
                      "value": "vectorizer",
                    },
                    "value": {
                      "type": "unknown",
                      "value": {
                        "type": "map",
                        "value": [
                          {
                            "key": {
                              "type": "string",
                              "value": "model_name",
                            },
                            "value": {
                              "type": "primitive",
                              "value": {
                                "type": "string",
                                "value": "hkunlp/instructor-xl",
                              },
                            },
                          },
                          {
                            "key": {
                              "type": "string",
                              "value": "config",
                            },
                            "value": {
                              "type": "map",
                              "value": [
                                {
                                  "key": {
                                    "type": "string",
                                    "value": "instruction_domain",
                                  },
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "",
                                    },
                                  },
                                },
                                {
                                  "key": {
                                    "type": "string",
                                    "value": "instruction_document_text_type",
                                  },
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "plain_text",
                                    },
                                  },
                                },
                                {
                                  "key": {
                                    "type": "string",
                                    "value": "instruction_query_text_type",
                                  },
                                  "value": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "plain_text",
                                    },
                                  },
                                },
                              ],
                            },
                          },
                        ],
                      },
                    },
                  },
                ],
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "My Document Index",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "my-document-index",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00.000Z",
                },
              },
              "environment": {
                "type": "enum",
                "value": "DEVELOPMENT",
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "indexing_config": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "indexing_config",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "status": {
                "type": "enum",
                "value": "ACTIVE",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DocumentIndexesCreateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "document_indexes_create",
      "path": "/v1/document-indexes",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "DocumentIndexesCreateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "DocumentIndexCreateRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DocumentIndexesCreateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "DocumentIndexRead",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "document-indexes",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "
<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to list documents. Optionally filter on supported fields.
",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "count": {
                "type": "primitive",
                "value": {
                  "type": "int",
                  "value": 123,
                },
              },
              "next": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "http://api.example.org/accounts/?offset=400&limit=100",
                },
              },
              "previous": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "http://api.example.org/accounts/?offset=200&limit=100",
                },
              },
              "results": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "document_to_document_indexes": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "document_index_id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "document_index_id",
                                },
                              },
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "external_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "external_id",
                        },
                      },
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "keywords": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "keywords",
                            },
                          },
                        ],
                      },
                      "label": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "label",
                        },
                      },
                      "last_uploaded_at": {
                        "type": "primitive",
                        "value": {
                          "type": "datetime",
                          "value": "2024-01-15T09:30:00.000Z",
                        },
                      },
                      "processing_failure_reason": {
                        "type": "literal",
                        "value": {
                          "type": "string",
                          "value": "EXCEEDED_CHARACTER_LIMIT",
                        },
                      },
                      "processing_state": {
                        "type": "enum",
                        "value": "QUEUED",
                      },
                      "status": {
                        "type": "literal",
                        "value": {
                          "type": "string",
                          "value": "ACTIVE",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "DocumentsListRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "documents_list",
      "path": "/v1/documents",
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filter down to only those documents that are included in the specified index. You may provide either the Vellum-generated ID or the unique name of the index specified upon initial creation.",
          "name": "document_index_id",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DocumentsListRequestDocumentIndexId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DocumentsListRequestDocumentIndexId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Number of results to return per page.",
          "name": "limit",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DocumentsListRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DocumentsListRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "The initial index from which to return the results.",
          "name": "offset",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DocumentsListRequestOffset",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DocumentsListRequestOffset",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "description": "Which field to use when ordering the results.",
          "name": "ordering",
          "parameterNameOverride": null,
          "schema": {
            "description": null,
            "generatedName": "DocumentsListRequestOrdering",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "DocumentsListRequestOrdering",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DocumentsListResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "PaginatedSlimDocumentList",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "documents",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Executes a deployed Workflow and streams back its results.",
      "errorStatusCode": [],
      "examples": [],
      "generatedRequestName": "ExecuteWorkflowStreamRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "execute_workflow_stream",
      "path": "/v1/execute-workflow-stream",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ExecuteWorkflowStreamRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ExecuteWorkflowStreamRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ExecuteWorkflowStreamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "WorkflowStreamEvent",
          "type": "reference",
        },
        "type": "streamingJson",
      },
      "sdkName": null,
      "server": [
        {
          "description": null,
          "name": "Predict",
          "url": "https://predict.vellum.ai",
        },
      ],
      "summary": null,
      "tags": [
        "execute-workflow-stream",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a completion using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
      "errorStatusCode": [
        400,
        403,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "requests": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "input_values": {
                        "type": "map",
                        "value": [],
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "results": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "data": {
                        "properties": {
                          "completions": {
                            "type": "array",
                            "value": [
                              {
                                "properties": {
                                  "id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "id",
                                    },
                                  },
                                  "model_version_id": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "model_version_id",
                                    },
                                  },
                                  "text": {
                                    "type": "primitive",
                                    "value": {
                                      "type": "string",
                                      "value": "text",
                                    },
                                  },
                                },
                                "type": "object",
                              },
                            ],
                          },
                        },
                        "type": "object",
                      },
                      "error": {
                        "properties": {
                          "message": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "message",
                            },
                          },
                        },
                        "type": "object",
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "GenerateRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "generate",
      "path": "/v1/generate",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateBodyRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [
        {
          "description": null,
          "name": "Predict",
          "url": "https://predict.vellum.ai",
        },
      ],
      "summary": null,
      "tags": [
        "generate",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Generate a stream of completions using a previously defined deployment.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
      "errorStatusCode": [
        400,
        403,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "GenerateStreamRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "generate_stream",
      "path": "/v1/generate-stream",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateStreamRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateStreamBodyRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "GenerateStreamResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "GenerateStreamResponse",
          "type": "reference",
        },
        "type": "streamingJson",
      },
      "sdkName": null,
      "server": [
        {
          "description": null,
          "name": "Predict",
          "url": "https://predict.vellum.ai",
        },
      ],
      "summary": null,
      "tags": [
        "generate-stream",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "
<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Used to retrieve a model version given its ID.
",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": {
            "properties": {
              "build_config": {
                "properties": {
                  "base_model": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "base_model",
                    },
                  },
                  "sandbox_snapshot": {
                    "properties": {
                      "id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "id",
                        },
                      },
                      "prompt_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "prompt_id",
                        },
                      },
                      "prompt_index": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "sandbox_id": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "sandbox_id",
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "created": {
                "type": "primitive",
                "value": {
                  "type": "datetime",
                  "value": "2024-01-15T09:30:00.000Z",
                },
              },
              "exec_config": {
                "properties": {
                  "input_variables": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "key": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "key",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "parameters": {
                    "properties": {
                      "frequency_penalty": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "value": 1.1,
                        },
                      },
                      "max_tokens": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                      "presence_penalty": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "value": 1.1,
                        },
                      },
                      "stop": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "stop",
                            },
                          },
                        ],
                      },
                      "temperature": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "value": 1.1,
                        },
                      },
                      "top_k": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "value": 1.1,
                        },
                      },
                      "top_p": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "value": 1.1,
                        },
                      },
                    },
                    "type": "object",
                  },
                  "prompt_block_data": {
                    "properties": {
                      "blocks": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "block_type": {
                                "type": "enum",
                                "value": "CHAT_MESSAGE",
                              },
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "properties": {
                                "properties": {},
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "version": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                  "prompt_syntax_version": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "prompt_template": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "prompt_template",
                    },
                  },
                },
                "type": "object",
              },
              "external_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "external_id",
                },
              },
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "model_type": {
                "type": "enum",
                "value": "GENERATE",
              },
              "provider": {
                "type": "enum",
                "value": "ANTHROPIC",
              },
              "status": {
                "type": "enum",
                "value": "CREATING",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ModelVersionsRetrieveRequest",
      "headers": [],
      "internal": null,
      "method": "GET",
      "operationId": "model_versions_retrieve",
      "path": "/v1/model-versions/{id}",
      "pathParameters": [
        {
          "description": "A UUID string identifying this model version.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionsRetrieveRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ModelVersionsRetrieveResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ModelVersionRead",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "model-versions",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Compiles the prompt backing the model version using the provided input values.",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "input_values": {
                "type": "map",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "prompt": {
                "properties": {
                  "num_tokens": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "text": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "text",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "ModelVersionCompilePromptRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "model_version_compile_prompt",
      "path": "/v1/model-versions/{id}/compile-prompt",
      "pathParameters": [
        {
          "description": "A UUID string identifying this model version.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionCompilePromptRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "ModelVersionCompilePromptRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "ModelVersionCompilePromptRequestRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "ModelVersionCompilePromptResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "ModelVersionCompilePromptResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "model-versions",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Registers a prompt within Vellum and creates associated Vellum entities. Intended to be used by integration
partners, not directly by Vellum users.

Under the hood, this endpoint creates a new sandbox, a new model version, and a new deployment.",
      "errorStatusCode": [
        409,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "model": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "model",
                },
              },
              "name": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "name",
                },
              },
              "parameters": {
                "properties": {
                  "frequency_penalty": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                      "value": 1.1,
                    },
                  },
                  "max_tokens": {
                    "type": "primitive",
                    "value": {
                      "type": "int",
                      "value": 1,
                    },
                  },
                  "presence_penalty": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                      "value": 1.1,
                    },
                  },
                  "temperature": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                      "value": 1.1,
                    },
                  },
                  "top_p": {
                    "type": "primitive",
                    "value": {
                      "type": "double",
                      "value": 1.1,
                    },
                  },
                },
                "type": "object",
              },
              "prompt": {
                "properties": {
                  "input_variables": {
                    "type": "array",
                    "value": [
                      {
                        "properties": {
                          "key": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "key",
                            },
                          },
                        },
                        "type": "object",
                      },
                    ],
                  },
                  "prompt_block_data": {
                    "properties": {
                      "blocks": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "block_type": {
                                "type": "enum",
                                "value": "CHAT_MESSAGE",
                              },
                              "id": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "id",
                                },
                              },
                              "properties": {
                                "properties": {},
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "version": {
                        "type": "primitive",
                        "value": {
                          "type": "int",
                          "value": 1,
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
              "provider": {
                "type": "enum",
                "value": "ANTHROPIC",
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "deployment": {
                "properties": {
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                  "name": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "name",
                    },
                  },
                },
                "type": "object",
              },
              "model_version": {
                "properties": {
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                },
                "type": "object",
              },
              "prompt": {
                "properties": {
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                },
                "type": "object",
              },
              "sandbox": {
                "properties": {
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                  "label": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "label",
                    },
                  },
                },
                "type": "object",
              },
              "sandbox_snapshot": {
                "properties": {
                  "id": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "id",
                    },
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "RegisterPromptRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "register_prompt",
      "path": "/v1/registered-prompts/register",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "RegisterPromptRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "RegisterPromptRequestRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "RegisterPromptResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "RegisterPromptResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "registered-prompts",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Upserts a new scenario for a sandbox, keying off of the optionally provided scenario id.

If an id is provided and has a match, the scenario will be updated. If no id is provided or no match
is found, a new scenario will be appended to the end.

Note that a full replacement of the scenario is performed, so any fields not provided will be removed
or overwritten with default values.",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": "Basic Example",
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "inputs": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "key": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "var_1",
                        },
                      },
                      "type": {
                        "type": "enum",
                        "value": "TEXT",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "Hello, world!",
                        },
                      },
                    },
                    "type": "object",
                  },
                  {
                    "properties": {
                      "key": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "var_2",
                        },
                      },
                      "type": {
                        "type": "enum",
                        "value": "TEXT",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "Why hello, there!",
                        },
                      },
                    },
                    "type": "object",
                  },
                  {
                    "properties": {
                      "key": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "key",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "Scenario 1",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
              "inputs": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "chat_history": {
                        "type": "array",
                        "value": [
                          {
                            "properties": {
                              "role": {
                                "type": "enum",
                                "value": "SYSTEM",
                              },
                              "text": {
                                "type": "primitive",
                                "value": {
                                  "type": "string",
                                  "value": "text",
                                },
                              },
                            },
                            "type": "object",
                          },
                        ],
                      },
                      "key": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "key",
                        },
                      },
                      "type": {
                        "type": "enum",
                        "value": "TEXT",
                      },
                      "value": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "value",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "metric_input_params": {
                "properties": {
                  "params": {
                    "properties": {
                      "target": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "target",
                        },
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UpsertSandboxScenarioRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "upsert_sandbox_scenario",
      "path": "/v1/sandboxes/{id}/scenarios",
      "pathParameters": [
        {
          "description": "A UUID string identifying this sandbox.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UpsertSandboxScenarioRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UpsertSandboxScenarioRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "UpsertSandboxScenarioRequestRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UpsertSandboxScenarioResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SandboxScenario",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "sandboxes",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Deletes an existing scenario from a sandbox, keying off of the provided scenario id.",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            {
              "name": "scenario_id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "scenario_id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
        },
      ],
      "generatedRequestName": "DeleteSandboxScenarioRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "delete_sandbox_scenario",
      "path": "/v1/sandboxes/{id}/scenarios/{scenario_id}",
      "pathParameters": [
        {
          "description": "A UUID string identifying this sandbox.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "DeleteSandboxScenarioRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "An id identifying the scenario that you'd like to delete",
          "name": "scenario_id",
          "schema": {
            "description": null,
            "generatedName": "DeleteSandboxScenarioRequestScenarioId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "sandboxes",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Perform a search against a document index.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
      "errorStatusCode": [
        400,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "query": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "query",
                },
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "results": {
                "type": "array",
                "value": [
                  {
                    "properties": {
                      "document": {
                        "properties": {
                          "id": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "id",
                            },
                          },
                          "label": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "label",
                            },
                          },
                        },
                        "type": "object",
                      },
                      "keywords": {
                        "type": "array",
                        "value": [
                          {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "keywords",
                            },
                          },
                        ],
                      },
                      "score": {
                        "type": "primitive",
                        "value": {
                          "type": "double",
                          "value": 1.1,
                        },
                      },
                      "text": {
                        "type": "primitive",
                        "value": {
                          "type": "string",
                          "value": "text",
                        },
                      },
                    },
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "SearchRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "search",
      "path": "/v1/search",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SearchRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "SearchRequestBodyRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "SearchResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "SearchResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [
        {
          "description": null,
          "name": "Predict",
          "url": "https://predict.vellum.ai",
        },
      ],
      "summary": null,
      "tags": [
        "search",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Used to submit feedback regarding the quality of previously generated completions.

**Note:** Uses a base url of \`https://predict.vellum.ai\`.",
      "errorStatusCode": [
        400,
        404,
        500,
      ],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [],
          "queryParameters": [],
          "request": {
            "properties": {
              "actuals": {
                "type": "array",
                "value": [
                  {
                    "properties": {},
                    "type": "object",
                  },
                ],
              },
            },
            "type": "object",
          },
          "response": null,
        },
      ],
      "generatedRequestName": "SubmitCompletionActualsRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "submit_completion_actuals",
      "path": "/v1/submit-completion-actuals",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "SubmitCompletionActualsRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "SubmitCompletionActualsRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [
        {
          "description": null,
          "name": "Predict",
          "url": "https://predict.vellum.ai",
        },
      ],
      "summary": null,
      "tags": [
        "submit-completion-actuals",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Upserts a new test case for a test suite, keying off of the optionally provided test case id.

If an id is provided and has a match, the test case will be updated. If no id is provided or no match
is found, a new test case will be appended to the end.

Note that a full replacement of the test case is performed, so any fields not provided will be removed
or overwritten with default values.",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": {
            "properties": {
              "evaluation_params": {
                "properties": {},
                "type": "object",
              },
              "input_values": {
                "type": "map",
                "value": [],
              },
            },
            "type": "object",
          },
          "response": {
            "properties": {
              "evaluation_params": {
                "properties": {
                  "target": {
                    "type": "primitive",
                    "value": {
                      "type": "string",
                      "value": "target",
                    },
                  },
                },
                "type": "object",
              },
              "input_values": {
                "type": "map",
                "value": [
                  {
                    "key": {
                      "type": "string",
                      "value": "input_values",
                    },
                    "value": {
                      "type": "map",
                      "value": [
                        {
                          "key": {
                            "type": "string",
                            "value": "key",
                          },
                          "value": {
                            "type": "primitive",
                            "value": {
                              "type": "string",
                              "value": "value",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
              "label": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "label",
                },
              },
              "test_case_id": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "test_case_id",
                },
              },
            },
            "type": "object",
          },
        },
      ],
      "generatedRequestName": "UpsertTestSuiteTestCaseRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "upsert_test_suite_test_case",
      "path": "/v1/test-suites/{id}/test-cases",
      "pathParameters": [
        {
          "description": "A UUID string identifying this test suite.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "UpsertTestSuiteTestCaseRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": {
        "contentType": null,
        "description": null,
        "schema": {
          "description": null,
          "generatedName": "UpsertTestSuiteTestCaseRequest",
          "groupName": null,
          "nameOverride": null,
          "schema": "TestSuiteTestCaseRequest",
          "type": "reference",
        },
        "type": "json",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "UpsertTestSuiteTestCaseResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "TestSuiteTestCase",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "test-suites",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#ffc107; color:white; padding:4px; border-radius:4px">Unstable</strong>

Deletes an existing test case for a test suite, keying off of the test case id.",
      "errorStatusCode": [],
      "examples": [
        {
          "codeSamples": [],
          "description": null,
          "headers": [],
          "name": null,
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "id",
                },
              },
            },
            {
              "name": "test_case_id",
              "value": {
                "type": "primitive",
                "value": {
                  "type": "string",
                  "value": "test_case_id",
                },
              },
            },
          ],
          "queryParameters": [],
          "request": null,
          "response": null,
        },
      ],
      "generatedRequestName": "DeleteTestSuiteTestCaseRequest",
      "headers": [],
      "internal": null,
      "method": "DELETE",
      "operationId": "delete_test_suite_test_case",
      "path": "/v1/test-suites/{id}/test-cases/{test_case_id}",
      "pathParameters": [
        {
          "description": "A UUID string identifying this test suite.",
          "name": "id",
          "schema": {
            "description": null,
            "generatedName": "DeleteTestSuiteTestCaseRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
        {
          "description": "An id identifying the test case that you'd like to delete",
          "name": "test_case_id",
          "schema": {
            "description": null,
            "generatedName": "DeleteTestSuiteTestCaseRequestTestCaseId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
          "variableReference": null,
        },
      ],
      "queryParameters": [],
      "request": null,
      "requestNameOverride": null,
      "response": null,
      "sdkName": null,
      "server": [],
      "summary": null,
      "tags": [
        "test-suites",
      ],
    },
    {
      "audiences": [],
      "authed": true,
      "availability": null,
      "description": "<strong style="background-color:#4caf50; color:white; padding:4px; border-radius:4px">Stable</strong>

Upload a document to be indexed and used for search.

**Note:** Uses a base url of \`https://documents.vellum.ai\`.",
      "errorStatusCode": [
        400,
        404,
        500,
      ],
      "examples": [],
      "generatedRequestName": "DocumentsUploadRequest",
      "headers": [],
      "internal": null,
      "method": "POST",
      "operationId": "documents_upload",
      "path": "/v1/upload-document",
      "pathParameters": [],
      "queryParameters": [],
      "request": {
        "description": null,
        "name": "UploadDocumentBodyRequest",
        "properties": [
          {
            "description": null,
            "key": "add_to_index_names",
            "schema": {
              "type": "json",
              "value": {
                "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                "generatedName": "DocumentsUploadRequestAddToIndexNames",
                "groupName": null,
                "nameOverride": null,
                "type": "nullable",
                "value": {
                  "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                  "generatedName": "DocumentsUploadRequestAddToIndexNames",
                  "groupName": null,
                  "nameOverride": null,
                  "type": "array",
                  "value": {
                    "description": null,
                    "generatedName": "DocumentsUploadRequestAddToIndexNamesItem",
                    "groupName": null,
                    "nameOverride": null,
                    "schema": {
                      "maxLength": null,
                      "minLength": 1,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          },
          {
            "description": null,
            "key": "external_id",
            "schema": {
              "type": "json",
              "value": {
                "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                "generatedName": "DocumentsUploadRequestExternalId",
                "groupName": null,
                "nameOverride": null,
                "type": "nullable",
                "value": {
                  "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                  "generatedName": "DocumentsUploadRequestExternalId",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": 1,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
          {
            "description": null,
            "key": "label",
            "schema": {
              "type": "json",
              "value": {
                "description": "A human-friendly name for this document. Typically the filename.",
                "generatedName": "DocumentsUploadRequestLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
          {
            "description": null,
            "key": "contents",
            "schema": {
              "isArray": false,
              "isOptional": false,
              "type": "file",
            },
          },
          {
            "description": null,
            "key": "keywords",
            "schema": {
              "type": "json",
              "value": {
                "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                "generatedName": "DocumentsUploadRequestKeywords",
                "groupName": null,
                "nameOverride": null,
                "type": "nullable",
                "value": {
                  "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                  "generatedName": "DocumentsUploadRequestKeywords",
                  "groupName": null,
                  "nameOverride": null,
                  "type": "array",
                  "value": {
                    "description": null,
                    "generatedName": "DocumentsUploadRequestKeywordsItem",
                    "groupName": null,
                    "nameOverride": null,
                    "schema": {
                      "maxLength": null,
                      "minLength": 1,
                      "type": "string",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          },
        ],
        "type": "multipart",
      },
      "requestNameOverride": null,
      "response": {
        "description": "",
        "responseProperty": null,
        "schema": {
          "description": null,
          "generatedName": "DocumentsUploadResponse",
          "groupName": null,
          "nameOverride": null,
          "schema": "UploadDocumentResponse",
          "type": "reference",
        },
        "type": "json",
      },
      "sdkName": null,
      "server": [
        {
          "description": null,
          "name": "Documents",
          "url": "https://documents.vellum.ai",
        },
      ],
      "summary": null,
      "tags": [
        "documents",
      ],
    },
  ],
  "errors": {
    "400": {
      "description": null,
      "generatedName": "BadRequestError",
      "nameOverride": null,
      "schema": {
        "generatedName": "BadRequestError",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "403": {
      "description": null,
      "generatedName": "ForbiddenError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "ForbiddenErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "GenerateErrorResponse",
        "type": "reference",
      },
    },
    "404": {
      "description": null,
      "generatedName": "NotFoundError",
      "nameOverride": null,
      "schema": {
        "generatedName": "NotFoundError",
        "nameOverride": null,
        "type": "unknown",
      },
    },
    "409": {
      "description": null,
      "generatedName": "ConflictError",
      "nameOverride": null,
      "schema": {
        "description": null,
        "generatedName": "ConflictErrorBody",
        "groupName": null,
        "nameOverride": null,
        "schema": "RegisterPromptErrorResponse",
        "type": "reference",
      },
    },
    "500": {
      "description": null,
      "generatedName": "InternalServerError",
      "nameOverride": null,
      "schema": {
        "generatedName": "InternalServerError",
        "nameOverride": null,
        "type": "unknown",
      },
    },
  },
  "globalHeaders": null,
  "hasEndpointsMarkedInternal": false,
  "nonRequestReferencedSchemas": [
    "DeploymentRead",
    "DocumentIndexRead",
    "PaginatedSlimDocumentList",
    "WorkflowStreamEvent",
    "GenerateResponse",
    "GenerateStreamResponse",
    "ModelVersionRead",
    "ModelVersionCompilePromptResponse",
    "RegisterPromptResponse",
    "SandboxScenario",
    "SearchResponse",
    "TestSuiteTestCase",
    "UploadDocumentResponse",
    "ChatMessageRole",
    "ConditionalNodeResultData",
    "DeploymentNodeResultData",
    "DeploymentReadStatusEnum",
    "EnvironmentEnum",
    "ModelTypeEnum",
    "IndexingStateEnum",
    "DocumentIndexStatus",
    "FinishReasonEnum",
    "NormalizedLogProbs",
    "ContentType",
    "WorkflowRequestInputRequest",
    "GenerateRequest",
    "GenerateOptionsRequest",
    "LogprobsEnum",
    "ChatMessageRequest",
    "GenerateResult",
    "GenerateResultData",
    "GenerateResultError",
    "EnrichedNormalizedCompletion",
    "GenerateStreamResult",
    "GenerateStreamResultData",
    "ModelVersionSandboxSnapshot",
    "ModelVersionCompiledPrompt",
    "ModelVersionExecConfigParameters",
    "PromptTemplateInputVariable",
    "PromptTemplateBlockData",
    "ProviderEnum",
    "ModelVersionBuildConfig",
    "ModelVersionExecConfig",
    "ModelVersionReadStatusEnum",
    "NormalizedTokenLogProbs",
    "SlimDocument",
    "PromptNodeResultData",
    "BlockTypeEnum",
    "PromptTemplateBlockProperties",
    "PromptTemplateBlock",
    "PromptTemplateBlockRequest",
    "PromptTemplateBlockPropertiesRequest",
    "PromptTemplateBlockDataRequest",
    "PromptTemplateInputVariableRequest",
    "RegisterPromptPromptInfoRequest",
    "RegisterPromptModelParametersRequest",
    "RegisterPromptPrompt",
    "RegisteredPromptSandboxSnapshot",
    "RegisteredPromptSandbox",
    "RegisteredPromptModelVersion",
    "RegisteredPromptDeployment",
    "EvaluationParams",
    "EvaluationParamsRequest",
    "SandboxNodeResultData",
    "ScenarioInput",
    "SandboxMetricInputParams",
    "ScenarioInputTypeEnum",
    "ChatMessage",
    "SearchNodeResultData",
    "SearchRequestOptionsRequest",
    "SearchWeightsRequest",
    "SearchResultMergingRequest",
    "SearchFiltersRequest",
    "SearchResult",
    "Document",
    "ProcessingStateEnum",
    "ProcessingFailureReasonEnum",
    "SlimDocumentStatusEnum",
    "DocumentDocumentToDocumentIndex",
    "SubmitCompletionActualRequest",
    "TerminalNodeResultData",
    "TerminalNodeResultOutput",
    "ScenarioInputRequest",
    "SandboxMetricInputParamsRequest",
    "WorkflowExecutionEventErrorCode",
    "WorkflowNodeResultEvent",
    "WorkflowResultEvent",
    "WorkflowNodeResultEventState",
    "WorkflowNodeResultData",
    "WorkflowEventError",
    "WorkflowResultEventOutputData",
    "GenerateErrorResponse",
    "RegisterPromptErrorResponse",
  ],
  "schemas": {
    "BlockTypeEnum": {
      "description": "* \`CHAT_MESSAGE\` - CHAT_MESSAGE
* \`CHAT_HISTORY\` - CHAT_HISTORY
* \`JINJA\` - JINJA
* \`FUNCTION_DEFINITION\` - FUNCTION_DEFINITION",
      "generatedName": "BlockTypeEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "CHAT_MESSAGE",
          "nameOverride": null,
          "value": "CHAT_MESSAGE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "CHAT_HISTORY",
          "nameOverride": null,
          "value": "CHAT_HISTORY",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "JINJA",
          "nameOverride": null,
          "value": "JINJA",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "FUNCTION_DEFINITION",
          "nameOverride": null,
          "value": "FUNCTION_DEFINITION",
        },
      ],
    },
    "ChatMessage": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ChatMessage",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "chatMessageText",
          "key": "text",
          "schema": {
            "description": null,
            "generatedName": "ChatMessageText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "chatMessageRole",
          "key": "role",
          "schema": {
            "description": null,
            "generatedName": "ChatMessageRole",
            "groupName": null,
            "nameOverride": null,
            "schema": "ChatMessageRole",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "ChatMessageRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ChatMessageRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "chatMessageRequestText",
          "key": "text",
          "schema": {
            "description": null,
            "generatedName": "ChatMessageRequestText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "chatMessageRequestRole",
          "key": "role",
          "schema": {
            "description": null,
            "generatedName": "ChatMessageRequestRole",
            "groupName": null,
            "nameOverride": null,
            "schema": "ChatMessageRole",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "ChatMessageRole": {
      "description": "* \`SYSTEM\` - System
* \`ASSISTANT\` - Assistant
* \`USER\` - User
* \`FUNCTION\` - Function",
      "generatedName": "ChatMessageRole",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "SYSTEM",
          "nameOverride": null,
          "value": "SYSTEM",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ASSISTANT",
          "nameOverride": null,
          "value": "ASSISTANT",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "USER",
          "nameOverride": null,
          "value": "USER",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "FUNCTION",
          "nameOverride": null,
          "value": "FUNCTION",
        },
      ],
    },
    "ConditionalNodeResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConditionalNodeResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conditionalNodeResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "ConditionalNodeResultData",
            "groupName": null,
            "nameOverride": null,
            "schema": "ConditionalNodeResultData",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "ConditionalNodeResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ConditionalNodeResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "conditionalNodeResultDataSourceHandleId",
          "key": "source_handle_id",
          "schema": {
            "description": null,
            "generatedName": "conditionalNodeResultDataSourceHandleId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ConditionalNodeResultDataSourceHandleId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "ConditionalNodeResultDataSourceHandleId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ContentType": {
      "description": "* \`STRING\` - STRING
* \`JSON\` - JSON",
      "generatedName": "ContentType",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "STRING",
          "nameOverride": null,
          "value": "STRING",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "JSON",
          "nameOverride": null,
          "value": "JSON",
        },
      ],
    },
    "DeploymentNodeResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DeploymentNodeResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentNodeResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "DeploymentNodeResultData",
            "groupName": null,
            "nameOverride": null,
            "schema": "DeploymentNodeResultData",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "DeploymentNodeResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DeploymentNodeResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentNodeResultDataOutputId",
          "key": "output_id",
          "schema": {
            "description": null,
            "generatedName": "DeploymentNodeResultDataOutputId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentNodeResultDataText",
          "key": "text",
          "schema": {
            "description": null,
            "generatedName": "deploymentNodeResultDataText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "DeploymentNodeResultDataText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "DeploymentNodeResultDataText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentNodeResultDataDelta",
          "key": "delta",
          "schema": {
            "description": null,
            "generatedName": "deploymentNodeResultDataDelta",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "DeploymentNodeResultDataDelta",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "DeploymentNodeResultDataDelta",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "DeploymentRead": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DeploymentRead",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "DeploymentReadId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadCreated",
          "key": "created",
          "schema": {
            "description": null,
            "generatedName": "DeploymentReadCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadLabel",
          "key": "label",
          "schema": {
            "description": "A human-readable label for the deployment",
            "generatedName": "DeploymentReadLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 150,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadName",
          "key": "name",
          "schema": {
            "description": "A name that uniquely identifies this deployment within its workspace",
            "generatedName": "DeploymentReadName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 150,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "deploymentReadStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The current status of the deployment

* \`ACTIVE\` - Active
* \`INACTIVE\` - Inactive
* \`ARCHIVED\` - Archived",
              "generatedName": "DeploymentReadStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "DeploymentReadStatusEnum",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadEnvironment",
          "key": "environment",
          "schema": {
            "description": null,
            "generatedName": "deploymentReadEnvironment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The environment this deployment is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
              "generatedName": "DeploymentReadEnvironment",
              "groupName": null,
              "nameOverride": null,
              "schema": "EnvironmentEnum",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadModelType",
          "key": "model_type",
          "schema": {
            "description": "The type of model this deployment serves

* \`GENERATE\` - Generate
* \`CLASSIFY\` - Classify",
            "generatedName": "DeploymentReadModelType",
            "groupName": null,
            "nameOverride": null,
            "schema": "ModelTypeEnum",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadActiveModelVersionIds",
          "key": "active_model_version_ids",
          "schema": {
            "description": null,
            "generatedName": "DeploymentReadActiveModelVersionIds",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "DeploymentReadActiveModelVersionIdsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "deploymentReadLastDeployedOn",
          "key": "last_deployed_on",
          "schema": {
            "description": null,
            "generatedName": "DeploymentReadLastDeployedOn",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "DeploymentReadStatusEnum": {
      "description": "* \`ACTIVE\` - Active
* \`INACTIVE\` - Inactive
* \`ARCHIVED\` - Archived",
      "generatedName": "DeploymentReadStatusEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ACTIVE",
          "nameOverride": null,
          "value": "ACTIVE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "INACTIVE",
          "nameOverride": null,
          "value": "INACTIVE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ARCHIVED",
          "nameOverride": null,
          "value": "ARCHIVED",
        },
      ],
    },
    "Document": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "Document",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentId",
          "key": "id",
          "schema": {
            "description": "The ID of the document.",
            "generatedName": "DocumentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentLabel",
          "key": "label",
          "schema": {
            "description": "The human-readable name for the document.",
            "generatedName": "DocumentLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 1000,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "documentExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
              "generatedName": "DocumentExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                "generatedName": "DocumentExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 1000,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "DocumentDocumentToDocumentIndex": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DocumentDocumentToDocumentIndex",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentDocumentToDocumentIndexId",
          "key": "id",
          "schema": {
            "description": "Vellum-generated ID that uniquely identifies this link.",
            "generatedName": "DocumentDocumentToDocumentIndexId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentDocumentToDocumentIndexDocumentIndexId",
          "key": "document_index_id",
          "schema": {
            "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
            "generatedName": "DocumentDocumentToDocumentIndexDocumentIndexId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentDocumentToDocumentIndexIndexingState",
          "key": "indexing_state",
          "schema": {
            "description": null,
            "generatedName": "documentDocumentToDocumentIndexIndexingState",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An enum value representing where this document is along its indexing lifecycle for this index.

* \`AWAITING_PROCESSING\` - Awaiting Processing
* \`QUEUED\` - Queued
* \`INDEXING\` - Indexing
* \`INDEXED\` - Indexed
* \`FAILED\` - Failed",
              "generatedName": "DocumentDocumentToDocumentIndexIndexingState",
              "groupName": null,
              "nameOverride": null,
              "schema": "IndexingStateEnum",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "DocumentIndexCreateRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DocumentIndexCreateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexCreateRequestLabel",
          "key": "label",
          "schema": {
            "description": "A human-readable label for the document index",
            "generatedName": "DocumentIndexCreateRequestLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 150,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexCreateRequestName",
          "key": "name",
          "schema": {
            "description": "A name that uniquely identifies this index within its workspace",
            "generatedName": "DocumentIndexCreateRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 150,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexCreateRequestStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "documentIndexCreateRequestStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The current status of the document index

* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
              "generatedName": "DocumentIndexCreateRequestStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "DocumentIndexStatus",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexCreateRequestEnvironment",
          "key": "environment",
          "schema": {
            "description": null,
            "generatedName": "documentIndexCreateRequestEnvironment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The environment this document index is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
              "generatedName": "DocumentIndexCreateRequestEnvironment",
              "groupName": null,
              "nameOverride": null,
              "schema": "EnvironmentEnum",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexCreateRequestIndexingConfig",
          "key": "indexing_config",
          "schema": {
            "description": "Configuration representing how documents should be indexed",
            "generatedName": "DocumentIndexCreateRequestIndexingConfig",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "DocumentIndexCreateRequestIndexingConfigKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "DocumentIndexCreateRequestIndexingConfigValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexCreateRequestCopyDocumentsFromIndexId",
          "key": "copy_documents_from_index_id",
          "schema": {
            "description": null,
            "generatedName": "documentIndexCreateRequestCopyDocumentsFromIndexId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally specify the id of a document index from which you'd like to copy and re-index its documents into this newly created index",
              "generatedName": "DocumentIndexCreateRequestCopyDocumentsFromIndexId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "DocumentIndexRead": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "DocumentIndexRead",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexReadId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "DocumentIndexReadId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexReadCreated",
          "key": "created",
          "schema": {
            "description": null,
            "generatedName": "DocumentIndexReadCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexReadLabel",
          "key": "label",
          "schema": {
            "description": "A human-readable label for the document index",
            "generatedName": "DocumentIndexReadLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 150,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexReadName",
          "key": "name",
          "schema": {
            "description": "A name that uniquely identifies this index within its workspace",
            "generatedName": "DocumentIndexReadName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 150,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexReadStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "documentIndexReadStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The current status of the document index

* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
              "generatedName": "DocumentIndexReadStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "DocumentIndexStatus",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexReadEnvironment",
          "key": "environment",
          "schema": {
            "description": null,
            "generatedName": "documentIndexReadEnvironment",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The environment this document index is used in

* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
              "generatedName": "DocumentIndexReadEnvironment",
              "groupName": null,
              "nameOverride": null,
              "schema": "EnvironmentEnum",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "documentIndexReadIndexingConfig",
          "key": "indexing_config",
          "schema": {
            "description": "Configuration representing how documents should be indexed",
            "generatedName": "DocumentIndexReadIndexingConfig",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "DocumentIndexReadIndexingConfigKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "DocumentIndexReadIndexingConfigValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "DocumentIndexStatus": {
      "description": "* \`ACTIVE\` - Active
* \`ARCHIVED\` - Archived",
      "generatedName": "DocumentIndexStatus",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ACTIVE",
          "nameOverride": null,
          "value": "ACTIVE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ARCHIVED",
          "nameOverride": null,
          "value": "ARCHIVED",
        },
      ],
    },
    "EnrichedNormalizedCompletion": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EnrichedNormalizedCompletion",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enrichedNormalizedCompletionId",
          "key": "id",
          "schema": {
            "description": "The Vellum-generated ID of the completion.",
            "generatedName": "EnrichedNormalizedCompletionId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enrichedNormalizedCompletionExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "enrichedNormalizedCompletionExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
              "generatedName": "EnrichedNormalizedCompletionExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                "generatedName": "EnrichedNormalizedCompletionExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enrichedNormalizedCompletionText",
          "key": "text",
          "schema": {
            "description": "The text generated by the LLM.",
            "generatedName": "EnrichedNormalizedCompletionText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enrichedNormalizedCompletionFinishReason",
          "key": "finish_reason",
          "schema": {
            "description": "The reason the generation finished.

* \`LENGTH\` - LENGTH
* \`STOP\` - STOP
* \`UNKNOWN\` - UNKNOWN",
            "generatedName": "EnrichedNormalizedCompletionFinishReason",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "EnrichedNormalizedCompletionFinishReason",
              "groupName": null,
              "nameOverride": null,
              "schema": "FinishReasonEnum",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enrichedNormalizedCompletionLogprobs",
          "key": "logprobs",
          "schema": {
            "description": null,
            "generatedName": "enrichedNormalizedCompletionLogprobs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The logprobs of the completion. Only present if specified in the original request options.",
              "generatedName": "EnrichedNormalizedCompletionLogprobs",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "EnrichedNormalizedCompletionLogprobs",
                "groupName": null,
                "nameOverride": null,
                "schema": "NormalizedLogProbs",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enrichedNormalizedCompletionModelVersionId",
          "key": "model_version_id",
          "schema": {
            "description": "The ID of the model version used to generate this completion.",
            "generatedName": "EnrichedNormalizedCompletionModelVersionId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "enrichedNormalizedCompletionType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "enrichedNormalizedCompletionType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "EnrichedNormalizedCompletionType",
              "groupName": null,
              "nameOverride": null,
              "schema": "ContentType",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "EnvironmentEnum": {
      "description": "* \`DEVELOPMENT\` - Development
* \`STAGING\` - Staging
* \`PRODUCTION\` - Production",
      "generatedName": "EnvironmentEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "DEVELOPMENT",
          "nameOverride": null,
          "value": "DEVELOPMENT",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "STAGING",
          "nameOverride": null,
          "value": "STAGING",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PRODUCTION",
          "nameOverride": null,
          "value": "PRODUCTION",
        },
      ],
    },
    "EvaluationParams": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EvaluationParams",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "evaluationParamsTarget",
          "key": "target",
          "schema": {
            "description": null,
            "generatedName": "evaluationParamsTarget",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
              "generatedName": "EvaluationParamsTarget",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "EvaluationParamsRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "EvaluationParamsRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "evaluationParamsRequestTarget",
          "key": "target",
          "schema": {
            "description": null,
            "generatedName": "evaluationParamsRequestTarget",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
              "generatedName": "EvaluationParamsRequestTarget",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ExecuteWorkflowStreamRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ExecuteWorkflowStreamRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentId",
          "key": "workflow_deployment_id",
          "schema": {
            "description": null,
            "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the Workflow Deployment. Must provide either this or workflow_deployment_name.",
              "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the Workflow Deployment. Must provide either this or workflow_deployment_name.",
                "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentName",
          "key": "workflow_deployment_name",
          "schema": {
            "description": null,
            "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the Workflow Deployment. Must provide either this or workflow_deployment_id.",
              "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the Workflow Deployment. Must provide either this or workflow_deployment_id.",
                "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "executeWorkflowStreamRequestReleaseTag",
          "key": "release_tag",
          "schema": {
            "description": null,
            "generatedName": "executeWorkflowStreamRequestReleaseTag",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally specify a release tag if you want to pin to a specific release of the Workflow Deployment",
              "generatedName": "ExecuteWorkflowStreamRequestReleaseTag",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optionally specify a release tag if you want to pin to a specific release of the Workflow Deployment",
                "generatedName": "ExecuteWorkflowStreamRequestReleaseTag",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "executeWorkflowStreamRequestInputs",
          "key": "inputs",
          "schema": {
            "description": null,
            "generatedName": "ExecuteWorkflowStreamRequestInputs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ExecuteWorkflowStreamRequestInputsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "WorkflowRequestInputRequest",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "executeWorkflowStreamRequestExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "executeWorkflowStreamRequestExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally include a unique identifier for tracking purposes.",
              "generatedName": "ExecuteWorkflowStreamRequestExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optionally include a unique identifier for tracking purposes.",
                "generatedName": "ExecuteWorkflowStreamRequestExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "FinishReasonEnum": {
      "description": "* \`LENGTH\` - LENGTH
* \`STOP\` - STOP
* \`UNKNOWN\` - UNKNOWN",
      "generatedName": "FinishReasonEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "LENGTH",
          "nameOverride": null,
          "value": "LENGTH",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "STOP",
          "nameOverride": null,
          "value": "STOP",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "UNKNOWN",
          "nameOverride": null,
          "value": "UNKNOWN",
        },
      ],
    },
    "GenerateBodyRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateBodyRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateBodyRequestDeploymentId",
          "key": "deployment_id",
          "schema": {
            "description": null,
            "generatedName": "generateBodyRequestDeploymentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the deployment. Must provide either this or deployment_name.",
              "generatedName": "GenerateBodyRequestDeploymentId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "generatedName": "GenerateBodyRequestDeploymentId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateBodyRequestDeploymentName",
          "key": "deployment_name",
          "schema": {
            "description": null,
            "generatedName": "generateBodyRequestDeploymentName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the deployment. Must provide either this or deployment_id.",
              "generatedName": "GenerateBodyRequestDeploymentName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "generatedName": "GenerateBodyRequestDeploymentName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateBodyRequestRequests",
          "key": "requests",
          "schema": {
            "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
            "generatedName": "GenerateBodyRequestRequests",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "GenerateBodyRequestRequestsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateRequest",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateBodyRequestOptions",
          "key": "options",
          "schema": {
            "description": null,
            "generatedName": "generateBodyRequestOptions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Additional configuration that can be used to control what's included in the response.",
              "generatedName": "GenerateBodyRequestOptions",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "GenerateBodyRequestOptions",
                "groupName": null,
                "nameOverride": null,
                "schema": "GenerateOptionsRequest",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateErrorResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateErrorResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateErrorResponseDetail",
          "key": "detail",
          "schema": {
            "description": "Details about why the request failed.",
            "generatedName": "GenerateErrorResponseDetail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "GenerateOptionsRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateOptionsRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateOptionsRequestLogprobs",
          "key": "logprobs",
          "schema": {
            "description": null,
            "generatedName": "generateOptionsRequestLogprobs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Which logprobs to include, if any. Defaults to NONE.

* \`ALL\` - ALL
* \`NONE\` - NONE",
              "generatedName": "GenerateOptionsRequestLogprobs",
              "groupName": null,
              "nameOverride": null,
              "schema": "LogprobsEnum",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateRequestInputValues",
          "key": "input_values",
          "schema": {
            "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
            "generatedName": "GenerateRequestInputValues",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "GenerateRequestInputValuesKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "GenerateRequestInputValuesValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateRequestChatHistory",
          "key": "chat_history",
          "schema": {
            "description": null,
            "generatedName": "generateRequestChatHistory",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally provide a list of chat messages that'll be used in place of the special {$chat_history} variable, if included in the prompt.",
              "generatedName": "GenerateRequestChatHistory",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "GenerateRequestChatHistoryItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ChatMessageRequest",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateRequestExternalIds",
          "key": "external_ids",
          "schema": {
            "description": null,
            "generatedName": "generateRequestExternalIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
              "generatedName": "GenerateRequestExternalIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                "generatedName": "GenerateRequestExternalIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "GenerateRequestExternalIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": 1,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateResponseResults",
          "key": "results",
          "schema": {
            "description": "The results of each generation request.",
            "generatedName": "GenerateResponseResults",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "GenerateResponseResultsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateResult",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "generateResultData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
              "generatedName": "GenerateResultData",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateResultData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateResultError",
          "key": "error",
          "schema": {
            "description": null,
            "generatedName": "generateResultError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
              "generatedName": "GenerateResultError",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateResultError",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateResultDataCompletions",
          "key": "completions",
          "schema": {
            "description": "The generated completions. This will generally be a list of length one.",
            "generatedName": "GenerateResultDataCompletions",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "GenerateResultDataCompletionsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "EnrichedNormalizedCompletion",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateResultError": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateResultError",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateResultErrorMessage",
          "key": "message",
          "schema": {
            "description": "The error message returned by the LLM provider.",
            "generatedName": "GenerateResultErrorMessage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "GenerateStreamBodyRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateStreamBodyRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamBodyRequestDeploymentId",
          "key": "deployment_id",
          "schema": {
            "description": null,
            "generatedName": "generateStreamBodyRequestDeploymentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the deployment. Must provide either this or deployment_name.",
              "generatedName": "GenerateStreamBodyRequestDeploymentId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "generatedName": "GenerateStreamBodyRequestDeploymentId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamBodyRequestDeploymentName",
          "key": "deployment_name",
          "schema": {
            "description": null,
            "generatedName": "generateStreamBodyRequestDeploymentName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the deployment. Must provide either this or deployment_id.",
              "generatedName": "GenerateStreamBodyRequestDeploymentName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "generatedName": "GenerateStreamBodyRequestDeploymentName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamBodyRequestRequests",
          "key": "requests",
          "schema": {
            "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
            "generatedName": "GenerateStreamBodyRequestRequests",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "GenerateStreamBodyRequestRequestsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateRequest",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamBodyRequestOptions",
          "key": "options",
          "schema": {
            "description": null,
            "generatedName": "generateStreamBodyRequestOptions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Additional configuration that can be used to control what's included in the response.",
              "generatedName": "GenerateStreamBodyRequestOptions",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "GenerateStreamBodyRequestOptions",
                "groupName": null,
                "nameOverride": null,
                "schema": "GenerateOptionsRequest",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateStreamResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateStreamResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamResponseDelta",
          "key": "delta",
          "schema": {
            "description": null,
            "generatedName": "GenerateStreamResponseDelta",
            "groupName": null,
            "nameOverride": null,
            "schema": "GenerateStreamResult",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "GenerateStreamResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateStreamResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamResultRequestIndex",
          "key": "request_index",
          "schema": {
            "description": null,
            "generatedName": "GenerateStreamResultRequestIndex",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "generateStreamResultData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GenerateStreamResultData",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateStreamResultData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamResultError",
          "key": "error",
          "schema": {
            "description": null,
            "generatedName": "generateStreamResultError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "GenerateStreamResultError",
              "groupName": null,
              "nameOverride": null,
              "schema": "GenerateResultError",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "GenerateStreamResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "GenerateStreamResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamResultDataCompletionIndex",
          "key": "completion_index",
          "schema": {
            "description": null,
            "generatedName": "GenerateStreamResultDataCompletionIndex",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "generateStreamResultDataCompletion",
          "key": "completion",
          "schema": {
            "description": null,
            "generatedName": "GenerateStreamResultDataCompletion",
            "groupName": null,
            "nameOverride": null,
            "schema": "EnrichedNormalizedCompletion",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "IndexingStateEnum": {
      "description": "* \`AWAITING_PROCESSING\` - Awaiting Processing
* \`QUEUED\` - Queued
* \`INDEXING\` - Indexing
* \`INDEXED\` - Indexed
* \`FAILED\` - Failed",
      "generatedName": "IndexingStateEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "AWAITING_PROCESSING",
          "nameOverride": null,
          "value": "AWAITING_PROCESSING",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "QUEUED",
          "nameOverride": null,
          "value": "QUEUED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "INDEXING",
          "nameOverride": null,
          "value": "INDEXING",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "INDEXED",
          "nameOverride": null,
          "value": "INDEXED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "FAILED",
          "nameOverride": null,
          "value": "FAILED",
        },
      ],
    },
    "LogprobsEnum": {
      "description": "* \`ALL\` - ALL
* \`NONE\` - NONE",
      "generatedName": "LogprobsEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ALL",
          "nameOverride": null,
          "value": "ALL",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NONE",
          "nameOverride": null,
          "value": "NONE",
        },
      ],
    },
    "ModelTypeEnum": {
      "description": "* \`GENERATE\` - Generate
* \`CLASSIFY\` - Classify",
      "generatedName": "ModelTypeEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "GENERATE",
          "nameOverride": null,
          "value": "GENERATE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "CLASSIFY",
          "nameOverride": null,
          "value": "CLASSIFY",
        },
      ],
    },
    "ModelVersionBuildConfig": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionBuildConfig",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionBuildConfigBaseModel",
          "key": "base_model",
          "schema": {
            "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
            "generatedName": "ModelVersionBuildConfigBaseModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionBuildConfigSandboxSnapshot",
          "key": "sandbox_snapshot",
          "schema": {
            "description": null,
            "generatedName": "modelVersionBuildConfigSandboxSnapshot",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
              "generatedName": "ModelVersionBuildConfigSandboxSnapshot",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "ModelVersionBuildConfigSandboxSnapshot",
                "groupName": null,
                "nameOverride": null,
                "schema": "ModelVersionSandboxSnapshot",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ModelVersionCompilePromptRequestRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionCompilePromptRequestRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionCompilePromptRequestRequestInputValues",
          "key": "input_values",
          "schema": {
            "description": "Key/value pairs for each variable found within the model version's prompt template.",
            "generatedName": "ModelVersionCompilePromptRequestRequestInputValues",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "ModelVersionCompilePromptRequestRequestInputValuesKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "ModelVersionCompilePromptRequestRequestInputValuesValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "ModelVersionCompilePromptResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionCompilePromptResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionCompilePromptResponsePrompt",
          "key": "prompt",
          "schema": {
            "description": "Information about the compiled prompt.",
            "generatedName": "ModelVersionCompilePromptResponsePrompt",
            "groupName": null,
            "nameOverride": null,
            "schema": "ModelVersionCompiledPrompt",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "ModelVersionCompiledPrompt": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionCompiledPrompt",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionCompiledPromptText",
          "key": "text",
          "schema": {
            "description": "The fully compiled prompt in normalized ChatML syntax after all variable substitutions and templating functions are applied.",
            "generatedName": "ModelVersionCompiledPromptText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionCompiledPromptNumTokens",
          "key": "num_tokens",
          "schema": {
            "description": "The approximate number of tokens used by the compiled prompt.",
            "generatedName": "ModelVersionCompiledPromptNumTokens",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ModelVersionExecConfig": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionExecConfig",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParameters",
          "key": "parameters",
          "schema": {
            "description": "The generation parameters that are passed to the LLM provider at runtime.",
            "generatedName": "ModelVersionExecConfigParameters",
            "groupName": null,
            "nameOverride": null,
            "schema": "ModelVersionExecConfigParameters",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigInputVariables",
          "key": "input_variables",
          "schema": {
            "description": "Names of the input variables specified in the prompt template.",
            "generatedName": "ModelVersionExecConfigInputVariables",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "ModelVersionExecConfigInputVariablesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "PromptTemplateInputVariable",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigPromptTemplate",
          "key": "prompt_template",
          "schema": {
            "description": null,
            "generatedName": "modelVersionExecConfigPromptTemplate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The template used to generate prompts for this model version.",
              "generatedName": "ModelVersionExecConfigPromptTemplate",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigPromptBlockData",
          "key": "prompt_block_data",
          "schema": {
            "description": null,
            "generatedName": "modelVersionExecConfigPromptBlockData",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ModelVersionExecConfigPromptBlockData",
              "groupName": null,
              "nameOverride": null,
              "schema": "PromptTemplateBlockData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigPromptSyntaxVersion",
          "key": "prompt_syntax_version",
          "schema": {
            "description": null,
            "generatedName": "modelVersionExecConfigPromptSyntaxVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ModelVersionExecConfigPromptSyntaxVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ModelVersionExecConfigParameters": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionExecConfigParameters",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersTemperature",
          "key": "temperature",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionExecConfigParametersTemperature",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersMaxTokens",
          "key": "max_tokens",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionExecConfigParametersMaxTokens",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersTopP",
          "key": "top_p",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionExecConfigParametersTopP",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersFrequencyPenalty",
          "key": "frequency_penalty",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionExecConfigParametersFrequencyPenalty",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersPresencePenalty",
          "key": "presence_penalty",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionExecConfigParametersPresencePenalty",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersLogitBias",
          "key": "logit_bias",
          "schema": {
            "description": null,
            "generatedName": "modelVersionExecConfigParametersLogitBias",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ModelVersionExecConfigParametersLogitBias",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "ModelVersionExecConfigParametersLogitBias",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "ModelVersionExecConfigParametersLogitBiasKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "description": null,
                  "generatedName": "ModelVersionExecConfigParametersLogitBiasValue",
                  "groupName": null,
                  "nameOverride": null,
                  "type": "nullable",
                  "value": {
                    "description": null,
                    "generatedName": "ModelVersionExecConfigParametersLogitBiasValue",
                    "groupName": null,
                    "nameOverride": null,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersStop",
          "key": "stop",
          "schema": {
            "description": null,
            "generatedName": "modelVersionExecConfigParametersStop",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ModelVersionExecConfigParametersStop",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "ModelVersionExecConfigParametersStop",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "ModelVersionExecConfigParametersStopItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionExecConfigParametersTopK",
          "key": "top_k",
          "schema": {
            "description": null,
            "generatedName": "modelVersionExecConfigParametersTopK",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ModelVersionExecConfigParametersTopK",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "ModelVersionRead": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionRead",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadId",
          "key": "id",
          "schema": {
            "description": "Vellum-generated ID that uniquely identifies this model version.",
            "generatedName": "ModelVersionReadId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadCreated",
          "key": "created",
          "schema": {
            "description": "Timestamp of when this model version was created.",
            "generatedName": "ModelVersionReadCreated",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadLabel",
          "key": "label",
          "schema": {
            "description": "Human-friendly name for this model version.",
            "generatedName": "ModelVersionReadLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 150,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadModelType",
          "key": "model_type",
          "schema": {
            "description": "The type of task this model is used for.

* \`GENERATE\` - Generate
* \`CLASSIFY\` - Classify",
            "generatedName": "ModelVersionReadModelType",
            "groupName": null,
            "nameOverride": null,
            "schema": "ModelTypeEnum",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadProvider",
          "key": "provider",
          "schema": {
            "description": "Which LLM provider this model version is associated with.

* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`MYSTIC\` - Mystic
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
            "generatedName": "ModelVersionReadProvider",
            "groupName": null,
            "nameOverride": null,
            "schema": "ProviderEnum",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadExternalId",
          "key": "external_id",
          "schema": {
            "description": "The unique id of this model version as it exists in the above provider's system.",
            "generatedName": "ModelVersionReadExternalId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 250,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadBuildConfig",
          "key": "build_config",
          "schema": {
            "description": "Configuration used to build this model version.",
            "generatedName": "ModelVersionReadBuildConfig",
            "groupName": null,
            "nameOverride": null,
            "schema": "ModelVersionBuildConfig",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadExecConfig",
          "key": "exec_config",
          "schema": {
            "description": "Configuration used to execute this model version.",
            "generatedName": "ModelVersionReadExecConfig",
            "groupName": null,
            "nameOverride": null,
            "schema": "ModelVersionExecConfig",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionReadStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "modelVersionReadStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ModelVersionReadStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "ModelVersionReadStatusEnum",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "ModelVersionReadStatusEnum": {
      "description": "* \`CREATING\` - Creating
* \`READY\` - Ready
* \`CREATION_FAILED\` - Creation Failed
* \`DISABLED\` - Disabled",
      "generatedName": "ModelVersionReadStatusEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "CREATING",
          "nameOverride": null,
          "value": "CREATING",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "READY",
          "nameOverride": null,
          "value": "READY",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "CREATION_FAILED",
          "nameOverride": null,
          "value": "CREATION_FAILED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "DISABLED",
          "nameOverride": null,
          "value": "DISABLED",
        },
      ],
    },
    "ModelVersionSandboxSnapshot": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ModelVersionSandboxSnapshot",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionSandboxSnapshotId",
          "key": "id",
          "schema": {
            "description": "The ID of the sandbox snapshot.",
            "generatedName": "ModelVersionSandboxSnapshotId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionSandboxSnapshotPromptIndex",
          "key": "prompt_index",
          "schema": {
            "description": null,
            "generatedName": "modelVersionSandboxSnapshotPromptIndex",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The index of the prompt in the sandbox snapshot.",
              "generatedName": "ModelVersionSandboxSnapshotPromptIndex",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionSandboxSnapshotPromptId",
          "key": "prompt_id",
          "schema": {
            "description": null,
            "generatedName": "modelVersionSandboxSnapshotPromptId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The id of the prompt in the sandbox snapshot.",
              "generatedName": "ModelVersionSandboxSnapshotPromptId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "modelVersionSandboxSnapshotSandboxId",
          "key": "sandbox_id",
          "schema": {
            "description": null,
            "generatedName": "ModelVersionSandboxSnapshotSandboxId",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "ModelVersionSandboxSnapshotSandboxId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "NormalizedLogProbs": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "NormalizedLogProbs",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "normalizedLogProbsTokens",
          "key": "tokens",
          "schema": {
            "description": null,
            "generatedName": "NormalizedLogProbsTokens",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "NormalizedLogProbsTokensItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "NormalizedTokenLogProbs",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "normalizedLogProbsLikelihood",
          "key": "likelihood",
          "schema": {
            "description": null,
            "generatedName": "NormalizedLogProbsLikelihood",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "NormalizedLogProbsLikelihood",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "NormalizedTokenLogProbs": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "NormalizedTokenLogProbs",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "normalizedTokenLogProbsToken",
          "key": "token",
          "schema": {
            "description": null,
            "generatedName": "NormalizedTokenLogProbsToken",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "normalizedTokenLogProbsLogprob",
          "key": "logprob",
          "schema": {
            "description": null,
            "generatedName": "NormalizedTokenLogProbsLogprob",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "NormalizedTokenLogProbsLogprob",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "normalizedTokenLogProbsTopLogprobs",
          "key": "top_logprobs",
          "schema": {
            "description": null,
            "generatedName": "NormalizedTokenLogProbsTopLogprobs",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "NormalizedTokenLogProbsTopLogprobs",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "NormalizedTokenLogProbsTopLogprobsKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "description": null,
                "generatedName": "NormalizedTokenLogProbsTopLogprobsValue",
                "groupName": null,
                "nameOverride": null,
                "type": "nullable",
                "value": {
                  "description": null,
                  "generatedName": "NormalizedTokenLogProbsTopLogprobsValue",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "type": "double",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "normalizedTokenLogProbsTextOffset",
          "key": "text_offset",
          "schema": {
            "description": null,
            "generatedName": "NormalizedTokenLogProbsTextOffset",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "PaginatedSlimDocumentList": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PaginatedSlimDocumentList",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "paginatedSlimDocumentListCount",
          "key": "count",
          "schema": {
            "description": null,
            "generatedName": "paginatedSlimDocumentListCount",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PaginatedSlimDocumentListCount",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "paginatedSlimDocumentListNext",
          "key": "next",
          "schema": {
            "description": null,
            "generatedName": "paginatedSlimDocumentListNext",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PaginatedSlimDocumentListNext",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PaginatedSlimDocumentListNext",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "paginatedSlimDocumentListPrevious",
          "key": "previous",
          "schema": {
            "description": null,
            "generatedName": "paginatedSlimDocumentListPrevious",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PaginatedSlimDocumentListPrevious",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PaginatedSlimDocumentListPrevious",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "paginatedSlimDocumentListResults",
          "key": "results",
          "schema": {
            "description": null,
            "generatedName": "paginatedSlimDocumentListResults",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PaginatedSlimDocumentListResults",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "PaginatedSlimDocumentListResultsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "SlimDocument",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ProcessingFailureReasonEnum": {
      "description": "* \`EXCEEDED_CHARACTER_LIMIT\` - Exceeded Character Limit",
      "generatedName": "ProcessingFailureReasonEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "EXCEEDED_CHARACTER_LIMIT",
      },
    },
    "ProcessingStateEnum": {
      "description": "* \`QUEUED\` - Queued
* \`PROCESSING\` - Processing
* \`PROCESSED\` - Processed
* \`FAILED\` - Failed",
      "generatedName": "ProcessingStateEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "QUEUED",
          "nameOverride": null,
          "value": "QUEUED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PROCESSING",
          "nameOverride": null,
          "value": "PROCESSING",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PROCESSED",
          "nameOverride": null,
          "value": "PROCESSED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "FAILED",
          "nameOverride": null,
          "value": "FAILED",
        },
      ],
    },
    "PromptNodeResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptNodeResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptNodeResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "PromptNodeResultData",
            "groupName": null,
            "nameOverride": null,
            "schema": "PromptNodeResultData",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "PromptNodeResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptNodeResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptNodeResultDataOutputId",
          "key": "output_id",
          "schema": {
            "description": null,
            "generatedName": "PromptNodeResultDataOutputId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptNodeResultDataText",
          "key": "text",
          "schema": {
            "description": null,
            "generatedName": "promptNodeResultDataText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptNodeResultDataText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptNodeResultDataText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptNodeResultDataDelta",
          "key": "delta",
          "schema": {
            "description": null,
            "generatedName": "promptNodeResultDataDelta",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptNodeResultDataDelta",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptNodeResultDataDelta",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateBlock": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateBlock",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockBlockType",
          "key": "block_type",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockBlockType",
            "groupName": null,
            "nameOverride": null,
            "schema": "BlockTypeEnum",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockProperties",
          "key": "properties",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "PromptTemplateBlockProperties",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateBlockData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateBlockData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockDataVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockDataVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockDataBlocks",
          "key": "blocks",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockDataBlocks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockDataBlocksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "PromptTemplateBlock",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateBlockDataRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateBlockDataRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockDataRequestVersion",
          "key": "version",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockDataRequestVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockDataRequestBlocks",
          "key": "blocks",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockDataRequestBlocks",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockDataRequestBlocksItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "PromptTemplateBlockRequest",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateBlockProperties": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateBlockProperties",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesChatRole",
          "key": "chat_role",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesChatRole",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesChatRole",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesChatRole",
                "groupName": null,
                "nameOverride": null,
                "schema": "ChatMessageRole",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesChatMessageUnterminated",
          "key": "chat_message_unterminated",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesChatMessageUnterminated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesChatMessageUnterminated",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesTemplate",
          "key": "template",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesTemplate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesTemplate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesTemplate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesTemplateType",
          "key": "template_type",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesTemplateType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesTemplateType",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesTemplateType",
                "groupName": null,
                "nameOverride": null,
                "schema": "ContentType",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesFunctionName",
          "key": "function_name",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesFunctionName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesFunctionName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesFunctionName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesFunctionDescription",
          "key": "function_description",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesFunctionDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesFunctionDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesFunctionDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesFunctionParameters",
          "key": "function_parameters",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesFunctionParameters",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesFunctionParameters",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesFunctionParameters",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "PromptTemplateBlockPropertiesFunctionParametersKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "PromptTemplateBlockPropertiesFunctionParametersValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesBlocks",
          "key": "blocks",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesBlocks",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesBlocks",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesBlocks",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "PromptTemplateBlockPropertiesBlocksItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "PromptTemplateBlock",
                  "type": "reference",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateBlockPropertiesRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateBlockPropertiesRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestChatRole",
          "key": "chat_role",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestChatRole",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestChatRole",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesRequestChatRole",
                "groupName": null,
                "nameOverride": null,
                "schema": "ChatMessageRole",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestChatMessageUnterminated",
          "key": "chat_message_unterminated",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestChatMessageUnterminated",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestChatMessageUnterminated",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "boolean",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestTemplate",
          "key": "template",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestTemplate",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestTemplate",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesRequestTemplate",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestTemplateType",
          "key": "template_type",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestTemplateType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestTemplateType",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesRequestTemplateType",
                "groupName": null,
                "nameOverride": null,
                "schema": "ContentType",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestFunctionName",
          "key": "function_name",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestFunctionName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestFunctionName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesRequestFunctionName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestFunctionDescription",
          "key": "function_description",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestFunctionDescription",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestFunctionDescription",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesRequestFunctionDescription",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestFunctionParameters",
          "key": "function_parameters",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestFunctionParameters",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParameters",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParameters",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParametersKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParametersValue",
                  "nameOverride": null,
                  "type": "unknown",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockPropertiesRequestBlocks",
          "key": "blocks",
          "schema": {
            "description": null,
            "generatedName": "promptTemplateBlockPropertiesRequestBlocks",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "PromptTemplateBlockPropertiesRequestBlocks",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "PromptTemplateBlockPropertiesRequestBlocks",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "PromptTemplateBlockPropertiesRequestBlocksItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "PromptTemplateBlockRequest",
                  "type": "reference",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateBlockRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateBlockRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockRequestId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockRequestId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockRequestBlockType",
          "key": "block_type",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockRequestBlockType",
            "groupName": null,
            "nameOverride": null,
            "schema": "BlockTypeEnum",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateBlockRequestProperties",
          "key": "properties",
          "schema": {
            "description": null,
            "generatedName": "PromptTemplateBlockRequestProperties",
            "groupName": null,
            "nameOverride": null,
            "schema": "PromptTemplateBlockPropertiesRequest",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateInputVariable": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateInputVariable",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateInputVariableKey",
          "key": "key",
          "schema": {
            "description": "The name of the input variable.",
            "generatedName": "PromptTemplateInputVariableKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "PromptTemplateInputVariableRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "PromptTemplateInputVariableRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "promptTemplateInputVariableRequestKey",
          "key": "key",
          "schema": {
            "description": "The name of the input variable.",
            "generatedName": "PromptTemplateInputVariableRequestKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "ProviderEnum": {
      "description": "* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`MYSTIC\` - Mystic
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
      "generatedName": "ProviderEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "ANTHROPIC",
          "nameOverride": null,
          "value": "ANTHROPIC",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "COHERE",
          "nameOverride": null,
          "value": "COHERE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "GOOGLE",
          "nameOverride": null,
          "value": "GOOGLE",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "HOSTED",
          "nameOverride": null,
          "value": "HOSTED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "MOSAICML",
          "nameOverride": null,
          "value": "MOSAICML",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "MYSTIC",
          "nameOverride": null,
          "value": "MYSTIC",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "OPENAI",
          "nameOverride": null,
          "value": "OPENAI",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "PYQ",
          "nameOverride": null,
          "value": "PYQ",
        },
      ],
    },
    "RegisterPromptErrorResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisterPromptErrorResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptErrorResponseDetail",
          "key": "detail",
          "schema": {
            "description": "Details about why the request failed.",
            "generatedName": "RegisterPromptErrorResponseDetail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RegisterPromptModelParametersRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisterPromptModelParametersRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestTemperature",
          "key": "temperature",
          "schema": {
            "description": null,
            "generatedName": "RegisterPromptModelParametersRequestTemperature",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestMaxTokens",
          "key": "max_tokens",
          "schema": {
            "description": null,
            "generatedName": "RegisterPromptModelParametersRequestMaxTokens",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "int",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestStop",
          "key": "stop",
          "schema": {
            "description": null,
            "generatedName": "RegisterPromptModelParametersRequestStop",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "RegisterPromptModelParametersRequestStop",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "RegisterPromptModelParametersRequestStopItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestTopP",
          "key": "top_p",
          "schema": {
            "description": null,
            "generatedName": "RegisterPromptModelParametersRequestTopP",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestTopK",
          "key": "top_k",
          "schema": {
            "description": null,
            "generatedName": "registerPromptModelParametersRequestTopK",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RegisterPromptModelParametersRequestTopK",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "double",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestFrequencyPenalty",
          "key": "frequency_penalty",
          "schema": {
            "description": null,
            "generatedName": "RegisterPromptModelParametersRequestFrequencyPenalty",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestPresencePenalty",
          "key": "presence_penalty",
          "schema": {
            "description": null,
            "generatedName": "RegisterPromptModelParametersRequestPresencePenalty",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptModelParametersRequestLogitBias",
          "key": "logit_bias",
          "schema": {
            "description": null,
            "generatedName": "registerPromptModelParametersRequestLogitBias",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RegisterPromptModelParametersRequestLogitBias",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "RegisterPromptModelParametersRequestLogitBias",
                "groupName": null,
                "key": {
                  "description": null,
                  "generatedName": "RegisterPromptModelParametersRequestLogitBiasKey",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": null,
                    "type": "string",
                  },
                },
                "nameOverride": null,
                "type": "map",
                "value": {
                  "description": null,
                  "generatedName": "RegisterPromptModelParametersRequestLogitBiasValue",
                  "groupName": null,
                  "nameOverride": null,
                  "type": "nullable",
                  "value": {
                    "description": null,
                    "generatedName": "RegisterPromptModelParametersRequestLogitBiasValue",
                    "groupName": null,
                    "nameOverride": null,
                    "schema": {
                      "type": "double",
                    },
                    "type": "primitive",
                  },
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "RegisterPromptPrompt": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisterPromptPrompt",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptPromptId",
          "key": "id",
          "schema": {
            "description": "The ID of the generated prompt.",
            "generatedName": "RegisterPromptPromptId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptPromptLabel",
          "key": "label",
          "schema": {
            "description": "A human-friendly label for the generated prompt.",
            "generatedName": "RegisterPromptPromptLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RegisterPromptPromptInfoRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisterPromptPromptInfoRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptPromptInfoRequestPromptSyntaxVersion",
          "key": "prompt_syntax_version",
          "schema": {
            "description": null,
            "generatedName": "registerPromptPromptInfoRequestPromptSyntaxVersion",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "RegisterPromptPromptInfoRequestPromptSyntaxVersion",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "type": "int",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptPromptInfoRequestPromptBlockData",
          "key": "prompt_block_data",
          "schema": {
            "description": null,
            "generatedName": "RegisterPromptPromptInfoRequestPromptBlockData",
            "groupName": null,
            "nameOverride": null,
            "schema": "PromptTemplateBlockDataRequest",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptPromptInfoRequestInputVariables",
          "key": "input_variables",
          "schema": {
            "description": "Names of the input variables specified in the prompt template.",
            "generatedName": "RegisterPromptPromptInfoRequestInputVariables",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "RegisterPromptPromptInfoRequestInputVariablesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "PromptTemplateInputVariableRequest",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "RegisterPromptRequestRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisterPromptRequestRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptRequestRequestLabel",
          "key": "label",
          "schema": {
            "description": "A human-friendly label for corresponding entities created in Vellum.",
            "generatedName": "RegisterPromptRequestRequestLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptRequestRequestName",
          "key": "name",
          "schema": {
            "description": "A uniquely-identifying name for corresponding entities created in Vellum.",
            "generatedName": "RegisterPromptRequestRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptRequestRequestPrompt",
          "key": "prompt",
          "schema": {
            "description": "Information about how to execute the prompt template.",
            "generatedName": "RegisterPromptRequestRequestPrompt",
            "groupName": null,
            "nameOverride": null,
            "schema": "RegisterPromptPromptInfoRequest",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptRequestRequestProvider",
          "key": "provider",
          "schema": {
            "description": "The initial LLM provider to use for this prompt

* \`ANTHROPIC\` - Anthropic
* \`COHERE\` - Cohere
* \`GOOGLE\` - Google
* \`HOSTED\` - Hosted
* \`MOSAICML\` - MosaicML
* \`MYSTIC\` - Mystic
* \`OPENAI\` - OpenAI
* \`PYQ\` - Pyq",
            "generatedName": "RegisterPromptRequestRequestProvider",
            "groupName": null,
            "nameOverride": null,
            "schema": "ProviderEnum",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptRequestRequestModel",
          "key": "model",
          "schema": {
            "description": "The initial model to use for this prompt",
            "generatedName": "RegisterPromptRequestRequestModel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptRequestRequestParameters",
          "key": "parameters",
          "schema": {
            "description": "The initial model parameters to use for  this prompt",
            "generatedName": "RegisterPromptRequestRequestParameters",
            "groupName": null,
            "nameOverride": null,
            "schema": "RegisterPromptModelParametersRequest",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptRequestRequestMeta",
          "key": "meta",
          "schema": {
            "description": null,
            "generatedName": "registerPromptRequestRequestMeta",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally include additional metadata to store along with the prompt.",
              "generatedName": "RegisterPromptRequestRequestMeta",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "RegisterPromptRequestRequestMetaKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "RegisterPromptRequestRequestMetaValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "RegisterPromptResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisterPromptResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptResponsePrompt",
          "key": "prompt",
          "schema": {
            "description": "Information about the generated prompt",
            "generatedName": "RegisterPromptResponsePrompt",
            "groupName": null,
            "nameOverride": null,
            "schema": "RegisterPromptPrompt",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptResponseSandboxSnapshot",
          "key": "sandbox_snapshot",
          "schema": {
            "description": "Information about the generated sandbox snapshot",
            "generatedName": "RegisterPromptResponseSandboxSnapshot",
            "groupName": null,
            "nameOverride": null,
            "schema": "RegisteredPromptSandboxSnapshot",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptResponseSandbox",
          "key": "sandbox",
          "schema": {
            "description": "Information about the generated sandbox",
            "generatedName": "RegisterPromptResponseSandbox",
            "groupName": null,
            "nameOverride": null,
            "schema": "RegisteredPromptSandbox",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptResponseModelVersion",
          "key": "model_version",
          "schema": {
            "description": "Information about the generated model version",
            "generatedName": "RegisterPromptResponseModelVersion",
            "groupName": null,
            "nameOverride": null,
            "schema": "RegisteredPromptModelVersion",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registerPromptResponseDeployment",
          "key": "deployment",
          "schema": {
            "description": "Information about the generated deployment",
            "generatedName": "RegisterPromptResponseDeployment",
            "groupName": null,
            "nameOverride": null,
            "schema": "RegisteredPromptDeployment",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "RegisteredPromptDeployment": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisteredPromptDeployment",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptDeploymentId",
          "key": "id",
          "schema": {
            "description": "The ID of the generated deployment.",
            "generatedName": "RegisteredPromptDeploymentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptDeploymentName",
          "key": "name",
          "schema": {
            "description": "A uniquely-identifying name for generated deployment.",
            "generatedName": "RegisteredPromptDeploymentName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptDeploymentLabel",
          "key": "label",
          "schema": {
            "description": "A human-friendly label for the generated deployment.",
            "generatedName": "RegisteredPromptDeploymentLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RegisteredPromptModelVersion": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisteredPromptModelVersion",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptModelVersionId",
          "key": "id",
          "schema": {
            "description": "The ID of the generated model version.",
            "generatedName": "RegisteredPromptModelVersionId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptModelVersionLabel",
          "key": "label",
          "schema": {
            "description": "A human-friendly label for the generated model version.",
            "generatedName": "RegisteredPromptModelVersionLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RegisteredPromptSandbox": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisteredPromptSandbox",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptSandboxId",
          "key": "id",
          "schema": {
            "description": "The ID of the generated sandbox.",
            "generatedName": "RegisteredPromptSandboxId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptSandboxLabel",
          "key": "label",
          "schema": {
            "description": "A human-friendly label for the generated sandbox.",
            "generatedName": "RegisteredPromptSandboxLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "RegisteredPromptSandboxSnapshot": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "RegisteredPromptSandboxSnapshot",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "registeredPromptSandboxSnapshotId",
          "key": "id",
          "schema": {
            "description": "The ID of the generated sandbox snapshot.",
            "generatedName": "RegisteredPromptSandboxSnapshotId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SandboxMetricInputParams": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SandboxMetricInputParams",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxMetricInputParamsParams",
          "key": "params",
          "schema": {
            "description": null,
            "generatedName": "sandboxMetricInputParamsParams",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SandboxMetricInputParamsParams",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SandboxMetricInputParamsParams",
                "groupName": null,
                "nameOverride": null,
                "schema": "EvaluationParams",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SandboxMetricInputParamsRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SandboxMetricInputParamsRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxMetricInputParamsRequestParams",
          "key": "params",
          "schema": {
            "description": null,
            "generatedName": "sandboxMetricInputParamsRequestParams",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SandboxMetricInputParamsRequestParams",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SandboxMetricInputParamsRequestParams",
                "groupName": null,
                "nameOverride": null,
                "schema": "EvaluationParamsRequest",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SandboxNodeResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SandboxNodeResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxNodeResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "SandboxNodeResultData",
            "groupName": null,
            "nameOverride": null,
            "schema": "SandboxNodeResultData",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "SandboxNodeResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SandboxNodeResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxNodeResultDataOutputId",
          "key": "output_id",
          "schema": {
            "description": null,
            "generatedName": "SandboxNodeResultDataOutputId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxNodeResultDataText",
          "key": "text",
          "schema": {
            "description": null,
            "generatedName": "sandboxNodeResultDataText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SandboxNodeResultDataText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SandboxNodeResultDataText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxNodeResultDataDelta",
          "key": "delta",
          "schema": {
            "description": null,
            "generatedName": "sandboxNodeResultDataDelta",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SandboxNodeResultDataDelta",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SandboxNodeResultDataDelta",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SandboxScenario": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SandboxScenario",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxScenarioLabel",
          "key": "label",
          "schema": {
            "description": null,
            "generatedName": "sandboxScenarioLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SandboxScenarioLabel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxScenarioInputs",
          "key": "inputs",
          "schema": {
            "description": "The inputs for the scenario",
            "generatedName": "SandboxScenarioInputs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SandboxScenarioInputsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ScenarioInput",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxScenarioId",
          "key": "id",
          "schema": {
            "description": "The id of the scenario",
            "generatedName": "SandboxScenarioId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "sandboxScenarioMetricInputParams",
          "key": "metric_input_params",
          "schema": {
            "description": null,
            "generatedName": "SandboxScenarioMetricInputParams",
            "groupName": null,
            "nameOverride": null,
            "schema": "SandboxMetricInputParams",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "ScenarioInput": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ScenarioInput",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputKey",
          "key": "key",
          "schema": {
            "description": null,
            "generatedName": "ScenarioInputKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "scenarioInputType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ScenarioInputType",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "ScenarioInputType",
                "groupName": null,
                "nameOverride": null,
                "schema": "ScenarioInputTypeEnum",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "scenarioInputValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ScenarioInputValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputChatHistory",
          "key": "chat_history",
          "schema": {
            "description": null,
            "generatedName": "scenarioInputChatHistory",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ScenarioInputChatHistory",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ScenarioInputChatHistoryItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ChatMessage",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ScenarioInputRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "ScenarioInputRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputRequestKey",
          "key": "key",
          "schema": {
            "description": null,
            "generatedName": "ScenarioInputRequestKey",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputRequestType",
          "key": "type",
          "schema": {
            "description": null,
            "generatedName": "scenarioInputRequestType",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ScenarioInputRequestType",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "ScenarioInputRequestType",
                "groupName": null,
                "nameOverride": null,
                "schema": "ScenarioInputTypeEnum",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputRequestValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "scenarioInputRequestValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ScenarioInputRequestValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "scenarioInputRequestChatHistory",
          "key": "chat_history",
          "schema": {
            "description": null,
            "generatedName": "scenarioInputRequestChatHistory",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "ScenarioInputRequestChatHistory",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "ScenarioInputRequestChatHistoryItem",
                "groupName": null,
                "nameOverride": null,
                "schema": "ChatMessageRequest",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "ScenarioInputTypeEnum": {
      "description": "* \`TEXT\` - Text
* \`CHAT_HISTORY\` - Chat History",
      "generatedName": "ScenarioInputTypeEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "TEXT",
          "nameOverride": null,
          "value": "TEXT",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "CHAT_HISTORY",
          "nameOverride": null,
          "value": "CHAT_HISTORY",
        },
      ],
    },
    "SearchErrorResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchErrorResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchErrorResponseDetail",
          "key": "detail",
          "schema": {
            "description": "Details about why the request failed.",
            "generatedName": "SearchErrorResponseDetail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SearchFiltersRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchFiltersRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchFiltersRequestExternalIds",
          "key": "external_ids",
          "schema": {
            "description": null,
            "generatedName": "searchFiltersRequestExternalIds",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The document external IDs to filter by",
              "generatedName": "SearchFiltersRequestExternalIds",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The document external IDs to filter by",
                "generatedName": "SearchFiltersRequestExternalIds",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "SearchFiltersRequestExternalIdsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": 1,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SearchNodeResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchNodeResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchNodeResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "SearchNodeResultData",
            "groupName": null,
            "nameOverride": null,
            "schema": "SearchNodeResultData",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "SearchNodeResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchNodeResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchNodeResultDataResultsOutputId",
          "key": "results_output_id",
          "schema": {
            "description": null,
            "generatedName": "SearchNodeResultDataResultsOutputId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchNodeResultDataResults",
          "key": "results",
          "schema": {
            "description": null,
            "generatedName": "SearchNodeResultDataResults",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SearchNodeResultDataResultsItem",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "SearchNodeResultDataResultsItemKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "SearchNodeResultDataResultsItemValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchNodeResultDataTextOutputId",
          "key": "text_output_id",
          "schema": {
            "description": null,
            "generatedName": "searchNodeResultDataTextOutputId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SearchNodeResultDataTextOutputId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SearchNodeResultDataTextOutputId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchNodeResultDataText",
          "key": "text",
          "schema": {
            "description": null,
            "generatedName": "searchNodeResultDataText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "SearchNodeResultDataText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SearchNodeResultDataText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SearchRequestBodyRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchRequestBodyRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestBodyRequestIndexId",
          "key": "index_id",
          "schema": {
            "description": null,
            "generatedName": "searchRequestBodyRequestIndexId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the index to search against. Must provide either this or index_name.",
              "generatedName": "SearchRequestBodyRequestIndexId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the index to search against. Must provide either this or index_name.",
                "generatedName": "SearchRequestBodyRequestIndexId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestBodyRequestIndexName",
          "key": "index_name",
          "schema": {
            "description": null,
            "generatedName": "searchRequestBodyRequestIndexName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the index to search against. Must provide either this or index_id.",
              "generatedName": "SearchRequestBodyRequestIndexName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the index to search against. Must provide either this or index_id.",
                "generatedName": "SearchRequestBodyRequestIndexName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestBodyRequestQuery",
          "key": "query",
          "schema": {
            "description": "The query to search for.",
            "generatedName": "SearchRequestBodyRequestQuery",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestBodyRequestOptions",
          "key": "options",
          "schema": {
            "description": null,
            "generatedName": "searchRequestBodyRequestOptions",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Configuration options for the search.",
              "generatedName": "SearchRequestBodyRequestOptions",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SearchRequestBodyRequestOptions",
                "groupName": null,
                "nameOverride": null,
                "schema": "SearchRequestOptionsRequest",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SearchRequestOptionsRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchRequestOptionsRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestOptionsRequestLimit",
          "key": "limit",
          "schema": {
            "description": null,
            "generatedName": "searchRequestOptionsRequestLimit",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The maximum number of results to return.",
              "generatedName": "SearchRequestOptionsRequestLimit",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The maximum number of results to return.",
                "generatedName": "SearchRequestOptionsRequestLimit",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "int",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestOptionsRequestWeights",
          "key": "weights",
          "schema": {
            "description": null,
            "generatedName": "searchRequestOptionsRequestWeights",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The weights to use for the search. Must add up to 1.0.",
              "generatedName": "SearchRequestOptionsRequestWeights",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SearchRequestOptionsRequestWeights",
                "groupName": null,
                "nameOverride": null,
                "schema": "SearchWeightsRequest",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestOptionsRequestResultMerging",
          "key": "result_merging",
          "schema": {
            "description": null,
            "generatedName": "searchRequestOptionsRequestResultMerging",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The configuration for merging results.",
              "generatedName": "SearchRequestOptionsRequestResultMerging",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SearchRequestOptionsRequestResultMerging",
                "groupName": null,
                "nameOverride": null,
                "schema": "SearchResultMergingRequest",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchRequestOptionsRequestFilters",
          "key": "filters",
          "schema": {
            "description": null,
            "generatedName": "searchRequestOptionsRequestFilters",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The filters to apply to the search.",
              "generatedName": "SearchRequestOptionsRequestFilters",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SearchRequestOptionsRequestFilters",
                "groupName": null,
                "nameOverride": null,
                "schema": "SearchFiltersRequest",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SearchResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResponseResults",
          "key": "results",
          "schema": {
            "description": "The results of the search. Each result represents a chunk that matches the search query.",
            "generatedName": "SearchResponseResults",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SearchResponseResultsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "SearchResult",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "SearchResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultDocument",
          "key": "document",
          "schema": {
            "description": "The document that contains the chunk that matched the search query.",
            "generatedName": "SearchResultDocument",
            "groupName": null,
            "nameOverride": null,
            "schema": "Document",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultText",
          "key": "text",
          "schema": {
            "description": "The text of the chunk that matched the search query.",
            "generatedName": "SearchResultText",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultKeywords",
          "key": "keywords",
          "schema": {
            "description": null,
            "generatedName": "SearchResultKeywords",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SearchResultKeywordsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultScore",
          "key": "score",
          "schema": {
            "description": "A score representing how well the chunk matches the search query.",
            "generatedName": "SearchResultScore",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SearchResultMergingRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchResultMergingRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchResultMergingRequestEnabled",
          "key": "enabled",
          "schema": {
            "description": "Whether to enable merging results",
            "generatedName": "SearchResultMergingRequestEnabled",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "boolean",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SearchWeightsRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SearchWeightsRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchWeightsRequestSemanticSimilarity",
          "key": "semantic_similarity",
          "schema": {
            "description": "The relative weight to give to semantic similarity",
            "generatedName": "SearchWeightsRequestSemanticSimilarity",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "searchWeightsRequestKeywords",
          "key": "keywords",
          "schema": {
            "description": "The relative weight to give to keyword matches",
            "generatedName": "SearchWeightsRequestKeywords",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "double",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SlimDocument": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SlimDocument",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentId",
          "key": "id",
          "schema": {
            "description": "Vellum-generated ID that uniquely identifies this document.",
            "generatedName": "SlimDocumentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "slimDocumentExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The external ID that was originally provided when uploading the document.",
              "generatedName": "SlimDocumentExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The external ID that was originally provided when uploading the document.",
                "generatedName": "SlimDocumentExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": 1000,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentLastUploadedAt",
          "key": "last_uploaded_at",
          "schema": {
            "description": "A timestamp representing when this document was most recently uploaded.",
            "generatedName": "SlimDocumentLastUploadedAt",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentLabel",
          "key": "label",
          "schema": {
            "description": "Human-friendly name for this document.",
            "generatedName": "SlimDocumentLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": 1000,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentProcessingState",
          "key": "processing_state",
          "schema": {
            "description": null,
            "generatedName": "slimDocumentProcessingState",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.

* \`QUEUED\` - Queued
* \`PROCESSING\` - Processing
* \`PROCESSED\` - Processed
* \`FAILED\` - Failed",
              "generatedName": "SlimDocumentProcessingState",
              "groupName": null,
              "nameOverride": null,
              "schema": "ProcessingStateEnum",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentProcessingFailureReason",
          "key": "processing_failure_reason",
          "schema": {
            "description": null,
            "generatedName": "slimDocumentProcessingFailureReason",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.

* \`EXCEEDED_CHARACTER_LIMIT\` - Exceeded Character Limit",
              "generatedName": "SlimDocumentProcessingFailureReason",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "SlimDocumentProcessingFailureReason",
                "groupName": null,
                "nameOverride": null,
                "schema": "ProcessingFailureReasonEnum",
                "type": "reference",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentStatus",
          "key": "status",
          "schema": {
            "description": null,
            "generatedName": "slimDocumentStatus",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The document's current status.

* \`ACTIVE\` - Active",
              "generatedName": "SlimDocumentStatus",
              "groupName": null,
              "nameOverride": null,
              "schema": "SlimDocumentStatusEnum",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentKeywords",
          "key": "keywords",
          "schema": {
            "description": null,
            "generatedName": "slimDocumentKeywords",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
              "generatedName": "SlimDocumentKeywords",
              "groupName": null,
              "nameOverride": null,
              "type": "array",
              "value": {
                "description": null,
                "generatedName": "SlimDocumentKeywordsItem",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "slimDocumentDocumentToDocumentIndexes",
          "key": "document_to_document_indexes",
          "schema": {
            "description": null,
            "generatedName": "SlimDocumentDocumentToDocumentIndexes",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SlimDocumentDocumentToDocumentIndexesItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "DocumentDocumentToDocumentIndex",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "SlimDocumentStatusEnum": {
      "description": "* \`ACTIVE\` - Active",
      "generatedName": "SlimDocumentStatusEnum",
      "groupName": null,
      "nameOverride": null,
      "type": "literal",
      "value": {
        "type": "string",
        "value": "ACTIVE",
      },
    },
    "SubmitCompletionActualRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SubmitCompletionActualRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualRequestId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "submitCompletionActualRequestId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
              "generatedName": "SubmitCompletionActualRequestId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                "generatedName": "SubmitCompletionActualRequestId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualRequestExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "submitCompletionActualRequestExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
              "generatedName": "SubmitCompletionActualRequestExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                "generatedName": "SubmitCompletionActualRequestExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualRequestText",
          "key": "text",
          "schema": {
            "description": null,
            "generatedName": "submitCompletionActualRequestText",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Text representing what the completion _should_ have been.",
              "generatedName": "SubmitCompletionActualRequestText",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Text representing what the completion _should_ have been.",
                "generatedName": "SubmitCompletionActualRequestText",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualRequestQuality",
          "key": "quality",
          "schema": {
            "description": null,
            "generatedName": "submitCompletionActualRequestQuality",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
              "generatedName": "SubmitCompletionActualRequestQuality",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                "generatedName": "SubmitCompletionActualRequestQuality",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "double",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualRequestTimestamp",
          "key": "timestamp",
          "schema": {
            "description": null,
            "generatedName": "submitCompletionActualRequestTimestamp",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
              "generatedName": "SubmitCompletionActualRequestTimestamp",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                "generatedName": "SubmitCompletionActualRequestTimestamp",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "SubmitCompletionActualsErrorResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SubmitCompletionActualsErrorResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualsErrorResponseDetail",
          "key": "detail",
          "schema": {
            "description": null,
            "generatedName": "SubmitCompletionActualsErrorResponseDetail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "SubmitCompletionActualsRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "SubmitCompletionActualsRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualsRequestDeploymentId",
          "key": "deployment_id",
          "schema": {
            "description": null,
            "generatedName": "submitCompletionActualsRequestDeploymentId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The ID of the deployment. Must provide either this or deployment_name.",
              "generatedName": "SubmitCompletionActualsRequestDeploymentId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "generatedName": "SubmitCompletionActualsRequestDeploymentId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualsRequestDeploymentName",
          "key": "deployment_name",
          "schema": {
            "description": null,
            "generatedName": "submitCompletionActualsRequestDeploymentName",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The name of the deployment. Must provide either this or deployment_id.",
              "generatedName": "SubmitCompletionActualsRequestDeploymentName",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "generatedName": "SubmitCompletionActualsRequestDeploymentName",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "submitCompletionActualsRequestActuals",
          "key": "actuals",
          "schema": {
            "description": "Feedback regarding the quality of previously generated completions",
            "generatedName": "SubmitCompletionActualsRequestActuals",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "SubmitCompletionActualsRequestActualsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "SubmitCompletionActualRequest",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "TerminalNodeChatHistoryResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TerminalNodeChatHistoryResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeChatHistoryResultName",
          "key": "name",
          "schema": {
            "description": "The unique name given to the terminal node that produced this output.",
            "generatedName": "TerminalNodeChatHistoryResultName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeChatHistoryResultValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "TerminalNodeChatHistoryResultValue",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "TerminalNodeChatHistoryResultValueItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ChatMessage",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "TerminalNodeJsonResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TerminalNodeJsonResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeJsonResultName",
          "key": "name",
          "schema": {
            "description": "The unique name given to the terminal node that produced this output.",
            "generatedName": "TerminalNodeJsonResultName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeJsonResultValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "TerminalNodeJsonResultValue",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "TerminalNodeJsonResultValueKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "TerminalNodeJsonResultValueValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "TerminalNodeResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TerminalNodeResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeResultData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "TerminalNodeResultData",
            "groupName": null,
            "nameOverride": null,
            "schema": "TerminalNodeResultData",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "TerminalNodeResultData": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TerminalNodeResultData",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeResultDataOutput",
          "key": "output",
          "schema": {
            "description": null,
            "generatedName": "TerminalNodeResultDataOutput",
            "groupName": null,
            "nameOverride": null,
            "schema": "TerminalNodeResultOutput",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "TerminalNodeResultOutput": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "TerminalNodeResultOutput",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "CHAT_HISTORY": {
            "description": null,
            "generatedName": "ComponentsSchemasTerminalNodeChatHistoryResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "TerminalNodeChatHistoryResult",
            "type": "reference",
          },
          "JSON": {
            "description": null,
            "generatedName": "ComponentsSchemasTerminalNodeJsonResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "TerminalNodeJsonResult",
            "type": "reference",
          },
          "STRING": {
            "description": null,
            "generatedName": "ComponentsSchemasTerminalNodeStringResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "TerminalNodeStringResult",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "TerminalNodeStringResult": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TerminalNodeStringResult",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeStringResultName",
          "key": "name",
          "schema": {
            "description": "The unique name given to the terminal node that produced this output.",
            "generatedName": "TerminalNodeStringResultName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "terminalNodeStringResultValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "TerminalNodeStringResultValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "TestSuiteTestCase": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TestSuiteTestCase",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseTestCaseId",
          "key": "test_case_id",
          "schema": {
            "description": null,
            "generatedName": "testSuiteTestCaseTestCaseId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
              "generatedName": "TestSuiteTestCaseTestCaseId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseLabel",
          "key": "label",
          "schema": {
            "description": null,
            "generatedName": "testSuiteTestCaseLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A human-friendly label for the test case.",
              "generatedName": "TestSuiteTestCaseLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "A human-friendly label for the test case.",
                "generatedName": "TestSuiteTestCaseLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseInputValues",
          "key": "input_values",
          "schema": {
            "description": "Key/value pairs for each input variable that the Test Suite expects.",
            "generatedName": "TestSuiteTestCaseInputValues",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "TestSuiteTestCaseInputValuesKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "TestSuiteTestCaseInputValuesValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseEvaluationParams",
          "key": "evaluation_params",
          "schema": {
            "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
            "generatedName": "TestSuiteTestCaseEvaluationParams",
            "groupName": null,
            "nameOverride": null,
            "schema": "EvaluationParams",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "TestSuiteTestCaseRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "TestSuiteTestCaseRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseRequestTestCaseId",
          "key": "test_case_id",
          "schema": {
            "description": null,
            "generatedName": "testSuiteTestCaseRequestTestCaseId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
              "generatedName": "TestSuiteTestCaseRequestTestCaseId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": 1,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseRequestLabel",
          "key": "label",
          "schema": {
            "description": null,
            "generatedName": "testSuiteTestCaseRequestLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "A human-friendly label for the test case.",
              "generatedName": "TestSuiteTestCaseRequestLabel",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "A human-friendly label for the test case.",
                "generatedName": "TestSuiteTestCaseRequestLabel",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseRequestInputValues",
          "key": "input_values",
          "schema": {
            "description": "Key/value pairs for each input variable that the Test Suite expects.",
            "generatedName": "TestSuiteTestCaseRequestInputValues",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "TestSuiteTestCaseRequestInputValuesKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "TestSuiteTestCaseRequestInputValuesValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "testSuiteTestCaseRequestEvaluationParams",
          "key": "evaluation_params",
          "schema": {
            "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
            "generatedName": "TestSuiteTestCaseRequestEvaluationParams",
            "groupName": null,
            "nameOverride": null,
            "schema": "EvaluationParamsRequest",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "UploadDocumentBodyRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UploadDocumentBodyRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uploadDocumentBodyRequestAddToIndexNames",
          "key": "add_to_index_names",
          "schema": {
            "description": null,
            "generatedName": "uploadDocumentBodyRequestAddToIndexNames",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally include the names of all indexes that you'd like this document to be included in",
              "generatedName": "UploadDocumentBodyRequestAddToIndexNames",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                "generatedName": "UploadDocumentBodyRequestAddToIndexNames",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UploadDocumentBodyRequestAddToIndexNamesItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": 1,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uploadDocumentBodyRequestExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "uploadDocumentBodyRequestExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
              "generatedName": "UploadDocumentBodyRequestExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                "generatedName": "UploadDocumentBodyRequestExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": 1,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uploadDocumentBodyRequestLabel",
          "key": "label",
          "schema": {
            "description": "A human-friendly name for this document. Typically the filename.",
            "generatedName": "UploadDocumentBodyRequestLabel",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uploadDocumentBodyRequestContents",
          "key": "contents",
          "schema": {
            "description": "The file contents of the document.",
            "generatedName": "UploadDocumentBodyRequestContents",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uploadDocumentBodyRequestKeywords",
          "key": "keywords",
          "schema": {
            "description": null,
            "generatedName": "uploadDocumentBodyRequestKeywords",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
              "generatedName": "UploadDocumentBodyRequestKeywords",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                "generatedName": "UploadDocumentBodyRequestKeywords",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "UploadDocumentBodyRequestKeywordsItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": {
                    "maxLength": null,
                    "minLength": 1,
                    "type": "string",
                  },
                  "type": "primitive",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "UploadDocumentErrorResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UploadDocumentErrorResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uploadDocumentErrorResponseDetail",
          "key": "detail",
          "schema": {
            "description": null,
            "generatedName": "UploadDocumentErrorResponseDetail",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UploadDocumentResponse": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UploadDocumentResponse",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "uploadDocumentResponseDocumentId",
          "key": "document_id",
          "schema": {
            "description": "The ID of the newly created document.",
            "generatedName": "UploadDocumentResponseDocumentId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "UpsertSandboxScenarioRequestRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "UpsertSandboxScenarioRequestRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSandboxScenarioRequestRequestLabel",
          "key": "label",
          "schema": {
            "description": null,
            "generatedName": "upsertSandboxScenarioRequestRequestLabel",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UpsertSandboxScenarioRequestRequestLabel",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSandboxScenarioRequestRequestInputs",
          "key": "inputs",
          "schema": {
            "description": "The inputs for the scenario",
            "generatedName": "UpsertSandboxScenarioRequestRequestInputs",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "UpsertSandboxScenarioRequestRequestInputsItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ScenarioInputRequest",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSandboxScenarioRequestRequestScenarioId",
          "key": "scenario_id",
          "schema": {
            "description": null,
            "generatedName": "upsertSandboxScenarioRequestRequestScenarioId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": "The id of the scenario to update. If none is provided, an id will be generated and a new scenario will be appended.",
              "generatedName": "UpsertSandboxScenarioRequestRequestScenarioId",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": 1,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "upsertSandboxScenarioRequestRequestMetricInputParams",
          "key": "metric_input_params",
          "schema": {
            "description": null,
            "generatedName": "upsertSandboxScenarioRequestRequestMetricInputParams",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "UpsertSandboxScenarioRequestRequestMetricInputParams",
              "groupName": null,
              "nameOverride": null,
              "schema": "SandboxMetricInputParamsRequest",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowEventError": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowEventError",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowEventErrorMessage",
          "key": "message",
          "schema": {
            "description": null,
            "generatedName": "WorkflowEventErrorMessage",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowEventErrorCode",
          "key": "code",
          "schema": {
            "description": null,
            "generatedName": "WorkflowEventErrorCode",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowExecutionEventErrorCode",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "WorkflowExecutionEventErrorCode": {
      "description": "* \`WORKFLOW_INITIALIZATION\` - WORKFLOW_INITIALIZATION
* \`NODE_EXECUTION\` - NODE_EXECUTION",
      "generatedName": "WorkflowExecutionEventErrorCode",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "WORKFLOW_INITIALIZATION",
          "nameOverride": null,
          "value": "WORKFLOW_INITIALIZATION",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "NODE_EXECUTION",
          "nameOverride": null,
          "value": "NODE_EXECUTION",
        },
      ],
    },
    "WorkflowExecutionNodeResultEvent": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowExecutionNodeResultEvent",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowExecutionNodeResultEventRunId",
          "key": "run_id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowExecutionNodeResultEventRunId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowExecutionNodeResultEventExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "workflowExecutionNodeResultEventExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkflowExecutionNodeResultEventExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorkflowExecutionNodeResultEventExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowExecutionNodeResultEventData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "WorkflowExecutionNodeResultEventData",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowNodeResultEvent",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "WorkflowExecutionWorkflowResultEvent": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowExecutionWorkflowResultEvent",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowExecutionWorkflowResultEventRunId",
          "key": "run_id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowExecutionWorkflowResultEventRunId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowExecutionWorkflowResultEventExternalId",
          "key": "external_id",
          "schema": {
            "description": null,
            "generatedName": "workflowExecutionWorkflowResultEventExternalId",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkflowExecutionWorkflowResultEventExternalId",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorkflowExecutionWorkflowResultEventExternalId",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowExecutionWorkflowResultEventData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "WorkflowExecutionWorkflowResultEventData",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowResultEvent",
            "type": "reference",
          },
        },
      ],
      "type": "object",
    },
    "WorkflowNodeResultData": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorkflowNodeResultData",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "CONDITIONAL": {
            "description": null,
            "generatedName": "ComponentsSchemasConditionalNodeResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "ConditionalNodeResult",
            "type": "reference",
          },
          "DEPLOYMENT": {
            "description": null,
            "generatedName": "ComponentsSchemasDeploymentNodeResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "DeploymentNodeResult",
            "type": "reference",
          },
          "PROMPT": {
            "description": null,
            "generatedName": "ComponentsSchemasPromptNodeResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "PromptNodeResult",
            "type": "reference",
          },
          "SANDBOX": {
            "description": null,
            "generatedName": "ComponentsSchemasSandboxNodeResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "SandboxNodeResult",
            "type": "reference",
          },
          "SEARCH": {
            "description": null,
            "generatedName": "ComponentsSchemasSearchNodeResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "SearchNodeResult",
            "type": "reference",
          },
          "TERMINAL": {
            "description": null,
            "generatedName": "ComponentsSchemasTerminalNodeResult",
            "groupName": null,
            "nameOverride": null,
            "schema": "TerminalNodeResult",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "WorkflowNodeResultEvent": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowNodeResultEvent",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowNodeResultEventId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowNodeResultEventId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowNodeResultEventNodeId",
          "key": "node_id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowNodeResultEventNodeId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowNodeResultEventNodeResultId",
          "key": "node_result_id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowNodeResultEventNodeResultId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowNodeResultEventState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "WorkflowNodeResultEventState",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowNodeResultEventState",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowNodeResultEventTs",
          "key": "ts",
          "schema": {
            "description": null,
            "generatedName": "workflowNodeResultEventTs",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkflowNodeResultEventTs",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorkflowNodeResultEventTs",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "type": "datetime",
                },
                "type": "primitive",
              },
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowNodeResultEventData",
          "key": "data",
          "schema": {
            "description": null,
            "generatedName": "WorkflowNodeResultEventData",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorkflowNodeResultEventData",
              "groupName": null,
              "nameOverride": null,
              "schema": "WorkflowNodeResultData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowNodeResultEventError",
          "key": "error",
          "schema": {
            "description": null,
            "generatedName": "workflowNodeResultEventError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkflowNodeResultEventError",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorkflowNodeResultEventError",
                "groupName": null,
                "nameOverride": null,
                "schema": "WorkflowEventError",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowNodeResultEventState": {
      "description": "* \`INITIATED\` - INITIATED
* \`STREAMING\` - STREAMING
* \`FULFILLED\` - FULFILLED
* \`REJECTED\` - REJECTED",
      "generatedName": "WorkflowNodeResultEventState",
      "groupName": null,
      "nameOverride": null,
      "type": "enum",
      "values": [
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "INITIATED",
          "nameOverride": null,
          "value": "INITIATED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "STREAMING",
          "nameOverride": null,
          "value": "STREAMING",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "FULFILLED",
          "nameOverride": null,
          "value": "FULFILLED",
        },
        {
          "casing": {
            "camel": null,
            "pascal": null,
            "screamingSnake": null,
            "snake": null,
          },
          "description": null,
          "generatedName": "REJECTED",
          "nameOverride": null,
          "value": "REJECTED",
        },
      ],
    },
    "WorkflowRequestChatHistoryInputRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowRequestChatHistoryInputRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowRequestChatHistoryInputRequestName",
          "key": "name",
          "schema": {
            "description": "The variable's name, as defined in the Workflow.",
            "generatedName": "WorkflowRequestChatHistoryInputRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowRequestChatHistoryInputRequestValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "WorkflowRequestChatHistoryInputRequestValue",
            "groupName": null,
            "nameOverride": null,
            "type": "array",
            "value": {
              "description": null,
              "generatedName": "WorkflowRequestChatHistoryInputRequestValueItem",
              "groupName": null,
              "nameOverride": null,
              "schema": "ChatMessageRequest",
              "type": "reference",
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowRequestInputRequest": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorkflowRequestInputRequest",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "CHAT_HISTORY": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowRequestChatHistoryInputRequest",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowRequestChatHistoryInputRequest",
            "type": "reference",
          },
          "JSON": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowRequestJsonInputRequest",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowRequestJSONInputRequest",
            "type": "reference",
          },
          "STRING": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowRequestStringInputRequest",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowRequestStringInputRequest",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "WorkflowRequestJSONInputRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowRequestJsonInputRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowRequestJsonInputRequestName",
          "key": "name",
          "schema": {
            "description": "The variable's name, as defined in the Workflow.",
            "generatedName": "WorkflowRequestJsonInputRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowRequestJsonInputRequestValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "WorkflowRequestJsonInputRequestValue",
            "groupName": null,
            "key": {
              "description": null,
              "generatedName": "WorkflowRequestJsonInputRequestValueKey",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
            },
            "nameOverride": null,
            "type": "map",
            "value": {
              "generatedName": "WorkflowRequestJsonInputRequestValueValue",
              "nameOverride": null,
              "type": "unknown",
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowRequestStringInputRequest": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowRequestStringInputRequest",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowRequestStringInputRequestName",
          "key": "name",
          "schema": {
            "description": "The variable's name, as defined in the Workflow.",
            "generatedName": "WorkflowRequestStringInputRequestName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": 1,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowRequestStringInputRequestValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "WorkflowRequestStringInputRequestValue",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
      ],
      "type": "object",
    },
    "WorkflowResultEvent": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowResultEvent",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventId",
          "key": "id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventState",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowNodeResultEventState",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventTs",
          "key": "ts",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventTs",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "type": "datetime",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutput",
          "key": "output",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutput",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorkflowResultEventOutput",
              "groupName": null,
              "nameOverride": null,
              "schema": "WorkflowResultEventOutputData",
              "type": "reference",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventError",
          "key": "error",
          "schema": {
            "description": null,
            "generatedName": "workflowResultEventError",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkflowResultEventError",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorkflowResultEventError",
                "groupName": null,
                "nameOverride": null,
                "schema": "WorkflowEventError",
                "type": "reference",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowResultEventOutputData": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorkflowResultEventOutputData",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "CHAT_HISTORY": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowResultEventOutputDataChatHistory",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowResultEventOutputDataChatHistory",
            "type": "reference",
          },
          "JSON": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowResultEventOutputDataJson",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowResultEventOutputDataJSON",
            "type": "reference",
          },
          "STRING": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowResultEventOutputDataString",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowResultEventOutputDataString",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
    "WorkflowResultEventOutputDataChatHistory": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowResultEventOutputDataChatHistory",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataChatHistoryName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataChatHistoryName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataChatHistoryState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataChatHistoryState",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowNodeResultEventState",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataChatHistoryNodeId",
          "key": "node_id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataChatHistoryNodeId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataChatHistoryDelta",
          "key": "delta",
          "schema": {
            "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
            "generatedName": "WorkflowResultEventOutputDataChatHistoryDelta",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
              "generatedName": "WorkflowResultEventOutputDataChatHistoryDelta",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataChatHistoryValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "workflowResultEventOutputDataChatHistoryValue",
            "groupName": null,
            "nameOverride": null,
            "type": "optional",
            "value": {
              "description": null,
              "generatedName": "WorkflowResultEventOutputDataChatHistoryValue",
              "groupName": null,
              "nameOverride": null,
              "type": "nullable",
              "value": {
                "description": null,
                "generatedName": "WorkflowResultEventOutputDataChatHistoryValue",
                "groupName": null,
                "nameOverride": null,
                "type": "array",
                "value": {
                  "description": null,
                  "generatedName": "WorkflowResultEventOutputDataChatHistoryValueItem",
                  "groupName": null,
                  "nameOverride": null,
                  "schema": "ChatMessage",
                  "type": "reference",
                },
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowResultEventOutputDataJSON": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowResultEventOutputDataJson",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataJsonName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataJsonName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataJsonState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataJsonState",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowNodeResultEventState",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataJsonNodeId",
          "key": "node_id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataJsonNodeId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataJsonDelta",
          "key": "delta",
          "schema": {
            "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
            "generatedName": "WorkflowResultEventOutputDataJsonDelta",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
              "generatedName": "WorkflowResultEventOutputDataJsonDelta",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataJsonValue",
          "key": "value",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataJsonValue",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": null,
              "generatedName": "WorkflowResultEventOutputDataJsonValue",
              "groupName": null,
              "key": {
                "description": null,
                "generatedName": "WorkflowResultEventOutputDataJsonValueKey",
                "groupName": null,
                "nameOverride": null,
                "schema": {
                  "maxLength": null,
                  "minLength": null,
                  "type": "string",
                },
              },
              "nameOverride": null,
              "type": "map",
              "value": {
                "generatedName": "WorkflowResultEventOutputDataJsonValueValue",
                "nameOverride": null,
                "type": "unknown",
              },
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowResultEventOutputDataString": {
      "allOf": [],
      "allOfPropertyConflicts": [],
      "description": null,
      "generatedName": "WorkflowResultEventOutputDataString",
      "groupName": null,
      "nameOverride": null,
      "properties": [
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataStringName",
          "key": "name",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataStringName",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataStringState",
          "key": "state",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataStringState",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowNodeResultEventState",
            "type": "reference",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataStringNodeId",
          "key": "node_id",
          "schema": {
            "description": null,
            "generatedName": "WorkflowResultEventOutputDataStringNodeId",
            "groupName": null,
            "nameOverride": null,
            "schema": {
              "maxLength": null,
              "minLength": null,
              "type": "string",
            },
            "type": "primitive",
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataStringDelta",
          "key": "delta",
          "schema": {
            "description": "The newly output string value, meant to be concatenated with all previous. Will be non-null for events of state STREAMING.",
            "generatedName": "WorkflowResultEventOutputDataStringDelta",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": "The newly output string value, meant to be concatenated with all previous. Will be non-null for events of state STREAMING.",
              "generatedName": "WorkflowResultEventOutputDataStringDelta",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
        {
          "audiences": [],
          "conflict": {},
          "generatedName": "workflowResultEventOutputDataStringValue",
          "key": "value",
          "schema": {
            "description": "The entire string value. Will be non-null for events of state FULFILLED.",
            "generatedName": "WorkflowResultEventOutputDataStringValue",
            "groupName": null,
            "nameOverride": null,
            "type": "nullable",
            "value": {
              "description": "The entire string value. Will be non-null for events of state FULFILLED.",
              "generatedName": "WorkflowResultEventOutputDataStringValue",
              "groupName": null,
              "nameOverride": null,
              "schema": {
                "maxLength": null,
                "minLength": null,
                "type": "string",
              },
              "type": "primitive",
            },
          },
        },
      ],
      "type": "object",
    },
    "WorkflowStreamEvent": {
      "type": "oneOf",
      "value": {
        "commonProperties": [],
        "description": null,
        "discriminantProperty": "type",
        "generatedName": "WorkflowStreamEvent",
        "groupName": null,
        "nameOverride": null,
        "schemas": {
          "NODE": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowExecutionNodeResultEvent",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowExecutionNodeResultEvent",
            "type": "reference",
          },
          "WORKFLOW": {
            "description": null,
            "generatedName": "ComponentsSchemasWorkflowExecutionWorkflowResultEvent",
            "groupName": null,
            "nameOverride": null,
            "schema": "WorkflowExecutionWorkflowResultEvent",
            "type": "reference",
          },
        },
        "type": "discriminated",
      },
    },
  },
  "securitySchemes": {
    "apiKeyAuth": {
      "headerEnvVar": null,
      "headerName": "X_API_KEY",
      "headerVariableName": null,
      "prefix": null,
      "type": "header",
    },
  },
  "servers": [
    {
      "description": "Default Server",
      "name": "Default",
      "url": "https://api.vellum.ai",
    },
  ],
  "tags": {
    "orderedTagIds": null,
    "tagsById": {},
  },
  "title": "Vellum Client API",
  "variables": {},
  "webhooks": [],
}
`;
