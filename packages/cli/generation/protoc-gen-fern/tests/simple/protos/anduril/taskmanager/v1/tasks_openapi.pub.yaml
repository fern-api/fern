openapi: 3.0.0
info:
  title: The Tasks API
  description: |-
    The Tasks API is a service that lets you create, update, monitor, and execute a task. The Tasks API is responsible for 
    handling the state associated with tasks in an environment, as well as the correct routing of these tasks to taskable 
    agents. For integrators building taskable agents and integrating with Lattice, the focus is on interacting with Task 
    Manager to receive tasks and report status updates.
  version: '1.0.0'
servers:
- url: "{server}/api/v1"
  variables:
    server:
      default: "developer.anduril.com"
      description: The Lattice server instance to connect to.
paths:
  /tasks:
    post:
      tags:
        - task
      summary: Create a new task and schedule it for delivery
      description: |-
        Submit a request to create a task and schedule it for delivery. Tasks, once delivered, will 
        be asynchronously updated by their destined agent. 
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreation'
        required: true
      responses:
        '201':
          description: Task creation was successful
          content:
            application/json:
              schema:
                $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /tasks/{taskId}:
    get:
      tags:
        - task
      summary: Find a task
      operationId: getTaskById
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task retrieval was successful.
          content:
            application/json:
              schema:
                $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /tasks/{taskId}/status:
    put:
      tags:
        - task
      summary: Update a task's status
      operationId: updateTaskStatusById
      parameters:
        - name: taskId
          in: path
          description: ID of task to update status of
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatusUpdate'
        required: true
      responses:
        '200':
          description: Task status update was successful
          content:
            application/json:
              schema:
                $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /tasks/query:
    post:
      tags:
        - task
      summary: Query for tasks by search criteria
      operationId: queryTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskQuery'
        required: true
      responses:
        '200':
          description: Task query was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueryResults'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /agent/listen:
    post:
      tags:
        - task
      summary: Receive tasks that are awaiting delivery
      description: |-
        This is a long polling API that will block until a new task is ready for delivery. If no new task is 
        available then the server will hold on to your request for up to 5 minutes, after that 5 minute timeout 
        period you will be expected to reinitiate a new request.
      operationId: longPollListenAsAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentListener'
        required: true
      responses:
        '200':
          description: Requests for the agent to comply with.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentRequest'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
components:
  # shared response types
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized to access resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  # manual data schemas
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Timestamp:
      description: Datetime string in ISO 8601 format.
      type: string
    TaskCreation:
      type: object
      properties:
        taskId:
          description: |-
            If non-empty, will set the requested Task ID, otherwise will generate a new random
            GUID. Will reject if supplied Task ID does not match [A-Za-z0-9_-.]{5,36}.
          type: string
        displayName:
          description: Human readable display name for this Task, should be short (<100 chars).
          type: string
        description:
          description: Longer, free form human readable description of this Task.
          type: string
        specification:
          description: Full set of task parameters.
          allOf:
            - $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/GoogleProtobufAny'
        author:
            $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/Principal'
        relations:
          description: |-
            Any relationships associated with this Task, such as a parent Task or an assignee
            this Task is designated to for execution.
          allOf:
            - $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/Relations'
        isExecutedElsewhere:
          description: |-
            If set, then the service will not trigger execution of this task on an agent. Useful
            for when ingesting tasks from an external system that is triggering execution of tasks
            on agents.
          type: boolean
        initialEntities:
          description: |-
            Indicates an initial set of entities that can be used to execute an entity aware
            task. For example, an entity Objective, an entity Keep In Zone, etc.
          type: array
          items:
            $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/TaskEntity'
    TaskQuery:
      description: Query for Tasks. Returns the each latest Task by Status ID and Version ID by default with no filters.
      type: object
      properties:
        pageToken:
          description: If set, returns results starting from the given pageToken.
          type: string
        parentTaskId:
          description: |-
            If present matches Tasks with this parent Task ID.
            Note: this is mutually exclusive with all other query parameters, i.e., either provide parent Task ID, or
            any of the remaining parameters, but not both.
          type: string
        statusFilter:
          type: object
          properties:
            status:
              enum:
                - STATUS_INVALID
                - STATUS_CREATED
                - STATUS_SCHEDULED_IN_MANAGER
                - STATUS_SENT
                - STATUS_MACHINE_RECEIPT
                - STATUS_ACK
                - STATUS_WILCO
                - STATUS_EXECUTING
                - STATUS_WAITING_FOR_UPDATE
                - STATUS_DONE_OK
                - STATUS_DONE_NOT_OK
                - STATUS_REPLACED
                - STATUS_CANCEL_REQUESTED
                - STATUS_COMPLETE_REQUESTED
                - STATUS_VERSION_REJECTED
              type: string
              description: Status of the Task to filter by, inclusive.
              format: enum
        updateTimeRange:
          type: object
          description: If provided, only provides Tasks updated within the time range.
          properties:
            startTime:
              type: string
              description: If provided, returns Tasks only updated after this time.
              allOf:
                - $ref: '#/components/schemas/Timestamp'
            endTime:
              type: string
              description: If provided, returns Tasks only updated before this time.
              allOf:
                - $ref: '#/components/schemas/Timestamp'
    TaskQueryResults:
      type: object
      properties:
        tasks:
          type: array
          items:
            type: object
            allOf:
              - $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/Task'
        nextPageToken:
          type: string
          description: |-
            Incomplete results can be detected by a non-empty nextPageToken field in the query results. In order to retrieve 
            the next page, perform the exact same request as previously and append a pageToken field with the value of 
            nextPageToken from the previous page. A new nextPageToken is provided on the following pages until all the 
            results are retrieved.
    TaskStatusUpdate:
      type: object
      properties:
        statusVersion:
          description: |-
            The status version of the task to update. This version number increments to indicate the task's 
            current stage in its status lifecycle. Specifically, whenever a task's status updates, the status 
            version increments by one. Any status updates received with a lower status version number than what 
            is known are considered stale and ignored.
          type: integer
        newStatus:
          description: The new status of the task.
          allOf:
            - $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/TaskStatus'
        author:
          $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/Principal'
    AgentListener:
      type: object
      properties:
        agentSelector:
          description: Selector criteria to determine which Agent Tasks the agent receives
          allOf:
            - $ref: '#/components/schemas/EntityIdsSelector'
    EntityIdsSelector:
      type: object
      properties:
        entityIds:
          type: array
          description: Receive tasks as an assignee for one or more of the supplied entity ids.
          items:
            type: string
    AgentRequest:
      type: object
      properties:
        executeRequest:
          $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/ExecuteRequest'
        cancelRequest:
          $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/CancelRequest'
        completeRequest:
          $ref: 'tasks_openapi_model.gen.yaml#/components/schemas/CompleteRequest'
tags:
  - name: task
    description: The Tasks API
    x-displayName: The Tasks API
x-tagGroups:
  - name: General
    tags:
      - task
