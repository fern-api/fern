openapi: 3.0.0
info: 
  title: The Entities API
  description: |-
    The Entities API provides a common understanding of entities within the common operational picture (COP). Every object 
    in a COP is represented as an "Entity". Each Entity is essentially an ID, with a life cycle, and a collection
    of data components. Each data component is a separate top level field within the entity type definition.

    The Entities API provides a way to query the currently live set of entities within a set of filter constraints,
    as well as a limited set of management APIs to change the grouping or relationships between entities.
  version: '1.0.0'
security:
  - bearerHttpAuthentication: []
servers:
- url: "{server}/api/v1"
  variables:
    server:
      default: "developer.anduril.com"
      description: The Lattice server instance to connect to.
paths:
  /entities:
    put:
      tags:
        - entity
      summary: Create or update an entity
      description: |-
        Publish an entity for ingest into the Entities API. Entities created with this method are "owned" by the originator: other sources, 
        such as the UI, may not edit or delete these entities. The server validates entities at API call time and 
        returns an error if the entity is invalid.
        
        An entity ID must be provided when calling this endpoint. If the entity referenced by the entity ID does not exist
        then it will be created. Otherwise the entity will be updated. An entity will only be updated if its
        provenance.sourceUpdateTime is greater than the provenance.sourceUpdateTime of the existing entity.
      operationId: publishEntityRest
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'entities_openapi_model.gen.yaml#/components/schemas/Entity'
      responses:
        '200': 
          description: The request was valid and accepted.
          content:
            application/json:
              schema:
                $ref: 'entities_openapi_model.gen.yaml#/components/schemas/Entity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /entities/{entityId}:
    get:
      tags:
        - entity
      summary: Get the content of an entity
      operationId: getEntityById
      parameters:
        - name: entityId
          in: path
          description: ID of the entity to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entity retrieval was successful
          content:
            application/json:
              schema:
                $ref: 'entities_openapi_model.gen.yaml#/components/schemas/Entity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /entities/{entityId}/override/{fieldPath}:
    put:
      tags:
        - entity
      summary: Override an entity component
      description: |-
        Only fields marked with overridable can be overridden. Please refer to our documentation to see the comprehensive
        list of fields that can be overridden. The entity in the request body should only have a value set on the field 
        specified in the field path parameter. Field paths are rooted in the base entity object and must be represented 
        using lower_snake_case. Do not include "entity" in the field path.
        
        Note that overrides are applied in an eventually consistent manner. If multiple overrides are created 
        concurrently for the same field path, the last writer wins.
      operationId: putEntityOverrideRest
      parameters:
        - name: entityId
          in: path
          description: ID of the entity to override
          required: true
          schema:
            type: string
        - name: fieldPath
          in: path
          description: fieldPath to override
          required: true
          schema:
            type: string
          example: mil_view.disposition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityOverride'
      responses:
        '200':
          description: |-
            The Entities API accepts the override.
          content:
            application/json:
              schema:
                $ref: 'entities_openapi_model.gen.yaml#/components/schemas/Entity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - entity
      summary: Remove an entity override
      description: |-
        This operation clears the override value from the specified field path on the entity.
      operationId: removeEntityOverrideRest
      parameters:
        - name: entityId
          in: path
          description: ID of the entity to undo an override from
          required: true
          schema:
            type: string
        - name: fieldPath
          in: path
          description: fieldPath to clear overrides from
          required: true
          schema:
            type: string
          example: mil_view.disposition
      responses:
        '200':
          description: Removal of entity override was successful
          content:
            application/json:
              schema:
                $ref: 'entities_openapi_model.gen.yaml#/components/schemas/Entity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /entities/events:
    post:
      tags:
        - entity
      summary: Retrieve batches of entity events in real-time
      description: |-
        This is a long polling API that will first return all preexisting data and then return all new data as
        it becomes available. If you want to start a new polling session then open a request with an empty
        'sessionToken' in the request body. The server will return a new session token in the response.
        If you want to retrieve the next batch of results from an existing polling session then send the session
        token you received from the server in the request body. If no new data is available then the server will
        hold the connection open for up to 5 minutes. After the 5 minute timeout period, the server will close the 
        connection with no results and you may resume polling with the same session token. If your session falls behind 
        more than 3x the total number of entities in the environment, the server will terminate your session. 
        In this case you must start a new session by sending a request with an empty session token.
      operationId: longPollEntityEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityEventRequest'
      responses:
        '200':
          description: Entity event batch retrieval was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityEventResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '408':
          $ref: '#/components/responses/SessionTimeout'
        '429':
          $ref: '#/components/responses/ResourceExhausted'
components:
# security
  securitySchemes:
    bearerHttpAuthentication:
      description: Bearer token using a JWT
      type: http
      scheme: bearer
      bearerFormat: JWT
# shared response types
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized to access resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    SessionTimeout:
      description: |-
        The server has terminated the session. The server will send this error when the client has fallen too far
        behind in processing entity events. If the server sends this error, then the session token is invalid and a
        new session must be initiated to receive entity events.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ResourceExhausted:
      description: Server is out of resources or reaching rate limiting or quota and cannot accept the request at this time.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
# manual data schemas
  schemas:
    Error:
      type: object
      properties:
        errorCode:
          type: string
        message: 
          type: string
      required:
        - errorCode
        - message
    Timestamp:
      description: Datetime string in ISO 8601 format.
      type: string
    EntityOverride:
      type: object
      properties:
        entity:
          description: |-
            The entity containing the overridden fields. The service will extract the overridable fields from 
            the object and ignore all other fields.
          allOf:
            - $ref: 'entities_openapi_model.gen.yaml#/components/schemas/Entity'
        provenance:
          description: |-
            Additional information about the source of the override.
          allOf:
            - $ref: 'entities_openapi_model.gen.yaml#/components/schemas/Provenance'
    EntityEventRequest:
      type: object
      properties:
        sessionToken:
          type: string
          description: Long-poll session identifier. Leave empty to start a new polling session.
        batchSize:
          description: Maximum size of response batch. Defaults to 100. Must be between 1 and 2000 (inclusive).
          type: integer
      required:
        - sessionToken
    EntityEventResponse:
      type: object
      properties:
        sessionToken:
          type: string
          description: Long-poll session identifier. Use this token to resume polling on subsequent requests.
        entityEvents:
          type: array
          items:
            $ref: 'entities_openapi_model.gen.yaml#/components/schemas/EntityEvent'
tags:
  - name: entity
    description: The Entities API
    x-displayName: The Entities API
x-tagGroups:
  - name: General
    tags:
      - entity
