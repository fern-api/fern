syntax = "proto3";

package anduril.tasks.jadc2.thirdparty.v1;

import "anduril/type/coords.pub.proto";
import "google/protobuf/wrappers.proto";

option csharp_namespace = "Anduril.Tasks.JADC2.ThirdParty.v1";
option go_package = "ghe.anduril.dev/anduril/andurilapis-go/anduril/tasks/jadc2/thirdparty/v1;tasksv1";
option java_multiple_files = true;
option java_outer_classname = "JADC2ThirdPartyTasksProto";
option java_package = "com.anduril.tasks.jadc2.thirdparty.v1";
option objc_class_prefix = "JADC2ThirdParty";
option php_namespace = "Anduril\\Tasks\\JADC2\\ThirdParty\\v1";

// Transit represents moving a vehicle on a path through one or more points.
message Transit {
  // The path consisting of all segments to be taken for this transit task.
  repeated anduril.tasks.jadc2.thirdparty.v1.PathSegment path = 1;

  // Speed in which the vehicle will move through each of the path segments.
  google.protobuf.DoubleValue surface_speed_ms = 2;
}

message PathSegment {
  // Describes the end of the path segment, the starting point is the end of the previous segment or the
  // current position if first. Note that the Altitude reference for a given waypoint dictates the height
  //  mode used when traversing TO that waypoint.
  anduril.type.LLA endpoint = 1;
}

// TeamTransit represents moving a team of vehicles into a zone.
// The specifics of how each vehicle in the team behaves is determined by the specific autonomy logic.
message TeamTransit {
  // Reference to GeoPolygon GeoEntity representing the transit zone area.
  string transit_zone_entity_id = 1;

  // Speed in which the vehicles will move to the zone.
  google.protobuf.DoubleValue surface_speed_ms = 2;
}
