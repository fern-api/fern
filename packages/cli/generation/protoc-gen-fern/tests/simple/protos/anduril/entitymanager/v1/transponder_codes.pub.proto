syntax = "proto3";

package anduril.entitymanager.v1;

import "anduril/entitymanager/v1/options.pub.proto";

option csharp_namespace = "Anduril.Entitymanager.V1";
option go_package = "ghe.anduril.dev/anduril/andurilapis-go/anduril/entitymanager/v1;entitymanager";
option java_multiple_files = true;
option java_outer_classname = "TransponderCodesProto";
option java_package = "com.anduril.entitymanager.v1";
option objc_class_prefix = "AEX";

// A message describing any transponder codes associated with Mode 1, 2, 3, 4, 5, S interrogations.
message TransponderCodes {
  // The mode 1 code assigned to military assets.
  uint32 mode1 = 1 [(anduril.entitymanager.v1.overridable) = true];
  // The Mode 2 code assigned to military assets.
  uint32 mode2 = 2 [(anduril.entitymanager.v1.overridable) = true];
  // The Mode 3 code assigned by ATC to the asset.
  uint32 mode3 = 3 [(anduril.entitymanager.v1.overridable) = true];
  // The validity of the response from the Mode 4 interrogation.
  InterrogationResponse mode4_interrogation_response = 4 [(anduril.entitymanager.v1.overridable) = true];
  // The Mode 5 transponder codes.
  Mode5 mode5 = 5 [(anduril.entitymanager.v1.overridable) = true];
  // The Mode S transponder codes.
  ModeS mode_s = 6 [(anduril.entitymanager.v1.overridable) = true];
}

// Describes the Mode 5 transponder interrogation status and codes.
message Mode5 {
  // The validity of the response from the Mode 5 interrogation.
  InterrogationResponse mode5_interrogation_response = 1;
  // The Mode 5 code assigned to military assets.
  uint32 mode5 = 2;
  // The Mode 5 platform identification code.
  uint32 mode5_platform_id = 3;
}

// Describes the Mode S codes.
message ModeS {
  // Mode S identifier which comprises of 8 alphanumeric characters.
  string id = 1;
  // The Mode S ICAO aircraft address. Expected values are between 1 and 16777214 decimal. The Mode S address is
  // considered unique.
  uint32 address = 2;
}

// Indicates the interrogation status of a target.
enum InterrogationResponse {
  // Note that INTERROGATION_INVALID indicates that the target has not been interrogated.
  INTERROGATION_RESPONSE_INVALID = 0;
  INTERROGATION_RESPONSE_CORRECT = 1;
  INTERROGATION_RESPONSE_INCORRECT = 2;
  INTERROGATION_RESPONSE_NO_RESPONSE = 3;
}
