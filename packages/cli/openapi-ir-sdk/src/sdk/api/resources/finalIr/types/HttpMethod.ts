/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type HttpMethod = "GET" | "POST" | "PUT" | "PATCH" | "DELETE" | "HEAD" | "OPTIONS" | "TRACE";

export const HttpMethod = {
    Get: "GET",
    Post: "POST",
    Put: "PUT",
    Patch: "PATCH",
    Delete: "DELETE",
    Head: "HEAD",
    Options: "OPTIONS",
    Trace: "TRACE",
    _visit: <R>(value: HttpMethod, visitor: HttpMethod.Visitor<R>) => {
        switch (value) {
            case HttpMethod.Get:
                return visitor.get();
            case HttpMethod.Post:
                return visitor.post();
            case HttpMethod.Put:
                return visitor.put();
            case HttpMethod.Patch:
                return visitor.patch();
            case HttpMethod.Delete:
                return visitor.delete();
            case HttpMethod.Head:
                return visitor.head();
            case HttpMethod.Options:
                return visitor.options();
            case HttpMethod.Trace:
                return visitor.trace();
            default:
                return visitor._other();
        }
    },
} as const;

export declare namespace HttpMethod {
    interface Visitor<R> {
        get: () => R;
        post: () => R;
        put: () => R;
        patch: () => R;
        delete: () => R;
        head: () => R;
        options: () => R;
        trace: () => R;
        _other: () => R;
    }
}
