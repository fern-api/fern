/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernOpenapiIr from "../../..";

export type CustomCodeSample = FernOpenapiIr.CustomCodeSample.Language | FernOpenapiIr.CustomCodeSample.Sdk;

export declare namespace CustomCodeSample {
    interface Language extends FernOpenapiIr.CustomCodeSampleLanguage, _Utils {
        type: "language";
    }

    interface Sdk extends FernOpenapiIr.CustomCodeSampleSdk, _Utils {
        type: "sdk";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernOpenapiIr.CustomCodeSample._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        language: (value: FernOpenapiIr.CustomCodeSampleLanguage) => _Result;
        sdk: (value: FernOpenapiIr.CustomCodeSampleSdk) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const CustomCodeSample = {
    language: (value: FernOpenapiIr.CustomCodeSampleLanguage): FernOpenapiIr.CustomCodeSample.Language => {
        return {
            ...value,
            type: "language",
            _visit: function <_Result>(
                this: FernOpenapiIr.CustomCodeSample.Language,
                visitor: FernOpenapiIr.CustomCodeSample._Visitor<_Result>
            ) {
                return FernOpenapiIr.CustomCodeSample._visit(this, visitor);
            },
        };
    },

    sdk: (value: FernOpenapiIr.CustomCodeSampleSdk): FernOpenapiIr.CustomCodeSample.Sdk => {
        return {
            ...value,
            type: "sdk",
            _visit: function <_Result>(
                this: FernOpenapiIr.CustomCodeSample.Sdk,
                visitor: FernOpenapiIr.CustomCodeSample._Visitor<_Result>
            ) {
                return FernOpenapiIr.CustomCodeSample._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernOpenapiIr.CustomCodeSample,
        visitor: FernOpenapiIr.CustomCodeSample._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "language":
                return visitor.language(value);
            case "sdk":
                return visitor.sdk(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
