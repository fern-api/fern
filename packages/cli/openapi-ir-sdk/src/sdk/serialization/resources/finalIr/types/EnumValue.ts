/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const EnumValue: core.serialization.ObjectSchema<serializers.EnumValue.Raw, FernOpenapiIr.EnumValue> =
    core.serialization
        .objectWithoutOptionalProperties({
            nameOverride: core.serialization.string().optional(),
            generatedName: core.serialization.string(),
            value: core.serialization.string(),
            casing: core.serialization.lazyObject(async () => (await import("../../..")).CasingOverrides).optional(),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDescription));

export declare namespace EnumValue {
    interface Raw extends serializers.WithDescription.Raw {
        nameOverride?: string | null;
        generatedName: string;
        value: string;
        casing?: serializers.CasingOverrides.Raw | null;
    }
}
