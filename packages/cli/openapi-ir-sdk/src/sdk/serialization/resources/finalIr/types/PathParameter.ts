/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const PathParameter: core.serialization.ObjectSchema<
    serializers.PathParameter.Raw,
    FernOpenapiIr.PathParameter
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.string(),
        schema: core.serialization.lazy(async () => (await import("../../..")).Schema),
        variableReference: core.serialization.string().optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDescription));

export declare namespace PathParameter {
    interface Raw extends serializers.WithDescription.Raw {
        name: string;
        schema: serializers.Schema.Raw;
        variableReference?: string | null;
    }
}
