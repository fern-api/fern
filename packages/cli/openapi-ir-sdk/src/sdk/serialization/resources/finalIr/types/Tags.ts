/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const Tags: core.serialization.ObjectSchema<serializers.Tags.Raw, FernOpenapiIr.Tags> =
    core.serialization.objectWithoutOptionalProperties({
        tagsById: core.serialization.record(
            core.serialization.lazy(async () => (await import("../../..")).TagId),
            core.serialization.lazyObject(async () => (await import("../../..")).Tag)
        ),
        orderedTagIds: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).TagId))
            .optional(),
    });

export declare namespace Tags {
    interface Raw {
        tagsById: Record<serializers.TagId.Raw, serializers.Tag.Raw>;
        orderedTagIds?: serializers.TagId.Raw[] | null;
    }
}
