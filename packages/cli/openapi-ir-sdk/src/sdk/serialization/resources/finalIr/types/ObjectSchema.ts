/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const ObjectSchema: core.serialization.ObjectSchema<serializers.ObjectSchema.Raw, FernOpenapiIr.ObjectSchema> =
    core.serialization
        .objectWithoutOptionalProperties({
            allOf: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).ReferencedSchema)
            ),
            properties: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).ObjectProperty)
            ),
            allOfPropertyConflicts: core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).AllOfPropertyConflict)
            ),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDescription))
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithName))
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithSdkGroupName));

export declare namespace ObjectSchema {
    interface Raw extends serializers.WithDescription.Raw, serializers.WithName.Raw, serializers.WithSdkGroupName.Raw {
        allOf: serializers.ReferencedSchema.Raw[];
        properties: serializers.ObjectProperty.Raw[];
        allOfPropertyConflicts: serializers.AllOfPropertyConflict.Raw[];
    }
}
