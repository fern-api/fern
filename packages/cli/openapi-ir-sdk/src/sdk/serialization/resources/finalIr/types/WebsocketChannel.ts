/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const WebsocketChannel: core.serialization.ObjectSchema<
    serializers.WebsocketChannel.Raw,
    FernOpenapiIr.WebsocketChannel
> = core.serialization
    .objectWithoutOptionalProperties({
        path: core.serialization.string(),
        groupName: core.serialization.list(
            core.serialization.lazy(async () => (await import("../../..")).SdkGroupName)
        ),
        summary: core.serialization.string().optional(),
        handshake: core.serialization.lazyObject(async () => (await import("../../..")).WebsocketHandshake),
        publish: core.serialization.lazy(async () => (await import("../../..")).Schema).optional(),
        subscribe: core.serialization.lazy(async () => (await import("../../..")).Schema).optional(),
        examples: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).WebsocketSessionExample)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDescription));

export declare namespace WebsocketChannel {
    interface Raw extends serializers.WithDescription.Raw {
        path: string;
        groupName: serializers.SdkGroupName.Raw[];
        summary?: string | null;
        handshake: serializers.WebsocketHandshake.Raw;
        publish?: serializers.Schema.Raw | null;
        subscribe?: serializers.Schema.Raw | null;
        examples: serializers.WebsocketSessionExample.Raw[];
    }
}
