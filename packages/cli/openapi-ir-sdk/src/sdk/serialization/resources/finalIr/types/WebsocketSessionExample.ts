/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const WebsocketSessionExample: core.serialization.ObjectSchema<
    serializers.WebsocketSessionExample.Raw,
    FernOpenapiIr.WebsocketSessionExample
> = core.serialization
    .objectWithoutOptionalProperties({
        name: core.serialization.string().optional(),
        queryParameters: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).QueryParameterExample))
            .optional(),
        headers: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).HeaderExample))
            .optional(),
        messages: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).WebsocketMessageExample)
        ),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDescription));

export declare namespace WebsocketSessionExample {
    interface Raw extends serializers.WithDescription.Raw {
        name?: string | null;
        queryParameters?: serializers.QueryParameterExample.Raw[] | null;
        headers?: serializers.HeaderExample.Raw[] | null;
        messages: serializers.WebsocketMessageExample.Raw[];
    }
}
