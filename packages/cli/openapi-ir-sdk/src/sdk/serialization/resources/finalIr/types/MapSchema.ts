/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const MapSchema: core.serialization.ObjectSchema<serializers.MapSchema.Raw, FernOpenapiIr.MapSchema> =
    core.serialization
        .objectWithoutOptionalProperties({
            key: core.serialization.lazyObject(async () => (await import("../../..")).PrimitiveSchema),
            value: core.serialization.lazy(async () => (await import("../../..")).Schema),
        })
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithDescription))
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithName))
        .extend(core.serialization.lazyObject(async () => (await import("../../..")).WithSdkGroupName));

export declare namespace MapSchema {
    interface Raw extends serializers.WithDescription.Raw, serializers.WithName.Raw, serializers.WithSdkGroupName.Raw {
        key: serializers.PrimitiveSchema.Raw;
        value: serializers.Schema.Raw;
    }
}
